{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/emoji-regex/index.js","src/Button.js","src/CheckBox.js","src/Container.js","src/DynamicText/DynamicChar.js","src/DynamicText/DynamicText.js","src/DynamicText/DynamicTextStyle.js","src/Ease/Ease.js","src/Ease/EaseBase.js","src/Ease/ExponentialEase.js","src/Helpers.js","src/InputBase.js","src/Interaction/ClickEvent.js","src/Interaction/DragDropController.js","src/Interaction/DragEvent.js","src/Interaction/InputController.js","src/Interaction/Interaction.js","src/Interaction/MouseScrollEvent.js","src/ScrollBar.js","src/ScrollingContainer.js","src/SliceSprite.js","src/Slider.js","src/SortableList.js","src/Sprite.js","src/Stage.js","src/Text.js","src/TextInput.js","src/Ticker.js","src/TilingSprite.js","src/Tween.js","src/UI.js","src/UIBase.js","src/UISettings.js","src"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixiUi","min","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Button","options","InputBase","width","background","height","tabIndex","tabGroup","pivot","verticalAlign","horizontalAlign","addChild","isHover","uiText","text","container","buttonMode","keyDownEvent","which","click","clickEvent","ClickEvent","onHover","emit","onLeave","onPress","isPressed","focus","data","originalEvent","preventDefault","onClick","_focused","prototype","document","addEventListener","blur","removeEventListener","initialize","interactiveChildren","setTimeout","hitArea","getLocalBounds","Object","create","constructor","defineProperties","value","get","set","val","CheckBox","_checked","undefined","checked","_value","checkGroup","checkgroup","checkmark","alpha","InputController","registrerCheckGroup","change","updateCheckGroupSelected","selectedValue","getCheckGroupSelectedValue","setCheckGroupSelectedValue","Container","UIBase","PIXI","Rectangle","update","_width","_height","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","DynamicText","atlas","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","DynamicTextStyle","merge","chars","renderChars","spriteCache","charContainer","_inputText","lastWidth","lastHeight","dirtyText","dirtyStyle","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","visible","char","lineWidth","lineHeight","maxLineWidth","Math","max","texture","tex","sprite","Sprite","anchor","x","y","tint","hexToInt","rotation","float","skew","parent","prepareForRender","pos","Point","lineFontSize","lineAlignment","align","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","ellipsis","lineFull","lastChar","overflowY","fontSize","size","round","letterSpacing","wrap","breakWords","overflowX","ellipsisData","d","dot","getCharObject","parseFloat","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","c","charCodeAt","test","allowTags","tag","substring","slice","indexOf","FoundTag","clone","fontStyle","push","fontWeight","splice","startsWith","regex","match","exec","emojiMatch","emojiRegex","fontFamily","settings","defaultEmojiFont","lazyUpdate","dirtySize","def","isNaN","int","parseInt","string","str","result","replace","hexToRgba","hex","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","devicePixelRatio","canvasList","AtlasNode","w","h","children","rect","insert","obj","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","ctxFont","familyCache","key","ctxKey","metrics","generateCharData","bounds","minx","descent","Texture","addNewObjects","compareFunction","b","sort","_resized","_newcanvas","resizeCanvas","dim","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","trim","split","color","fillData","position","rgba","getFillStyle","fills","filter","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","stroke","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","shadow","strokeShadow","fillStyle","fill","strokeStyle","strokeFill","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","param","_dirty","join","scale","fn","EaseBase","getPosition","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeIn","easeOut","easeInOut","Ease","ExponentialEase","HALF_PI","PI","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","p","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","pow","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","power","Helpers","Lerp","start","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","rgbToNumber","numberToRgb","floor","hexToRgb","shorthandRegex","m","_useTab","_usePrev","_useNext","interactive","registrer","fireTab","firePrev","fireNext","documentMouseDown","__down","on","_bindEvents","stage","_clearEvents","off","clear","includeHover","rightMouseButton","bound","id","ishover","mouse","offset","movementX","movementY","right","hover","eventname_mousedown","eventname_mouseup","eventname_mouseupoutside","_onMouseDown","event","copy","identifier","_onMouseUp","_onMouseUpOutside","_mouseUpAll","removeListener","dragThreshold","abs","_onMouseOver","_onMouseOut","stopEvent","startEvent","_items","DragDropController","add","item","_dragDropEventId","getItem","object","index","getEventItem","group","dragGroup","DragEvent","cancel","dragging","_onDragStart","_onDragMove","_onDragEnd","dragRestrictAxis","onDragStart","onDragMove","onDragEnd","_currentItem","tabGroups","checkGroups","checkGroupValues","groupName","items","_tabIndex","_tabGroup","cb","name","Interaction","MouseScrollEvent","delta","_onMouseScroll","deltaX","deltaY","onMouseScroll","_onHover","ScrollBar","Slider","track","handle","vertical","scrollingContainer","autohide","_hidden","Tween","_onValueChanging","innerContainer","forcePctPosition","_amt","_scrollBars","alignToContainer","newPos","x_y","width_height","top_left","_posAmt","sizeAmt","toggleHidden","hidden","to","ScrollingContainer","mask","Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","performance","now","Ticker","apply","initScrolling","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","UIObject","argumentsLength","arguments","getInnerBounds","updateScrollBars","force","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","focusPosition","dif","speed","updateScrollPosition","updateDirection","target","exp","drag","scrollSpeed","SliceSprite","borderWidth","horizontalSlice","verticalSlice","tile","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","stl","sbl","sbr","st","sb","sl","sr","sf","bw","vs","hs","setting","minWidth","minHeight","extras","TilingSprite","addChildAt","initialized","blendMode","_disabled","_minValue","minValue","_maxValue","maxValue","_onValueChange","onValueChange","onValueChanging","soft","handleSize","top","left","startValue","handleDrag","stopPropagation","maxPosition","triggerValueChanging","triggerValueChange","localMousePosition","trackDrag","updatePositionToMouse","mousePosition","toLocal","maxPos","_lastChange","_lastChanging","disabled","SortableList","desc","tweenTime","tweenEase","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","removeChild","instant","clearTimeout","_sortTimeout","_sort","_this","alt","res","fromTo","altering","updatesettings","fromFrame","frameId","fromImage","imageUrl","Stage","__width","__height","UIChildren","resize","argumentLenght","rx","ry","Text","PIXITextStyle","_text","baseupdate","_anchorLeft","_anchorRight","widthPct","_anchorTop","_anchorBottom","heightPct","TextInput","_pui_tempInput","setAttribute","_dirtyText","maxLength","_lastValue","multiLine","selectedColor","selectedBackgroundColor","tempText","destroy","selection","_startIndex","_endIndex","caret","_index","caretWidth","moveTo","lineTo","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","UI","anchorTop","anchorBottom","anchorLeft","anchorRight","cacheAsBitmap","updateText","setCaretIndex","hasSelection","updateSelectionGraphics","caretInterval","si","sie","ei","eie","sp","ds","de","rdd","vrdd","selectionStart","selectionEnd","cc","textLengthPX","textHeightPX","lineIndexMax","ctrlDown","shiftDown","whitespace","lastWordIndex","charText","wrapped","updateClosestIndex","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","deleteSelection","updateSelectionColors","_sp","scrollToPosition","resetScrollPosition","hideCaret","clearInterval","showCaret","clearSelection","setInterval","insertTextAtCaret","_atEnd","select","caretAtStart","_forward","startindex","selectRange","endIndex","_i","selectIndex","console","log","_down","keyUpEvent","copyEvent","clipboardData","setData","cutEvent","pasteEvent","getData","inputEvent","inputBlurEvent","mouseDown","timeSinceLast","selectWord","worldTransform","tx","ty","startIndex","drawSelectionRect","c1","cx","cy","cl","end","autoStart","utils","EventEmitter","_now","DeltaTime","Time","Ms","shared","time","_update","requestAnimationFrame","once","tilePosition","tileScale","getFromValue","widthKeys","heightKeys","getSurfix","getToValue","getObject","_tweenObjectId","_currentId","_tweenObjects","TweenObject","getTweenItem","_tweenItemCache","_ready","tween","TweenItem","getCallbackItem","_callbackItemCache","CallbackItem","_activeTweenObjects","tweens","active","callback","currentTime","remove","keys","_currentCallbackID","ease","isColor","surfix","currentColor","params","paramsFrom","paramsTo","Base","UISettings","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_minWidth","_minHeight","_maxWidth","_maxHeight","_left","_right","_top","_bottom","_dragPosition","updateChildren","updateParent","parentHeight","parentWidth","actual_width","actual_height","actual_minWidth","actual_minHeight","actual_maxWidth","actual_maxHeight","actual_anchorLeft","actual_anchorRight","actual_anchorTop","actual_anchorBottom","actual_left","actual_right","actual_top","actual_bottom","_parentWidth","_parentHeight","pivotXOffset","pivotX","pivotYOffset","pivotY","useHorizontalAnchor","useVerticalAnchor","dragRestricted","scaleX","scaleY","oldUIParent","draggable","initDraggable","droppable","initDroppable","clearDraggable","stageOffset","added","dragContainer","clearDroppable","onDrop","dropGroup","droppableReparent","minWidthPct","minHeightPct","maxWidth","maxWidthPct","maxHeight","maxHeightPct","anchorLeftPct","anchorRightPct","anchorTopPct","anchorBottomPct","leftPct","rightPct","topPct","bottom","bottomPct","renderable","parentLayer","Library","assign"],"mappings":";;;;;;;CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,SAAAL,EAAAK,YAAAC,IAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,GCAA,YAEAC,GAAAD,QAAA,WAEA,MAAA,i9NCcA,QAAA2B,GAAAC,GACAC,EAAAL,KAAAhB,KAAAoB,EAAAE,OAAAF,EAAAG,WAAAD,MAAAF,EAAAI,QAAAJ,EAAAG,WAAAC,OAAAJ,EAAAK,UAAA,EAAAL,EAAAM,UAAA,GACA1B,KAAAuB,WAAAH,EAAAG,WACAvB,KAAAuB,WAAAD,MAAA,OACAtB,KAAAuB,WAAAC,OAAA,OACAxB,KAAAuB,WAAAI,MAAA,GACA3B,KAAAuB,WAAAK,cAAA,SACA5B,KAAAuB,WAAAM,gBAAA,SACA7B,KAAA8B,SAAA9B,KAAAuB,YACAvB,KAAA+B,SAAA,EAEA/B,KAAAgC,OAAAZ,EAAAa,KACAjC,KAAAgC,SACAhC,KAAAgC,OAAAJ,cAAA,SACA5B,KAAAgC,OAAAH,gBAAA,SACA7B,KAAA8B,SAAA9B,KAAAgC,SAGAhC,KAAAkC,UAAAC,YAAA,CAEA,IAAApC,GAAAC,KACAoC,EAAA,SAAAjC,GACA,KAAAA,EAAAkC,OACAtC,EAAAuC,SAIAC,EAAA,GAAAC,GAAAxC,KACAuC,GAAAE,QAAA,SAAAtC,GACAH,KAAA+B,SAAA,EACAhC,EAAA2C,KAAA,SAAA,IAGAH,EAAAI,QAAA,SAAAxC,GACAH,KAAA+B,SAAA,EACAhC,EAAA2C,KAAA,SAAA,IAGAH,EAAAK,QAAA,SAAAzC,EAAA0C,GACAA,IACA9C,EAAA+C,QACA3C,EAAA4C,KAAAC,cAAAC,kBAEAlD,EAAA2C,KAAA,QAAAG,IAGAN,EAAAW,QAAA,SAAA/C,GACAJ,EAAAuC,SAGAtC,KAAAsC,MAAA,WACAvC,EAAA2C,KAAA,UAIA1C,KAAA8C,MAAA,WACA9C,KAAAmD,WACA9B,EAAA+B,UAAAN,MAAA9B,KAAAhB,MACAqD,SAAAC,iBAAA,UAAAlB,GAAA,KAKApC,KAAAuD,KAAA,WACAvD,KAAAmD,WACA9B,EAAA+B,UAAAG,KAAAvC,KAAAhB,MACAqD,SAAAG,oBAAA,UAAApB,KAIApC,KAAAyD,WAAA,WACApC,EAAA+B,UAAAK,WAAAzC,KAAAhB,MACAA,KAAAkC,UAAAwB,qBAAA,CAEA,IAAA3D,GAAAC,IAEA2D,YAAA,WACA5D,EAAAmC,UAAA0B,QAAA7D,EAAAmC,UAAA2B,kBACA,KAhGA,GAAAxC,GAAAV,EAAA,eACA6B,EAAA7B,EAAA,8BACAA,GAAA,gCAmGAQ,GAAAiC,UAAAU,OAAAC,OAAA1C,EAAA+B,WACAjC,EAAAiC,UAAAY,YAAA7C,EACA1B,EAAAD,QAAA2B,EAEA2C,OAAAG,iBAAA9C,EAAAiC,WACAc,OACAC,IAAA,WACA,MAAAnE,MAAAgC,OACAhC,KAAAgC,OAAAC,KAEA,IAEAmC,IAAA,SAAAC,GACArE,KAAAgC,SACAhC,KAAAgC,OAAAC,KAAAoC,KAIApC,MACAkC,IAAA,WACA,MAAAnE,MAAAgC,QAEAoC,IAAA,SAAAC,GACArE,KAAAkE,MAAAG,kHCzGA,QAAAC,GAAAlD,GACAC,EAAAL,KAAAhB,KAAAoB,EAAAG,WAAAD,MAAAF,EAAAG,WAAAC,OAAAJ,EAAAK,UAAA,EAAAL,EAAAM,UAAA,GACA1B,KAAAuE,aAAAC,KAAApD,EAAAqD,SAAArD,EAAAqD,QACAzE,KAAA0E,OAAAtD,EAAA8C,OAAA,GACAlE,KAAA2E,WAAAvD,EAAAwD,YAAA,KAEA5E,KAAAuB,WAAAH,EAAAG,WACAvB,KAAAuB,WAAAD,MAAA,OACAtB,KAAAuB,WAAAC,OAAA,OACAxB,KAAA8B,SAAA9B,KAAAuB,YAEAvB,KAAA6E,UAAAzD,EAAAyD,UACA7E,KAAA6E,YACA7E,KAAA6E,UAAAjD,cAAA,SACA5B,KAAA6E,UAAAhD,gBAAA,SACA7B,KAAAuE,WACAvE,KAAA6E,UAAAC,MAAA,GAEA9E,KAAA8B,SAAA9B,KAAA6E,YAMA7E,KAAAkC,UAAAC,YAAA,EAEA,OAAAnC,KAAA2E,YACAI,EAAAC,oBAAAhF,KAEA,IAAAD,GAAAC,KACAoC,EAAA,SAAAjC,GACA,KAAAA,EAAAkC,OACAtC,EAAAuC,SAIAC,EAAA,GAAAC,GAAAxC,KACAuC,GAAAE,QAAA,SAAAtC,GACAJ,EAAA2C,KAAA,SAAA,IAGAH,EAAAI,QAAA,SAAAxC,GAEAJ,EAAA2C,KAAA,SAAA,IAGAH,EAAAK,QAAA,SAAAzC,EAAA0C,GACAA,IACA9C,EAAA+C,QACA3C,EAAA4C,KAAAC,cAAAC,kBAEAlD,EAAA2C,KAAA,QAAAG,IAGAN,EAAAW,QAAA,SAAA/C,GACAJ,EAAAuC,SAGAtC,KAAAiF,OAAA,SAAAZ,GACArE,KAAA6E,YACA7E,KAAA6E,UAAAC,MAAAT,EAAA,EAAA,IAGArE,KAAAsC,MAAA,WACAvC,EAAA2C,KAAA,SACA,OAAA3C,EAAA4E,YAAA5E,EAAA0E,UAGA1E,EAAA0E,SAAA1E,EAAA0E,UAIAzE,KAAA8C,MAAA,WAEA9C,KAAAmD,WACA9B,EAAA+B,UAAAN,MAAA9B,KAAAhB,MACAqD,SAAAC,iBAAA,UAAAlB,GAAA,KAKApC,KAAAuD,KAAA,WAEAvD,KAAAmD,WACA9B,EAAA+B,UAAAG,KAAAvC,KAAAhB,MACAqD,SAAAG,oBAAA,UAAApB,KAxGA,GAAAf,GAAAV,EAAA,eACA6B,EAAA7B,EAAA,+BACAoE,EAAApE,EAAA,gCA2GA2D,GAAAlB,UAAAU,OAAAC,OAAA1C,EAAA+B,WACAkB,EAAAlB,UAAAY,YAAAM,EACA7E,EAAAD,QAAA8E,EAEAR,OAAAG,iBAAAK,EAAAlB,WACAqB,SACAN,IAAA,WACA,MAAAnE,MAAAuE,UAEAH,IAAA,SAAAC,GAGAA,IAAArE,KAAAuE,WAEA,OAAAvE,KAAA2E,YAAAN,GACAU,EAAAG,yBAAAlF,MAIAA,KAAA0C,KAAA,SAAA2B,GACArE,KAAAuE,SAAAF,EACArE,KAAAiF,OAAAZ,MAKAH,OACAC,IAAA,WACA,MAAAnE,MAAA0E,QAEAN,IAAA,SAAAC,GACArE,KAAA0E,OAAAL,EACArE,KAAAyE,SACAM,EAAAG,yBAAAlF,QAGAmF,eACAhB,IAAA,WACA,MAAAY,GAAAK,2BAAApF,KAAA2E,aAEAP,IAAA,SAAAC,GACAU,EAAAM,2BAAArF,KAAA2E,WAAAN,mHC3IA,QAAAiB,GAAAhE,EAAAE,GACA+D,EAAAvE,KAAAhB,KAAAsB,EAAAE,GACAxB,KAAAkC,UAAA0B,QAAA,GAAA4B,MAAAC,UAAA,EAAA,EAAA,EAAA,GAbA,GAAAF,GAAA5E,EAAA,WAiBA2E,GAAAlC,UAAAU,OAAAC,OAAAwB,EAAAnC,WACAkC,EAAAlC,UAAAY,YAAAsB,EACA7F,EAAAD,QAAA8F,EAGAA,EAAAlC,UAAAsC,OAAA,WAEA1F,KAAAkC,UAAA0B,QAAAtC,MAAAtB,KAAA2F,OACA3F,KAAAkC,UAAA0B,QAAApC,OAAAxB,KAAA4F,8CCzBA,QAAAC,KAEA7F,KAAA8F,MAAA,KAGA9F,KAAA+C,KAAA,KAGA/C,KAAA+F,OAAA,EAGA/F,KAAAgG,SAAA,EAEAhG,KAAAiG,OAAA,EAGAjG,KAAAkG,SAAA,EAGAlG,KAAAkE,MAAA,GAGAlE,KAAAmG,WAAA,EAGAnG,KAAAoG,WAAA,EAIAP,EAAAzC,UAAAY,YAAA6B,EACApG,EAAAD,QAAAqG,0BCXA,QAAAQ,GAAApE,EAAAb,GACAA,EAAAA,MAEAmE,EAAAvE,KAAAhB,KAAAoB,EAAAE,OAAA,EAAAF,EAAAI,QAAA,GAGA,OAAA8E,IACAA,EAAA,GAAAC,GAAA,GAEA,IAAAC,IAAApF,EAAAE,MACAmF,GAAArF,EAAAI,OAGAkF,EAAA1G,KAAA2G,OAAA,GAAAC,GAAA5G,KACA0G,GAAAG,MAAAzF,EAAA0E,MAGA,IAAAgB,GAAA9G,KAAA8G,SACAC,KACAC,KACAC,EAAA,GAAAzB,MAAAF,SACAtF,MAAAkC,UAAAJ,SAAAmF,GAGAjH,KAAAkH,WAAAjF,CAGA,IAGAkF,GAAA,EACAC,EAAA,CAEApH,MAAAqH,WAAA,EACArH,KAAAsH,YAAA,EACAtH,KAAAuH,aAAA,CAIA,IAAAC,MACAC,KACAC,KACAC,KACAC,EAAA,EACAC,EAAA,EAGAC,KACAC,IAGA/H,MAAAgI,OAAA,WACA,GAGApH,GAHAqH,EAAA,EACAC,EAAA,EACAC,GAAA,CAGA,IAAAnB,EAAA/F,OAAA2G,EACA,IAAAhH,EAAAgH,EAAAhH,EAAAoG,EAAA/F,OAAAL,IAAA,CACA,GAAAwH,GAAApB,EAAApG,EACAwH,KACAA,EAAAC,SAAA,GAIA,GAAAC,GAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,CAEA,KAAA7H,EAAA,EAAAA,EAAAgH,EAAAhH,IAAA,CAIA,GAHA0H,EAAAvB,EAAAnG,GAGAuH,IAAAG,EAAAlC,UAAA,CAQA,OAPA+B,EAAAG,EAAAlC,UACAmC,EAAAf,EAAAW,GACAK,EAAAf,EAAAU,GACAF,GAAAO,EAIAb,EAAAQ,IACA,IAAA,QAAAD,EAAAlI,KAAA2F,OAAA4C,CAAA,MACA,KAAA,SAAAL,EAAA,IAAAlI,KAAA2F,OAAA4C,EAAA,MACA,SAAAL,EAAA,EAIAO,EAAAC,KAAAC,IAAAJ,EAAAE,GAIA,IAAAH,EAAAvF,KAAA6F,SAAAN,EAAAvC,OAAAuC,EAAAtC,QACAgB,EAAApG,KACAoG,EAAApG,GAAAyH,SAAA,OAFA,CAQA,GAAAQ,GAAAP,EAAAvF,KAAA6F,QAAAE,EAAA9B,EAAApG,EAIAkI,GAKAA,EAAAF,QAAAC,GAJAC,EAAA9B,EAAApG,GAAA,GAAA4E,MAAAuD,OAAAF,GACAC,EAAAE,OAAA5E,IAAA,KAOA0E,EAAAT,SAAA,EACAS,EAAAG,EAAAX,EAAAW,EAAAf,EAAA,GAAAW,EAAAvH,MACAwH,EAAAI,EAAAZ,EAAAY,EAAAjB,EAAA,GAAAY,EAAArH,QAAAgH,EAAAd,EAAAS,IAGAW,EAAAK,KAAAb,EAAArC,MAAA,SAAAmD,EAAAd,EAAAxC,MAAAqD,KAAA,UACAL,EAAAO,SAAAC,EAAAhB,EAAAxC,MAAAuD,SAAA,GACAP,EAAAS,KAAAN,EAAAK,EAAAhB,EAAAxC,MAAAyD,KAAA,GAEAT,EAAAU,QACAvC,EAAAnF,SAAAgH,IAGAtC,IAAAxG,KAAAsB,MAAAmH,GACAhC,IAAAzG,KAAAwB,OAAAyG,IAIAjI,KAAAyJ,iBAAA,WACA,GAUA3D,GAIAlF,EAdA8I,EAAA,GAAAlE,MAAAmE,MACAxD,EAAA,EACAqC,EAAA,EACAoB,EAAA,EACAxD,EAAA,EACAyD,EAAAnD,EAAAoD,MACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EAEAC,EAAA,EACAC,GAAA,EACAC,GAAA,CAMA,KAAAzJ,EAAA,EAAAA,EAAAiH,EAAAjH,IAAA,CACA,GAAA0H,GAAAxB,EAAAlG,GAAA0J,EAAAxD,EAAAlG,EAAA,EAOA,IANAkF,EAAAwC,EAAAxC,MAIA0C,EAAAE,KAAAC,IAAAH,EAAA9B,EAAA8B,YAAA1C,EAAA0C,YAAAF,EAAAvF,KAAAyF,YAEA,YAAA1C,EAAAyE,WAAA/B,EAAAyB,EAAAjK,KAAA4F,SACA,WAAAE,EAAAyE,UACA,KAIAjC,GAAAtC,UACAqE,GAAA,GAIA/B,EAAAvC,OAAAuC,EAAAtC,QAAAG,IACAmC,EAAAnC,UAAAA,EAGAyD,EAAAlB,KAAAC,IAAAiB,EAAA9D,EAAA0E,UAGAlC,EAAAlC,UAAAA,EAGAN,EAAAgE,QAAApD,EAAAoD,QAAAD,EAAA/D,EAAAgE,OAGAxB,EAAAvC,QACAgE,EAAAnJ,EACAoJ,EAAAN,EAAAT,EAIA,IAAAwB,GAAA/B,KAAAgC,MAAApC,EAAAvF,KAAAzB,OAAAgI,EAAAxD,EAAA6E,cAAA,EACA,KAAAnE,IAAA0D,IAAA5B,EAAAtC,SAAA0D,EAAAT,EAAAwB,EAAAzK,KAAA2F,OAAA,CACA,GAAAG,EAAA8E,KACA,GAAAtC,EAAAvC,MACAmE,GAAA,MAEA,CAAA,IAAA,IAAAH,EAAA,CACAI,GAAAvJ,EAAAmJ,EACAnJ,EAAAmJ,EAAA,EACAA,GAAA,EACAL,EAAAT,EAAAe,EACAE,GAAA,CACA,UAGA,GAAApE,EAAA+E,WAAA,CACAP,IACAZ,EAAAT,GAAAqB,EAAAxE,MAAA6E,cACAjB,EAAAT,GAAAqB,EAAAvH,KAAAzB,OAEAV,GAAA,EACAuJ,IACAD,GAAA,CACA,WAOA,GAAA,UAAApE,EAAAgF,YAAAZ,IACAG,GAAA,EACAvE,EAAAsE,WAAAA,GAAA,CACAA,GAAA,CACA,IAAAW,GAAAjD,EAAA1B,EACA2E,KAAAA,EAAAjD,EAAA1B,IAAA,GAAAP,GAAA,GAAAA,GAAA,GAAAA,IACA,KAAA,GAAAmF,GAAA,EAAAA,EAAA,EAAAA,IAAA,CACA,GAAAC,GAAAF,EAAAC,EACAC,GAAA/G,MAAA,IACA+G,EAAAlI,KAAAuD,EAAA4E,cAAAD,EAAA/G,MAAA4B,GACAmF,EAAAnF,MAAAA,EACAmF,EAAAhC,EAAAS,EAAAT,EAAAX,EAAAvF,KAAAmF,QACA+C,EAAA/B,EAAAiC,WAAArF,EAAAlE,eAAAqJ,EAAAlI,KAAAkF,QACAgD,EAAA7E,UAAAA,EACAsD,EAAAT,GAAAP,KAAAgC,MAAAO,EAAAlI,KAAAzB,OAAAgI,EAAAxD,EAAA6E,cAAA,GACA5D,EAAAoD,GAAAc,EACAd,MAgBAE,IAEA/B,EAAAW,EAAAS,EAAAT,EAAAX,EAAAvF,KAAAmF,QACAI,EAAAY,EAAAiC,WAAArF,EAAAlE,eAAA0G,EAAAvF,KAAAkF,QACAyB,EAAAT,GAAAwB,EACA1D,EAAAoD,GAAA7B,EACA6B,MAMAD,GAAA5B,EAAAtC,SAAApF,IAAAiH,EAAA,KACAyC,IACAZ,EAAAT,GAAAqB,EAAAxE,MAAA6E,cACAL,EAAAvE,QAAA2D,EAAAT,GAAAqB,EAAAvH,KAAAzB,QAGAgH,EAAAvC,QACA2D,EAAAT,GAAAX,EAAAvF,KAAAzB,MACAoI,EAAAT,GAAAK,EAAAxD,EAAA6E,cAAA,IAGAV,GAAAzB,EACAT,EAAA3B,GAAAgE,EACA5C,EAAApB,GAAAsD,EAAAT,EACAxB,EAAArB,GAAAoC,EACAd,EAAAtB,GAAAwD,EACAjC,EAAAvB,GAAAyD,EAIArB,EAAAkB,EAAAT,EAAAe,EAAAJ,EAAA,EACAC,EAAAnD,EAAAoD,MACAC,GAAA,EACA3D,IACA8D,EAAAG,EAAAD,GAAA,GAMAxC,EAAAuC,EAIA,IAAAiB,IAAA,OAAA,OAAA,UAAA,YACApL,MAAAqL,iBAAA,WAMA,IAAA,GALAC,IAAA5E,GACA6E,EAAA,EACAC,EAAA,EACAC,EAAAC,MAAAC,KAAA3L,KAAAkH,YAEAtG,EAAA,EAAAA,EAAA6K,EAAAxK,OAAAL,IAAA,CACAkF,MAAAwF,EAAAA,EAAArK,OAAA,EACA,IAAA2K,GAAAH,EAAA7K,GAEAoF,GADA4F,EAAAC,WAAA,IACA,GACA9F,GAAA,EACAE,GAAA,CAIA,IAAA,iBAAA6F,KAAAF,GACA5F,GAAA,MACA,IAAA,OAAA8F,KAAAF,GACA7F,GAAA,MACA,IAAA3E,EAAA2K,WAAA,MAAAH,EAAA,CACA,GAAAI,GAAAhM,KAAAkH,WAAA+E,UAAAT,EACAQ,GAAAA,EAAAE,MAAA,EAAAF,EAAAG,QAAA,KAAA,EACA,IAAAC,IAAA,CACA,IAAAJ,EAAA/K,OAAA,CACA,GAAA,QAAA+K,EACAlG,MAAAA,MAAAuG,QACAvG,MAAAwG,UAAA,SACAhB,EAAAiB,KAAAzG,WAEA,IAAA,QAAAkG,EACAlG,MAAAA,MAAAuG,QACAvG,MAAA0G,WAAA,OACAlB,EAAAiB,KAAAzG,WAEA,IAAA,aAAAkG,EACAlG,MAAAA,MAAAuG,QACAvG,MAAAgE,MAAA,SACAwB,EAAAiB,KAAAzG,WAEA,KAAA,IAAAsF,EAAAe,QAAAH,GACAV,EAAArK,OAAA,GAAAqK,EAAAmB,OAAAnB,EAAArK,OAAA,EAAA,OAEA,IAAA+K,EAAAU,WAAA,UAAA,CACA,GAAAC,GAAA,6DACAC,EAAAD,EAAAE,KAAAb,EAEA,IAAA,OAAAY,EAAA,CAEA,IADA9G,MAAAA,MAAAuG,QACA,OAAAO,GAAA,CACA,OAAAA,EAAA,IACA,IAAA,SAAAA,EAAA,GAAA,YAAA,MACA,KAAA,OAAAA,EAAA,GAAA,UAAA,MACA,KAAA,SAAAA,EAAA,GAAA,YAAA,MACA,KAAA,QAAAA,EAAA,GAAA,WAAA,MACA,KAAA,SAAAA,EAAA,GAAA,eAAA,MACA,KAAA,UAAAA,EAAA,GAAA,eAAA,MACA,KAAA,QAAAA,EAAA,GAAA,OAGA9G,MAAA8G,EAAA,IAAAA,EAAA,GACAA,EAAAD,EAAAE,KAAAb,GAEAV,EAAAiB,KAAAzG,YAIAsG,IAAA,CAGA,IAAAA,EAAA,CACAZ,GAAAQ,EAAA/K,OACAL,GAAAoL,EAAA/K,OAAA,CACA,gBAIA,CAEA,GAAA6L,GAAAC,IAAAF,KAAAjB,EACA,IAAA,OAAAkB,EAAA,CAEA,IADAlM,IAAAgL,EAAA,GACA,OAAAkB,GAAAlB,IAAAkB,EAAA,IACAlM,IACAgL,EAAAkB,EAAA,GACAA,EAAAC,IAAAF,KAAAjB,EAAAH,EAAA7K,EAAA,GAEAqF,IAAA,GAMA,GAAAqC,GAAAxB,EAAAyE,EACAjD,KACAA,EAAA,GAAAzC,GACAiB,EAAAyE,GAAAjD,GAEAA,EAAAxC,MAAAA,MAGAG,IACAqC,EAAAxC,MAAAwC,EAAAxC,MAAAuG,QACA/D,EAAAxC,MAAAkH,WAAA3G,EAAA4G,SAAAC,kBAGA5E,EAAAvF,KAAAuD,EAAA4E,cAAAU,EAAAtD,EAAAxC,OACAwC,EAAApE,MAAA0H,EACAtD,EAAAvC,MAAAA,EACAuC,EAAAtC,QAAAA,EACAsC,EAAArC,MAAAA,EAEAsF,IACAC,GAAAI,EAAA3K,OAEA4G,EAAA0D,GAIAvL,KAAAmN,WAAA,IACA,IAAApN,GAAAC,IACAA,MAAA0F,OAAA,WACA,OAAA3F,EAAAoN,aACApN,EAAAoN,WAAAxJ,WAAA,WAGA,GAAAyJ,IAAA5G,IAAAzG,EAAA4F,QAAAwB,GAAApH,EAAA6F,SAAAwB,GAAArH,EAAAsH,YAEAtH,EAAAsH,WAAAtH,EAAAuH,cACAvH,EAAAsH,UAAAtH,EAAAuH,YAAA,EACAvH,EAAAwH,aAAA,EACAxH,EAAAsL,qBAGA+B,GAAArN,EAAAwH,eACAxH,EAAAwH,aAAA,EACAJ,EAAApH,EAAA4F,OACAyB,EAAArH,EAAAyB,OACAzB,EAAA0J,mBACA1J,EAAAiI,UAEAjI,EAAAoN,WAAA,MACA,KAkgBA,QAAA7D,GAAAjF,EAAAgJ,GACA,MAAAC,OAAAjJ,GAAAgJ,EACAlC,WAAA9G,GAIA,QAAAkJ,GAAAlJ,EAAAgJ,GACA,MAAAC,OAAAjJ,GAAAgJ,EACAG,SAAAnJ,GAIA,QAAAoJ,GAAApJ,EAAAgJ,GACA,MAAA,gBAAAhJ,IAAAA,EAAApD,OAAAoD,EACAgJ,EAIA,QAAAjE,GAAAsE,EAAAL,GACA,GAAA,gBAAAK,GACA,MAAAA,EAEA,IAAAC,GAAAH,SAAAE,EAAAE,QAAA,IAAA,MAEA,OAAAN,OAAAK,GAAAN,EACAM,EAIA,QAAAE,GAAAC,EAAAhJ,GACA,GAAA6I,GAAA,4CAAAd,KAAAiB,EAEA,OADAhJ,GAAAwE,EAAAxE,EAAA,KACA6I,GAAA,QAAAH,SAAAG,EAAA,GAAA,IAAA,IAAAH,SAAAG,EAAA,GAAA,IAAA,IAAAH,SAAAG,EAAA,GAAA,IAAA,IAAA7I,EAAA,IA3+BA,GAAAS,GAAA5E,EAAA,aACAiG,EAAAjG,EAAA,sBACAkF,EAAAlF,EAAA,iBACAoM,EAAApM,EAAA,eACA2F,EAAA,IA2cAD,GAAAjD,UAAAU,OAAAC,OAAAwB,EAAAnC,WACAiD,EAAAjD,UAAAY,YAAAqC,EACA5G,EAAAD,QAAA6G,EACAA,EAAA4G,UACAc,kBAAA,EACAb,iBAAA,kBAGApJ,OAAAG,iBAAAoC,EAAAjD,WACAc,OACAC,IAAA,WACA,MAAAnE,MAAAkH,YAEA9C,IAAA,SAAAC,GACAA,IAAArE,KAAAkH,aACAlH,KAAAkH,WAAA7C,EACArE,KAAAqH,WAAA,EACArH,KAAA0F,YAKAzD,MACAkC,IAAA,WACA,MAAAnE,MAAAkE,OAEAE,IAAA,SAAAC,GAEArE,KAAAkE,MAAAG,IAGAyB,OACA3B,IAAA,WACA,MAAAnE,MAAA2G,QAEAvC,IAAA,SAAAC,GAEA,GAAAyB,GAAA,GAAAc,GAAA5G,KAGA8F,GAAAe,MAAAxC,GAGArE,KAAA2G,OAAAE,MAAAf,GAEA9F,KAAAsH,YAAA,EACAtH,KAAA0F,YAWA,IAAAsI,GAAA3K,SAAA4K,cAAA,UACAC,EAAAF,EAAAG,WAAA,KACAH,GAAA1M,MAAA,IACA0M,EAAAxM,OAAA,GAGA,IAAA+E,GAAA,SAAA6H,GACA,GACAC,GACAC,EACAC,EAEAC,EACAC,EACAC,EAEAC,EALAC,GAJAC,qBAQAC,KAMAC,EAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAlP,KAAAkP,WACAlP,MAAAmP,KAAA,GAAA3J,MAAAC,UAAA,EAAA,EAAAuJ,GAAA,EAAAC,GAAA,GACAjP,KAAA+C,KAAA,KAEA/C,KAAAoP,OAAA,SAAA9N,EAAAE,EAAA6N,GACA,GAAAH,EAAAjO,OAAA,EAAA,CACA,GAAAqO,GAAAJ,EAAA,GAAAE,OAAA9N,EAAAE,EAAA6N,EACA,OAAA,QAAAC,EAAAA,EAEAJ,EAAA,GAAAE,OAAA9N,EAAAE,EAAA6N,GAEA,MAAA,QAAArP,KAAA+C,KAAA,KACAzB,EAAAtB,KAAAmP,KAAA7N,OAAAE,EAAAxB,KAAAmP,KAAA3N,OAAA,KACAF,GAAAtB,KAAAmP,KAAA7N,OAAAE,GAAAxB,KAAAmP,KAAA3N,QACAxB,KAAA+C,KAAAsM,EACAA,EAAAE,MAAAtG,EAAAjJ,KAAAmP,KAAAlG,EACAoG,EAAAE,MAAArG,EAAAlJ,KAAAmP,KAAAjG,EACAlJ,OAGAkP,EAAA3C,KAAA,GAAAwC,IACAG,EAAA3C,KAAA,GAAAwC,IAEA/O,KAAAmP,KAAA7N,MAAAA,EACAtB,KAAAmP,KAAA3N,OAAAA,GAGA0N,EAAA,GAAAC,KAAA,GAAA3J,MAAAC,UAAAzF,KAAAmP,KAAAlG,EAAAjJ,KAAAmP,KAAAjG,EAAA5H,EAAAtB,KAAAmP,KAAA3N,QACA0N,EAAA,GAAAC,KAAA,GAAA3J,MAAAC,UAAAzF,KAAAmP,KAAAlG,EAAA3H,EAAAtB,KAAAmP,KAAAjG,EAAAlJ,KAAAmP,KAAA7N,MAAAA,EAAAtB,KAAAmP,KAAA3N,UAEA0N,EAAA,GAAAC,KAAA,GAAA3J,MAAAC,UAAAzF,KAAAmP,KAAAlG,EAAAjJ,KAAAmP,KAAAjG,EAAAlJ,KAAAmP,KAAA7N,MAAAE,GACA0N,EAAA,GAAAC,KAAA,GAAA3J,MAAAC,UAAAzF,KAAAmP,KAAAlG,EAAAjJ,KAAAmP,KAAAjG,EAAA1H,EAAAxB,KAAAmP,KAAA7N,MAAAtB,KAAAmP,KAAA3N,OAAAA,IAGA0N,EAAA,GAAAE,OAAA9N,EAAAE,EAAA6N,MAKAG,EAAA,WAEAnB,EAAAhL,SAAA4K,cAAA,UACAK,EAAAD,EAAAF,WAAA,MACAW,EAAAvC,KAAA8B,GAGAM,EAnDA,IAoDAN,EAAA/M,MAAA+M,EAAA7M,OAAAmN,EACAD,EAAA,GAAAK,GAAAJ,EAAAA,GAGAJ,KAGAC,EAAAhJ,KAAAiK,YAAAC,WAAArB,GACAG,EAAAmB,QAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAA9I,SAGAW,EAAA4G,SAAAc,mBACAM,EAAAwB,UAAA,0BACAxM,SAAAyM,KAAAC,YAAA1B,IAKArO,MAAAgQ,kBAEA,IAAAC,GAAA,SAAAC,EAAAC,GACAA,GAAA3B,EAAA9I,QACA,KAAA,GAAA9E,GAAA,EAAAA,EAAAsP,EAAAjP,OAAAL,IACAwP,EAAAF,EAAAtP,KAGAwP,EAAA,SAAAf,GACAf,EAAA+B,UAAAhB,EAAAiB,OAAAjB,EAAAE,MAAAtG,EAAAoG,EAAAE,MAAArG,GACAmG,EAAAzG,QAAA2G,MAAAF,EAAAE,MACAF,EAAAzG,QAAAlD,SAGA1F,MAAAkL,cAAA,SAAA5C,EAAAxC,GACA,GAAAyK,GAAAzK,EAAA0K,UAGAC,EAAAzQ,KAAAgQ,gBAAAO,EACAE,KACAA,KACAzQ,KAAAgQ,gBAAAO,GAAAE,EAMA,IAAAC,GAAA5K,EAAA6K,OAAArI,GACA+G,EAAAoB,EAAAC,EACA,KAAArB,EAAA,CAEA,GAAAuB,GAAAC,EAAAvI,EAAAxC,EAKA8K,GAAAzB,OACAd,EAAA/M,MAAAsP,EAAAzB,KAAA7N,OAAA+M,EAAA7M,OAAAoP,EAAAzB,KAAA3N,UACA6M,EAAA/M,MAAA+M,EAAA7M,OAAAkH,KAAAC,IAAAiI,EAAAzB,KAAA7N,MAAAsP,EAAAzB,KAAA3N,QACAgN,EAAA9I,UAMA2J,GACAuB,QAAAA,EACAL,KAAAA,EACArM,MAAAoE,EACAiH,MAAAqB,EAAAzB,KACAX,YAAAoC,EAAAzB,KAAAX,EAAA,KACAtG,QAAA0I,EAAAE,OAAAF,EAAAE,OAAAC,KAAA,EACA9I,QAAA2I,EAAAI,SAAA,EACA1P,MAAAsP,EAAAtP,OAAA,EACAkH,WAAAoI,EAAApI,YAAA,EACA8H,OAAAM,EAAAvC,OACAzF,QAAAgI,EAAAzB,KAAA,GAAA3J,MAAAyL,QAAAzC,EAAAoC,EAAAzB,MAAA,MAIAsB,EAAAC,GAAArB,EAIAuB,EAAAzB,OACAP,EAAArC,KAAA8C,OAIA7K,KAAAiK,IACAA,EAAA9K,WAAA,WACAuN,IACAzC,MAAAjK,IACA,KAKA,MAAA6K,GAGA,IAAA8B,GAAA,SAAAzQ,EAAA0Q,GACA,MAAA1Q,GAAA6O,MAAA/N,OAAA4P,EAAA7B,MAAA/N,OACA,EAEAd,EAAA6O,MAAA/N,OAAA4P,EAAA7B,MAAA/N,QACA,EAGAd,EAAA6O,MAAAjO,MAAA8P,EAAA7B,MAAAjO,MACA,EAEAZ,EAAA6O,MAAAjO,MAAA8P,EAAA7B,MAAAjO,OACA,EAGA,GAGA4P,EAAA,WACAtC,EAAAyC,KAAAF,EAIA,KAAA,GAHAG,IAAA,EACAC,GAAA,EAEA3Q,EAAA,EAAAA,EAAAgO,EAAA3N,OAAAL,IAAA,CACA,GAAAyO,GAAAT,EAAAhO,EAGA,QAFA8N,EAAAU,OAAAC,EAAAE,MAAAjO,MAAA8M,EAAAiB,EAAAE,MAAA/N,OAAA4M,EAAAiB,IASAzO,IAEA+N,EA5LA,MA6LA2C,GAAA,EACAE,EAAA,EAAA7C,KAKAsB,EAAA1B,EAAA+C,GACA9B,IACA+B,GAAA,EACAD,GAAA,KAlBAC,IAAAlC,EAAAzG,QAAA4F,YAAAA,GACAD,EAAAhC,KAAA8C,IAoBAY,EAAAqB,GAAAC,EAAAhD,EAAAK,EAAA0C,GACA1C,MAGA4C,EAAA,SAAAC,GACApD,EAAA/M,MAAA+M,EAAA7M,OAAAmN,EAAA8C,EAEA/C,EAAA,GAAAK,GAAA0C,EAAAA,GACAlD,EAAA8C,KAAAF,EAEA,KAAA,GAAAvQ,GAAA,EAAAA,EAAA2N,EAAAtN,OAAAL,IAAA,CACA,GAAAyO,GAAAd,EAAA3N,EACA8N,GAAAU,OAAAC,EAAAE,MAAAjO,MAAA8M,EAAAiB,EAAAE,MAAA/N,OAAA4M,EAAAiB,KAIAwB,EAAA,SAAAvI,EAAAxC,GAEA,GAAA0E,GAAA9B,KAAAC,IAAA,EAAA4E,EAAAzH,EAAA0E,SAAA,KACAhC,EAAA,KAAAgC,EAIAzH,GACAyH,SAAAA,EACAhC,WAAAA,EACAlH,MAAA,EAIA,KAAAgH,GAAA,iBAAAwD,KAAAxD,GACA,MAAAvF,EAGA,IAAAwN,GAAAzK,EAAA0K,SAOA,IANAtC,EAAAqC,KAAAA,EAGAxN,EAAAzB,MAAAoH,KAAAgC,MAAAwD,EAAAwD,YAAApJ,GAAAhH,OAGA,OAAAwK,KAAAxD,GAAA,MAAAvF,EAGA,IAAA4O,GAAAjJ,KAAAgC,MAAA,GAAAF,GAAAoH,EAAAlJ,KAAAC,IAAA,EAAAD,KAAAgC,MAAA,GAAAF,GACAwD,GAAA1M,MAAAoH,KAAAmJ,KAAA9O,EAAAzB,OAAA,EAAAsQ,EACA5D,EAAAxM,OAAA,IAAAgJ,CACA,IAAAwE,GAAAhB,EAAA1M,MAAA2N,EAAAjB,EAAAxM,OAAAsQ,EAAA7C,EAAA,EAAA,GAAA0C,CAGAzD,GAAAqC,KAAAA,EAGArC,EAAA6D,UAAA,EAAA,EAAA/C,EAAAC,GAGAf,EAAA8D,MAGA,IAAAC,GAAA,SAAAvE,GACA,GAAA3K,GAAA2K,EAAAwE,OAAAC,MAAA,IACA,QACAC,MAAA3E,EAAA1K,EAAA,GAAA,WACA+B,MAAAwE,EAAAvG,EAAA,GAAA,IACAmF,QAAAoB,EAAAvG,EAAA,GAAA,GACAkF,QAAAqB,EAAAvG,EAAA,GAAA,GACAQ,KAAA+F,EAAAvG,EAAA,GAAA,KAKAsP,EAAA,SAAA3E,GACA,GAAA3K,GAAA2K,EAAAwE,OAAAC,MAAA,KACAvG,EAAA6B,EAAA1K,EAAA,GAAA,WACArC,EAAA4I,EAAAvG,EAAA,GAAA,EACA,QACAqP,MAAAxG,EACA9G,MAAApE,EACA4R,SAAAhJ,EAAAvG,EAAA,IAAA,GACAwP,KAAA1E,EAAAjC,EAAAlL,KAKA8R,EAAA,SAAA9E,GACA,GAAA9M,GAAA6R,EAAA/E,EAAAyE,MAAA,KAAAO,OAAA,SAAAnS,GAAA,MAAA,KAAAA,GAGA,KAAAK,EAAA,EAAAA,EAAA6R,EAAAxR,OAAAL,IAAA6R,EAAA7R,GAAAyR,EAAAI,EAAA7R,GAEA,QAAA6R,EAAAxR,QACA,IAAA,GAAA,MAAA,OACA,KAAA,GAAA,MAAAwR,GAAA,GAAAF,KAAAE,EAAA,GAAAF,KAAAE,EAAA,GAAAL,OAAA,SACA,SAEA,IACA,GAAAO,GAAAb,EAAAtJ,EAAAgC,EACAoI,EAAA1E,EAAA2E,qBAAA,EAAAF,EAAAnI,EAAA,EAAAmI,EAEA,KAAA/R,EAAA,EAAAA,EAAA6R,EAAAxR,OAAAL,IACAgS,EAAAE,cAAA,IAAAL,EAAA7R,GAAA0R,SAAAG,EAAA7R,GAAA0R,SAAA1R,GAAA6R,EAAAxR,OAAA,GAAAwR,EAAA7R,GAAA2R,MAAAE,EAAA7R,GAAAwR,MAEA,OAAAQ,GAEA,MAAAzS,GACA,MAAA,aAOA4S,EAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAd,OAAAC,MAAA,KAAAO,OAAA,SAAAnS,GAAA,MAAA,KAAAA,GACA,IAAA2S,EAAAjS,OAAA,CACA,IAAA,GAAAL,GAAA,EAAAA,EAAAsS,EAAAjS,OAAAL,IAAA,CACA,GAAAL,GAAA0R,EAAAiB,EAAAtS,GACAsN,GAAAiF,YAAA5S,EAAAuE,MACAoJ,EAAAkF,YAAA7S,EAAA6R,MACAlE,EAAAmF,cAAA9S,EAAA2H,QAAA8G,EACAd,EAAAoF,cAAA/S,EAAA0H,QACAiG,EAAAqF,WAAAhT,EAAAgD,KAEA0P,GACA/E,EAAA3F,UAAAzC,EAAAmN,OACA/E,EAAAsF,WAAAlL,EAAAsJ,EAAA5C,EAAA8C,IAEA5D,EAAAuF,SAAAnL,EAAAsJ,EAAA5C,EAAA8C,GAEA5D,EAAAwF,WAKA5N,GAAA6N,OAAA1S,QACA8R,EAAAjN,EAAA6N,QAAA,GAGA7N,EAAAmN,QAAAnN,EAAA8N,aAAA3S,QACA8R,EAAAjN,EAAA8N,cAAA,GAIA1F,EAAA2F,UAAArB,EAAA/E,EAAA3H,EAAAgO,KAAA,YACA5F,EAAAuF,SAAAnL,EAAAsJ,EAAAE,GACA5D,EAAAwF,UAGA5N,EAAAmN,SACA/E,EAAA6F,YAAAvB,EAAA/E,EAAA3H,EAAAkO,WAAA,YACA9F,EAAA3F,UAAAzC,EAAAmN,OACA/E,EAAAsF,WAAAlL,EAAAsJ,EAAAE,GACA5D,EAAAwF,UAcA,KATA,GAAAO,GAAA/F,EAAAgG,aAAA,EAAA,EAAAlF,EAAAC,GAAAlM,KAEAnC,EAAA,EACAuT,EAAA,EAAAnF,EACAoF,EAAAH,EAAAhT,OAKAL,EAAAwT,IAAAH,EAAArT,IAAAA,GAAA,CACA,IAAAyT,GAAAzT,EAAAuT,EAAA,CAGA,IAAAvT,EAAAwT,EAAA,CAGA,IADAxT,EAAAwT,EAAA,EACAxT,EAAA,IAAAqT,EAAArT,IAAAA,GAAA,CACA,IAAAoQ,GAAApQ,EAAAuT,EAAA,CAIA,KAAAvT,EAAA,EAAAA,EAAAwT,IAAAH,EAAArT,KACAA,GAAAuT,IACAC,IAAAxT,EAAAA,EAAAwT,EAAA,EAEA,IAAArD,GAAAnQ,EAAAuT,EAAA,EAAA,EAGAG,EAAA,CACA,KAAA1T,EAAAwT,EAAA,EAAAxT,GAAA,IAAAqT,EAAArT,KACAA,GAAAuT,GACA,IAAAvT,EAAAwT,EAAA,EAAA,EAAAE,IAEA,IAAAC,GAAA3T,EAAAuT,EAAA,EAAA,EAAA,CAIApR,GAAAsR,OAAA3L,KAAAgC,MAAAoH,EAAAuC,GACAtR,EAAAiO,QAAAtI,KAAAgC,MAAAsG,EAAAc,GACA/O,EAAAvB,OAAA,EAAAkH,KAAAgC,MAAAsG,EAAAqD,GACAtR,EAAA+N,QACAC,KAAAA,EAAAa,EACA2C,KAAAA,EAAA3C,EACA4C,KAAA,EACAC,KAAAzD,EAAAqD,GAEAtR,EAAAoM,MACAlG,EAAAlG,EAAA+N,OAAAC,KACA7H,GAAAnG,EAAAsR,OAAA,EACA/S,MAAAyB,EAAA+N,OAAAyD,KAAAxR,EAAA+N,OAAAC,KAAA,EACAvP,OAAAuB,EAAAsR,OAAAtR,EAAAiO,QAAA,GAKAjO,EAAAsL,OAAAhL,SAAA4K,cAAA,UACAlL,EAAAsL,OAAA/M,MAAAyB,EAAAoM,KAAA7N,MACAyB,EAAAsL,OAAA7M,OAAAuB,EAAAoM,KAAA3N,MACAuB,GAAAsL,OAAAF,WAAA,MACAkC,UAAArC,GAAA4D,EAAA7O,EAAAoM,KAAAlG,GAAA6I,EAAA/O,EAAAoM,KAAAjG,GAGAnG,EAAAoM,KAAAlG,EAAAlG,EAAAoM,KAAAjG,EAAA,EAIA,MAAAnG,GAGAyM,qGCr8BA,QAAA5I,GAAA4C,GACAxJ,KAAA0U,cAAA,EACA1U,KAAA2U,QAAAnL,GAAA,KACAxJ,KAAA4U,OAAA,EACA5U,KAAA6U,OAAA,OACA7U,KAAA8U,YAAA,QACA9U,KAAA+U,UAAA,GACA/U,KAAAgV,YAAA,SACAhV,KAAAiV,WAAA,SACAjV,KAAAkV,eAAA,EACAlV,KAAAmV,YAAA,EACAnV,KAAAoV,eAAA,EACApV,KAAAqV,UAAA,EACArV,KAAAsV,MAAA,EACAtV,KAAAuV,MAAA,UACAvV,KAAAwV,MAAA,UACAxV,KAAAyV,QAAA,GACAzV,KAAA0V,QAAA,EACA1V,KAAA2V,YAAA,GACA3V,KAAA4V,cAAA,GACA5V,KAAA6V,OAAA,EACA7V,KAAA8V,aAAA,EACA9V,KAAA+V,WAAA,UACA/V,KAAAgW,WAAA,UACAhW,KAAAiW,WAAA,CAGA,IAAAC,GAAA,IACAlW,MAAAmW,aAAA,SAAA7P,GACA,MAAAtG,MAAAoK,UACA,OAAA8L,IACAA,EAAA,GAAA5P,EAAA4E,cAAA,IAAAlL,MAAAsB,MAAAtB,KAAA2K,gBACAuL,GAHA,GAQAtP,EAAAxD,UAAAiJ,MAAA,WACA,GAAAvG,GAAA,GAAAc,EAEA,OADAd,GAAAe,MAAA7G,MACA8F,GAGAc,EAAAxD,UAAAyD,MAAA,SAAAf,GAEA,GAAA,gBAAAA,GAAA,CACA9F,KAAA0U,cAAA,CACA,KAAA,GAAA0B,KAAAtQ,GAAA,CAEA,kBADAA,GAAAsQ,IACA,iBAAAA,GAAA,YAAAA,IACApW,KAAAoW,GAAAtQ,EAAAsQ,IAEApW,KAAA0U,cAAA,EACA1U,KAAAqW,QAAA,IAIAzP,EAAAxD,UAAAuN,OAAA,SAAArI,GACA,OAAAA,EAAAtI,KAAA8T,KAAA9T,KAAA2T,OAAA3T,KAAAiT,OAAAjT,KAAAgU,WAAAhU,KAAA4T,cAAA0C,KAAA,MAGA1P,EAAAxD,UAAAoN,QAAA,WACA,GAAAhG,GAAA9B,KAAAxI,IAAA,IAAAwI,KAAAC,IAAA,EAAA3I,KAAAwK,UAAA,KAAA,KAGA,QAFA,SAAAxK,KAAAwM,WAAAxM,KAAAwM,WAAA,IAAA,KACA,WAAAxM,KAAAsM,WAAA,YAAAtM,KAAAsM,UAAAtM,KAAAsM,UAAA,IAAA,IACA9B,EAAAxK,KAAAgN,YAGApG,EAAAxD,UAAAY,YAAA4C,EACAnH,EAAAD,QAAAoH,EAEA9C,OAAAG,iBAAA2C,EAAAxD,WACAiT,QACAjS,IAAA,SAAAC,GACArE,KAAA0U,cACA,OAAA1U,KAAA2U,UACA3U,KAAA2U,QAAArN,WAAAjD,EACArE,KAAA2U,QAAAjP,YAKA6Q,OACApS,IAAA,WACA,MAAAnE,MAAA4U,QAEAxQ,IAAA,SAAAC,GACAA,IAAArE,KAAA4U,SACA5U,KAAA4U,OAAAvQ,EACArE,KAAAqW,QAAA,KAIAvM,OACA3F,IAAA,WACA,MAAAnE,MAAA6U,QAEAzQ,IAAA,SAAAC,GACAA,IAAArE,KAAA6U,SACA7U,KAAA6U,OAAAxQ,EACArE,KAAAqW,QAAA,KAIArJ,YACA7I,IAAA,WACA,MAAAnE,MAAA8U,aAEA1Q,IAAA,SAAAC,GACAA,IAAArE,KAAA8U,cACA9U,KAAA8U,YAAAzQ,EACArE,KAAAqW,QAAA,KAIA7L,UACArG,IAAA,WACA,MAAAnE,MAAA+U,WAEA3Q,IAAA,SAAAC,GACAA,IAAArE,KAAA+U,YACA/U,KAAA+U,UAAA1Q,EACArE,KAAAqW,QAAA,KAIA7J,YACArI,IAAA,WACA,MAAAnE,MAAAgV,aAEA5Q,IAAA,SAAAC,GACAA,IAAArE,KAAAgV,cACAhV,KAAAgV,YAAA3Q,EACArE,KAAAqW,QAAA,KAIA/J,WACAnI,IAAA,WACA,MAAAnE,MAAAiV,YAEA7Q,IAAA,SAAAC,GACAA,IAAArE,KAAAiV,aACAjV,KAAAiV,WAAA5Q,EACArE,KAAAqW,QAAA,KAIA1L,eACAxG,IAAA,WACA,MAAAnE,MAAAkV,gBAEA9Q,IAAA,SAAAC,GACAA,IAAArE,KAAAkV,iBACAlV,KAAAkV,eAAA7Q,EACArE,KAAAqW,QAAA,KAIA7N,YACArE,IAAA,WACA,MAAAnE,MAAAmV,aAEA/Q,IAAA,SAAAC,GACAA,IAAArE,KAAAmV,cACAnV,KAAAmV,YAAA9Q,EACArE,KAAAqW,QAAA,KAIAzU,eACAuC,IAAA,WACA,MAAAnE,MAAAoV,gBAEAhR,IAAA,SAAAC,GACAA,IAAArE,KAAAoV,iBACApV,KAAAoV,eAAA/Q,EACArE,KAAAqW,QAAA,KAIAhN,UACAlF,IAAA,WACA,MAAAnE,MAAAqV,WAEAjR,IAAA,SAAAC,GACAA,IAAArE,KAAAqV,YACArV,KAAAqV,UAAAhR,EACArE,KAAAqW,QAAA,KAIA9M,MACApF,IAAA,WACA,MAAAnE,MAAAsV,OAEAlR,IAAA,SAAAC,GACAA,IAAArE,KAAAsV,QACAtV,KAAAsV,MAAAjR,EACArE,KAAAqW,QAAA,KAIAlN,MACAhF,IAAA,WACA,MAAAnE,MAAAuV,OAEAnR,IAAA,SAAAC,GACAA,IAAArE,KAAAuV,QACAvV,KAAAuV,MAAAlR,EACArE,KAAAqW,QAAA,KAIAvC,MACA3P,IAAA,WACA,MAAAnE,MAAAwV,OAEApR,IAAA,SAAAC,GACAA,IAAArE,KAAAwV,QACAxV,KAAAwV,MAAAnR,EACArE,KAAAqW,QAAA,KAIA1C,QACAxP,IAAA,WACA,MAAAnE,MAAAyV,SAEArR,IAAA,SAAAC,GACAA,IAAArE,KAAAyV,UACAzV,KAAAyV,QAAApR,EACArE,KAAAqW,QAAA,KAIApD,QACA9O,IAAA,WACA,MAAAnE,MAAA0V,SAEAtR,IAAA,SAAAC,GACAA,IAAArE,KAAA0V,UACA1V,KAAA0V,QAAArR,EACArE,KAAAqW,QAAA,KAIArC,YACA7P,IAAA,WACA,MAAAnE,MAAA2V,aAEAvR,IAAA,SAAAC,GACAA,IAAArE,KAAA2V,cACA3V,KAAA2V,YAAAtR,EACArE,KAAAqW,QAAA,KAIAzC,cACAzP,IAAA,WACA,MAAAnE,MAAA4V,eAEAxR,IAAA,SAAAC,GACAA,IAAArE,KAAA4V,gBACA5V,KAAA4V,cAAAvR,EACArE,KAAAqW,QAAA,KAIAzL,MACAzG,IAAA,WACA,MAAAnE,MAAA6V,OAEAzR,IAAA,SAAAC,GACAA,IAAArE,KAAA6V,QACA7V,KAAA6V,MAAAxR,EACArE,KAAAqW,QAAA,KAIAxL,YACA1G,IAAA,WACA,MAAAnE,MAAA8V,aAEA1R,IAAA,SAAAC,GACAA,IAAArE,KAAA8V,cACA9V,KAAA8V,YAAAzR,EACArE,KAAAqW,QAAA,KAIAvL,WACA3G,IAAA,WACA,MAAAnE,MAAA+V,YAEA3R,IAAA,SAAAC,GACAA,IAAArE,KAAA+V,aACA/V,KAAA+V,WAAA1R,EACArE,KAAAqW,QAAA,KAIA9L,WACApG,IAAA,WACA,MAAAnE,MAAAgW,YAEA5R,IAAA,SAAAC,GACAA,IAAArE,KAAAgW,aACAhW,KAAAgW,WAAA3R,EACArE,KAAAqW,QAAA,KAIAjM,UACAjG,IAAA,WACA,MAAAnE,MAAAiW,WAEA7R,IAAA,SAAAC,GACAA,IAAArE,KAAAiW,YACAjW,KAAAiW,UAAA5R,EACArE,KAAAqW,QAAA,+BC3TA,QAAAtS,GAAAyS,GACA,GAAArW,GAAA2D,OAAAC,OAAA0S,EAAArT,UAEA,OADAjD,GAAAuW,YAAAF,EACArW,EAQA,QAAAwW,GAAAC,EAAAC,EAAAC,GACA,OACAC,OAAAH,EACAI,QAAAH,EACAI,UAAAH,GApBA,GAAAI,MACAT,EAAA9V,EAAA,cACAwW,EAAAxW,EAAA,qBACAyW,EAAA,GAAA1O,KAAA2O,EAUAH,GAAAI,OAAA,GAAAb,GAWAS,EAAAK,QACAC,SAAAN,EAAAI,QAGAJ,EAAAO,OAAAP,EAAAQ,KAAAf,EACA,GAAAQ,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,IAEAD,EAAAS,OAAAT,EAAAU,MAAAjB,EACA,GAAAQ,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,IAEAD,EAAAW,OAAAX,EAAAY,MAAAnB,EACA,GAAAQ,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,IAEAD,EAAAa,OAAAb,EAAAc,MAAArB,EACA,GAAAQ,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,GACA,GAAAA,GAAA,EAAA,EAAA,IAIAD,EAAAe,QACAC,SAAAnU,EAAA,SAAAoU,GACA,OAAAA,EAAA,EAAAA,GAAA,EAAA,KACA,EAAA,OAAAA,EAAAA,EACAA,EAAA,EAAA,KACA,GAAA,QAAAA,GAAA,IAAA,MAAAA,EAAA,KACAA,EAAA,IAAA,KACA,GAAA,QAAAA,GAAA,KAAA,MAAAA,EAAA,OAEA,GAAA,QAAAA,GAAA,MAAA,MAAAA,EAAA,WAEAC,UAAArU,EAAA,SAAAoU,GACA,MAAAA,GAAA,EAAA,KACA,OAAAA,EAAAA,EACAA,EAAA,EAAA,KACA,QAAAA,GAAA,IAAA,MAAAA,EAAA,IACAA,EAAA,IAAA,KACA,QAAAA,GAAA,KAAA,MAAAA,EAAA,MAEA,QAAAA,GAAA,MAAA,MAAAA,EAAA,UAEAE,YAAAtU,EAAA,SAAAoU,GACA,GAAAG,GAAAH,EAAA,EAeA,OAbAA,GADAG,EACA,EAAA,EAAAH,EAEA,EAAAA,EAAA,EAEAA,EAAA,EAAA,KACAA,GAAA,OAAAA,EAEAA,EADAA,EAAA,EAAA,KACA,QAAAA,GAAA,IAAA,MAAAA,EAAA,IACAA,EAAA,IAAA,KACA,QAAAA,GAAA,KAAA,MAAAA,EAAA,MAEA,QAAAA,GAAA,MAAA,MAAAA,EAAA,QAEAG,EAAA,IAAA,EAAAH,GAAA,GAAAA,EAAA,MAKAjB,EAAAqB,MACAC,OAAAzU,EAAA,SAAAoU,GACA,QAAAzP,KAAA+P,KAAA,EAAAN,EAAAA,GAAA,KAEAO,QAAA3U,EAAA,SAAAoU,GACA,MAAAzP,MAAA+P,KAAA,GAAAN,GAAA,GAAAA,KAEAQ,UAAA5U,EAAA,SAAAoU,GACA,OAAAA,GAAA,GAAA,GAAA,IAAAzP,KAAA+P,KAAA,EAAAN,EAAAA,GAAA,GAAA,IAAAzP,KAAA+P,KAAA,GAAAN,GAAA,GAAAA,GAAA,MAMAjB,EAAA0B,MACAC,OAAA9U,EAAA,SAAAoU,GACA,MAAAzP,MAAAoQ,IAAA,EAAA,IAAAX,EAAA,IAAA,OAEAY,QAAAhV,EAAA,SAAAoU,GACA,MAAA,GAAAzP,KAAAoQ,IAAA,GAAA,GAAAX,KAEAa,UAAAjV,EAAA,SAAAoU,GACA,OAAAA,GAAA,GAAA,EAAA,GAAAzP,KAAAoQ,IAAA,EAAA,IAAAX,EAAA,IAAA,IAAA,EAAAzP,KAAAoQ,IAAA,GAAA,IAAAX,EAAA,QAMAjB,EAAA+B,MACAC,OAAAnV,EAAA,SAAAoU,GACA,MAAA,GAAAzP,KAAAyQ,IAAAhB,EAAAf,KAEAgC,QAAArV,EAAA,SAAAoU,GACA,MAAAzP,MAAA2Q,IAAAlB,EAAAf,KAEAkC,UAAAvV,EAAA,SAAAoU,GACA,OAAA,IAAAzP,KAAAyQ,IAAAzQ,KAAA2O,GAAAc,GAAA,MAKA1Y,EAAAD,QAAA0X,+DCrIA,QAAAT,KACAzW,KAAA0W,YAAA,SAAAyB,GACA,MAAAA,IAIA1B,EAAArT,UAAAY,YAAAyS,EACAhX,EAAAD,QAAAiX,2BCLA,QAAAU,GAAAoC,EAAAxC,EAAAC,GACA,GAAA8B,GAAAS,EACAnZ,EAAA2W,GAAAC,EAAA,EAAAA,EAAA,EAAA,CACAhX,MAAA0W,YAAA,SAAAyB,GACA,GAAA7X,GAAA,IAAAF,EAAA,EAAA+X,EAAA,IAAA/X,EAAA+X,EAAAA,EAAA,GAAA,EAAAA,EAAA,GAAA,EAAAA,EAUA,OATA,KAAAW,EACAxY,GAAAA,EACA,IAAAwY,EACAxY,GAAAA,EAAAA,EACA,IAAAwY,EACAxY,GAAAA,EAAAA,EAAAA,EACA,IAAAwY,IACAxY,GAAAA,EAAAA,EAAAA,EAAAA,GAEA,IAAAF,EAAA,EAAAE,EAAA,IAAAF,EAAAE,EAAA6X,EAAA,GAAA7X,EAAA,EAAA,EAAAA,EAAA,GAhBA,GAAAmW,GAAA9V,EAAA,aAoBAwW,GAAA/T,UAAAU,OAAAC,OAAA0S,EAAArT,WACA+T,EAAA/T,UAAAY,YAAAmT,EACA1X,EAAAD,QAAA2X,yCCtBA,GAAAqC,IACAC,KAAA,SAAAC,EAAAC,EAAAC,GAGA,MAFAA,GAAA,EAAAA,EAAA,EACAA,EAAA,IAAAA,EAAA,GACAF,GAAAC,EAAAD,GAAAE,GAEAC,MAAA,SAAAC,EAAAC,GACA,GAAAjB,GAAApQ,KAAAoQ,IAAA,GAAAiB,EACA,OAAArR,MAAAgC,MAAAoP,EAAAhB,GAAAA,GAEAkB,eAAA,SAAApO,GACA,GAAAkC,GAAAlC,EAAAqO,SAAA,GACA,OAAA,IAAAnM,EAAA7M,OAAA,IAAA6M,EAAAA,GAEAoM,SAAA,SAAA5Z,EAAAV,EAAAwR,GACA,MAAA,IAAA4I,eAAA1Z,GAAA0Z,eAAApa,GAAAoa,eAAA5I,IAEA+I,YAAA,SAAA7Z,EAAAV,EAAAwR,GACA,MAAA,OAAA9Q,EAAA,IAAAV,EAAAwR,GAEAgJ,YAAA,SAAAxO,GACA,OACAtL,EAAAoI,KAAA2R,MAAAzO,EAAA,OACAhM,EAAA8I,KAAA2R,MAAAzO,EAAA,KAAA,IACAwF,EAAAxF,EAAA,MAGA0O,SAAA,SAAAxM,GAIA,GAHA,OAAAA,IACAA,EAAA,WAEAR,MAAAQ,GAAA,MAAA9N,MAAAoa,YAAAtM,EAGA,IAAAyM,GAAA,kCACAzM,GAAAA,EAAAF,QAAA2M,EAAA,SAAAC,EAAAla,EAAAV,EAAAwR,GACA,MAAA9Q,GAAAA,EAAAV,EAAAA,EAAAwR,EAAAA,GAGA,IAAAzD,GAAA,4CAAAd,KAAAiB,EACA,OAAAH,IACArN,EAAAkN,SAAAG,EAAA,GAAA,IACA/N,EAAA4N,SAAAG,EAAA,GAAA,IACAyD,EAAA5D,SAAAG,EAAA,GAAA,KACA,MAIAlO,GAAAD,QAAAga,2BCnCA,QAAAnY,GAAAC,EAAAE,EAAAC,EAAAC,GACA6D,EAAAvE,KAAAhB,KAAAsB,EAAAE,EACA,IAAAzB,GAAAC,IACAA,MAAAmD,UAAA,EACAnD,KAAAya,QAAAza,KAAA0a,SAAA1a,KAAA2a,UAAA,EACA3a,KAAAkC,UAAA0Y,aAAA,EACA7V,EAAA8V,UAAA7a,KAAAyB,EAAAC,EAGA,IAAAU,GAAA,SAAAjC,GACA,IAAAA,EAAAkC,MACAtC,EAAA0a,UACA1V,EAAA+V,UACA3a,EAAA8C,kBAGA,KAAA9C,EAAAkC,MACAtC,EAAA2a,WACA3V,EAAAgW,WACA5a,EAAA8C,kBAGA,KAAA9C,EAAAkC,OACAtC,EAAA4a,WACA5V,EAAAiW,WACA7a,EAAA8C,mBAKAgY,EAAA,SAAA9a,GACAJ,EAAAmb,QACAnb,EAAAwD,OAGAvD,MAAAkC,UAAAiZ,GAAA,cAAA,SAAAhb,GACAJ,EAAA+C,QACA/C,EAAAmb,QAAA,IAGAlb,KAAAkC,UAAAiZ,GAAA,YAAA,SAAAhb,GACAJ,EAAAmb,QAAA,IAGAlb,KAAAkC,UAAAiZ,GAAA,mBAAA,SAAAhb,GACAJ,EAAAmb,QAAA,IAKAlb,KAAAob,YAAA,WACA,OAAApb,KAAAqb,QACArb,KAAAqb,MAAAF,GAAA,cAAAF,GACA5X,SAAAC,iBAAA,UAAAlB,KAIApC,KAAAsb,aAAA,WACA,OAAAtb,KAAAqb,QACArb,KAAAqb,MAAAE,IAAA,cAAAN,GACA5X,SAAAG,oBAAA,UAAApB,KAzEA,GAAAmD,GAAA5E,EAAA,YACAoE,EAAApE,EAAA,gCACAA,GAAA,2BA4EAU,GAAA+B,UAAAU,OAAAC,OAAAwB,EAAAnC,WACA/B,EAAA+B,UAAAY,YAAA3C,EACA5B,EAAAD,QAAA6B,EAEAA,EAAA+B,UAAAN,MAAA,WACA9C,KAAAmD,WACAnD,KAAAmD,UAAA,EACAnD,KAAAob,cACArW,EAAAX,IAAApE,MACAA,KAAA0C,KAAA,gBAAA,GACA1C,KAAA0C,KAAA,WAKArB,EAAA+B,UAAAG,KAAA,WACAvD,KAAAmD,WACA4B,EAAAyW,QACAxb,KAAAmD,UAAA,EACAnD,KAAAsb,eACAtb,KAAA0C,KAAA,gBAAA,GACA1C,KAAA0C,KAAA,iHCnGA,GAAAF,GAAA,SAAA6M,EAAAoM,EAAAC,GAIA,GAAAC,IAAA,EACA5b,EAAAC,KACA4b,EAAA,EACAC,GAAA,EACAC,EAAA,GAAAtW,MAAAmE,MACAoS,EAAA,GAAAvW,MAAAmE,MACAqS,EAAA,EACAC,EAAA,EACAC,MAAA,KAAAR,GAAAA,EACAS,MAAA,KAAAV,GAAAA,EAEAW,EAAAF,EAAA,YAAA,YACAG,EAAAH,EAAA,UAAA,UACAI,EAAAJ,EAAA,iBAAA,gBAEA7M,GAAAnN,UAAA0Y,aAAA,CAEA,IAAA2B,GAAA,SAAAC,GACAV,EAAAW,KAAAD,EAAAzZ,KAAAjD,QACA8b,EAAAY,EAAAzZ,KAAA2Z,WACA3c,EAAA6C,QAAA5B,KAAAqO,EAAAmN,GAAA,GACAb,IACAtM,EAAAnN,UAAAiZ,GAAAkB,EAAAM,GACAtN,EAAAnN,UAAAiZ,GAAAmB,EAAAM,GACAV,IACA7M,EAAAnN,UAAAiZ,GAAA,WAAAwB,GACAtN,EAAAnN,UAAAiZ,GAAA,kBAAAyB,IAEAjB,GAAA,GAEAa,EAAAzZ,KAAAC,cAAAC,kBAGA4Z,EAAA,SAAAL,GACAA,EAAAzZ,KAAA2Z,aAAAd,IACAG,EAAA3X,IAAAoY,EAAAzZ,KAAAjD,OAAAmJ,EAAA6S,EAAA7S,EAAAuT,EAAAzZ,KAAAjD,OAAAoJ,EAAA4S,EAAA5S,GACAyS,IACAtM,EAAAnN,UAAA4a,eAAAT,EAAAM,GACAtN,EAAAnN,UAAA4a,eAAAR,EAAAM,GACAV,IACA7M,EAAAnN,UAAA4a,eAAA,WAAAH,GACAtN,EAAAnN,UAAA4a,eAAA,kBAAAF,IAEAjB,GAAA,GAEA5b,EAAA6C,QAAA5B,KAAAqO,EAAAmN,GAAA,KAGAG,EAAA,SAAAH,GACAA,EAAAzZ,KAAA2Z,aAAAd,IACAiB,EAAAL,GAGAnN,EAAA0N,gBACAf,EAAAtT,KAAAsU,IAAAjB,EAAA9S,GACAgT,EAAAvT,KAAAsU,IAAAjB,EAAA7S,GACAR,KAAAC,IAAAqT,EAAAC,GAAA5M,EAAA0N,gBAIAhd,EAAAmD,QAAAlC,KAAAqO,EAAAmN;sDAGAI,EAAA,SAAAJ,GACAA,EAAAzZ,KAAA2Z,aAAAd,GACAiB,EAAAL,IAGAS,EAAA,SAAAT,GACAX,IACAA,GAAA,EACA9b,EAAA0C,QAAAzB,KAAAqO,EAAAmN,KAIAU,EAAA,SAAAV,GACAX,IACAA,GAAA,EACA9b,EAAA4C,QAAA3B,KAAAqO,EAAAmN,IAIAxc,MAAAmd,UAAA,WACAxB,IACAtM,EAAAnN,UAAA4a,eAAAT,EAAAM,GACAtN,EAAAnN,UAAA4a,eAAAR,EAAAM,GAEAV,IACA7M,EAAAnN,UAAA4a,eAAA,WAAAH,GACAtN,EAAAnN,UAAA4a,eAAA,kBAAAF,IAEAjB,GAAA,GAEAtM,EAAAnN,UAAA4a,eAAAV,EAAAG,GACAL,GAAA7M,EAAAnN,UAAA4a,eAAA,aAAAP,GAEAJ,IACA9M,EAAAnN,UAAA4a,eAAA,YAAAG,GACA5N,EAAAnN,UAAA4a,eAAA,WAAAI,KAIAld,KAAAod,WAAA,WACA/N,EAAAnN,UAAAiZ,GAAAiB,EAAAG,GACAL,GAAA7M,EAAAnN,UAAAiZ,GAAA,aAAAoB,GAEAJ,IACA9M,EAAAnN,UAAAiZ,GAAA,YAAA8B,GACA5N,EAAAnN,UAAAiZ,GAAA,WAAA+B,KAIAld,KAAAod,aAGA5a,GAAAY,UAAAY,YAAAxB,EACA/C,EAAAD,QAAAgD,EAEAA,EAAAY,UAAAX,QAAA,SAAA+Z,KACAha,EAAAY,UAAAT,QAAA,SAAA6Z,KACAha,EAAAY,UAAAR,QAAA,SAAA4Z,EAAA3Z,KACAL,EAAAY,UAAAF,QAAA,SAAAsZ,8BC7HA,GAAAa,MACAC,GACAC,IAAA,SAAAC,EAAAhB,GAEA,MADAgB,GAAAC,iBAAAjB,EAAAzZ,KAAA2Z,YACA,IAAAW,EAAAlR,QAAAqR,KACAH,EAAA9Q,KAAAiR,IACA,IAIAE,QAAA,SAAAC,GAEA,IAAA,GADAC,GAAAJ,EAAA,KACA5c,EAAA,EAAAA,EAAAyc,EAAApc,OAAAL,IACA,GAAAyc,EAAAzc,KAAA+c,EAAA,CACAH,EAAAH,EAAAzc,GACAgd,EAAAhd,CACA,OAIA,MAAA,QAAA4c,IACAH,EAAA5Q,OAAAmR,EAAA,GACAJ,IAMAK,aAAA,SAAArB,EAAAsB,GAEA,IAAA,GADAF,GAAAJ,EAAA,KAAA5B,EAAAY,EAAAzZ,KAAA2Z,WACA9b,EAAA,EAAAA,EAAAyc,EAAApc,OAAAL,IACA,GAAAyc,EAAAzc,GAAA6c,mBAAA7B,EAAA,CACA,GAAAkC,IAAAT,EAAAzc,GAAAmd,UACA,OAAA,CAEAP,GAAAH,EAAAzc,GACAgd,EAAAhd,CACA,OAIA,MAAA,QAAA4c,IACAH,EAAA5Q,OAAAmR,EAAA,GACAJ,IAQA/d,GAAAD,QAAA8d,2BCnDA,GAAAU,GAAA,SAAA3O,GACA,GAAAsM,IAAA,EACAjC,EAAA,GAAAlU,MAAAmE,MACAoS,EAAA,GAAAvW,MAAAmE,MACAmS,EAAA,GAAAtW,MAAAmE,MACAqS,EAAA,EACAC,EAAA,EACAgC,GAAA,EACAC,GAAA,EACAne,EAAAC,KACA4b,EAAA,CAEAvM,GAAAnN,UAAA0Y,aAAA,CAEA,IAAAuD,GAAA,SAAAhe,GACAyb,EAAAzb,EAAA4C,KAAA2Z,WACA3c,EAAA6C,QAAA5B,KAAAqO,EAAAlP,GAAA,GACAwb,IACAjC,EAAA+C,KAAAtc,EAAA4C,KAAAjD,QACAuP,EAAAgM,MAAAF,GAAA,YAAAiD,GACA/O,EAAAgM,MAAAF,GAAA,YAAAiD,GACA/O,EAAAgM,MAAAF,GAAA,UAAAkD,GACAhP,EAAAgM,MAAAF,GAAA,iBAAAkD,GACAhP,EAAAgM,MAAAF,GAAA,WAAAkD,GACAhP,EAAAgM,MAAAF,GAAA,kBAAAkD,GACAhP,EAAAgM,MAAAF,GAAA,cAAAkD,GACA1C,GAAA,GAGAxb,EAAA4C,KAAAC,cAAAC,kBAGAmb,EAAA,SAAA5B,GACA,GAAAA,EAAAzZ,KAAA2Z,aAAAd,EAAA,CAGA,GAFAE,EAAAW,KAAAD,EAAAzZ,KAAAjD,QACAic,EAAA3X,IAAA0X,EAAA7S,EAAAyQ,EAAAzQ,EAAA6S,EAAA5S,EAAAwQ,EAAAxQ,IACAgV,EAAA,CAGA,GAFAlC,EAAAtT,KAAAsU,IAAAjB,EAAA9S,GACAgT,EAAAvT,KAAAsU,IAAAjB,EAAA7S,GACA,IAAA8S,GAAA,IAAAC,GAAAvT,KAAAC,IAAAqT,EAAAC,GAAA5M,EAAA0N,cAAA,MACA,IAAA,OAAA1N,EAAAiP,mBACAL,GAAA,EACA,KAAA5O,EAAAiP,kBAAArC,EAAAD,EAAAiC,GAAA,EACA,KAAA5O,EAAAiP,kBAAArC,GAAAD,IAAAiC,GAAA,GACAA,GAEA,WADAI,GAAA7B,EAIAzc,GAAAwe,YAAAvd,KAAAqO,EAAAmN,GACA0B,GAAA,EAEAne,EAAAye,WAAAxd,KAAAqO,EAAAmN,EAAAT,KAGAsC,EAAA,SAAA7B,GACAA,EAAAzZ,KAAA2Z,aAAAd,GACAD,IACAtM,EAAAgM,MAAAyB,eAAA,YAAAsB,GACA/O,EAAAgM,MAAAyB,eAAA,YAAAsB,GACA/O,EAAAgM,MAAAyB,eAAA,UAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,iBAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,WAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,kBAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,cAAAuB,GACAH,GAAA,EACAvC,GAAA,EACA5b,EAAA0e,UAAAzd,KAAAqO,EAAAmN,GACAzc,EAAA6C,QAAA5B,KAAAqO,EAAAmN,GAAA,IAKAxc,MAAAmd,UAAA,WACAxB,IACAtM,EAAAgM,MAAAyB,eAAA,YAAAsB,GACA/O,EAAAgM,MAAAyB,eAAA,YAAAsB,GACA/O,EAAAgM,MAAAyB,eAAA,UAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,iBAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,WAAAuB,GACAhP,EAAAgM,MAAAyB,eAAA,kBAAAuB,GACA1C,GAAA,GAEAtM,EAAAnN,UAAA4a,eAAA,YAAAqB,GACA9O,EAAAnN,UAAA4a,eAAA,aAAAqB,IAGAne,KAAAod,WAAA,WACA/N,EAAAnN,UAAAiZ,GAAA,YAAAgD,GACA9O,EAAAnN,UAAAiZ,GAAA,aAAAgD,IAGAne,KAAAod,aAGAY,GAAA5a,UAAAY,YAAAga,EACAve,EAAAD,QAAAwe,EAEAA,EAAA5a,UAAAR,QAAA,SAAA4Z,EAAA3Z,KACAmb,EAAA5a,UAAAqb,UAAA,SAAAjC,KACAwB,EAAA5a,UAAAob,WAAA,SAAAhC,EAAAT,KACAiC,EAAA5a,UAAAmb,YAAA,SAAA/B,8BCrGA,GAAAkC,GACAC,KACAC,KACAC,KAEA9Z,GACA8V,UAAA,SAAA2C,EAAA/b,EAAAC,GACA,GAAAod,GAAApd,GAAA,UAEAqd,EAAAJ,EAAAG,EACAC,KACAA,EAAAJ,EAAAG,QAGA,IADAC,EAAA5S,QAAAqR,KAEAA,EAAAwB,cAAAxa,KAAA/C,EAAAA,GAAA,EACA+b,EAAAyB,UAAAF,EACAA,EAAAxS,KAAAiR,GACAuB,EAAA1N,KAAA,SAAA3Q,EAAA0Q,GACA,MAAA1Q,GAAAse,UAAA5N,EAAA4N,WACA,EACAte,EAAAse,UAAA5N,EAAA4N,UACA,EACA,MAIA5a,IAAA,SAAAoZ,GACAkB,GAAA,kBAAAA,GAAAnb,MACAmb,EAAAnb,OACAmb,EAAAlB,GAEAhC,MAAA,WACAkD,MAAAla,IAEAsW,QAAA,WACA,GAAA4D,EAAA,CACA,GAAA9d,GAAA8d,EAAAO,UAAA9S,QAAAuS,GAAA,CACA9d,IAAA8d,EAAAO,UAAAhe,SAAAL,EAAA,GACA8d,EAAAO,UAAAre,GAAAkC,UAGAkY,SAAA,WACA,GAAA0D,EAAA,CACA,GAAA9d,GAAA8d,EAAAO,UAAA9S,QAAAuS,GAAA,CACA9d,IAAA8d,EAAAO,UAAAhe,SAAAL,EAAA8d,EAAAO,UAAAhe,OAAA,GACAyd,EAAAO,UAAAre,GAAAkC,UAGAiY,SAAA,WACA,GAAA2D,EAAA,CACA,GAAA9d,GAAA8d,EAAAO,UAAA9S,QAAAuS,GAAA,CACA9d,GAAA,IAAAA,EAAA,GACA8d,EAAAO,UAAAre,GAAAkC,UAGAkC,oBAAA,SAAAka,GACA,GAAAC,GAAAD,EAAAva,WACAmZ,EAAAc,EAAAO,EACArB,KAAAA,EAAAc,EAAAO,OACArB,EAAAoB,EAAAhb,OAAAgb,EAEAA,EAAAza,UACAoa,EAAAM,GAAAD,EAAAhb,QAEAgB,yBAAA,SAAAga,GACA,GAAApB,GAAAc,EAAAM,EAAAva,WACA,KAAA,GAAAN,KAAAyZ,GAAA,CACA,GAAA1M,GAAA0M,EAAAzZ,EACA+M,KAAA8N,IACA9N,EAAA3M,SAAA,GAEAoa,EAAAK,EAAAva,YAAAua,EAAAhb,OAEAkB,2BAAA,SAAA+Z,GACA,MAAAN,GAAAM,GACAN,EAAAM,GACA,IAEA9Z,2BAAA,SAAA8Z,EAAA9a,GACA,GAAAyZ,GAAAc,EAAAO,EACA,IAAArB,EAAA,CACA,GAAAoB,GAAApB,EAAAzZ,EACA6a,KACAA,EAAAza,SAAA,KAMAhF,GAAAD,QAAAuF,2BC1FA,GAAAqa,IACA5c,WAAA7B,EAAA,gBACAqd,UAAArd,EAAA,eACA0e,iBAAA1e,EAAA,sBAIAlB,GAAAD,QAAA4f,qFCPA,GAAAC,GAAA,SAAAhQ,EAAApM,GACA,GAAA0Y,IAAA,EAAA2D,EAAA,GAAA9Z,MAAAmE,MAAA5J,EAAAC,IACAqP,GAAAnN,UAAA0Y,aAAA,CAEA,IAAA2E,GAAA,SAAA/C,GACAvZ,GACAuZ,EAAAvZ,iBAEAqc,EAAAlb,IAAAoY,EAAAgD,OAAAhD,EAAAiD,QACA1f,EAAA2f,cAAA1e,KAAAqO,EAAAmN,EAAA8C,IAGAK,EAAA,SAAAnD,GACAb,IACAtY,SAAAC,iBAAA,aAAAic,GAAA,GACAlc,SAAAC,iBAAA,iBAAAic,GAAA,GACA5D,GAAA,IAIAuB,EAAA,SAAAV,GACAb,IACAtY,SAAAG,oBAAA,aAAA+b,GACAlc,SAAAG,oBAAA,iBAAA+b,GACA5D,GAAA,GAIA3b,MAAAmd,UAAA,WACAxB,IACAtY,SAAAG,oBAAA,aAAA+b,GACAlc,SAAAG,oBAAA,iBAAA+b,GACA5D,GAAA,GAEAtM,EAAAnN,UAAA4a,eAAA,YAAA6C,GACAtQ,EAAAnN,UAAA4a,eAAA,WAAAI,IAGAld,KAAAod,WAAA,WACA/N,EAAAnN,UAAAiZ,GAAA,YAAAwE,GACAtQ,EAAAnN,UAAAiZ,GAAA,WAAA+B,IAGAld,KAAAod,aAKAiC,GAAAjc,UAAAY,YAAAqb,EACA5f,EAAAD,QAAA6f,EAEAA,EAAAjc,UAAAsc,cAAA,SAAAlD,EAAA8C,8BCjCA,QAAAM,GAAAxe,GACAye,EAAA7e,KAAAhB,MAAA8f,MAAA1e,EAAA0e,MAAAC,OAAA3e,EAAA2e,OAAAjM,KAAA,KAAAkM,SAAA5e,EAAA4e,WACAhgB,KAAAigB,mBAAA7e,EAAA6e,mBACAjgB,KAAAkgB,SAAA9e,EAAA8e,SACAlgB,KAAAmgB,SAAA,EAtBA,GAAAN,GAAAlf,EAAA,YACAyf,EAAAzf,EAAA,UACAA,GAAA,cAwBAif,GAAAxc,UAAAU,OAAAC,OAAA8b,EAAAzc,WACAwc,EAAAxc,UAAAY,YAAA4b,EACAngB,EAAAD,QAAAogB,EAGAA,EAAAxc,UAAAK,WAAA,WACAoc,EAAAzc,UAAAK,WAAAzC,KAAAhB,MACAA,KAAA+Z,SAAA,EAEA/Z,KAAAqgB,iBAAA,SAAAhc,IACArE,KAAAigB,mBAAAra,QAAA5F,KAAAigB,mBAAAK,eAAA9e,QAAA,MACA,GACAxB,KAAAigB,mBAAAM,iBAAAvgB,KAAAggB,SAAA,IAAA,IAAAhgB,KAAAwgB,OAGAxgB,KAAAigB,mBAAAQ,YAAAlU,KAAAvM,OAIA4f,EAAAxc,UAAAsd,iBAAA,WACA,GAAAC,GACAlW,EACAmW,EAAA5gB,KAAAggB,SAAA,IAAA,IACAa,EAAA7gB,KAAAggB,SAAA,SAAA,QACAc,EAAA9gB,KAAAggB,SAAA,MAAA,OACAe,EAAA/gB,KAAAigB,mBAAAK,eAAAO,IAAA7gB,KAAAigB,mBAAAK,eAAAM,GAAA5gB,KAAAigB,mBAAAK,eAAAO,GAAA,EACAG,EAAAhhB,KAAAigB,mBAAAK,eAAAO,GAAA7gB,KAAAigB,mBAAA,IAAAY,GAAA7gB,KAAAigB,mBAAAK,eAAAO,GAAA,CAGA7gB,MAAAwgB,KAAAxgB,KAAAigB,mBAAA,IAAAY,IAAA7gB,KAAAigB,mBAAAK,eAAAM,IAAA5gB,KAAAigB,mBAAAK,eAAAO,GAAA7gB,KAAAigB,mBAAA,IAAAY,IAAA,EAEAG,GAAA,GACAvW,EAAAzK,KAAA,IAAA6gB,GACA7gB,KAAA+f,OAAAe,GAAA,GAAArW,EACAzK,KAAAihB,cAAA,KAGAxW,EAAAzK,KAAA,IAAA6gB,GAAAG,EACAhhB,KAAAwgB,KAAA,EAAA/V,IAAAzK,KAAA,IAAA6gB,GAAApW,IAAAzK,KAAAwgB,KAAA,GACAxgB,KAAAwgB,KAAA,IAAA/V,IAAAzK,KAAA,IAAA6gB,GAAApW,IAAAzK,KAAAwgB,MACAG,EAAA3gB,KAAAwgB,KAAA,EAAA,GAAA/V,EACAzK,KAAAwgB,KAAA,EAAAxgB,KAAA,IAAA6gB,GAAA,GAAApW,EACAsW,EAAA/gB,KAAAigB,mBAAA,IAAAY,GAAA,GAAApW,EACAzK,KAAA+f,OAAAe,GAAAH,EACA3gB,KAAAihB,cAAA,IAEAjhB,KAAA+f,OAAAc,GAAApW,GAIAmV,EAAAxc,UAAA6d,aAAA,SAAAC,GACAlhB,KAAAkgB,WACAgB,IAAAlhB,KAAAmgB,SACAC,EAAAe,GAAAnhB,KAAA,IAAA8E,MAAA,IACA9E,KAAAmgB,SAAA,IAEAe,GAAAlhB,KAAAmgB,UACAC,EAAAe,GAAAnhB,KAAA,IAAA8E,MAAA,IACA9E,KAAAmgB,SAAA,wEC3DA,QAAAiB,GAAAhgB,GACAA,EAAAA,MACAkE,EAAAtE,KAAAhB,KAAAoB,EAAAE,MAAAF,EAAAI,QACAxB,KAAAqhB,KAAA,GAAA7b,MAAA8b,SACAthB,KAAAsgB,eAAA,GAAA9a,MAAAF,UACAtF,KAAAuhB,YAAA,GAAA/b,MAAAC,UACAzF,KAAAkC,UAAAJ,SAAA9B,KAAAqhB,MACArhB,KAAAkC,UAAAJ,SAAA9B,KAAAsgB,gBACAtgB,KAAAkC,UAAAmf,KAAArhB,KAAAqhB,KACArhB,KAAAwhB,YAAAhd,KAAApD,EAAAogB,SAAApgB,EAAAogB,QACAxhB,KAAAyhB,YAAAjd,KAAApD,EAAAqgB,SAAArgB,EAAAqgB,QACAzhB,KAAA0hB,kBAAAld,KAAApD,EAAAsgB,eAAAtgB,EAAAsgB,cACA1hB,KAAA2hB,aAAAnd,KAAApD,EAAAugB,SAAAjZ,KAAAC,IAAAD,KAAAxI,IAAAkB,EAAAugB,UAAA,EAAA,GAAA,GAAA,GACA3hB,KAAA4hB,OAAAxgB,EAAAwgB,QAAA,EACA5hB,KAAA6hB,WAAAzgB,EAAAygB,YAAA,EACA7hB,KAAAuK,UAAAnJ,EAAAmJ,WAAA,EACAvK,KAAA8K,UAAA1J,EAAA0J,WAAA,EAEA9K,KAAA8hB,WAAA,EACA9hB,KAAA+hB,WAAA,EACA/hB,KAAAygB,eAEAzgB,KAAAgiB,YAAAC,YAAAC,MAAA,IA/CA,GACA5c,IADA3E,EAAA,YACAA,EAAA,gBACA6Y,EAAA7Y,EAAA,aACAwhB,EAAAxhB,EAAA,YACAqd,EAAArd,EAAA,2BACA0e,EAAA1e,EAAA,iCA8CAygB,GAAAhe,UAAAU,OAAAC,OAAAuB,EAAAlC,WACAge,EAAAhe,UAAAY,YAAAod,EACA3hB,EAAAD,QAAA4hB,EAGAA,EAAAhe,UAAAK,WAAA,WACA6B,EAAAlC,UAAAK,WAAA2e,MAAApiB,OACAA,KAAAwhB,SAAAxhB,KAAAyhB,UACAzhB,KAAAqiB,iBAIAjB,EAAAhe,UAAAsC,OAAA,WAEA,GADAJ,EAAAlC,UAAAsC,OAAA0c,MAAApiB,MACAA,KAAAsiB,YAAAtiB,KAAA2F,QAAA3F,KAAAuiB,aAAAviB,KAAA4F,QAAA,CACA,GAAA4c,GAAAxiB,KAAA6hB,UACA7hB,MAAAqhB,KAAA7F,QACAxb,KAAAqhB,KAAAoB,UAAA,GACAziB,KAAAqhB,KAAAqB,UAAA,SAAA,GACA,IAAA1iB,KAAA4hB,OAQA5hB,KAAAqhB,KAAAsB,UAAAH,GAAAA,EAAAxiB,KAAA2F,OAAA6c,EAAAxiB,KAAA4F,QAAA4c,GAGAxiB,KAAAqhB,KAAAuB,iBAAAJ,GAAAA,EAAAxiB,KAAA2F,OAAA6c,EAAAxiB,KAAAwB,OAAAghB,EAAAxiB,KAAA4hB,QAEA5hB,KAAAqhB,KAAAwB,UACA7iB,KAAAsiB,WAAAtiB,KAAA2F,OACA3F,KAAAuiB,YAAAviB,KAAA4F,QAIA5F,KAAA8iB,mBACA9iB,KAAA8iB,qBAIA1B,EAAAhe,UAAAtB,SAAA,SAAAihB,GACA,GAAAC,GAAAC,UAAAhiB,MACA,IAAA+hB,EAAA,EACA,IAAA,GAAApiB,GAAA,EAAAA,EAAAoiB,EAAApiB,IACAZ,KAAA8B,SAAAmhB,UAAAriB,QAIA0E,GAAAlC,UAAAtB,SAAAd,KAAAhB,KAAA+iB,GACA/iB,KAAAsgB,eAAAxe,SAAAihB,EAAA7gB,WACAlC,KAAAkjB,gBAAA,EAEA,OAAAH,IAIA3B,EAAAhe,UAAA+f,iBAAA,WACA,IAAA,GAAAviB,GAAA,EAAAA,EAAAZ,KAAAygB,YAAAxf,OAAAL,IACAZ,KAAAygB,YAAA7f,GAAA8f,oBAKAU,EAAAhe,UAAA8f,eAAA,SAAAE,GAUA,OARAA,GAAAnB,YAAAC,MAAAliB,KAAAgiB,YAAA,OACAhiB,KAAAsgB,eAAAzc,eAAA7D,KAAAuhB,aACAvhB,KAAAsgB,eAAAzc,eAAA7D,KAAAuhB,aACAvhB,KAAAuhB,YAAA/f,OAAAxB,KAAAuhB,YAAArY,EAAAlJ,KAAAsgB,eAAA9e,OACAxB,KAAAuhB,YAAAjgB,MAAAtB,KAAAuhB,YAAAtY,EAAAjJ,KAAAsgB,eAAAhf,MACAtB,KAAAgiB,YAAAC,YAAAC,OAGAliB,KAAAuhB,aAGAH,EAAAhe,UAAAif,cAAA,WACA,GAMA1I,GANAzX,EAAAlC,KAAAsgB,eACA+C,EAAA,GAAA7d,MAAAmE,MACA2Z,EAAA,GAAA9d,MAAAmE,MACA4Z,EAAA,GAAA/d,MAAAmE,MACA6Z,EAAA,GAAAhe,MAAAmE,MACA8Z,EAAA,GAAAje,MAAAmE,MAEA5J,EAAAC,IAmIA,IAjIAA,KAAAugB,iBAAA,SAAAmD,EAAAC,GACA,GAAA7S,GAAA9Q,KAAAkjB,gBAEAljB,MAAAwhB,SAAA,KAAAkC,IACAxhB,EAAAoQ,SAAAoR,KAAA5S,EAAAxP,MAAAtB,KAAA2F,QAAAge,GAEA3jB,KAAAyhB,SAAA,KAAAiC,IACAxhB,EAAAoQ,SAAAoR,KAAA5S,EAAAtP,OAAAxB,KAAA4F,SAAA+d,GAEAH,EAAAE,GAAAJ,EAAAI,GAAAxhB,EAAAoQ,SAAAoR,IAGA1jB,KAAA4jB,cAAA,SAAAla,GACA,GAEAma,GAFA/S,EAAA9Q,KAAAkjB,gBAGA,IAAAljB,KAAAwhB,QAAA,CACA,GAAAvY,GAAAP,KAAAC,IAAA,EAAAD,KAAAxI,IAAA4Q,EAAAxP,MAAAoI,EAAAT,GACAA,GAAA/G,EAAA+G,EAAAjJ,KAAA2F,QACAke,EAAA5a,EAAAjJ,KAAA2F,OACAzD,EAAA+G,GAAA4a,GAEA5a,EAAA/G,EAAA+G,EAAA,IACA4a,EAAA5a,EAAA/G,EAAA+G,EACA/G,EAAA+G,GAAA4a,GAIA,GAAA7jB,KAAAyhB,QAAA,CACA,GAAAvY,GAAAR,KAAAC,IAAA,EAAAD,KAAAxI,IAAA4Q,EAAAtP,OAAAkI,EAAAR,GAEAA,GAAAhH,EAAAgH,EAAAlJ,KAAA4F,SACAie,EAAA3a,EAAAlJ,KAAA4F,QACA1D,EAAAgH,GAAA2a,GAEA3a,EAAAhH,EAAAgH,EAAA,IACA2a,EAAA3a,EAAAhH,EAAAgH,EACAhH,EAAAgH,GAAA2a,GAIAN,EAAA9G,KAAAva,EAAAoQ,UACAgR,EAAA7G,KAAAva,EAAAoQ,UACAkR,EAAA/G,KAAAva,EAAAoQ,UACAtS,KAAAmjB,oBAIAnjB,KAAA8iB,kBAAA,SAAAgB,GACAA,IACAL,EAAAK,GAGA9jB,KAAA8hB,YACA9hB,KAAA8hB,WAAA,EACAyB,EAAA9G,KAAAva,EAAAoQ,UACAgR,EAAA7G,KAAAva,EAAAoQ,UACA6P,EAAAhH,GAAA,SAAAnb,KAAA+jB,qBAAA/jB,QAIAA,KAAA+jB,qBAAA,SAAAzE,GACA3F,GAAA,EACA3Z,KAAAwhB,SAAAxhB,KAAAgkB,gBAAA,IAAA1E,GACAtf,KAAAyhB,SAAAzhB,KAAAgkB,gBAAA,IAAA1E,GACA3F,IACAwI,EAAArF,eAAA,SAAA9c,KAAA+jB,sBACA/jB,KAAA8hB,WAAA,IAMA9hB,KAAAgkB,gBAAA,SAAAN,EAAApE,GACA,GAEApf,GAFA4Q,EAAA9Q,KAAAkjB,gBAsBA,IAlBAhjB,EADA,KAAAwjB,EACAhb,KAAAgC,MAAAhC,KAAAxI,IAAA,EAAAF,KAAA4F,QAAAkL,EAAAtP,SAEAkH,KAAAgC,MAAAhC,KAAAxI,IAAA,EAAAF,KAAA2F,OAAAmL,EAAAxP,QAEAtB,KAAA+hB,WAAA,IAAArZ,KAAAgC,MAAA+Y,EAAAC,MACAJ,EAAAI,IAAAD,EAAAC,GACAD,EAAAC,GAAAlK,EAAAC,KAAAgK,EAAAC,GAAA,GAAA,EAAA,IAAAhb,KAAAC,IAAA3I,KAAA2hB,SAAA,MAAArC,GAEAgE,EAAAI,GAAA,EACAJ,EAAAI,GAAA,EAGAJ,EAAAI,GAAAxjB,IACAojB,EAAAI,GAAAxjB,KAKAF,KAAA+hB,WAAA,IAAArZ,KAAAgC,MAAA+Y,EAAAC,MAAAxhB,EAAAwhB,GAAA,GAAAxhB,EAAAwhB,GAAAxjB,GAAA,CACA,GAAA+jB,GAAAT,EAAAE,GAAA,EAAA,EAAAxjB,CACAsjB,GAAAE,GAAAlK,EAAAC,KAAA+J,EAAAE,GAAAO,GAAA,GAAA,GAAAjkB,KAAA2hB,UAAArC,GACA3F,GAAA,OAEA3Z,KAAA+hB,WAAA,IAAArZ,KAAAgC,MAAA+Y,EAAAC,OAEA1jB,KAAA+hB,YACA0B,EAAAC,GAAAF,EAAAE,GAAAH,EAAAG,GACAH,EAAA9G,KAAA+G,IAEAF,EAAAI,GAAA,GACAD,EAAAC,GAAA,EACAF,EAAAE,GAAA,IAAA1jB,KAAA2hB,UAAA,EAAAjZ,KAAAwb,IAAAZ,EAAAI,IAAA,OAEAJ,EAAAI,GAAAxjB,GACAujB,EAAAC,GAAA,EACAF,EAAAE,GAAAxjB,EAAA,IAAAF,KAAA2hB,UAAA,EAAAjZ,KAAAwb,KAAAhkB,EAAAojB,EAAAI,KAAA,OAGAF,EAAAE,GAAAJ,EAAAI,GAEA/J,GAAA,EAGAzX,GAAAoQ,SAAAoR,GAAAhb,KAAAgC,MAAA8Y,EAAAE,IAEA3jB,EAAAojB,oBAMAnjB,KAAA0hB,cAAA,CACA,GAAAyC,GAAA,GAAAnG,GAAAhe,KACAmkB,GAAA5F,YAAA,SAAApe,GACAH,KAAA+hB,YACAsB,EAAA5G,KAAAva,EAAAoQ,UACAkR,EAAA/G,KAAAva,EAAAoQ,UACAtS,KAAA+hB,WAAA,EACA/hB,KAAA8iB,oBACA/iB,EAAA2C,KAAA,YAAAvC,KAIAgkB,EAAA3F,WAAA,SAAAre,EAAA4b,GACA/b,KAAAwhB,UACA8B,EAAAra,EAAAoa,EAAApa,EAAA8S,EAAA9S,GACAjJ,KAAAyhB,UACA6B,EAAApa,EAAAma,EAAAna,EAAA6S,EAAA7S,IAGAib,EAAA1F,UAAA,SAAAte,GACAH,KAAA+hB,YACA/hB,KAAA+hB,WAAA,EACAhiB,EAAA2C,KAAA,UAAAvC,KAMA,GAAAikB,GAAA,GAAA5e,MAAAmE,KACA,IAAA0V,GAAArf,MAAA,GACA0f,cAAA,SAAAvf,EAAAmf,GACA8E,EAAAhgB,IAAA,IAAAkb,EAAArW,EAAA,IAAAqW,EAAApW,GACAlJ,KAAA8iB,kBAAAsB,IAIArkB,EAAAojB,wKCpSA,QAAAkB,GAAAzb,EAAA0b,EAAAC,EAAAC,EAAAC,GACAlf,EAAAvE,KAAAhB,KAAA4I,EAAAtH,MAAAsH,EAAApH,OAEA,IAAAkjB,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzX,EAAA0X,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAArB,GAAA,EACAsB,MAAA,KAAApB,GAAAA,EACAqB,MAAA,KAAAtB,GAAAA,EACAnkB,EAAAwI,EAAA4F,YACAjP,EAAAqJ,EAAA2G,KAGAsW,KAAA7lB,KAAA8lB,QAAAC,SAAA,EAAAzB,GACAsB,IAAA5lB,KAAA8lB,QAAAE,UAAA,EAAA1B,GAEAtkB,KAAAyD,WAAA,WACA8B,EAAAnC,UAAAK,WAAA2e,MAAApiB,MAGA4lB,GAAAC,GACAnB,EAAA,GAAAlf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAAyc,EAAAA,GACAhB,EAAA,GAAAnf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA+B,MAAAqkB,EAAApmB,EAAA2J,EAAAyc,EAAAA,GACAf,EAAA,GAAApf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAA3J,EAAAiC,OAAAmkB,EAAAA,EAAAA,GACAd,EAAA,GAAArf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA+B,MAAAqkB,EAAApmB,EAAA2J,EAAA3J,EAAAiC,OAAAmkB,EAAAA,EAAAA,GACAb,EAAA,GAAAtf,MAAAC,UAAAlG,EAAA0J,EAAA0c,EAAApmB,EAAA2J,EAAA3J,EAAA+B,MAAA,EAAAqkB,EAAAA,GACAZ,EAAA,GAAAvf,MAAAC,UAAAlG,EAAA0J,EAAA0c,EAAApmB,EAAA2J,EAAA3J,EAAAiC,OAAAmkB,EAAApmB,EAAA+B,MAAA,EAAAqkB,EAAAA,GACAX,EAAA,GAAAxf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAAyc,EAAAA,EAAApmB,EAAAiC,OAAA,EAAAmkB,GACAV,EAAA,GAAAzf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA+B,MAAAqkB,EAAApmB,EAAA2J,EAAAyc,EAAAA,EAAApmB,EAAAiC,OAAA,EAAAmkB,GACAT,EAAA,GAAA1f,MAAAC,UAAAlG,EAAA0J,EAAA0c,EAAApmB,EAAA2J,EAAAyc,EAAApmB,EAAA+B,MAAA,EAAAqkB,EAAApmB,EAAAiC,OAAA,EAAAmkB,IAEAE,GACAb,EAAA,GAAAxf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAAyc,EAAApmB,EAAAiC,QACAyjB,EAAA,GAAAzf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA+B,MAAAqkB,EAAApmB,EAAA2J,EAAAyc,EAAApmB,EAAAiC,QACA0jB,EAAA,GAAA1f,MAAAC,UAAAlG,EAAA0J,EAAA0c,EAAApmB,EAAA2J,EAAA3J,EAAA+B,MAAA,EAAAqkB,EAAApmB,EAAAiC,UAGAsjB,EAAA,GAAAtf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAA3J,EAAA+B,MAAAqkB,GACAZ,EAAA,GAAAvf,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAA3J,EAAAiC,OAAAmkB,EAAApmB,EAAA+B,MAAAqkB,GACAT,EAAA,GAAA1f,MAAAC,UAAAlG,EAAA0J,EAAA1J,EAAA2J,EAAAyc,EAAApmB,EAAA+B,MAAA/B,EAAAiC,OAAA,EAAAmkB,IAQAD,EAAAjB,EAAA,GAAAjf,MAAAygB,OAAAC,aAAA,GAAA1gB,MAAAyL,QAAA7Q,EAAA8kB,IAAA,GAAA1f,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAA8kB,IACAllB,KAAAkC,UAAAikB,WAAAT,EAAA,GACAE,GAAAC,IACAV,EAAA,GAAA3f,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAAskB,IACAhX,EAAA,GAAAlI,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAAukB,IACAS,EAAA,GAAA5f,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAAwkB,IACAS,EAAA,GAAA7f,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAAykB,IACA7kB,KAAAkC,UAAAikB,WAAAhB,EAAA,GACAnlB,KAAAkC,UAAAikB,WAAAzY,EAAA,GACA1N,KAAAkC,UAAAikB,WAAAf,EAAA,GACAplB,KAAAkC,UAAAikB,WAAAd,EAAA,IAGAQ,IACAL,EAAAf,EAAA,GAAAjf,MAAAygB,OAAAC,aAAA,GAAA1gB,MAAAyL,QAAA7Q,EAAA4kB,IAAA,GAAAxf,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAA4kB,IACAS,EAAAhB,EAAA,GAAAjf,MAAAygB,OAAAC,aAAA,GAAA1gB,MAAAyL,QAAA7Q,EAAA6kB,IAAA,GAAAzf,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAA6kB,IACAjlB,KAAAkC,UAAAikB,WAAAX,EAAA,GACAxlB,KAAAkC,UAAAikB,WAAAV,EAAA,IAEAG,IACAN,EAAAb,EAAA,GAAAjf,MAAAygB,OAAAC,aAAA,GAAA1gB,MAAAyL,QAAA7Q,EAAA0kB,IAAA,GAAAtf,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAA0kB,IACAS,EAAAd,EAAA,GAAAjf,MAAAygB,OAAAC,aAAA,GAAA1gB,MAAAyL,QAAA7Q,EAAA2kB,IAAA,GAAAvf,MAAAuD,OAAA,GAAAvD,MAAAyL,QAAA7Q,EAAA2kB,IACA/kB,KAAAkC,UAAAikB,WAAAb,EAAA,GACAtlB,KAAAkC,UAAAikB,WAAAZ,EAAA,IAIAK,GAAAC,IAAAP,EAAArc,EAAAsc,EAAAtc,EAAAuc,EAAAtc,EAAAuc,EAAAvc,EAAAic,EAAA7jB,MAAAoM,EAAApM,MAAA8jB,EAAA9jB,MAAA+jB,EAAA/jB,MAAA6jB,EAAA3jB,OAAAkM,EAAAlM,OAAA4jB,EAAA5jB,OAAA6jB,EAAA7jB,OAAAmkB,GACAE,IAAAH,EAAAzc,EAAAuc,EAAAlkB,MAAAmkB,EAAAnkB,MAAAqkB,GACAC,IAAAF,EAAAxc,EAAAoc,EAAA9jB,OAAA+jB,EAAA/jB,OAAAmkB,IAQA3lB,KAAA0F,OAAA,WACA1F,KAAAomB,cACAR,GAAAC,GACAnY,EAAAzE,EAAAoc,EAAApc,EAAAwc,EAAAxc,EAAAjJ,KAAA2F,OAAAggB,EACAP,EAAAlc,EAAAmc,EAAAnc,EAAAqc,EAAArc,EAAAlJ,KAAA4F,QAAA+f,EACAD,EAAApkB,MAAAgkB,EAAAhkB,MAAAikB,EAAAjkB,MAAAtB,KAAA2F,OAAA,EAAAggB,EACAD,EAAAlkB,OAAAgkB,EAAAhkB,OAAAikB,EAAAjkB,OAAAxB,KAAA4F,QAAA,EAAA+f,GAEAE,GACAJ,EAAAxc,EAAAjJ,KAAA2F,OAAAggB,EACAH,EAAAhkB,OAAAikB,EAAAjkB,OAAAkkB,EAAAlkB,OAAAxB,KAAA4F,QACA8f,EAAApkB,MAAAtB,KAAA2F,OAAA,EAAAggB,IAGAJ,EAAArc,EAAAlJ,KAAA4F,QAAA+f,EACAL,EAAAhkB,MAAAikB,EAAAjkB,MAAAokB,EAAApkB,MAAAtB,KAAA2F,OACA+f,EAAAlkB,OAAAxB,KAAA4F,QAAA,EAAA+f,GAGA,OAAA3lB,KAAAmJ,OACAuc,EAAAvc,KAAAnJ,KAAAmJ,KACAyc,GAAAC,IAAAV,EAAAhc,KAAAuE,EAAAvE,KAAAic,EAAAjc,KAAAkc,EAAAlc,KAAAnJ,KAAAmJ,MACA0c,IAAAL,EAAArc,KAAAsc,EAAAtc,KAAAnJ,KAAAmJ,MACAyc,IAAAN,EAAAnc,KAAAoc,EAAApc,KAAAnJ,KAAAmJ,OAGA,OAAAnJ,KAAAqmB,YACAX,EAAAW,UAAArmB,KAAAqmB,UACAT,GAAAC,IAAAV,EAAAkB,UAAA3Y,EAAA2Y,UAAAjB,EAAAiB,UAAAhB,EAAAgB,UAAArmB,KAAAqmB,WACAR,IAAAL,EAAAa,UAAAZ,EAAAY,UAAArmB,KAAAqmB,WACAT,IAAAN,EAAAe,UAAAd,EAAAc,UAAArmB,KAAAqmB,cA7HA,GAAA9gB,GAAA5E,EAAA,WAkIA0jB,GAAAjhB,UAAAU,OAAAC,OAAAwB,EAAAnC,WACAihB,EAAAjhB,UAAAY,YAAAqgB,EACA5kB,EAAAD,QAAA6kB,wCCzGA,QAAAxE,GAAAze,GACAmE,EAAAvE,KAAAhB,MACAA,KAAAwgB,KAAA,EACAxgB,KAAAsmB,WAAA,EAGAtmB,KAAA8f,MAAA1e,EAAA0e,MACA9f,KAAA+f,OAAA3e,EAAA2e,OACA/f,KAAA8T,KAAA1S,EAAA0S,MAAA,KACA9T,KAAAumB,UAAAnlB,EAAAolB,UAAA,EACAxmB,KAAAymB,UAAArlB,EAAAslB,UAAA,IACA1mB,KAAA+Z,SAAA3Y,EAAA2Y,UAAA,EACA/Z,KAAAggB,SAAA5e,EAAA4e,WAAA,EACAhgB,KAAA2mB,eAAAvlB,EAAAwlB,eAAA,KACA5mB,KAAAqgB,iBAAAjf,EAAAylB,iBAAA,KACA7mB,KAAAkE,MAAA9C,EAAA8C,OAAA,GACAlE,KAAA+f,OAAApe,MAAA,GAIA3B,KAAA8B,SAAA9B,KAAA8f,OACA9f,KAAA8T,MAAA9T,KAAA8f,MAAAhe,SAAA9B,KAAA8T,MACA9T,KAAA8B,SAAA9B,KAAA+f,QACA/f,KAAA+f,OAAA7d,UAAAC,YAAA,EAEAnC,KAAAggB,UACAhgB,KAAAwB,OAAA,OACAxB,KAAAsB,MAAAtB,KAAA8f,MAAAxe,MACAtB,KAAA8f,MAAAte,OAAA,OACAxB,KAAA+f,OAAAle,gBAAA,SACA7B,KAAA8T,OAAA9T,KAAA8T,KAAAjS,gBAAA,YAGA7B,KAAAsB,MAAA,OACAtB,KAAAwB,OAAAxB,KAAA8f,MAAAte,OACAxB,KAAA8f,MAAAxe,MAAA,OACAtB,KAAA+f,OAAAne,cAAA,SACA5B,KAAA8T,OAAA9T,KAAA8T,KAAAlS,cAAA,WAhEA,GAAA2D,GAAA5E,EAAA,YACAqd,EAAArd,EAAA,2BAEAyf,GADAzf,EAAA,4BACAA,EAAA,YACAuW,EAAAvW,EAAA,eACA6Y,EAAA7Y,EAAA,YAgEAkf,GAAAzc,UAAAU,OAAAC,OAAAwB,EAAAnC,WACAyc,EAAAzc,UAAAY,YAAA6b,EACApgB,EAAAD,QAAAqgB,EAEAA,EAAAzc,UAAAsC,OAAA,SAAAohB,GACA,GAAAC,GAAA1iB,CAEArE,MAAAggB,UACA+G,EAAA/mB,KAAA+f,OAAAna,SAAA5F,KAAA+f,OAAA7d,UAAAV,OACA6C,GAAArE,KAAA4F,QAAAmhB,GAAA/mB,KAAAwgB,KAAA,GAAAuG,EACAD,GACA1G,EAAAe,GAAAnhB,KAAA+f,OAAA,IAAAiH,IAAA3iB,GAAA6S,EAAAS,OAAAX,SACAhX,KAAA8T,MAAAsM,EAAAe,GAAAnhB,KAAA8T,KAAA,IAAAtS,OAAA6C,GAAA6S,EAAAS,OAAAX,WAGAoJ,EAAAhc,IAAApE,KAAA+f,QAAAiH,IAAA3iB,IACArE,KAAA8T,MAAAsM,EAAAhc,IAAApE,KAAA8T,MAAAtS,OAAA6C,OAIA0iB,EAAA/mB,KAAA+f,OAAApa,QAAA3F,KAAA+f,OAAA7d,UAAAZ,MACA+C,GAAArE,KAAA2F,OAAAohB,GAAA/mB,KAAAwgB,KAAA,GAAAuG,EACAD,GACA1G,EAAAe,GAAAnhB,KAAA+f,OAAA,IAAAkH,KAAA5iB,GAAA6S,EAAAS,OAAAX,SACAhX,KAAA8T,MAAAsM,EAAAe,GAAAnhB,KAAA8T,KAAA,IAAAxS,MAAA+C,GAAA6S,EAAAS,OAAAX,WAGAoJ,EAAAhc,IAAApE,KAAA+f,QAAAkH,KAAA5iB,IACArE,KAAA8T,MAAAsM,EAAAhc,IAAApE,KAAA8T,MAAAxS,MAAA+C,OAKAwb,EAAAzc,UAAAK,WAAA,WACA8B,EAAAnC,UAAAK,WAAAzC,KAAAhB,KAIA,IAAAD,GAAAC,KACAknB,EAAA,EAKAC,EAAA,GAAAnJ,GAAAhe,KAAA+f,OACAoH,GAAAvkB,QAAA,SAAA4Z,EAAA3Z,GACA2Z,EAAA4K,mBAGAD,EAAA5I,YAAA,SAAA/B,GACA0K,EAAAnnB,EAAAygB,KACA6G,YAAAtnB,EAAAigB,SAAAjgB,EAAA6F,QAAA7F,EAAAggB,OAAAna,QAAA7F,EAAA4F,OAAA5F,EAAAggB,OAAApa,QAGAwhB,EAAA3I,WAAA,SAAAhC,EAAAT,GAEAhc,EAAAygB,KAAA6G,YAAA3e,KAAAC,IAAA,EAAAD,KAAAxI,IAAA,EAAAgnB,GAAAnnB,EAAAigB,SAAAjE,EAAA7S,EAAA6S,EAAA9S,GAAAoe,cAAA,EAEAC,IACAvnB,EAAA2F,UAGAyhB,EAAA1I,UAAA,WACA8I,IACAxnB,EAAA2F,SAIA,IAAA8hB,GAAA,GAAAhiB,MAAAmE,MACA8d,EAAA,GAAAzJ,GAAAhe,KAAA8f,MAEA2H,GAAA7kB,QAAA,SAAA4Z,EAAA3Z,GACAA,GACA6kB,EAAAlL,EAAAzZ,KAAAjD,QAAA,GACA0c,EAAA4K,mBAGAK,EAAAjJ,WAAA,SAAAhC,GACAkL,EAAAlL,EAAAzZ,KAAAjD,QAAA,IAGA2nB,EAAAhJ,UAAA,WACA8I,IAGA,IAAAG,GAAA,SAAAC,EAAAb,GACA/mB,EAAA+f,MAAA5d,UAAA0lB,QAAAD,EAAA,KAAAH,GAAA,EAEA,IAAA7G,GAAA5gB,EAAAigB,SAAAwH,EAAAte,EAAA,GAAAnJ,EAAAggB,OAAAna,QAAA4hB,EAAAve,EAAA,GAAAlJ,EAAAggB,OAAApa,OACAkiB,EAAA9nB,EAAAigB,SAAAjgB,EAAA6F,QAAA7F,EAAAggB,OAAAna,QAAA7F,EAAA4F,OAAA5F,EAAAggB,OAAApa,MACA5F,GAAAygB,KAAAqH,EAAAnf,KAAAC,IAAA,EAAAD,KAAAxI,IAAA,EAAAygB,EAAAkH,IAAA,EACA9nB,EAAA2F,OAAAohB,GACAQ,KAGAC,EAAA,WACAxnB,EAAA2C,KAAA,SAAA3C,EAAAmE,OACAnE,EAAA+nB,aAAA/nB,EAAAmE,QACAnE,EAAA+nB,YAAA/nB,EAAAmE,MACA,kBAAAnE,GAAA6mB,eACA7mB,EAAA6mB,cAAA7mB,EAAAmE,SAIAojB,EAAA,WACAvnB,EAAA2C,KAAA,YAAA3C,EAAAmE,OACAnE,EAAAgoB,eAAAhoB,EAAAmE,QACAnE,EAAAgoB,cAAAhoB,EAAAmE,MACA,kBAAAnE,GAAAsgB,kBACAtgB,EAAAsgB,iBAAAtgB,EAAAmE,UAMAJ,OAAAG,iBAAA4b,EAAAzc,WACAc,OACAC,IAAA,WACA,MAAAqV,GAAAK,MAAAL,EAAAC,KAAAzZ,KAAAumB,UAAAvmB,KAAAymB,UAAAzmB,KAAAwgB,MAAAxgB,KAAA+Z,WAEA3V,IAAA,SAAAC,GACArE,KAAAwgB,MAAA9X,KAAAC,IAAA3I,KAAAumB,UAAA7d,KAAAxI,IAAAF,KAAAymB,UAAApiB,IAAArE,KAAAumB,YAAAvmB,KAAAymB,UAAAzmB,KAAAumB,WACA,kBAAAvmB,MAAA4mB,eACA7mB,KAAA6mB,cAAA5mB,KAAAkE,OACA,kBAAAlE,MAAAqgB,kBACArgB,KAAAqgB,iBAAArgB,KAAAkE,OACAlE,KAAA0F,WAIAkhB,eACAziB,IAAA,WACA,MAAAnE,MAAA2mB,gBAEAviB,IAAA,SAAAC,GACArE,KAAA2mB,eAAAtiB,IAGAwiB,iBACA1iB,IAAA,WACA,MAAAnE,MAAAqgB,kBAEAjc,IAAA,SAAAC,GACArE,KAAAqgB,iBAAAhc,IAGAmiB,UACAriB,IAAA,WACA,MAAAnE,MAAAumB,WAEAniB,IAAA,SAAAC,GACArE,KAAAumB,UAAAliB,EACArE,KAAA0F,WAGAghB,UACAviB,IAAA,WACA,MAAAnE,MAAAymB,WAEAriB,IAAA,SAAAC,GACArE,KAAAymB,UAAApiB,EACArE,KAAA0F,WAGAsiB,UACA7jB,IAAA,WACA,MAAAnE,MAAAsmB,WAEAliB,IAAA,SAAAC,GACAA,IAAArE,KAAAsmB,YACAtmB,KAAAsmB,UAAAjiB,EACArE,KAAA+f,OAAA7d,UAAAC,YAAAkC,EACArE,KAAA+f,OAAA7d,UAAA0Y,aAAAvW,EACArE,KAAA8f,MAAA5d,UAAA0Y,aAAAvW,oJCtOA,QAAA4jB,GAAAC,EAAAC,EAAAC,GACA9iB,EAAAtE,KAAAhB,MACAA,KAAAkoB,SAAA,KAAAA,GAAAA,EACAloB,KAAAmoB,UAAAA,GAAA,EACAnoB,KAAAooB,UAAAA,EACApoB,KAAA+e,SAjBA,GAAAzZ,GAAA3E,EAAA,eACAyf,EAAAzf,EAAA,UAoBAsnB,GAAA7kB,UAAAU,OAAAC,OAAAuB,EAAAlC,WACA6kB,EAAA7kB,UAAAY,YAAAikB,EACAxoB,EAAAD,QAAAyoB,EAEAA,EAAA7kB,UAAAtB,SAAA,SAAAihB,EAAAsF,EAAAC,GACAhjB,EAAAlC,UAAAtB,SAAAd,KAAAhB,KAAA+iB,IACA,GAAA/iB,KAAA+e,MAAA5S,QAAA4W,IACA/iB,KAAA+e,MAAAxS,KAAAwW,GAGA,kBAAAsF,KACAtF,EAAAwF,eAAAF,GAEA,kBAAAC,KACAvF,EAAAyF,qBAAAF,GAEAvF,EAAA0F,eACA1F,EAAA0F,aAAA/f,KAAAggB,UAIA1oB,KAAAqR,QAGA4W,EAAA7kB,UAAAulB,YAAA,SAAA5F,GACA,GAAAE,UAAAhiB,OAAA,EACA,IAAA,GAAAL,GAAA,EAAAA,EAAAqiB,UAAAhiB,OAAAL,IACAZ,KAAA2oB,YAAA1F,UAAAriB,QAGA,CACA0E,EAAAlC,UAAAulB,YAAA3nB,KAAAhB,KAAA+iB,EACA,IAAAnF,GAAA5d,KAAA+e,MAAA5S,QAAA4W,IACA,GAAAnF,GACA5d,KAAA+e,MAAAtS,OAAAmR,EAAA,GAEA5d,KAAAqR,SAIA4W,EAAA7kB,UAAAiO,KAAA,SAAAuX,GAGA,GAFAC,aAAA7oB,KAAA8oB,cAEAF,EAEA,WADA5oB,MAAA+oB,OAIA,IAAAC,GAAAhpB,IACAA,MAAA8oB,aAAAnlB,WAAA,WAAAqlB,EAAAD,SAAA,IAGAd,EAAA7kB,UAAA2lB,MAAA,WACA,GAAAhpB,GAAAC,KACAkoB,EAAAloB,KAAAkoB,KACAhf,EAAA,EACA+f,GAAA,CAEAjpB,MAAA+e,MAAA1N,KAAA,SAAA3Q,EAAA0Q,GACA,GAAA8X,GAAAxoB,EAAA6nB,iBAAAnX,EAAAmX,iBAAAL,EAAA,GAAA,EACAxnB,EAAA6nB,iBAAAnX,EAAAmX,iBAAAL,GAAA,EAAA,EAAA,CAUA,OARA,KAAAgB,GAAAxoB,EAAA8nB,sBAAApX,EAAAoX,uBACAU,EAAAxoB,EAAA8nB,uBAAApX,EAAAoX,uBAAAN,EAAA,GAAA,EACAxnB,EAAA8nB,uBAAApX,EAAAoX,uBAAAN,GAAA,EAAA,EAAA,GAEA,IAAAgB,IACAA,EAAAxoB,EAAA+nB,aAAArX,EAAAqX,aAAA,EACA/nB,EAAA+nB,aAAArX,EAAAqX,cAAA,EAAA,GAEAS,GAGA,KAAA,GAAAtoB,GAAA,EAAAA,EAAAZ,KAAA+e,MAAA9d,OAAAL,IAAA,CACA,GAAA4c,GAAAxd,KAAA+e,MAAAne,EAEAqoB,IAAAA,EAEAjpB,KAAAmoB,UAAA,EACA/H,EAAA+I,OAAA3L,EAAAxd,KAAAmoB,WAAAlf,EAAAuU,EAAAvU,EAAAC,EAAAsU,EAAAtU,IAAAD,EAAA,EAAAC,EAAAA,GAAAlJ,KAAAooB,YAGA5K,EAAAvU,EAAA,EACAuU,EAAAtU,EAAAA,GAEAA,GAAAsU,EAAAhc,OACA,kBAAAgc,GAAA4L,UACA5L,EAAA4L,SAAAH,GAIAjpB,KAAAmoB,UAAA,GACAxkB,WAAA,WACA5D,EAAAspB,gBAAA,GAAA,IACA,IAAArpB,KAAAmoB,iECzGA,QAAApf,GAAA3I,GACAJ,KAAA8I,OAAA,GAAAtD,MAAAuD,OAAA3I,GACAmF,EAAAvE,KAAAhB,KAAAA,KAAA8I,OAAAxH,MAAAtB,KAAA8I,OAAAtH,QACAxB,KAAAkC,UAAAJ,SAAA9B,KAAA8I,QAbA,GAAAvD,GAAA5E,EAAA,WAgBAoI,GAAA3F,UAAAU,OAAAC,OAAAwB,EAAAnC,WACA2F,EAAA3F,UAAAY,YAAA+E,EACAtJ,EAAAD,QAAAuJ,EAGAA,EAAAugB,UAAA,SAAAC,GACA,MAAA,IAAAxgB,GAAA,GAAAvD,MAAAyL,QAAAqY,UAAAC,KAGAxgB,EAAAygB,UAAA,SAAAC,GACA,MAAA,IAAA1gB,GAAA,GAAAvD,MAAAyL,QAAAuY,UAAAC,KAQA1gB,EAAA3F,UAAAsC,OAAA,WACA,OAAA1F,KAAAmJ,OACAnJ,KAAA8I,OAAAK,KAAAnJ,KAAAmJ,MAEA,OAAAnJ,KAAAqmB,YACArmB,KAAA8I,OAAAud,UAAArmB,KAAAqmB,WAEArmB,KAAA8I,OAAAxH,MAAAtB,KAAA2F,OACA3F,KAAA8I,OAAAtH,OAAAxB,KAAA4F,+CC/BA,QAAA8jB,GAAApoB,EAAAE,GACAgE,KAAAF,UAAAtE,KAAAhB,MACAA,KAAA2pB,QAAAroB,EACAtB,KAAA4pB,SAAApoB,EACAxB,KAAA+lB,SAAA,EACA/lB,KAAAgmB,UAAA,EAEAhmB,KAAA6pB,cACA7pB,KAAAqb,MAAArb,KACAA,KAAA4a,aAAA,EACA5a,KAAA4D,QAAA,GAAA4B,MAAAC,UAAA,EAAA,EAAA,EAAA,GACAzF,KAAAomB,aAAA,EACApmB,KAAA8pB,OAAAxoB,EAAAE,GAvBAb,EAAA,WA0BA+oB,GAAAtmB,UAAAU,OAAAC,OAAAyB,KAAAF,UAAAlC,WACAsmB,EAAAtmB,UAAAY,YAAA0lB,EACAjqB,EAAAD,QAAAkqB,EAEAA,EAAAtmB,UAAAtB,SAAA,SAAAihB,GACA,GAAAgH,GAAA9G,UAAAhiB,MACA,IAAA8oB,EAAA,EACA,IAAA,GAAAnpB,GAAA,EAAAA,EAAAmpB,EAAAnpB,IACAZ,KAAA8B,SAAAmhB,UAAAriB,QAIA,QAAAmiB,EAAAvZ,QACAuZ,EAAAvZ,OAAAmf,YAAA5F,GAEAA,EAAAvZ,OAAAxJ,KACAA,KAAA6pB,WAAAtd,KAAAwW,GACAvd,KAAAF,UAAAlC,UAAAtB,SAAAd,KAAAhB,KAAA+iB,EAAA7gB,WACA6gB,EAAAsG,gBAAA,IAIAK,EAAAtmB,UAAAulB,YAAA,SAAA5F,GACA,GAAAgH,GAAA9G,UAAAhiB,MACA,IAAA8oB,EAAA,EACA,IAAA,GAAAnpB,GAAA,EAAAA,EAAAmpB,EAAAnpB,IACAZ,KAAA2oB,YAAA1F,UAAAriB,QAGA,CACA4E,KAAAF,UAAAlC,UAAAulB,YAAA3nB,KAAAhB,KAAA+iB,EAAA7gB,UACA,IAAA0b,GAAA5d,KAAA6pB,WAAA1d,QAAA4W,IACA,GAAAnF,IACA5d,KAAA6pB,WAAApd,OAAAmR,EAAA,GACAmF,EAAAvZ,OAAA,QAMAkgB,EAAAtmB,UAAA0mB,OAAA,SAAAxoB,EAAAE,GAIA,GAHA8L,MAAA9L,KAAAxB,KAAA4pB,SAAApoB,GACA8L,MAAAhM,KAAAtB,KAAA2pB,QAAAroB,GAEAtB,KAAA+lB,UAAA/lB,KAAAgmB,UAAA,CACA,GAAAgE,GAAA,EACAC,EAAA,CAEA3oB,IAAAA,EAAAtB,KAAA+lB,WACAiE,EAAAhqB,KAAA+lB,SAAAzkB,GAGAE,GAAAA,EAAAxB,KAAAgmB,YACAiE,EAAAjqB,KAAAgmB,UAAAxkB,GAGAwoB,EAAAC,GAAAD,EAAA,GACAhqB,KAAAuW,MAAAnS,IAAA,EAAA4lB,GACAhqB,KAAA4pB,UAAAI,EACAhqB,KAAA2pB,SAAAK,GAEAC,EAAA,GACAjqB,KAAAuW,MAAAnS,IAAA,EAAA6lB,GACAjqB,KAAA2pB,SAAAM,EACAjqB,KAAA4pB,UAAAK,GAEA,IAAAjqB,KAAAuW,MAAAtN,GACAjJ,KAAAuW,MAAAnS,IAAA,GAIApE,KAAA4D,QAAAtC,MAAAtB,KAAA2pB,QACA3pB,KAAA4D,QAAApC,OAAAxB,KAAA4pB,QAEA,KAAA,GAAAhpB,GAAA,EAAAA,EAAAZ,KAAA6pB,WAAA5oB,OAAAL,IACAZ,KAAA6pB,WAAAjpB,GAAAyoB,gBAAA,GAAA,IAGAvlB,OAAAG,iBAAAylB,EAAAtmB,WACAuC,QACAxB,IAAA,WACA,MAAAnE,MAAA2pB,SAEAvlB,IAAA,SAAAC,GACAiJ,MAAAjJ,KACArE,KAAA2pB,QAAAtlB,EACArE,KAAA8pB,YAIAlkB,SACAzB,IAAA,WACA,MAAAnE,MAAA4pB,UAEAxlB,IAAA,SAAAC,GACAiJ,MAAAjJ,KACArE,KAAA4pB,SAAAvlB,EACArE,KAAA8pB,oDChHA,QAAAI,GAAAjoB,EAAAkoB,GACAnqB,KAAAoqB,MAAA,GAAA5kB,MAAA0kB,KAAAjoB,EAAAkoB,GACA5kB,EAAAvE,KAAAhB,KAAAA,KAAAoqB,MAAA9oB,MAAAtB,KAAAoqB,MAAA5oB,QACAxB,KAAAkC,UAAAJ,SAAA9B,KAAAoqB,OAEApqB,KAAAqqB,WAAA,WAEA,OAAArqB,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,cACAvqB,KAAA8lB,QAAAxkB,MAAAtB,KAAAoqB,MAAA9oB,MACAtB,KAAA8lB,QAAA0E,SAAA,MAGAxqB,KAAAoqB,MAAA9oB,MAAAtB,KAAA2F,OAIA,OAAA3F,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,eACA1qB,KAAA8lB,QAAAtkB,OAAAxB,KAAAoqB,MAAA5oB,OACAxB,KAAA8lB,QAAA6E,UAAA,MAGA3qB,KAAAoqB,MAAA9oB,MAAAtB,KAAA2F,OAIAJ,EAAAnC,UAAAinB,WAAArpB,KAAAhB,OAGAA,KAAA0F,OAAA,WAEA,OAAA1F,KAAAmJ,OACAnJ,KAAAoqB,MAAAjhB,KAAAnJ,KAAAmJ,MAGA,OAAAnJ,KAAAqmB,YACArmB,KAAAoqB,MAAA/D,UAAArmB,KAAAqmB,YA9CA,GAAA9gB,GAAA5E,EAAA,WAkDAupB,GAAA9mB,UAAAU,OAAAC,OAAAwB,EAAAnC,WACA8mB,EAAA9mB,UAAAY,YAAAkmB,EACAzqB,EAAAD,QAAA0qB,EAGApmB,OAAAG,iBAAAimB,EAAA9mB,WACAc,OACAC,IAAA,WACA,MAAAnE,MAAAoqB,MAAAnoB,MAEAmC,IAAA,SAAAC,GACArE,KAAAoqB,MAAAnoB,KAAAoC,EACArE,KAAAqpB,gBAAA,KAGApnB,MACAkC,IAAA,WACA,MAAAnE,MAAAkE,OAEAE,IAAA,SAAAC,GACArE,KAAAkE,MAAAG,4CCzCA,QAAAumB,GAAAxpB,GAEA,mBAAAypB,kBACAA,eAAAxnB,SAAA4K,cAAA,SACA4c,eAAAC,aAAA,OAAA,QACAD,eAAAC,aAAA,KAAA,kBACAD,eAAAC,aAAA,QAAA,kEACAznB,SAAAyM,KAAAC,YAAA8a,gBAEA,IAAAvpB,OAAA,KAAAF,EAAAE,MAAAF,EAAAE,MAAAF,EAAAG,WAAAH,EAAAG,WAAAD,MAAA,IACAE,MAAA,KAAAJ,EAAAI,OAAAJ,EAAAI,OAAAJ,EAAAG,WAAAH,EAAAG,WAAAC,OAAA,GACAH,GAAAL,KAAAhB,KAAAsB,EAAAE,EAAAJ,EAAAK,UAAA,EAAAL,EAAAM,UAAA,GAEA1B,KAAA+qB,YAAA,EACA/qB,KAAAgrB,UAAA5pB,EAAA4pB,WAAA,EACAhrB,KAAA0E,OAAA1E,KAAAirB,WAAA7pB,EAAA8C,OAAA,GAEAlE,KAAAgrB,YAAAhrB,KAAA0E,OAAA1E,KAAA0E,OAAAwH,MAAA,EAAAlM,KAAAgrB,WAEA,IAAAjrB,GAAAC,KACA8G,KACAokB,MAAA1mB,KAAApD,EAAA8pB,WAAA9pB,EAAA8pB,UACA9Y,EAAAhR,EAAA0E,OAAA1E,EAAA0E,MAAAgO,KAAA1S,EAAA0E,MAAAgO,KAAA,UACAqX,EAAA/pB,EAAA+pB,eAAA,UACAC,EAAAhqB,EAAAgqB,yBAAA,UACAC,EAAA,GAAA7lB,MAAA0kB,KAAA,IAAA9oB,EAAA0E,OACAmE,EAAAohB,EAAA7pB,OACAgH,EAAApH,EAAAoH,YAAAyB,GAAAlK,EAAA6F,OACAylB,GAAAC,SAOA,IAAAC,GAAAxrB,EAAAwrB,UAAA,GAAA/lB,MAAA8b,QACAiK,GAAAljB,SAAA,EACAkjB,EAAAC,YAAA,EACAD,EAAAE,UAAA,CAGA,IAAAC,GAAA3rB,EAAA2rB,MAAA,GAAAlmB,MAAA8b,QACAoK,GAAArjB,SAAA,EACAqjB,EAAAC,OAAA,EACAD,EAAAjJ,UAAArhB,EAAAwqB,YAAA,EAAA,UAAA,GACAF,EAAAG,OAAA,EAAA,GACAH,EAAAI,OAAA,EAAA7hB,GAIA7I,EAAAG,aACAvB,KAAAuB,WAAAH,EAAAG,WACAvB,KAAAuB,WAAAD,MAAA,OACAtB,KAAAuB,WAAAC,OAAA,OACAxB,KAAA8B,SAAA9B,KAAAuB,YAIA,IAAAwqB,OAAAvnB,KAAApD,EAAA2qB,YAAA3qB,EAAA2qB,gBAAAvnB,KAAApD,EAAAgN,QAAAhN,EAAAgN,QAAA,EACA4d,MAAAxnB,KAAApD,EAAA4qB,aAAA5qB,EAAA4qB,iBAAAxnB,KAAApD,EAAAgN,QAAAhN,EAAAgN,QAAA,EACA6d,MAAAznB,KAAApD,EAAA6qB,cAAA7qB,EAAA6qB,kBAAAznB,KAAApD,EAAAgN,QAAAhN,EAAAgN,QAAA,EACA8d,MAAA1nB,KAAApD,EAAA8qB,WAAA9qB,EAAA8qB,eAAA1nB,KAAApD,EAAAgN,QAAAhN,EAAAgN,QAAA,EAGA+d,EAAAnsB,KAAAmsB,cAAA,GAAA3mB,MAAA4mB,GAAAhL,oBACAI,SAAA0J,EACAzJ,QAAAyJ,EACAxJ,cAAAwJ,EACArJ,WAAA,EACAF,SAAA,GACA7W,UAAA,GACAP,UAAA,IAEA4hB,GAAAE,UAAAH,EACAC,EAAAG,aAAAL,EACAE,EAAAI,WAAAR,EACAI,EAAAK,YAAAR,EACAhsB,KAAA8B,SAAAqqB,GAEAjB,IACAlrB,KAAA2a,SAAA3a,KAAA0a,UAAA,EACAyR,EAAA7N,iBAAA,IACA6N,EAAApP,cAAA,EACA/c,KAAAse,iBAAA,IACAte,KAAA+c,cAAA,EAKA,IAAAuD,GAAA6L,EAAA7L,cACAA,GAAAmM,eAAA,EAIAzsB,KAAA0F,OAAA,WACA1F,KAAA2F,QAAA3F,KAAAsiB,aACAtiB,KAAAsiB,WAAAtiB,KAAA2F,OACAulB,IACAwB,IACAhB,EAAArjB,SAAAtI,EAAA4sB,cAAAjB,EAAAC,QACAiB,GAAAC,OAMA7sB,KAAA+qB,aACA2B,IACA1sB,KAAA+qB,YAAA,GAKA,IAAA+B,GACAC,EACAC,EACAC,EACAC,EACAC,EAAA,GAAA3nB,MAAAmE,MACAyjB,EAAA,GAAA5nB,MAAAmE,MACA0jB,EAAA,GAAA7nB,MAAAmE,MACA2jB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAb,GAAA,EACAxsB,EAAA6hB,YAAAC,MACAwL,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EACAC,GAAA,EAOArB,EAAA,WACAiB,EAAA,EACAC,EAAA,EACAC,EAAA,CAEA,IAAAznB,GAAA,EACAnF,EAAAlB,EAAA2E,OAAAzD,OACAgI,EAAA,EACAC,EAAA,IAAAV,EAAAyB,GACArJ,EAAA,CAGA,IAAAkG,EAAA7F,OAAAA,EAAA,CACA,IAAAL,EAAAkG,EAAA7F,OAAA,EAAAL,GAAAK,EAAAL,IACA0f,EAAAqI,YAAA7hB,EAAAlG,IACAkG,EAAAlG,GAAA0qB,SAEAxkB,GAAA2F,OAAAxL,EAAA6F,EAAA7F,OAAAA,GAIA,GAAA+sB,IAAA,EACAhoB,GAAA,EACAG,EAAA,EACA8nB,GAAA,EACArjB,GAAA,CACA,KAAAhK,EAAA,EAAAA,EAAAb,EAAA2E,OAAAzD,OAAAL,IAAA,EACAotB,GAAAhoB,KACAioB,EAAArtB,EACAuF,IAGA,IAAAyF,GAAA7L,EAAA2E,OAAA9D,EACAotB,GAAA,MAAApiB,EACA5F,EAAA,OAAA4F,EAGA5F,IACA4F,EAAA,GAKA,IAAAsiB,GAAApnB,EAAAlG,EACAstB,GAMAA,EAAAjsB,KAAA2J,GALAsiB,EAAA,GAAA1oB,MAAA0kB,KAAAte,EAAAxK,EAAA0E,OACAwa,EAAAxe,SAAAosB,GACApnB,EAAAyF,KAAA2hB,IAMAA,EAAA3X,MAAAtN,EAAAjD,EAAA,EAAA,EACAkoB,EAAAC,QAAAvjB,EACAA,GAAA,IAEA5E,GAAAklB,GAAAjiB,EAAAilB,EAAA5sB,OAAAvB,EAAA4F,OAAAomB,EAAAC,KACA5lB,IACA6C,EAAA,EACAC,GAAAV,GAEA,GAAAylB,GAAAjoB,IASAkoB,EAAA9nB,UAAAA,EACA8nB,EAAAjlB,EAAAA,EACAilB,EAAAhlB,EAAAA,EACAglB,EAAA/nB,UAAA6nB,GAAAhoB,GAAA,EAAAG,EACA8C,GAAAilB,EAAA5sB,MAGA2H,EAAA0kB,IACAA,EAAA1kB,GACAC,EAAA0kB,IACAA,EAAA1kB,KAlBAtI,EAAAqtB,EAAA,EACAA,GAAA,EACArjB,GAAA,GAmBAijB,EAAAznB,EAGAka,EAAAxe,SAAA4pB,GAGApL,EAAAmM,gBACAnM,EAAAmM,eAAA,EACAnM,EAAAmM,eAAA,GAGAN,EAAAzmB,UAIA0oB,EAAA,SAAAC,EAAA3U,GACA,GAAA4U,GAAA,MAEAC,GAAA,EACAC,GAAA,EAEAC,EAAA,CACAZ,GAAA,IACAY,EAAA/lB,KAAAC,IAAA,EAAAD,KAAAxI,IAAA2tB,EAAAnlB,KAAA2R,MAAAgU,EAAAnlB,EAAAV,KAMA,KAAA,GAAA5H,GAAA,EAAAA,EAAAkG,EAAA7F,OAAAL,IAAA,CACA,GAAA0H,GAAAxB,EAAAlG,EACA,IAAA0H,EAAAlC,WAAAqoB,EAAA,CAEA,GAAAC,GAAAhmB,KAAAsU,IAAAqR,EAAAplB,GAAAX,EAAAW,EAAA,GAAAX,EAAAhH,OACAotB,GAAAJ,IACAA,EAAAI,EACApmB,EACAimB,EAAA3tB,EACA4tB,EAAAH,EAAAplB,EAAAX,EAAAW,EAAA,GAAAX,EAAAhH,QAKAoY,GACAqT,EAAAwB,EACAvB,EAAAwB,IAGAvB,EAAAsB,EACArB,EAAAsB,IAIAG,EAAA,WACA,QAAA/B,IACA7sB,EAAAmE,MAAAnE,EAAAmE,MAAAgI,MAAA,EAAAshB,GAAAztB,EAAAmE,MAAAgI,MAAAuhB,EAAA,GACA1tB,EAAA4sB,cAAAa,IACA,IAKAoB,EAAA,WAEA,IAAA,GAAAhuB,GAAA,EAAAA,EAAAkG,EAAA7F,OAAAL,IAEAkG,EAAAlG,GAAAkF,MAAAgO,KADAlT,GAAA4sB,GAAA5sB,GAAA6sB,EACAtC,EAEA/Y,GAIAyc,EAAA,GAAArpB,MAAAmE,MACAmlB,EAAA,SAAAplB,GACAmlB,EAAApS,KAAA/S,GACAwhB,GAAA2D,EAAA3lB,GAAAV,IACAqmB,EAAA3lB,GAAAV,GACA2jB,EAAAvI,cAAAiL,IAGAE,EAAA,WACAF,EAAAzqB,IAAA,EAAA,GACA+nB,EAAAvI,cAAAiL,IAIAG,EAAA,WACAtD,EAAArjB,SAAA,EACA4mB,cAAAnC,IAGAoC,EAAA,WACAnvB,EAAAovB,iBACAF,cAAAnC,GACApB,EAAA5mB,MAAA,EACA4mB,EAAArjB,SAAA,EACAykB,EAAAsC,YAAA,WACA1D,EAAA5mB,MAAA,IAAA4mB,EAAA5mB,MAAA,EAAA,GACA,MAIAuqB,EAAA,SAAAzjB,GAGA,GAFAghB,GACA+B,KACA5uB,EAAAirB,WAAAlkB,EAAA7F,OAAAlB,EAAAirB,UAEA,GAAAU,EAAA4D,OACAvvB,EAAAmE,OAAA0H,EACA7L,EAAA4sB,cAAA7lB,EAAA7F,YAEA,CACA,GAAA2c,GAAAlV,KAAAxI,IAAA4G,EAAA7F,OAAA,EAAAyqB,EAAAC,OACA5rB,GAAAmE,MAAAnE,EAAAmE,MAAAgI,MAAA,EAAA0R,GAAAhS,EAAA7L,EAAAmE,MAAAgI,MAAA0R,GACA7d,EAAA4sB,cAAA/O,EAAAhS,EAAA3K,UAMAmB,EAAA,SAAAjC,GAIA,GArNA,KAkNAA,EAAAkC,OAjNA,KAiNAlC,EAAAkC,QAAAyrB,GAAA,GAnNA,KAoNA3tB,EAAAkC,QAAA0rB,GAAA,GAEA,KAAA5tB,EAAAkC,MAGA,MAFAgtB,GAAA,UACAlvB,GAAA8C,gBAIA,IAAA6qB,EAAA,CAGA,GAAA,KAAA3tB,EAAAkC,MAGA,MAFAtC,GAAAwvB,aACApvB,GAAA8C,gBAGA,IAAA,KAAA9C,EAAAkC,MAKA,MAJAtC,GAAAmE,OAAAnE,EAAAkrB,aACAlrB,EAAAmE,MAAAnE,EAAAkrB,YACAlrB,EAAA4sB,cAAA5sB,EAAAkrB,WAAAhqB,OAAA,OACAd,GAAA8C,iBAKA,GAAA,IAAA9C,EAAAkC,MAeA,MAbAssB,OACAjD,EAAAC,OAAA,GAAA,IAAA7kB,EAAA7F,QAAAyqB,EAAA4D,UACA5D,EAAA4D,QACAvvB,EAAAmE,MAAAnE,EAAAmE,MAAAgI,MAAA,EAAApF,EAAA7F,OAAA,GACAlB,EAAA4sB,cAAAjB,EAAAC,UAGA5rB,EAAAmE,MAAAnE,EAAAmE,MAAAgI,MAAA,EAAAwf,EAAAC,OAAA,GAAA5rB,EAAAmE,MAAAgI,MAAAwf,EAAAC,QACA5rB,EAAA4sB,cAAAjB,EAAAC,OAAA,SAIAxrB,GAAA8C,gBAIA,IAAA,KAAA9C,EAAAkC,MASA,MAPAssB,MACAjD,EAAA4D,SACAvvB,EAAAmE,MAAAnE,EAAAmE,MAAAgI,MAAA,EAAAwf,EAAAC,QAAA5rB,EAAAmE,MAAAgI,MAAAwf,EAAAC,OAAA,GACA5rB,EAAA4sB,cAAAjB,EAAAC,aAGAxrB,GAAA8C,gBAGA,IAAA,KAAA9C,EAAAkC,OAAA,KAAAlC,EAAAkC,MAAA,CAEA,GADAirB,EAAA,KAAAntB,EAAAkC,MACA0rB,EACA,GAAAnB,EAAA,CACA,GAAA4C,GAAAhC,IAAA9B,EAAAC,MACA,IAAA6D,EACA,GAAAhC,IAAAC,GAAAH,IAAA5B,EAAA+D,SACA1vB,EAAA4sB,cAAAjB,EAAA+D,SAAA/D,EAAAC,OAAAD,EAAAC,OAAA,OAEA,CACA,GAAA+D,GAAApC,EAAA5B,EAAAC,OAAA,EAAAD,EAAAC,OAAA,CACA5rB,GAAA4vB,YAAAD,EAAAjC,GACA/B,EAAAC,OAAAjjB,KAAAxI,IAAA4G,EAAA7F,OAAA,EAAAyH,KAAAC,IAAA,EAAA+mB,QAGA,CACA,GAAAE,GAAAtC,EAAA5B,EAAAC,OAAA,EAAAD,EAAAC,OAAA,CACA5rB,GAAA4vB,YAAAnC,EAAAoC,GACAlE,EAAAC,OAAAjjB,KAAAxI,IAAA4G,EAAA7F,OAAA,EAAAyH,KAAAC,IAAA,EAAAinB,SAGA,CACA,GAAAC,GAAAnE,EAAA4D,OAAA5D,EAAAC,OAAA,EAAAD,EAAAC,OACAmE,EAAAxC,EAAAuC,EAAA,EAAAA,CACA9vB,GAAA4vB,YAAAG,EAAAA,GACApE,EAAAC,OAAAmE,EACApE,EAAA+D,UAAAnC,MAKAV,GACA7sB,EAAA4sB,cAAAW,EAAAE,EAAAC,EAAA,GAEA1tB,EAAA4sB,cAAAjB,EAAAC,QAAA2B,EAAA5B,EAAA4D,OAAA,GAAA,EAAA,GAGA,YADAnvB,GAAA8C,iBAIA,OAAAioB,GAAA,KAAA/qB,EAAAkC,OAAA,KAAAlC,EAAAkC,UAAA,IACAkrB,EAAA,KAAAptB,EAAAkC,MACA0rB,EACAnB,GACAS,EAAAnkB,EAAAR,KAAAC,IAAA,EAAAD,KAAAxI,IAAA0tB,EAAAP,EAAAnkB,GAAAqkB,GAAA/kB,EAAAA,KACA4lB,EAAAf,GAAA,GACA0C,QAAAC,IAAAjD,EAAAE,GACAvkB,KAAAsU,IAAA+P,EAAAE,IAAA,GACA8C,QAAAC,IAAAjD,EAAAE,GACAltB,EAAA4sB,cAAAK,EAAAD,EAAA,EAAAA,KAEArB,EAAAC,QAAAuB,EAAAD,EAAA,EAAAA,IAAAvB,EAAAuE,OAAA,EAAA,GACAlwB,EAAA4vB,YAAAjE,EAAAuE,MAAAlD,EAAAA,EAAA,EAAArB,EAAAC,WAKAoB,EAAArB,EAAAC,OACAqB,GAAA,EACAK,EAAA5Q,KAAAiP,GACA2B,EAAAnkB,EAAAR,KAAAC,IAAA,EAAAD,KAAAxI,IAAA0tB,EAAAP,EAAAnkB,GAAAqkB,GAAA/kB,EAAAA,KACA4lB,EAAAf,GAAA,GACA3B,EAAAC,QAAAuB,EAAAD,EAAA,EAAAA,IAAAM,EAAA,EAAA,GACAxtB,EAAA4vB,YAAApC,EAAAR,EAAA,EAAAA,EAAArB,EAAAC,QACAD,EAAAuE,OAAA1C,GAIAX,EACA7sB,EAAA4sB,cAAAY,EAAAC,EAAAC,EAAA,IAGAL,EAAA3Q,KAAAiP,GACA0B,EAAAlkB,GAAAqkB,GAAA/kB,EAAAA,EACA4kB,EAAAnkB,GAAA,EACAmlB,EAAAhB,GAAA,GACArtB,EAAA4sB,cAAAK,EAAAD,EAAA,EAAAA,QAGA5sB,GAAA8C,mBAKAitB,EAAA,SAAA/vB,GA7VA,IA8VAA,EAAAkC,OA7VA,IA6VAlC,EAAAkC,QAAAyrB,GAAA,GA/VA,KAgWA3tB,EAAAkC,QAAA0rB,GAAA,IAGAoC,GAAA,SAAAhwB,GACA,GAAAysB,EAAA,EACAzsB,EAAAiwB,eAAAvwB,OAAAuwB,eACAC,QAAA,OAAAtwB,EAAAmE,MAAAgI,MAAAshB,EAAAC,EAAA,IAEAttB,EAAA8C,kBAGAqtB,GAAA,SAAAnwB,GACAysB,IACAuD,GAAAhwB,GACAwuB,KAEAxuB,EAAA8C,kBAGAstB,GAAA,SAAApwB,GACA,GAAAiwB,GAAAjwB,EAAAiwB,eAAAvwB,OAAAuwB,aACAf,GAAAe,EAAAI,QAAA,SACArwB,EAAA8C,kBAGAwtB,GAAA,SAAAtwB,GACAkvB,EAAAlvB,EAAA4C,MACA5C,EAAA8C,kBAGAytB,GAAA,SAAAvwB,GACAJ,EAAAwD,QAGAiZ,GAAA,GAAAwB,GAAAhe,KAEAwc,IAAA5Z,QAAA,SAAAzC,EAAAwwB,GAEA,GAAAA,EAAA,CACA,GAAAC,GAAA3O,YAAAC,MAAA9hB,CAEA,IADAA,EAAA6hB,YAAAC,MACA0O,EAAA,IAEA,KADAlD,EACA,EACA1tB,KAAAuvB,aACA,CACAjP,EAAAsH,QAAAuF,MAAA3oB,GAAA4oB,GAAA,GACAgB,EAAAhB,GAAA,EACA,IAAAxhB,GAAA9E,EAAAimB,EACAnhB,MACA,GAAAA,EAAAzF,UACAnG,KAAA6wB,WAAAjlB,EAAAzF,WAEAnG,KAAA2vB,YAAA5C,EAAAA,QAKAW,GAAA,EACAP,EAAA1Q,KAAAtc,EAAA4C,KAAAjD,QACAwgB,EAAAsH,QAAAuF,MAAA3oB,GAAA4oB,GAAA,GACAtmB,EAAA7F,SACAmtB,EAAAhB,GAAA,GACArtB,EAAA4sB,cAAAK,EAAAD,EAAA,EAAAA,IAIA5sB,EAAA4C,KAAAC,cAAAC,kBAGAuZ,GAAAgC,WAAA,SAAAre,EAAA4b,GACAjV,EAAA7F,QAAAjB,KAAAmD,WAEAkqB,EAAApkB,EAAAkkB,EAAAlkB,EAAA8S,EAAA9S,EACAokB,EAAAnkB,EAAAikB,EAAAjkB,EAAA6S,EAAA7S,EACAoX,EAAAsH,QAAAyF,MAAA7oB,GAAA6oB,GAAA,GACAe,EAAAf,GAAA,GAEAN,EAAAE,GACAltB,EAAA4vB,YAAA3C,EAAAD,EAAA,EAAAA,EAAAG,EAAAD,EAAAA,EAAA,GACAvB,EAAAC,OAAAuB,EAAAD,EAAAA,EAAA,GAEAF,EAAAE,GACAltB,EAAA4vB,YAAA1C,EAAAD,EAAAD,EAAAA,EAAA,GACArB,EAAAC,OAAAsB,GAGAD,IAAAE,EACAntB,EAAA4sB,cAAAK,EAAAD,EAAA,EAAAA,IAGAhtB,EAAA4vB,YAAA5C,EAAAE,GACAvB,EAAAC,OAAAsB,GAIAvB,EAAA+D,SAAA1C,GAAAE,EACAvB,EAAAuE,MAAAlU,EAAA7S,EAAA,EAEA4lB,EAAAzB,KAOArtB,KAAA8C,MAAA,WACA,IAAA9C,KAAAmD,SAAA,CACA9B,EAAA+B,UAAAN,MAAA9B,KAAAhB,KAEA,IAAAe,GAAAf,KAAAkC,UAAA4uB,eAAAC,GAAA,KACA3wB,EAAAJ,KAAAkC,UAAA4uB,eAAAE,GAAA,KACA/hB,EAAAjP,KAAAkC,UAAAV,OAAA,KACAwN,EAAAhP,KAAAkC,UAAAZ,MAAA,IAEAupB,gBAAAC,aAAA,QAAA,wBAAA/pB,EAAA,SAAAX,EAAA,YAAA6O,EAAA,WAAAD,EAAA,KACA6b,eAAA3mB,MAAA,GACA2mB,eAAA/nB,QACA+nB,eAAAC,aAAA,QAAA,kEAEAxK,EAAAmM,eAAA,EACA5B,eAAAvnB,iBAAA,OAAAotB,IAAA,GACArtB,SAAAC,iBAAA,UAAAlB,GAAA,GACAiB,SAAAC,iBAAA,QAAA4sB,GAAA,GACA7sB,SAAAC,iBAAA,QAAAitB,IAAA,GACAltB,SAAAC,iBAAA,OAAA6sB,IAAA,GACA9sB,SAAAC,iBAAA,MAAAgtB,IAAA,GACAzF,eAAAvnB,iBAAA,YAAAmtB,IAAA,GAEA9sB,WAAA,WACA+nB,EAAArjB,SAAAtI,EAAAwrB,UAAAljB,SAAA6iB,GACAnrB,EAAA4sB,cAAA7lB,EAAA7F,SACA,KAMAjB,KAAAuD,KAAA,WACAvD,KAAAmD,WACA9B,EAAA+B,UAAAG,KAAAvC,KAAAhB,MACA8tB,GAAA,EACAC,GAAA,EACAiB,IACAhvB,KAAAmvB,iBACAroB,EAAA7F,OAAA,IAAAqf,EAAAmM,eAAA,GACA5B,eAAArnB,oBAAA,OAAAktB,IACArtB,SAAAG,oBAAA,UAAApB,GACAiB,SAAAG,oBAAA,QAAA0sB,GACA7sB,SAAAG,oBAAA,QAAA+sB,IACAltB,SAAAG,oBAAA,OAAA2sB,IACA9sB,SAAAG,oBAAA,MAAA8sB,IACAzF,eAAArnB,oBAAA,YAAAitB,IACA5F,eAAAtnB,QAIA2nB,GACA6D,KAGA/uB,KAAA2sB,cAAA,SAAA/O,GAIA,GAHA8N,EAAA4D,OAAA1R,GAAA9W,EAAA7F,OACAyqB,EAAAC,OAAAjjB,KAAAC,IAAA,EAAAD,KAAAxI,IAAA4G,EAAA7F,OAAA,EAAA2c,IAEA9W,EAAA7F,QAAA2c,EAAA,EAAA,CAEA,GAAAhd,GAAA8H,KAAAC,IAAA,EAAAD,KAAAxI,IAAA0d,EAAA9W,EAAA7F,OAAA,IACA2K,EAAA9E,EAAAlG;+CAEAgL,IAAAA,EAAAuiB,SACAzC,EAAAziB,EAAA2C,EAAA3C,EACAyiB,EAAAxiB,EAAA0C,EAAA1C,IAGAtI,EAAA8H,KAAAC,IAAA,EAAAD,KAAAxI,IAAA0d,EAAA,EAAA9W,EAAA7F,OAAA,IACA2K,EAAA9E,EAAAlG,GACA8qB,EAAAziB,EAAAnC,EAAAlG,GAAAqI,EAAAnC,EAAAlG,GAAAU,MACAoqB,EAAAxiB,EAAApC,EAAAlG,GAAAwF,UAAAoC,EAAA,IAAAA,EAAAyB,QAIAyhB,GAAAziB,EAAA,EACAyiB,EAAAxiB,EAAA,IAAAV,EAAAyB,EAGA6kB,GAAApD,GACAwD,KAIAlvB,KAAAuvB,OAAA,WACAvvB,KAAA2vB,YAAA,EAAA7oB,EAAA7F,OAAA,IAGAjB,KAAA6wB,WAAA,SAAA1qB,GAGA,IAAA,GAFA8qB,GAAAnqB,EAAA7F,OACA2uB,EAAA,EACAhvB,EAAA,EAAAA,EAAAkG,EAAA7F,OAAAL,IACAkG,EAAAlG,GAAAuF,YAAAA,IACAvF,EAAAqwB,IACAA,EAAArwB,GACAA,EAAAgvB,IACAA,EAAAhvB,GAGAZ,MAAA2vB,YAAAsB,EAAArB,GAGA,IAAAsB,IAAA,SAAAjoB,EAAAC,EAAA8F,EAAAC,GACAlP,EAAAwrB,UAAA7I,UAAA,KAAA0I,EAAAlf,MAAA,GAAA,GACAnM,EAAAwrB,UAAAM,OAAA5iB,EAAAC,GACAnJ,EAAAwrB,UAAAO,OAAA7iB,EAAA+F,EAAA9F,GACAnJ,EAAAwrB,UAAAO,OAAA7iB,EAAA+F,EAAA9F,EAAA+F,GACAlP,EAAAwrB,UAAAO,OAAA7iB,EAAAC,EAAA+F,GACAlP,EAAAwrB,UAAA1I,WAGAgK,GAAA,WACA,GAAAsE,GAAArqB,EAAA0mB,EACA,QAAAhpB,KAAA2sB,EAAA,CACA,GAAAC,GAAAD,EAAAloB,EACAooB,EAAAF,EAAAjoB,EACA8F,EAAA,EACAC,EAAAhF,EACAqnB,EAAAH,EAAA/qB,SAEArG,GAAAwrB,UAAA/P,OACA,KAAA,GAAA5a,GAAA4sB,EAAA5sB,GAAA6sB,EAAA7sB,IAAA,CACA,GAAAgL,GAAA9E,EAAAlG,EACAgL,GAAAxF,WAAAkrB,IACAJ,GAAAE,EAAAC,EAAAriB,EAAAC,GACAmiB,EAAAxlB,EAAA3C,EACAooB,EAAAzlB,EAAA1C,EACAooB,EAAA1lB,EAAAxF,UACA4I,EAAA,GAEAA,GAAApD,EAAAtK,MAEA4vB,GAAAE,EAAAC,EAAAriB,EAAAC,GACAqR,EAAA6F,WAAApmB,EAAAwrB,UAAA,IAIAvrB,MAAA2vB,YAAA,SAAAsB,EAAArB,GACA,GAAAqB,GAAA,GAAArB,GAAA,EAAA,CACA,GAAAlW,GAAAhR,KAAAxI,IAAA+wB,EAAArB,EAAA9oB,EAAA7F,OAAA,GACAswB,EAAA7oB,KAAAxI,IAAAwI,KAAAC,IAAAsoB,EAAArB,GAAA9oB,EAAA7F,OAAA,EACAyY,IAAA8T,GAAA+D,GAAA9D,IACAb,GAAA,EACA5sB,KAAAurB,UAAAljB,SAAA,EACAmlB,EAAA9T,EACA+T,EAAA8D,EACAvC,IACAnC,KACA+B,KAEA5uB,KAAA8C,YAGA/C,GAAAovB,kBAIAnvB,KAAAmvB,eAAA,WACAvC,IAEAA,GAAA,EACA5sB,KAAAurB,UAAAljB,SAAA,EACAmlB,GAAA,EACAC,GAAA,EACAmB,MAjxBA,GAAAvtB,GAAAV,EAAA,eAEAqd,GADArd,EAAA,eACAA,EAAA,2BAoxBAiqB,GAAAxnB,UAAAU,OAAAC,OAAA1C,EAAA+B,WACAwnB,EAAAxnB,UAAAY,YAAA4mB,EACAnrB,EAAAD,QAAAorB,EAEA9mB,OAAAG,iBAAA2mB,EAAAxnB,WACAc,OACAC,IAAA,WACA,MAAAnE,MAAA0E,QAEAN,IAAA,SAAAC,GACArE,KAAAgrB,YACA3mB,EAAAA,EAAA6H,MAAA,EAAAlM,KAAAgrB,YAEAhrB,KAAA0E,QAAAL,IACArE,KAAAirB,WAAAjrB,KAAA0E,OACA1E,KAAA0E,OAAAL,EACArE,KAAA+qB,YAAA,EACA/qB,KAAA0F,SACA1F,KAAA0C,KAAA,aAKAT,MACAkC,IAAA,WACA,MAAAnE,MAAAkE,OAEAE,IAAA,SAAAC,GACArE,KAAAkE,MAAAG,4FChzBA,QAAA8d,GAAAqP,GACAhsB,KAAAisB,MAAAC,aAAA1wB,KAAAhB,MACAA,KAAAsmB,WAAA,EACAtmB,KAAA2xB,KAAA,EAEA3xB,KAAA4xB,UAAA,EACA5xB,KAAA6xB,KAAA5P,YAAAC,MACAliB,KAAA8xB,GAAA,EACAN,IACAxxB,KAAAgoB,UAAA,GAEA7F,EAAA4P,OAAA/xB,KAbA,GAAAogB,GAAAzf,EAAA,UAgBAwhB,GAAA/e,UAAAU,OAAAC,OAAAyB,KAAAisB,MAAAC,aAAAtuB,WACA+e,EAAA/e,UAAAY,YAAAme,EAEA1iB,EAAAD,QAAA2iB,EAIAre,OAAAG,iBAAAke,EAAA/e,WACA4kB,UACA7jB,IAAA,WACA,MAAAnE,MAAAsmB,WAEAliB,IAAA,SAAAC,GACArE,KAAAsmB,WAIAtmB,KAAAsmB,WAAA,EACAnE,EAAA4P,OAAA/xB,KACAA,KAAA0F,OAAAuc,YAAAC,OAAA,IALAliB,KAAAsmB,WAAA,MAkBAnE,EAAA/e,UAAAsC,OAAA,SAAAssB,GACA7P,EAAA4P,OAAAJ,KAAAK,EACA7P,EAAA4P,OAAAD,GAAA3P,EAAA4P,OAAAJ,KAAAxP,EAAA4P,OAAAF,KACA1P,EAAA4P,OAAAF,KAAA1P,EAAA4P,OAAAJ,KACAxP,EAAA4P,OAAAH,UAAA,KAAAzP,EAAA4P,OAAAD,GACA3P,EAAA4P,OAAArvB,KAAA,SAAAyf,EAAA4P,OAAAH,WACAxR,EAAA6R,QAAA9P,EAAA4P,OAAAH,WACAzP,EAAA4P,OAAAzL,WACA4L,sBAAA/P,EAAA4P,OAAArsB,SAMAyc,EAAAhH,GAAA,SAAAqB,EAAAhG,EAAAlI,GACA6T,EAAA/e,UAAA+X,GAAAiH,MAAApiB,KAAA+xB,OAAA9O,YAGAd,EAAAgQ,KAAA,SAAA3V,EAAAhG,EAAAlI,GACA6T,EAAA/e,UAAA+uB,KAAA/P,MAAApiB,KAAA+xB,OAAA9O,YAGAd,EAAArF,eAAA,SAAAN,EAAAhG,GACA2L,EAAA/e,UAAA0Z,eAAAsF,MAAApiB,KAAA+xB,OAAA9O,YAIAd,EAAA4P,OAAA,GAAA5P,IAAA,wCC/DA,QAAA+D,GAAA9lB,EAAAkB,EAAAE,GACAxB,KAAA8I,OAAA,GAAAtD,MAAAygB,OAAAC,aAAA9lB,GACAmF,EAAAvE,KAAAhB,KAAAsB,GAAAtB,KAAA8I,OAAAxH,MAAAE,GAAAxB,KAAA8I,OAAAtH,QACAxB,KAAAkC,UAAAJ,SAAA9B,KAAA8I,QAfA,GAAAvD,GAAA5E,EAAA,WAkBAulB,GAAA9iB,UAAAU,OAAAC,OAAAwB,EAAAnC,WACA8iB,EAAA9iB,UAAAY,YAAAkiB,EACAzmB,EAAAD,QAAA0mB,EAOAA,EAAA9iB,UAAAsC,OAAA,WACA,OAAA1F,KAAAmJ,OACAnJ,KAAA8I,OAAAK,KAAAnJ,KAAAmJ,MAEA,OAAAnJ,KAAAqmB,YACArmB,KAAA8I,OAAAud,UAAArmB,KAAAqmB,WAEArmB,KAAA8I,OAAAxH,MAAAtB,KAAA2F,OACA3F,KAAA8I,OAAAtH,OAAAxB,KAAA4F,SAGA9B,OAAAG,iBAAAiiB,EAAA9iB,WACAgvB,cACAjuB,IAAA,WACA,MAAAnE,MAAA8I,OAAAspB,cAEAhuB,IAAA,SAAAC,GACArE,KAAA8I,OAAAspB,aAAA/tB,IAGAguB,WACAluB,IAAA,WACA,MAAAnE,MAAA8I,OAAAupB,WAEAjuB,IAAA,SAAAC,GACArE,KAAA8I,OAAAupB,UAAAhuB,4CC+FA,QAAAiuB,GAAA3mB,EAAAwV,EAAA9R,EAAAqB,GAEA,MAAApD,OAAA3B,IAAA2B,MAAA6T,GAIA7T,MAAA3B,IAAA2B,MAAA6T,KAAA,IAAAxV,EAAAQ,QAAA,OAAA,IAAAgV,EAAAhV,QAAA,KACAhB,WAAAQ,EAAAiC,QAAA,IAAA,KAGAN,MAAA3B,KAAA2B,MAAA6T,KAAA,IAAAxV,EAAAQ,QAAA,MACA,IAAAomB,EAAApmB,QAAAuE,GACArB,EAAA7F,OAAA7D,QAAA,IAAAwF,WAAAQ,EAAAiC,QAAA,IAAA,OACA,IAAA4kB,EAAArmB,QAAAuE,GACArB,EAAA7F,OAAA5D,SAAA,IAAAuF,WAAAQ,EAAAiC,QAAA,IAAA,MAEA,GAIAN,MAAA3B,IAAA2B,MAAA6T,KAAA,IAAAA,EAAAhV,QAAA,MACA,IAAAomB,EAAApmB,QAAAuE,GACA/E,EAAA0D,EAAA7F,OAAA7D,OAAA,KACA,IAAA6sB,EAAArmB,QAAAuE,GACA/E,EAAA0D,EAAA7F,OAAA5D,QAAA,IAEA,EAEA,EAzBA+F,EA4BA,QAAA8mB,GAAAtR,GACA,GAAA7T,MAAA6T,KAAA,IAAAA,EAAAhV,QAAA,KACA,MAAA,IAGA,QAAAumB,GAAAvR,GACA,MAAA7T,OAAA6T,GAEA7T,MAAA6T,KAAA,IAAAA,EAAAhV,QAAA,KACAhB,WAAAgW,EAAAvT,QAAA,IAAA,SADA,GADAuT,EAMA,QAAAwR,GAAAtjB,GACAA,EAAAujB,iBACAvjB,EAAAujB,eAAAC,EACAA,IAEA,IAAAlV,GAAAmV,EAAAzjB,EAAAujB,eAIA,OAHAjV,KACAA,EAAAmV,EAAAzjB,EAAAujB,gBAAA,GAAAG,GAAA1jB,IAEAsO,EAGA,QAAAqV,KACA,IAAA,GAAApyB,GAAA,EAAAA,EAAAqyB,EAAAhyB,OAAAL,IACA,GAAAqyB,EAAAryB,GAAAsyB,OACA,MAAAD,GAAAryB,EAGA,IAAAuyB,GAAA,GAAAC,EAEA,OADAH,GAAA1mB,KAAA4mB,GACAA,EAGA,QAAAE,KACA,IAAA,GAAAzyB,GAAA,EAAAA,EAAA0yB,EAAAryB,OAAAL,IACA,GAAA0yB,EAAA1yB,GAAAsyB,OACA,MAAAI,GAAA1yB,EAGA,IAAAse,GAAA,GAAAqU,EAEA,OADAD,GAAA/mB,KAAA2S,GACAA,EA9NA,GAAA1F,GAAA7Y,EAAA,aAEAsyB,GADAtyB,EAAA,mBAEA2yB,KACAR,KACAU,KACAX,EAAA,EAEAE,EAAA,SAAApV,GACA3d,KAAA2d,OAAAA,EACA3d,KAAAyzB,UACAzzB,KAAA0zB,QAAA,GAGAH,EAAA,WACAvzB,KAAAkzB,QAAA,EACAlzB,KAAAqP,IAAA,KACArP,KAAAwJ,OAAA,KACAxJ,KAAA0Q,IAAA,GACA1Q,KAAAgyB,KAAA,EACAhyB,KAAA2zB,SAAA,KACA3zB,KAAA4zB,YAAA,EAGAL,GAAAnwB,UAAAywB,OAAA,WACA7zB,KAAAkzB,QAAA,QACAlzB,MAAAwJ,OAAAiqB,OAAAzzB,KAAA0Q,KACA5M,OAAAgwB,KAAA9zB,KAAAwJ,OAAAiqB,QAAAxyB,SACAjB,KAAAwJ,OAAAkqB,QAAA,QACAF,GAAAxzB,KAAAqP,IAAAujB,kBAIAW,EAAAnwB,UAAAgB,IAAA,SAAAiL,EAAAskB,EAAA3B,GACAhyB,KAAAqP,IAAAA,EAAAsO,OAEA3d,KAAAqP,IAAA0kB,mBAGA/zB,KAAAqP,IAAA0kB,qBAFA/zB,KAAAqP,IAAA0kB,mBAAA,EAIA/zB,KAAAgyB,KAAAA,EACAhyB,KAAAwJ,OAAA6F,EACArP,KAAA2zB,SAAAA,EACA3zB,KAAAkzB,QAAA,EACAlzB,KAAA0Q,IAAA,MAAA1Q,KAAAqP,IAAA0kB,mBACA/zB,KAAA4zB,YAAA,EACA5zB,KAAAwJ,OAAAkqB,SACA1zB,KAAAwJ,OAAAkqB,QAAA,EACAF,EAAAxzB,KAAAqP,IAAAujB,gBAAA5yB,KAAAwJ,SAIA+pB,EAAAnwB,UAAAsC,OAAA,SAAA4Z,GACAtf,KAAA4zB,aAAAtU,EACAtf,KAAA4zB,aAAA5zB,KAAAgyB,OACAhyB,KAAA6zB,SACA7zB,KAAA2zB,YAMA,IAAAP,GAAA,WACApzB,KAAAkzB,QAAA,EACAlzB,KAAAwJ,OAAA,KACAxJ,KAAAqP,IAAA,KACArP,KAAA0Q,IAAA,GACA1Q,KAAA2L,KAAA,EACA3L,KAAAmhB,GAAA,EACAnhB,KAAAgyB,KAAA,EACAhyB,KAAAg0B,KAAA,EACAh0B,KAAA4zB,YAAA,EACA5zB,KAAAI,EAAA,EACAJ,KAAAi0B,SAAA,EAGAb,GAAAhwB,UAAAywB,OAAA,WACA7zB,KAAAkzB,QAAA,QACAlzB,MAAAwJ,OAAAiqB,OAAAzzB,KAAA0Q,KACA5M,OAAAgwB,KAAA9zB,KAAAwJ,OAAAiqB,QAAAxyB,SACAjB,KAAAwJ,OAAAkqB,QAAA,QACAF,GAAAxzB,KAAAqP,IAAAujB,kBAIAQ,EAAAhwB,UAAAgB,IAAA,SAAAiL,EAAAqB,EAAA/E,EAAAwV,EAAA6Q,EAAAgC,GACAh0B,KAAAi0B,QAAA3mB,MAAA3B,IAAA,KAAAA,EAAA,IAAA2B,MAAA6T,IAAA,KAAAA,EAAA,GACAnhB,KAAAwJ,OAAA6F,EACArP,KAAAqP,IAAAA,EAAAsO,OACA3d,KAAA0Q,IAAAA,EACA1Q,KAAAk0B,OAAAzB,EAAAtR,GAEAnhB,KAAAi0B,SACAj0B,KAAAmhB,GAAA3H,EAAAc,SAAA6G,GACAnhB,KAAA2L,KAAA6N,EAAAc,SAAA3O,GACA3L,KAAAm0B,cAAA7zB,EAAAN,KAAA2L,KAAArL,EAAAV,EAAAI,KAAA2L,KAAA/L,EAAAwR,EAAApR,KAAA2L,KAAAyF,KAGApR,KAAAmhB,GAAAuR,EAAAvR,GACAnhB,KAAA2L,KAAA2mB,EAAA3mB,EAAAwV,EAAAnhB,KAAAqP,IAAAqB,IAGA1Q,KAAAgyB,KAAAA,EACAhyB,KAAA4zB,YAAA,EACA5zB,KAAAg0B,KAAAA,EACAh0B,KAAAkzB,QAAA,EAEAlzB,KAAAwJ,OAAAkqB,SACA1zB,KAAAwJ,OAAAkqB,QAAA,EACAF,EAAAxzB,KAAAqP,IAAAujB,gBAAA5yB,KAAAwJ,SAKA4pB,EAAAhwB,UAAAsC,OAAA,SAAA4Z,GASA,GARAtf,KAAA4zB,aAAAtU,EACAtf,KAAAI,EAAAsI,KAAAxI,IAAAF,KAAA4zB,YAAA5zB,KAAAgyB,MAAAhyB,KAAAgyB,KACAhyB,KAAAg0B,OACAh0B,KAAAI,EAAAJ,KAAAg0B,KAAAtd,YAAA1W,KAAAI,IAKAJ,KAAAi0B,QACAj0B,KAAAm0B,aAAA7zB,EAAAoI,KAAAgC,MAAA8O,EAAAC,KAAAzZ,KAAA2L,KAAArL,EAAAN,KAAAmhB,GAAA7gB,EAAAN,KAAAI,IACAJ,KAAAm0B,aAAAv0B,EAAA8I,KAAAgC,MAAA8O,EAAAC,KAAAzZ,KAAA2L,KAAA/L,EAAAI,KAAAmhB,GAAAvhB,EAAAI,KAAAI,IACAJ,KAAAm0B,aAAA/iB,EAAA1I,KAAAgC,MAAA8O,EAAAC,KAAAzZ,KAAA2L,KAAAyF,EAAApR,KAAAmhB,GAAA/P,EAAApR,KAAAI,IACAJ,KAAAqP,IAAArP,KAAA0Q,KAAA8I,EAAAW,YAAAna,KAAAm0B,aAAA7zB,EAAAN,KAAAm0B,aAAAv0B,EAAAI,KAAAm0B,aAAA/iB,OAEA,CACA,GAAA/M,GAAAmV,EAAAC,KAAAzZ,KAAA2L,KAAA3L,KAAAmhB,GAAAnhB,KAAAI,EACAJ,MAAAqP,IAAArP,KAAA0Q,KAAA1Q,KAAAk0B,OAAA7vB,EAAArE,KAAAk0B,OAAA7vB,EAKArE,KAAA4zB,aAAA5zB,KAAAgyB,MACAhyB,KAAA6zB,SAKA,IAAAtB,IAAA,QAAA,WAAA,WAAA,aAAA,cAAA,OAAA,QAAA,KACAC,GAAA,SAAA,YAAA,YAAA,YAAA,eAAA,MAAA,SAAA,KAiFApS,GACAe,GAAA,SAAA9R,EAAA2iB,EAAAoC,EAAAJ,GACA,GAAArW,GAAAgV,EAAAtjB,EACA,KAAA,GAAAqB,KAAA0jB,GACA,GAAA,eAAA1jB,GAOA,GAAAshB,EAAA,CACA,GAAAplB,GAAAwnB,EAAA1jB,IAAArB,EAAAqB,EACA,QAAA,KAAArB,EAAAqB,GAAA,QAEA9D,GACA+Q,EAAA8V,OAAA/iB,IAAAiN,EAAA8V,OAAA/iB,GAAAmjB,UAGAlW,EAAA8V,OAAA/iB,KACAiN,EAAA8V,OAAA/iB,GAAAsiB,KACArV,EAAA8V,OAAA/iB,GAAAtM,IAAAuZ,EAAAjN,EAAArB,EAAAqB,GAAA0jB,EAAA1jB,GAAAshB,EAAAgC,SAjBA,CACA,GAAA9U,GAAAmU,GACAnU,GAAA9a,IAAAuZ,EAAAyW,EAAA1jB,GAAAshB,GACArU,EAAA8V,OAAAvU,EAAAxO,KAAAwO,EAkBA8S,GAAAhyB,KAAAoE,IAAAiL,EAAA+kB,IAEAzoB,KAAA,SAAA0D,EAAA2iB,EAAAoC,EAAAJ,GACA,GAAArW,GAAAgV,EAAAtjB,EACA,KAAA,GAAAqB,KAAA0jB,GACA,GAAA,eAAA1jB,GAOA,GAAAshB,EAAA,CACA,GAAAplB,GAAAwnB,EAAA1jB,IAAArB,EAAAqB,EACA,QAAA,KAAArB,EAAAqB,GAAA,QAEA9D,GACA+Q,EAAA8V,OAAA/iB,IAAAiN,EAAA8V,OAAA/iB,GAAAmjB,UAGAlW,EAAA8V,OAAA/iB,KACAiN,EAAA8V,OAAA/iB,GAAAsiB,KACArV,EAAA8V,OAAA/iB,GAAAtM,IAAAuZ,EAAAjN,EAAA0jB,EAAA1jB,GAAArB,EAAAqB,GAAAshB,EAAAgC,SAjBA,CACA,GAAA9U,GAAAmU,GACAnU,GAAA9a,IAAAuZ,EAAAyW,EAAA1jB,GAAAshB,GACArU,EAAA8V,OAAAvU,EAAAxO,KAAAwO,EAkBA8S,GAAAhyB,KAAAoE,IAAAiL,EAAA+kB,IAEAjL,OAAA,SAAA9Z,EAAA2iB,EAAAqC,EAAAC,EAAAN,GACA,GAAArW,GAAAgV,EAAAtjB,EACA,KAAA,GAAAqB,KAAA4jB,GACA,GAAA,eAAA5jB,GAMA,GAAAshB,EAAA,CACA,GAAAplB,GAAAynB,EAAA3jB,IAAA4jB,EAAA5jB,EACA,QAAA,KAAArB,EAAAqB,QAAA,KAAA2jB,EAAA3jB,GAAA,QAEA9D,IACA+Q,EAAA8V,OAAA/iB,IAAAiN,EAAA8V,OAAA/iB,GAAAmjB,SACAxkB,EAAAqB,GAAA4jB,EAAA5jB,KAGAiN,EAAA8V,OAAA/iB,KACAiN,EAAA8V,OAAA/iB,GAAAsiB,KAEArV,EAAA8V,OAAA/iB,GAAAtM,IAAAuZ,EAAAjN,EAAA2jB,EAAA3jB,GAAA4jB,EAAA5jB,GAAAshB,EAAAgC,SAlBA,CACA,GAAA9U,GAAAmU,GACAnU,GAAA9a,IAAAuZ,EAAA2W,EAAA5jB,GAAAshB,GACArU,EAAA8V,OAAAvU,EAAAxO,KAAAwO,EAoBA8S,GAAAhyB,KAAAoE,IAAAiL,EAAAilB,IAEAlwB,IAAA,SAAAiL,EAAA+kB,GACA,GAAAzW,GAAAgV,EAAAtjB,EACA,KAAA,GAAAqB,KAAA0jB,OACA,KAAA/kB,EAAAqB,KACAiN,EAAA8V,OAAA/iB,IAAAiN,EAAA8V,OAAA/iB,GAAAmjB,SACAxkB,EAAAqB,GAAA0jB,EAAA1jB,KAGAuhB,QAAA,SAAA3S,GACA,IAAA,GAAA1D,KAAA4X,GAAA,CACA,GAAA7V,GAAA6V,EAAA5X,EACA,KAAA,GAAAlL,KAAAiN,GAAA8V,OACA9V,EAAA8V,OAAA/iB,GAAAhL,OAAA4Z,KAOA7f,GAAAD,QAAA4gB,yDCrUA,GAAAgM,IACA1C,MAAA/oB,EAAA,WACA2E,UAAA3E,EAAA,eACAygB,mBAAAzgB,EAAA,wBACAsnB,aAAAtnB,EAAA,kBACAoI,OAAApI,EAAA,YACAulB,aAAAvlB,EAAA,kBACA0jB,YAAA1jB,EAAA,iBACAkf,OAAAlf,EAAA,YACAif,UAAAjf,EAAA,eACAupB,KAAAvpB,EAAA,UACA0F,YAAA1F,EAAA,6BACAiG,iBAAAjG,EAAA,kCACAiqB,UAAAjqB,EAAA,eACAQ,OAAAR,EAAA,YACA2D,SAAA3D,EAAA,cACA6Y,QAAA7Y,EAAA,aACAyf,MAAAzf,EAAA,WACAuW,KAAAvW,EAAA,eACAye,YAAAze,EAAA,6BACA4zB,KAAA5zB,EAAA,YACAwhB,OAAAxhB,EAAA,YAAAoxB,OAIAtyB,GAAAD,QAAA4sB,0ZCZA,QAAA7mB,GAAAjE,EAAAE,GACAgE,KAAAisB,MAAAC,aAAA1wB,KAAAhB,MACAA,KAAAkC,UAAA,GAAAsD,MAAAF,UACAtF,KAAA8lB,QAAA,GAAA0O,GACAx0B,KAAAkP,YACAlP,KAAAwJ,OAAA,KACAxJ,KAAAqb,MAAA,KACArb,KAAAomB,aAAA,EACApmB,KAAAy0B,iBAAA,EACAz0B,KAAA00B,iBAAA,EACA10B,KAAA20B,OAAA,EACA30B,KAAA40B,WAAA,EACA50B,KAAA60B,YAAA,EACA70B,KAAA80B,cAAA,EAGAxzB,GAAAgM,MAAAhM,KAAA,GAAAA,EAAA6K,QAAA,KACAnM,KAAA8lB,QAAA0E,SAAA,IAAArf,WAAA7J,EAAAsM,QAAA,IAAA,KAGA5N,KAAA8lB,QAAA0E,SAAA,KAGAhpB,GAAA8L,MAAA9L,KAAA,GAAAA,EAAA2K,QAAA,KACAnM,KAAA8lB,QAAA6E,UAAA,IAAAxf,WAAA3J,EAAAoM,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA6E,UAAA,KAGA3qB,KAAA8lB,QAAAxkB,MAAAA,GAAA,EACAtB,KAAA8lB,QAAAtkB,OAAAA,GAAA,EAGAxB,KAAA2F,OAAA,EACA3F,KAAA4F,QAAA,EACA5F,KAAA+0B,UAAA,KACA/0B,KAAAg1B,WAAA,KACAh1B,KAAAi1B,UAAA,KACAj1B,KAAAk1B,WAAA,KACAl1B,KAAAsqB,YAAA,KACAtqB,KAAAuqB,aAAA,KACAvqB,KAAAyqB,WAAA,KACAzqB,KAAA0qB,cAAA,KACA1qB,KAAAm1B,MAAA,KACAn1B,KAAAo1B,OAAA,KACAp1B,KAAAq1B,KAAA,KACAr1B,KAAAs1B,QAAA,KAEAt1B,KAAAu1B,cAAA,KA7DA,GAAAf,GAAA7zB,EAAA,gBAEAqd,GADArd,EAAA,QACAA,EAAA,4BACA2c,EAAA3c,EAAA,mCA6DA4E,GAAAnC,UAAAU,OAAAC,OAAAyB,KAAAisB,MAAAC,aAAAtuB,WACAmC,EAAAnC,UAAAY,YAAAuB,EACA9F,EAAAD,QAAA+F,EAOAA,EAAAnC,UAAAimB,eAAA,SAAAmM,EAAAC,GAEA,IAAAz1B,KAAAomB,YAAA,CACA,GAAA,OAAApmB,KAAAwJ,QAAA,OAAAxJ,KAAAwJ,OAAA6R,QAAArb,KAAAwJ,OAAA4c,YAIA,MAHApmB,MAAAyD,aAOAgyB,GAAAz1B,KAAAy1B,eACAz1B,KAAAqqB,aACArqB,KAAA0F,SACA8vB,GAAAx1B,KAAAw1B,kBAQAjwB,EAAAnC,UAAAsC,OAAA,aASAH,EAAAnC,UAAAqyB,aAAA,WACA,OAAAz1B,KAAAwJ,QACAxJ,KAAAwJ,OAAA6f,gBACArpB,KAAAwJ,OAAA6f,gBAAA,GAAA,IAWA9jB,EAAAnC,UAAAinB,WAAA,WAEA,GAAA,OAAArqB,KAAAwJ,OAAA,CACA,GAAAksB,GAAAC,CAKA31B,MAAA20B,OAAA,EACA30B,KAAA2F,OAAA3F,KAAA41B,aACA51B,KAAA4F,QAAA5F,KAAA61B,cACA71B,KAAA+0B,UAAA/0B,KAAA81B,gBACA91B,KAAAg1B,WAAAh1B,KAAA+1B,iBACA/1B,KAAAi1B,UAAAj1B,KAAAg2B,gBACAh2B,KAAAk1B,WAAAl1B,KAAAi2B,iBACAj2B,KAAAsqB,YAAAtqB,KAAAk2B,kBACAl2B,KAAAuqB,aAAAvqB,KAAAm2B,mBACAn2B,KAAAyqB,WAAAzqB,KAAAo2B,iBACAp2B,KAAA0qB,cAAA1qB,KAAAq2B,oBACAr2B,KAAAm1B,MAAAn1B,KAAAs2B,YACAt2B,KAAAo1B,OAAAp1B,KAAAu2B,aACAv2B,KAAAq1B,KAAAr1B,KAAAw2B,WACAx2B,KAAAs1B,QAAAt1B,KAAAy2B,cACAz2B,KAAA02B,aAAAf,EAAA31B,KAAAwJ,OAAA7D,OACA3F,KAAA22B,cAAAjB,EAAA11B,KAAAwJ,OAAA5D,QACA5F,KAAA20B,OAAA,CAGA,IAAAiC,GAAA52B,KAAA62B,OAAA72B,KAAA2F,OACAmxB,EAAA92B,KAAA+2B,OAAA/2B,KAAA4F,OAQA,IANA5F,KAAA80B,eACA8B,EAAAluB,KAAAgC,MAAAksB,GACAE,EAAApuB,KAAAgC,MAAAosB,IAIA,OAAA92B,KAAA6B,gBAAA,CAEA,OAAA7B,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,cAAA,OAAAvqB,KAAAo1B,OACAp1B,KAAAuqB,aAAAvqB,KAAAo1B,OACA,OAAAp1B,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,cAAA,OAAAvqB,KAAAm1B,MACAn1B,KAAAsqB,YAAAtqB,KAAAm1B,MACA,OAAAn1B,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,cAAA,OAAAvqB,KAAAm1B,OAAA,OAAAn1B,KAAAo1B,SACAp1B,KAAAsqB,YAAAtqB,KAAAm1B,MACAn1B,KAAAuqB,aAAAvqB,KAAAo1B,OAIA,IAAA4B,GAAA,OAAAh3B,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,cACAyM,IAAA,OAAAh3B,KAAAm1B,OAAA,OAAAn1B,KAAAo1B,QAGA,OAAAp1B,KAAAm1B,MACAn1B,KAAAkC,UAAAoQ,SAAArJ,EAAAjJ,KAAAm1B,MACA,OAAAn1B,KAAAo1B,SACAp1B,KAAAkC,UAAAoQ,SAAArJ,EAAA0sB,EAAA31B,KAAAo1B,QAEA4B,GAEA,OAAAh3B,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,aACAvqB,KAAAkC,UAAAoQ,SAAArJ,EAAAjJ,KAAAsqB,YACA,OAAAtqB,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,aACAvqB,KAAAkC,UAAAoQ,SAAArJ,EAAA0sB,EAAA31B,KAAA2F,OAAA3F,KAAAuqB,aACA,OAAAvqB,KAAAsqB,aAAA,OAAAtqB,KAAAuqB,eACAvqB,KAAAkC,UAAAoQ,SAAArJ,EAAAjJ,KAAAsqB,YACAtqB,KAAA2F,OAAAgwB,EAAA31B,KAAAsqB,YAAAtqB,KAAAuqB,cAEAvqB,KAAAkC,UAAAoQ,SAAArJ,GAAA2tB,GAGA52B,KAAAkC,UAAAoQ,SAAArJ,EAAA,EAMA,GAAA,OAAAjJ,KAAA4B,cAAA,CAEA,OAAA5B,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,eAAA,OAAA1qB,KAAAs1B,UACAt1B,KAAA0qB,cAAA1qB,KAAAs1B,SACA,OAAAt1B,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,eAAA,OAAA1qB,KAAAq1B,OACAr1B,KAAAyqB,WAAAzqB,KAAAq1B,KAEA,IAAA4B,GAAA,OAAAj3B,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,eACAuM,IAAA,OAAAj3B,KAAAq1B,MAAA,OAAAr1B,KAAAs1B,SAGA,OAAAt1B,KAAAq1B,KACAr1B,KAAAkC,UAAAoQ,SAAApJ,EAAAlJ,KAAAq1B,KACA,OAAAr1B,KAAAs1B,UACAt1B,KAAAkC,UAAAoQ,SAAApJ,EAAAwsB,EAAA11B,KAAAs1B,SAEA2B,GACA,OAAAj3B,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,cACA1qB,KAAAkC,UAAAoQ,SAAApJ,EAAAlJ,KAAAyqB,WACA,OAAAzqB,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,cACA1qB,KAAAkC,UAAAoQ,SAAApJ,EAAAwsB,EAAA11B,KAAA4F,QAAA5F,KAAA0qB,cACA,OAAA1qB,KAAAyqB,YAAA,OAAAzqB,KAAA0qB,gBACA1qB,KAAAkC,UAAAoQ,SAAApJ,EAAAlJ,KAAAyqB,WACAzqB,KAAA4F,QAAA8vB,EAAA11B,KAAAyqB,WAAAzqB,KAAA0qB,eAEA1qB,KAAAkC,UAAAoQ,SAAApJ,GAAA4tB,GAGA92B,KAAAkC,UAAAoQ,SAAApJ,EAAA,EAKA,OAAAlJ,KAAAi1B,WAAAj1B,KAAA2F,OAAA3F,KAAAi1B,YAAAj1B,KAAA2F,OAAA3F,KAAAi1B,WACAj1B,KAAA2F,OAAA3F,KAAA+0B,YAAA/0B,KAAA2F,OAAA3F,KAAA+0B,WAEA,OAAA/0B,KAAAk1B,YAAAl1B,KAAA4F,QAAA5F,KAAAk1B,aAAAl1B,KAAA4F,QAAA5F,KAAAk1B,YACAl1B,KAAA4F,QAAA5F,KAAAg1B,aAAAh1B,KAAA4F,QAAA5F,KAAAg1B,YAIA,OAAAh1B,KAAA6B,kBACA,UAAA7B,KAAA6B,gBACA7B,KAAAkC,UAAAoQ,SAAArJ,EAAA,GAAA0sB,EAAA,GAAA31B,KAAA2F,OACA,SAAA3F,KAAA6B,gBACA7B,KAAAkC,UAAAoQ,SAAArJ,EAAA0sB,EAAA31B,KAAA2F,OAEA3F,KAAAkC,UAAAoQ,SAAArJ,EAAA,EACAjJ,KAAAkC,UAAAoQ,SAAArJ,GAAA2tB,GAEA,OAAA52B,KAAA4B,gBACA,UAAA5B,KAAA4B,cACA5B,KAAAkC,UAAAoQ,SAAApJ,EAAA,GAAAwsB,EAAA,GAAA11B,KAAA4F,QACA,UAAA5F,KAAA4B,cACA5B,KAAAkC,UAAAoQ,SAAApJ,EAAAwsB,EAAA11B,KAAA4F,QAEA5F,KAAAkC,UAAAoQ,SAAApJ,EAAA,EACAlJ,KAAAkC,UAAAoQ,SAAApJ,GAAA4tB,GAKA92B,KAAAke,WAAAle,KAAA8lB,QAAAoR,iBACAl3B,KAAAkC,UAAAoQ,SAAArJ,EAAAjJ,KAAAu1B,cAAAtsB,EACAjJ,KAAAkC,UAAAoQ,SAAApJ,EAAAlJ,KAAAu1B,cAAArsB,GAKA,OAAAlJ,KAAA8lB,QAAAqR,SAAAn3B,KAAAkC,UAAAqU,MAAAtN,EAAAjJ,KAAA8lB,QAAAqR,QACA,OAAAn3B,KAAA8lB,QAAAsR,SAAAp3B,KAAAkC,UAAAqU,MAAArN,EAAAlJ,KAAA8lB,QAAAsR,QAGA,OAAAp3B,KAAA8lB,QAAA+Q,SAAA72B,KAAAkC,UAAAP,MAAAsH,EAAA2tB,GACA,OAAA52B,KAAA8lB,QAAAiR,SAAA/2B,KAAAkC,UAAAP,MAAAuH,EAAA4tB,GAEA,OAAA92B,KAAA8lB,QAAAhhB,QAAA9E,KAAAkC,UAAA4C,MAAA9E,KAAA8lB,QAAAhhB,OACA,OAAA9E,KAAA8lB,QAAAzc,WAAArJ,KAAAkC,UAAAmH,SAAArJ,KAAA8lB,QAAAzc,UAGArJ,KAAA80B,eACA90B,KAAA2F,OAAA+C,KAAAgC,MAAA1K,KAAA2F,QACA3F,KAAA4F,QAAA8C,KAAAgC,MAAA1K,KAAA4F,SACA5F,KAAAkC,UAAAoQ,SAAArJ,EAAAP,KAAAgC,MAAA1K,KAAAkC,UAAAoQ,SAAArJ,GACAjJ,KAAAkC,UAAAoQ,SAAApJ,EAAAR,KAAAgC,MAAA1K,KAAAkC,UAAAoQ,SAAApJ,MAcA3D,EAAAnC,UAAAoyB,eAAA,WACA,IAAA,GAAA50B,GAAA,EAAAA,EAAAZ,KAAAkP,SAAAjO,OAAAL,IACAZ,KAAAkP,SAAAtO,GAAAyoB,gBAAA,IAIA9jB,EAAAnC,UAAAtB,SAAA,SAAAihB,GACA,GAAAC,GAAAC,UAAAhiB,MACA,IAAA+hB,EAAA,EACA,IAAA,GAAApiB,GAAA,EAAAA,EAAAoiB,EAAApiB,IACAZ,KAAA8B,SAAAmhB,UAAAriB,QAIAmiB,GAAAvZ,QACAuZ,EAAAvZ,OAAAmf,YAAA5F,GAGAA,EAAAvZ,OAAAxJ,KACAA,KAAAkC,UAAAJ,SAAAihB,EAAA7gB,WACAlC,KAAAkP,SAAA3C,KAAAwW,GACA/iB,KAAAqpB,gBAAA,GAAA,EAGA,OAAAtG,IAGAxd,EAAAnC,UAAAulB,YAAA,SAAA5F,GACA,GAAAgH,GAAA9G,UAAAhiB,MACA,IAAA8oB,EAAA,EACA,IAAA,GAAAnpB,GAAA,EAAAA,EAAAmpB,EAAAnpB,IACAZ,KAAA2oB,YAAA1F,UAAAriB,QAGA,CACA,GAAAgd,GAAA5d,KAAAkP,SAAA/C,QAAA4W,EACA,KAAA,IAAAnF,EAAA,CACA,GAAAyZ,GAAAtU,EAAAvZ,MACAuZ,GAAA7gB,UAAAsH,MACAuZ,GAAA7gB,UAAAsH,OAAAmf,YAAA5F,EAAA7gB,WACAlC,KAAAkP,SAAAzC,OAAAmR,EAAA,GACAmF,EAAAvZ,OAAA,KAGA7F,WAAA,WACA0zB,EAAAhO,gBACAgO,EAAAhO,gBAAA,GAAA,IACA,MAUA9jB,EAAAnC,UAAAK,WAAA,WACAzD,KAAAomB,aAAA,EACApmB,KAAAqb,MAAArb,KAAAwJ,OAAA6R,MACArb,KAAAs3B,WACAt3B,KAAAu3B,gBAGAv3B,KAAAw3B,WACAx3B,KAAAy3B,iBAIAlyB,EAAAnC,UAAAs0B,eAAA,WACA13B,KAAAy0B,kBACAz0B,KAAAy0B,iBAAA,EACAz0B,KAAAmkB,KAAAhH,cAIA5X,EAAAnC,UAAAm0B,cAAA,WACA,IAAAv3B,KAAAy0B,gBAAA,CACAz0B,KAAAy0B,iBAAA,CACA,IAAApR,GAAA,GAAA7d,MAAAmE,MACAguB,EAAA,GAAAnyB,MAAAmE,MACA5J,EAAAC,IAEAA,MAAAu1B,cAAA,GAAA/vB,MAAAmE,MACA3J,KAAAmkB,KAAA,GAAAnG,GAAAhe,MACAA,KAAAmkB,KAAA5F,YAAA,SAAApe,GAEA,GAAAy3B,GAAAta,EAAAC,IAAAvd,KAAAG,EACA,KAAAH,KAAAke,UAAA0Z,EAAA,CAIA,GAHA53B,KAAAke,UAAA,EACAle,KAAAkC,UAAA0Y,aAAA,EACAyI,EAAA5G,KAAAzc,KAAAkC,UAAAoQ,UACAtS,KAAA63B,cAAA,CACA,GAAAjsB,GAAA5L,KAAA63B,cAAA31B,UAAAlC,KAAA63B,cAAA31B,UAAAlC,KAAA63B,aACAjsB,KAEA+rB,EAAAvzB,IAAAwH,EAAAklB,eAAAC,GAAA/wB,KAAAwJ,OAAAtH,UAAA4uB,eAAAC,GAAAnlB,EAAAklB,eAAAE,GAAAhxB,KAAAwJ,OAAAtH,UAAA4uB,eAAAE,IACAplB,EAAA9J,SAAA9B,KAAAkC,gBAGAy1B,GAAAvzB,IAAA,EAEApE,MAAA0C,KAAA,iBAAAvC,KAOAH,KAAAmkB,KAAA3F,WAAA,SAAAre,EAAA4b,GACA/b,KAAAke,WACAle,KAAAu1B,cAAAnxB,IAAAif,EAAApa,EAAA8S,EAAA9S,EAAA0uB,EAAA1uB,EAAAoa,EAAAna,EAAA6S,EAAA7S,EAAAyuB,EAAAzuB,GACAlJ,KAAAiJ,EAAAjJ,KAAAu1B,cAAAtsB,EACAjJ,KAAAkJ,EAAAlJ,KAAAu1B,cAAArsB,EACAlJ,KAAA0C,KAAA,gBAAAvC,KAKAH,KAAAmkB,KAAA1F,UAAA,SAAAte,GACAH,KAAAke,WACAle,KAAAke,UAAA,EAEAva,WAAA,WAGA,GAFA5D,EAAAmC,UAAA0Y,aAAA,EACA0C,EAAAI,QAAA3d,GACA,CACA,GAAAmC,GAAAnC,EAAAyJ,SAAAzJ,EAAAsb,MAAAtb,EAAAsb,MAAAtb,EAAAyJ,OAAAtH,SACAA,GAAA0lB,QAAA7nB,EAAAmC,UAAAoQ,SAAAvS,EAAAmC,UAAAsH,OAAAzJ,GACAmC,GAAAnC,EAAAmC,WACAnC,EAAAyJ,OAAA1H,SAAA/B,GAGAA,EAAA2C,KAAA,eAAAvC,IACA,OAOAoF,EAAAnC,UAAA00B,eAAA,WACA93B,KAAA00B,kBACA10B,KAAA00B,iBAAA,EACA10B,KAAAkC,UAAA4a,eAAA,UAAA9c,KAAA+3B,QACA/3B,KAAAkC,UAAA4a,eAAA,WAAA9c,KAAA+3B,UAIAxyB,EAAAnC,UAAAq0B,cAAA,WACA,IAAAz3B,KAAA00B,gBAAA,CACA10B,KAAA00B,iBAAA,CACA,IAAAxyB,GAAAlC,KAAAkC,UACAnC,EAAAC,IAEAA,MAAAkC,UAAA0Y,aAAA,EACA5a,KAAA+3B,OAAA,SAAAvb,GACA,GAAAgB,GAAAF,EAAAO,aAAArB,EAAAzc,EAAAi4B,UACA,IAAAxa,GAAAA,EAAAU,SAAA,CACAV,EAAAU,UAAA,EACAV,EAAAtb,UAAA0Y,aAAA,CACA,IAAApR,GAAA,OAAAzJ,EAAAk4B,kBAAAl4B,EAAAk4B,kBAAAl4B,CACAyJ,GAAAtH,UAAA0lB,QAAApK,EAAAtb,UAAAoQ,SAAAkL,EAAAtb,UAAAsH,OAAAgU,GACAhU,EAAAtH,WAAAsb,EAAAtb,UAAAsH,QACAA,EAAA1H,SAAA0b,KAIAtb,EAAAiZ,GAAA,UAAAnb,KAAA+3B,QACA71B,EAAAiZ,GAAA,WAAAnb,KAAA+3B,UAIAj0B,OAAAG,iBAAAsB,EAAAnC,WACA6F,GACA9E,IAAA,WACA,MAAAnE,MAAA8lB,QAAAmB,MAEA7iB,IAAA,SAAAC,GACArE,KAAAinB,KAAA5iB,IAGA6E,GACA/E,IAAA,WACA,MAAAnE,MAAA8lB,QAAAkB,KAEA5iB,IAAA,SAAAC,GACArE,KAAAgnB,IAAA3iB,IAGA/C,OACA6C,IAAA,WACA,MAAAnE,MAAA8lB,QAAAxkB,OAEA8C,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA0E,SAAA,IAAArf,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA0E,SAAA,KAEAxqB,KAAA8lB,QAAAxkB,MAAA+C,EACArE,KAAAqpB,gBAAA,KAGAuM,cACAzxB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA0E,SACAxqB,KAAA2F,OAAA3F,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAA0E,SAGAxqB,KAAA2F,OAAA3F,KAAA8lB,QAAAxkB,OAGAtB,KAAA2F,SAGAnE,QACA2C,IAAA,WACA,MAAAnE,MAAA8lB,QAAAtkB,QAEA4C,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA6E,UAAA,IAAAxf,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA6E,UAAA,KAEA3qB,KAAA8lB,QAAAtkB,OAAA6C,EACArE,KAAAqpB,gBAAA,KAGAwM,eACA1xB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA6E,UACA3qB,KAAA4F,QAAA5F,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAA6E,UAGA3qB,KAAA4F,QAAA5F,KAAA8lB,QAAAtkB,QAGAxB,KAAA4F,UAGAmgB,UACA5hB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAC,UAEA3hB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAAoS,YAAA,IAAA/sB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAAoS,YAAA,KAEAl4B,KAAA8lB,QAAAC,SAAA1hB,EACArE,KAAAqpB,gBAAA,KAGAyM,iBACA3xB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAAoS,YACAl4B,KAAA+0B,UAAA/0B,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAAoS,YAGAl4B,KAAA+0B,UAAA/0B,KAAA8lB,QAAAC,UAGA/lB,KAAA+0B,YAGA/O,WACA7hB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAE,WAEA5hB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAAqS,aAAA,IAAAhtB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAAqS,aAAA,KAEAn4B,KAAA8lB,QAAAE,UAAA3hB,EACArE,KAAAqpB,gBAAA,KAGA0M,kBACA5xB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAAqS,aACAn4B,KAAAg1B,WAAAh1B,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAAqS,aAGAn4B,KAAAg1B,WAAAh1B,KAAA8lB,QAAAE,WAGAhmB,KAAAg1B,aAGAoD,UACAj0B,IAAA,WACA,MAAAnE,MAAA8lB,QAAAsS,UAEAh0B,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAAuS,YAAA,IAAAltB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAAuS,YAAA,KAGAr4B,KAAA8lB,QAAAsS,SAAA/zB,EACArE,KAAAqpB,gBAAA,KAGA2M,iBACA7xB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAAuS,YACAr4B,KAAAi1B,UAAAj1B,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAAuS,YAGAr4B,KAAAi1B,UAAAj1B,KAAA8lB,QAAAsS,UAGAp4B,KAAAi1B,YAGAqD,WACAn0B,IAAA,WACA,MAAAnE,MAAA8lB,QAAAwS,WAEAl0B,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAAyS,aAAA,IAAAptB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAAyS,aAAA,KAEAv4B,KAAA8lB,QAAAwS,UAAAj0B,EACArE,KAAAqpB,gBAAA,KAGA4M,kBACA9xB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAAyS,aACAv4B,KAAAk1B,WAAAl1B,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAAyS,aAGAv4B,KAAAk1B,WAAAl1B,KAAA8lB,QAAAwS,WAGAt4B,KAAAk1B,aAGA3I,YACApoB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAyG,YAEAnoB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA0S,cAAA,IAAArtB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA0S,cAAA,KAEAx4B,KAAA8lB,QAAAyG,WAAAloB,EACArE,KAAAqpB,gBAAA,KAGA6M,mBACA/xB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA0S,cACAx4B,KAAAsqB,YAAAtqB,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAA0S,cAGAx4B,KAAAsqB,YAAAtqB,KAAA8lB,QAAAyG,YAGAvsB,KAAAsqB,cAGAkC,aACAroB,IAAA,WACA,MAAAnE,MAAA8lB,QAAA0G,aAEApoB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA2S,eAAA,IAAAttB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA2S,eAAA,KAEAz4B,KAAA8lB,QAAA0G,YAAAnoB,EACArE,KAAAqpB,gBAAA,KAGA8M,oBACAhyB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA2S,eACAz4B,KAAAuqB,aAAAvqB,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAA2S,eAGAz4B,KAAAuqB,aAAAvqB,KAAA8lB,QAAA0G,aAGAxsB,KAAAuqB,eAGA8B,WACAloB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAuG,WAEAjoB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA4S,aAAA,IAAAvtB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA4S,aAAA,KAEA14B,KAAA8lB,QAAAuG,UAAAhoB,EACArE,KAAAqpB,gBAAA,KAGA+M,kBACAjyB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA4S,aACA14B,KAAAyqB,WAAAzqB,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAA4S,aAGA14B,KAAAyqB,WAAAzqB,KAAA8lB,QAAAuG,WAGArsB,KAAAyqB,aAGA6B,cACAnoB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAwG,cAEAloB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA6S,gBAAA,IAAAxtB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA6S,gBAAA,KAEA34B,KAAA8lB,QAAAwG,aAAAjoB,EACArE,KAAAqpB,gBAAA,KAGAgN,qBACAlyB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA6S,gBACA34B,KAAA0qB,cAAA1qB,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAA6S,gBAGA34B,KAAA0qB,cAAA1qB,KAAA8lB,QAAAwG,cAGAtsB,KAAA0qB,gBAGAzD,MACA9iB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAmB,MAEA7iB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA8S,QAAA,IAAAztB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA8S,QAAA,KAEA54B,KAAA8lB,QAAAmB,KAAA5iB,EACArE,KAAAqpB,gBAAA,KAGAiN,aACAnyB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA8S,QACA54B,KAAAm1B,MAAAn1B,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAA8S,QAGA54B,KAAAm1B,MAAAn1B,KAAA8lB,QAAAmB,MAGAjnB,KAAAm1B,QAGAjZ,OACA/X,IAAA,WACA,MAAAnE,MAAA8lB,QAAA5J,OAEA9X,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAA+S,SAAA,IAAA1tB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAA+S,SAAA,KAEA74B,KAAA8lB,QAAA5J,MAAA7X,EACArE,KAAAqpB,gBAAA,KAGAkN,cACApyB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAA+S,SACA74B,KAAAo1B,OAAAp1B,KAAAwJ,OAAA7D,OAAA3F,KAAA8lB,QAAA+S,SAGA74B,KAAAo1B,OAAAp1B,KAAA8lB,QAAA5J,OAGAlc,KAAAo1B,SAGApO,KACA7iB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAkB,KAEA5iB,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAAgT,OAAA,IAAA3tB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAAgT,OAAA,KAEA94B,KAAA8lB,QAAAkB,IAAA3iB,EACArE,KAAAqpB,gBAAA,KAGAmN,YACAryB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAAgT,OACA94B,KAAAq1B,KAAAr1B,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAAgT,OAGA94B,KAAAq1B,KAAAr1B,KAAA8lB,QAAAkB,KAGAhnB,KAAAq1B,OAGA0D,QACA50B,IAAA,WACA,MAAAnE,MAAA8lB,QAAAiT,QAEA30B,IAAA,SAAAC,GACAiJ,MAAAjJ,KAAA,IAAAA,EAAA8H,QAAA,KACAnM,KAAA8lB,QAAAkT,UAAA,IAAA7tB,WAAA9G,EAAAuJ,QAAA,IAAA,KAEA5N,KAAA8lB,QAAAkT,UAAA,KAEAh5B,KAAA8lB,QAAAiT,OAAA10B,EACArE,KAAAqpB,gBAAA,KAGAoN,eACAtyB,IAAA,WASA,MARAnE,MAAA20B,QACA,OAAA30B,KAAA8lB,QAAAkT,UACAh5B,KAAAs1B,QAAAt1B,KAAAwJ,OAAA5D,QAAA5F,KAAA8lB,QAAAkT,UAGAh5B,KAAAs1B,QAAAt1B,KAAA8lB,QAAAiT,QAGA/4B,KAAAs1B,UAGA1zB,eACAuC,IAAA,WACA,MAAAnE,MAAA8lB,QAAAlkB,eAEAwC,IAAA,SAAAC,GACArE,KAAA8lB,QAAAlkB,cAAAyC,EACArE,KAAAqqB,eAGAxoB,iBACAsC,IAAA,WACA,MAAAnE,MAAA8lB,QAAAjkB,iBAEAuC,IAAA,SAAAC,GACArE,KAAA8lB,QAAAjkB,gBAAAwC,EACArE,KAAAqqB,eAGAlhB,MACAhF,IAAA,WACA,MAAAnE,MAAA8lB,QAAA3c,MAEA/E,IAAA,SAAAC,GACArE,KAAA8lB,QAAA3c,KAAA9E,EACArE,KAAA0F,WAGAZ,OACAX,IAAA,WACA,MAAAnE,MAAA8lB,QAAAhhB,OAEAV,IAAA,SAAAC,GACArE,KAAA8lB,QAAAhhB,MAAAT,EACArE,KAAAkC,UAAA4C,MAAAT,IAGAgF,UACAlF,IAAA,WACA,MAAAnE,MAAA8lB,QAAAzc,UAEAjF,IAAA,SAAAC,GACArE,KAAA8lB,QAAAzc,SAAAhF,EACArE,KAAAkC,UAAAmH,SAAAhF,IAGAgiB,WACAliB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAO,WAEAjiB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAO,UAAAhiB,EACArE,KAAA0F,WAGAmxB,QACA1yB,IAAA,WACA,MAAAnE,MAAA8lB,QAAA+Q,QAEAzyB,IAAA,SAAAC,GACArE,KAAA8lB,QAAA+Q,OAAAxyB,EACArE,KAAAqqB,aACArqB,KAAA0F,WAGAqxB,QACA5yB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAiR,QAEA3yB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAiR,OAAA1yB,EACArE,KAAAqqB,aACArqB,KAAA0F,WAGA/D,OACAyC,IAAA,SAAAC,GACArE,KAAA8lB,QAAA+Q,OAAAxyB,EACArE,KAAA8lB,QAAAiR,OAAA1yB,EACArE,KAAAqqB,aACArqB,KAAA0F,WAGAyxB,QACAhzB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAqR,QAEA/yB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAqR,OAAA9yB,EACArE,KAAAkC,UAAAqU,MAAAtN,EAAA5E,IAGA+yB,QACAjzB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAsR,QAEAhzB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAsR,OAAA/yB,EACArE,KAAAkC,UAAAqU,MAAArN,EAAA7E,IAGAkS,OACApS,IAAA,WACA,MAAAnE,MAAA8lB,QAAAqR,QAEA/yB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAqR,OAAA9yB,EACArE,KAAA8lB,QAAAsR,OAAA/yB,EACArE,KAAAkC,UAAAqU,MAAAtN,EAAA5E,EACArE,KAAAkC,UAAAqU,MAAArN,EAAA7E,IAIAizB,WACAnzB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAwR,WAEAlzB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAwR,UAAAjzB,EACArE,KAAAomB,cACA/hB,EACArE,KAAAu3B,gBAEAv3B,KAAA03B,oBAIAR,gBACA/yB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAoR,gBAEA9yB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAoR,eAAA7yB,IAGAia,kBACAna,IAAA,WACA,MAAAnE,MAAA8lB,QAAAxH,kBAEAla,IAAA,SAAAC,GACArE,KAAA8lB,QAAAxH,iBAAAja,IAGA0Y,eACA5Y,IAAA,WACA,MAAAnE,MAAA8lB,QAAA/I,eAEA3Y,IAAA,SAAAC,GACArE,KAAA8lB,QAAA/I,cAAA1Y,IAGA0Z,WACA5Z,IAAA,WACA,MAAAnE,MAAA8lB,QAAA/H,WAEA3Z,IAAA,SAAAC,GACArE,KAAA8lB,QAAA/H,UAAA1Z,IAGAwzB,eACA1zB,IAAA,WACA,MAAAnE,MAAA8lB,QAAA+R,eAEAzzB,IAAA,SAAAC,GACArE,KAAA8lB,QAAA+R,cAAAxzB,IAGAmzB,WACArzB,IAAA,WACA,MAAAnE,MAAA8lB,QAAA0R,WAEApzB,IAAA,SAAAC,GACArE,KAAA8lB,QAAA0R,WAAA,EACAx3B,KAAAomB,cACA/hB,EACArE,KAAAy3B,gBAEAz3B,KAAA83B,oBAIAG,mBACA9zB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAmS,mBAEA7zB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAmS,kBAAA5zB,IAGA2zB,WACA7zB,IAAA,WACA,MAAAnE,MAAA8lB,QAAAkS,WAEA5zB,IAAA,SAAAC,GACArE,KAAA8lB,QAAAkS,UAAA3zB,IAGA40B,YACA90B,IAAA,WACA,MAAAnE,MAAAkC,UAAA+2B,YAEA70B,IAAA,SAAAC,GACArE,KAAAkC,UAAA+2B,WAAA50B,IAGAgE,SACAlE,IAAA,WACA,MAAAnE,MAAAkC,UAAAmG,SAEAjE,IAAA,SAAAC,GACArE,KAAAkC,UAAAmG,QAAAhE,IAGAooB,eACAtoB,IAAA,WACA,MAAAnE,MAAAkC,UAAAuqB,eAEAroB,IAAA,SAAAC,GACArE,KAAAkC,UAAAuqB,cAAApoB,IAGAnB,SACAiB,IAAA,WACA,MAAAnE,MAAAkC,UAAAI,OAEA8B,IAAA,SAAAC,GACArE,KAAAkC,UAAAI,MAAA+B,IAGAuW,aACAzW,IAAA,WACA,MAAAnE,MAAAkC,UAAA0Y,aAEAxW,IAAA,SAAAC,GACArE,KAAAkC,UAAA0Y,YAAAvW,IAGAX,qBACAS,IAAA,WACA,MAAAnE,MAAAkC,UAAAwB,qBAEAU,IAAA,SAAAC,GACArE,KAAAkC,UAAAwB,oBAAAW,IAGA60B,aACA/0B,IAAA,WACA,MAAAnE,MAAAkC,UAAAg3B,aAEA90B,IAAA,SAAAC,GACArE,KAAAkC,UAAAg3B,YAAA70B,6HCjlCA,QAAAmwB,KACAx0B,KAAAsB,MAAA,EACAtB,KAAAwB,OAAA,EACAxB,KAAAgmB,UAAA,EACAhmB,KAAAo4B,SAAA,KACAp4B,KAAAs4B,UAAA,KACAt4B,KAAAinB,KAAA,KACAjnB,KAAAkc,MAAA,KACAlc,KAAAgnB,IAAA,KACAhnB,KAAA+4B,OAAA,KACA/4B,KAAAusB,WAAA,KACAvsB,KAAAwsB,YAAA,KACAxsB,KAAAqsB,UAAA,KACArsB,KAAAssB,aAAA,KAEAtsB,KAAAwqB,SAAA,KACAxqB,KAAA2qB,UAAA,KACA3qB,KAAAk4B,YAAA,KACAl4B,KAAAm4B,aAAA,KACAn4B,KAAAq4B,YAAA,KACAr4B,KAAAu4B,aAAA,KACAv4B,KAAA+lB,SAAA,EACA/lB,KAAA44B,QAAA,KACA54B,KAAA64B,SAAA,KACA74B,KAAA84B,OAAA,KACA94B,KAAAg5B,UAAA,KACAh5B,KAAAw4B,cAAA,KACAx4B,KAAAy4B,eAAA,KACAz4B,KAAA04B,aAAA,KACA14B,KAAA24B,gBAAA,KAEA34B,KAAA62B,OAAA,EACA72B,KAAA+2B,OAAA,EACA/2B,KAAAm3B,OAAA,EACAn3B,KAAAo3B,OAAA,EACAp3B,KAAA4B,cAAA,KACA5B,KAAA6B,gBAAA,KACA7B,KAAAqJ,SAAA,KACArJ,KAAAqmB,UAAA,KACArmB,KAAAmJ,KAAA,KACAnJ,KAAA8E,MAAA,EAGA9E,KAAAs3B,UAAA,KACAt3B,KAAAk3B,gBAAA,EACAl3B,KAAAse,iBAAA,KACAte,KAAA+c,cAAA,EACA/c,KAAA+d,UAAA,KACA/d,KAAA63B,cAAA,KACA73B,KAAAw3B,UAAA,KACAx3B,KAAAi4B,kBAAA,KACAj4B,KAAAg4B,UAAA,KAIAv4B,EAAAD,QAAAg1B,2BC5DA,GAAA2E,IACA/M,GAAAzrB,EAAA,QAKAmD,QAAAs1B,OAAA5zB,KAAA2zB,GAEA15B,EAAAD,QAAA25B","file":"pixi-ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nmodule.exports = function () {\n\t// https://mathiasbynens.be/notes/es-unicode-property-escapes#emoji\n\treturn (/\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F/g\n\t);\n};","var InputBase = require('./InputBase'),\r\n    ClickEvent = require('./Interaction/ClickEvent.js'),\r\n    InputController = require('./Interaction/InputController');\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\r\n * @param [options.text=null] {PIXI.UI.Text} optional text\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n * @param [options.width=options.background.width] {Number|String} width\r\n * @param [options.height=options.background.height] {Number|String} height\r\n */\r\n\r\nfunction Button(options) {\r\n    InputBase.call(this, options.width || options.background.width, options.height || options.background.height, options.tabIndex || 0, options.tabGroup || 0);\r\n    this.background = options.background;\r\n    this.background.width = \"100%\";\r\n    this.background.height = \"100%\";\r\n    this.background.pivot = 0.5;\r\n    this.background.verticalAlign = \"middle\";\r\n    this.background.horizontalAlign = \"center\";\r\n    this.addChild(this.background);\r\n    this.isHover = false;\r\n\r\n    this.uiText = options.text;\r\n    if (this.uiText) {\r\n        this.uiText.verticalAlign = \"middle\";\r\n        this.uiText.horizontalAlign = \"center\";\r\n        this.addChild(this.uiText);\r\n    }\r\n\r\n    this.container.buttonMode = true;\r\n\r\n    var self = this;\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 32) { //space\r\n            self.click();\r\n        }\r\n    };\r\n\r\n    var clickEvent = new ClickEvent(this);\r\n    clickEvent.onHover = function (e) {\r\n        this.isHover = true;\r\n        self.emit(\"hover\", true);\r\n    };\r\n\r\n    clickEvent.onLeave = function (e) {\r\n        this.isHover = false;\r\n        self.emit(\"hover\", false);\r\n    };\r\n\r\n    clickEvent.onPress = function (e, isPressed) {\r\n        if (isPressed) {\r\n            self.focus();\r\n            e.data.originalEvent.preventDefault();\r\n        }\r\n        self.emit(\"press\", isPressed);\r\n    };\r\n\r\n    clickEvent.onClick = function (e) {\r\n        self.click();\r\n    };\r\n\r\n    this.click = function () {\r\n        self.emit(\"click\");\r\n    };\r\n\r\n\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n\r\n    this.initialize = function () {\r\n        InputBase.prototype.initialize.call(this);\r\n        this.container.interactiveChildren = false;\r\n        \r\n        var self = this;\r\n        //lazy to make sure all children is initialized\r\n        setTimeout(function () {\r\n            self.container.hitArea = self.container.getLocalBounds();\r\n        }, 20);\r\n    };\r\n\r\n}\r\n\r\nButton.prototype = Object.create(InputBase.prototype);\r\nButton.prototype.constructor = Button;\r\nmodule.exports = Button;\r\n\r\nObject.defineProperties(Button.prototype, {\r\n    value: {\r\n        get: function () {\r\n            if (this.uiText) {\r\n                return this.uiText.text;\r\n            }\r\n            return \"\";\r\n        },\r\n        set: function (val) {\r\n            if (this.uiText) {\r\n                this.uiText.text = val;\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.uiText;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n/*\r\n * Features:\r\n * Button, radio button (checkgroups)\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * \r\n * Properties:\r\n * checked: get/set Button checked\r\n * value: get/set Button value\r\n * \r\n * Events:\r\n * \"hover\"          param: [bool]isHover (hover/leave)\r\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\r\n * \"click\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\"   param: [bool]isFocussed\r\n *  \r\n */","var InputBase = require('./InputBase'),\r\n    ClickEvent = require('./Interaction/ClickEvent.js'),\r\n    InputController = require('./Interaction/InputController');\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param [options.checked=false] {bool} is checked\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\r\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\r\n * @param [options.checkgroup=null] {String} CheckGroup name\r\n * @param options.value {String} mostly used along with checkgroup\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n */\r\n\r\nfunction CheckBox(options) {\r\n    InputBase.call(this, options.background.width, options.background.height, options.tabIndex || 0, options.tabGroup || 0);\r\n    this._checked = options.checked !== undefined ? options.checked : false;\r\n    this._value = options.value || \"\";\r\n    this.checkGroup = options.checkgroup || null;\r\n\r\n    this.background = options.background;\r\n    this.background.width = \"100%\";\r\n    this.background.height = \"100%\";\r\n    this.addChild(this.background);\r\n\r\n    this.checkmark = options.checkmark;\r\n    if (this.checkmark) {\r\n        this.checkmark.verticalAlign = \"middle\";\r\n        this.checkmark.horizontalAlign = \"center\";\r\n        if (!this._checked) {\r\n            this.checkmark.alpha = 0;\r\n        }\r\n        this.addChild(this.checkmark);\r\n    }\r\n\r\n\r\n\r\n\r\n    this.container.buttonMode = true;\r\n\r\n    if (this.checkGroup !== null)\r\n        InputController.registrerCheckGroup(this);\r\n\r\n    var self = this;\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 32) { //space\r\n            self.click();\r\n        }\r\n    };\r\n\r\n    var clickEvent = new ClickEvent(this);\r\n    clickEvent.onHover = function (e) {\r\n        self.emit(\"hover\", true);\r\n    };\r\n\r\n    clickEvent.onLeave = function (e) {\r\n\r\n        self.emit(\"hover\", false);\r\n    };\r\n\r\n    clickEvent.onPress = function (e, isPressed) {\r\n        if (isPressed) {\r\n            self.focus();\r\n            e.data.originalEvent.preventDefault();\r\n        }\r\n        self.emit(\"press\", isPressed);\r\n    };\r\n\r\n    clickEvent.onClick = function (e) {\r\n        self.click();\r\n    };\r\n\r\n    this.change = function (val) {\r\n        if (this.checkmark)\r\n            this.checkmark.alpha = val ? 1 : 0;\r\n    };\r\n\r\n    this.click = function () {\r\n        self.emit(\"click\");\r\n        if (self.checkGroup !== null && self.checked)\r\n            return;\r\n\r\n        self.checked = !self.checked;\r\n    };\r\n\r\n\r\n    this.focus = function () {\r\n\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nCheckBox.prototype = Object.create(InputBase.prototype);\r\nCheckBox.prototype.constructor = CheckBox;\r\nmodule.exports = CheckBox;\r\n\r\nObject.defineProperties(CheckBox.prototype, {\r\n    checked: {\r\n        get: function () {\r\n            return this._checked;\r\n        },\r\n        set: function (val) {\r\n\r\n\r\n            if (val !== this._checked) {\r\n\r\n                if (this.checkGroup !== null && val)\r\n                    InputController.updateCheckGroupSelected(this);\r\n\r\n\r\n                \r\n                this.emit(\"change\", val);\r\n                this._checked = val;\r\n                this.change(val);\r\n\r\n            }\r\n        }\r\n    },\r\n    value: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            this._value = val;\r\n            if (this.checked)\r\n                InputController.updateCheckGroupSelected(this);\r\n        }\r\n    },\r\n    selectedValue: {\r\n        get: function () {\r\n            return InputController.getCheckGroupSelectedValue(this.checkGroup);\r\n        },\r\n        set: function (val) {\r\n            InputController.setCheckGroupSelectedValue(this.checkGroup, val);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n/*\r\n * Features:\r\n * checkbox, radio button (checkgroups)\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark) \r\n * \r\n * Properties:\r\n * checked: get/set checkbox checked\r\n * value: get/set checkbox value\r\n * selectedValue: get/set selected value for checkgroup\r\n * \r\n * Events:\r\n * \"hover\"          param: [bool]isHover (hover/leave)\r\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\r\n * \"click\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\"   param: [bool]isFocussed\r\n * \"change\"         param: [bool]isChecked\r\n *  \r\n */","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Container\r\n * @param height {Number} Height of the Container\r\n */\r\nfunction Container(width, height) {\r\n    UIBase.call(this, width, height);\r\n    this.container.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\r\n}\r\n\r\n\r\nContainer.prototype = Object.create(UIBase.prototype);\r\nContainer.prototype.constructor = Container;\r\nmodule.exports = Container;\r\n\r\n\r\nContainer.prototype.update = function () {\r\n    //if (this.container.interactive) {\r\n        this.container.hitArea.width = this._width;\r\n        this.container.hitArea.height = this._height;\r\n    //}\r\n};\r\n\r\n","function DynamicChar() {\r\n    //styledata (texture, orig width, orig height)\r\n    this.style = null;\r\n\r\n    //char data\r\n    this.data = null;\r\n\r\n    //is this char space?\r\n    this.space = false;\r\n\r\n    //is this char newline?\r\n    this.newline = false;\r\n\r\n    this.emoji = false;\r\n\r\n    //charcode\r\n    this.charcode = 0;\r\n\r\n    //char string value\r\n    this.value = \"\";\r\n\r\n    //word index\r\n    this.wordIndex = -1;\r\n\r\n    //line index of char\r\n    this.lineIndex = -1;\r\n\r\n}\r\n\r\nDynamicChar.prototype.constructor = DynamicChar;\r\nmodule.exports = DynamicChar;","var UIBase = require('../UIBase'),\r\n    DynamicTextStyle = require('./DynamicTextStyle'),\r\n    DynamicChar = require('./DynamicChar'),\r\n    emojiRegex = require('emoji-regex'),\r\n    atlas = null;\r\n\r\n\r\n/**\r\n* An dynamic text object with auto generated atlas\r\n*\r\n* @class\r\n* @extends PIXI.UI.UIBase\r\n* @memberof PIXI.UI\r\n* @param text {String} Text content\r\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\r\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\r\n* @param [allowTags=true] {boolean} Allow inline styling\r\n* @param [options=null] {DynamicTextStyle} Additional text settings\r\n*/\r\nfunction DynamicText(text, options) {\r\n    options = options || {};\r\n\r\n    UIBase.call(this, options.width || 0, options.height || 0);\r\n\r\n    //create atlas\r\n    if (atlas === null)\r\n        atlas = new DynamicAtlas(1);\r\n\r\n    var autoWidth = !options.width;\r\n    var autoHeight = !options.height;\r\n\r\n    //defaultstyle for this textobject\r\n    var defaultStyle = this._style = new DynamicTextStyle(this);\r\n    defaultStyle.merge(options.style);\r\n\r\n    //collection of all processed char\r\n    var chars = this.chars = [];\r\n    var renderChars = [];\r\n    var spriteCache = []; //(temp)\r\n    var charContainer = new PIXI.Container();\r\n    this.container.addChild(charContainer);\r\n\r\n    //the input text\r\n    this._inputText = text;\r\n\r\n    //list of rendered sprites (temp)\r\n    var sprites = [];\r\n\r\n    //states\r\n    var lastWidth = 0,\r\n        lastHeight = 0;\r\n\r\n    this.dirtyText = true;\r\n    this.dirtyStyle = true;\r\n    this.dirtyRender = true;\r\n\r\n\r\n    //dictionary for line data\r\n    var lineWidthData = [];\r\n    var lineHeightData = [];\r\n    var lineFontSizeData = [];\r\n    var lineAlignmentData = [];\r\n    var renderCount = 0;\r\n    var charCount = 0;\r\n\r\n    //ellipsis caches (not nessesary when no sprites)\r\n    var lineEllipsisData = [];\r\n    var lineHasEllipsis = [];\r\n\r\n    //ROUGH TEMP RENDER (with sprites)\r\n    this.render = function () {\r\n        var yOffset = 0,\r\n            xOffset = 0,\r\n            currentLine = -1,\r\n            i;\r\n\r\n        if (spriteCache.length > renderCount) {\r\n            for (i = renderCount; i < spriteCache.length; i++) {\r\n                var removeSprite = spriteCache[i];\r\n                if (removeSprite)\r\n                    removeSprite.visible = false;\r\n            }\r\n        }\r\n\r\n        var char, lineWidth = 0, lineHeight = 0, maxLineWidth = 0;\r\n\r\n        for (i = 0; i < renderCount; i++) {\r\n            char = renderChars[i];\r\n\r\n            //get line data\r\n            if (currentLine !== char.lineIndex) {\r\n                currentLine = char.lineIndex;\r\n                lineWidth = lineWidthData[currentLine];\r\n                lineHeight = lineHeightData[currentLine];\r\n                yOffset += lineHeight;\r\n\r\n\r\n\r\n                switch (lineAlignmentData[currentLine]) {\r\n                    case 'right': xOffset = this._width - lineWidth; break;\r\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\r\n                    default: xOffset = 0;\r\n                }\r\n\r\n\r\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\r\n            }\r\n\r\n            //no reason to render a blank space or 0x0 letters (no texture created)\r\n            if (!char.data.texture || char.space || char.newline) {\r\n                if (spriteCache[i])\r\n                    spriteCache[i].visible = false;\r\n                continue;\r\n            }\r\n\r\n\r\n            //add new sprite\r\n            var tex = char.data.texture, sprite = spriteCache[i];\r\n\r\n\r\n\r\n            if (!sprite) {\r\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\r\n                sprite.anchor.set(0.5);\r\n            }\r\n            else\r\n                sprite.texture = tex;\r\n\r\n\r\n\r\n            sprite.visible = true;\r\n            sprite.x = char.x + xOffset + tex.width * 0.5;\r\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\r\n\r\n\r\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\r\n            sprite.rotation = float(char.style.rotation, 0);\r\n            sprite.skew.x = float(char.style.skew, 0);\r\n\r\n            if (!sprite.parent)\r\n                charContainer.addChild(sprite);\r\n        }\r\n\r\n        if (autoWidth) this.width = maxLineWidth;\r\n        if (autoHeight) this.height = yOffset;\r\n    };\r\n\r\n    //updates the renderChar array and position chars for render\r\n    this.prepareForRender = function () {\r\n        var pos = new PIXI.Point(),\r\n            wordIndex = 0,\r\n            lineHeight = 0,\r\n            lineFontSize = 0,\r\n            lineIndex = 0,\r\n            lineAlignment = defaultStyle.align,\r\n            lastSpaceIndex = -1,\r\n            lastSpaceLineWidth = 0,\r\n            textHeight = 0,\r\n            forceNewline = false,\r\n            style,\r\n            renderIndex = 0,\r\n            ellipsis = false,\r\n            lineFull = false,\r\n            i;\r\n\r\n\r\n\r\n\r\n        for (i = 0; i < charCount; i++) {\r\n            var char = chars[i], lastChar = chars[i - 1];\r\n            style = char.style;\r\n\r\n\r\n            //lineheight\r\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\r\n\r\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height) {\r\n                if (style.overflowY === 'hidden')\r\n                    break;\r\n\r\n            }\r\n\r\n            if (char.newline)\r\n                lineFull = false;\r\n\r\n\r\n            //set word index\r\n            if (char.space || char.newline) wordIndex++;\r\n            else char.wordIndex = wordIndex;\r\n\r\n            //textheight\r\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\r\n\r\n            //lineindex\r\n            char.lineIndex = lineIndex;\r\n\r\n            //lineAlignment\r\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\r\n\r\n\r\n            if (char.space) {\r\n                lastSpaceIndex = i;\r\n                lastSpaceLineWidth = pos.x;\r\n            }\r\n\r\n\r\n            var size = Math.round(char.data.width) + float(style.letterSpacing, 0);\r\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width) {\r\n                if (style.wrap) {\r\n                    if (char.space) {\r\n                        forceNewline = true;\r\n                    }\r\n                    else if (lastSpaceIndex !== -1) {\r\n                        renderIndex -= i - lastSpaceIndex;\r\n                        i = lastSpaceIndex - 1;\r\n                        lastSpaceIndex = -1;\r\n                        pos.x = lastSpaceLineWidth;\r\n                        forceNewline = true;\r\n                        continue;\r\n\r\n                    }\r\n                    else if (style.breakWords) {\r\n                        if (lastChar) {\r\n                            pos.x -= lastChar.style.letterSpacing;\r\n                            pos.x -= lastChar.data.width;\r\n                        }\r\n                        i -= 2;\r\n                        renderIndex--;\r\n                        forceNewline = true;\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n                if (style.overflowX == 'hidden' && !forceNewline) {\r\n                    lineFull = true;\r\n                    if (style.ellipsis && !ellipsis) {\r\n                        ellipsis = true;\r\n                        var ellipsisData = lineEllipsisData[lineIndex];\r\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\r\n                        for (var d = 0; d < 3; d++) {\r\n                            var dot = ellipsisData[d];\r\n                            dot.value = \".\";\r\n                            dot.data = atlas.getCharObject(dot.value, style);\r\n                            dot.style = style;\r\n                            dot.x = pos.x + char.data.xOffset;\r\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\r\n                            dot.lineIndex = lineIndex;\r\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\r\n                            renderChars[renderIndex] = dot;\r\n                            renderIndex++;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            //Update position and add to renderchars\r\n            if (!lineFull) {\r\n                //position\r\n                char.x = pos.x + char.data.xOffset;\r\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\r\n                pos.x += size;\r\n                renderChars[renderIndex] = char;\r\n                renderIndex++;\r\n            }\r\n\r\n\r\n\r\n            //new line\r\n            if (forceNewline || char.newline || i === charCount - 1) {\r\n                if (lastChar) {\r\n                    pos.x -= lastChar.style.letterSpacing;\r\n                    if (lastChar.space) pos.x -= lastChar.data.width;\r\n                }\r\n\r\n                if (char.space) {\r\n                    pos.x -= char.data.width;\r\n                    pos.x -= float(style.letterSpacing, 0);\r\n                }\r\n\r\n                textHeight += lineHeight;\r\n                lineHasEllipsis[lineIndex] = ellipsis;\r\n                lineWidthData[lineIndex] = pos.x;\r\n                lineHeightData[lineIndex] = lineHeight;\r\n                lineFontSizeData[lineIndex] = lineFontSize;\r\n                lineAlignmentData[lineIndex] = lineAlignment;\r\n\r\n\r\n                //reset line vaules\r\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\r\n                lineAlignment = defaultStyle.align;\r\n                lastSpaceIndex = -1;\r\n                lineIndex++;\r\n                forceNewline = lineFull = ellipsis = false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        renderCount = renderIndex;\r\n    };\r\n\r\n    //phrases the input text and prepares the char array\r\n    var closeTags = ['</i>', '</b>', '</font>', '</center>'];\r\n    this.processInputText = function () {\r\n        var styleTree = [defaultStyle],\r\n            charIndex = 0,\r\n            inputTextIndex = 0,\r\n            inputArray = Array.from(this._inputText);\r\n\r\n        for (var i = 0; i < inputArray.length; i++) {\r\n            style = styleTree[styleTree.length - 1];\r\n            var c = inputArray[i],\r\n                charcode = c.charCodeAt(0),\r\n                newline = false,\r\n                space = false,\r\n                emoji = false;\r\n\r\n\r\n            //Extract Tags\r\n            if (/(?:\\r\\n|\\r|\\n)/.test(c))\r\n                newline = true;\r\n            else if (/(\\s)/.test(c))\r\n                space = true;\r\n            else if (options.allowTags && c === \"<\") {\r\n                var tag = this._inputText.substring(inputTextIndex);\r\n                tag = tag.slice(0, tag.indexOf(\">\") + 1);\r\n                var FoundTag = true;\r\n                if (tag.length) {\r\n                    if (tag === \"<i>\") {\r\n                        style = style.clone();\r\n                        style.fontStyle = 'italic';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (tag === \"<b>\") {\r\n                        style = style.clone();\r\n                        style.fontWeight = 'bold';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (tag === \"<center>\") {\r\n                        style = style.clone();\r\n                        style.align = 'center';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (closeTags.indexOf(tag) !== -1) {\r\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\r\n                    }\r\n                    else if (tag.startsWith(\"<font \")) {\r\n                        var regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g,\r\n                            match = regex.exec(tag);\r\n\r\n                        if (match !== null) {\r\n                            style = style.clone();\r\n                            while (match !== null) {\r\n                                switch (match[1]) {\r\n                                    case 'family': match[1] = 'fontFamily'; break;\r\n                                    case 'size': match[1] = 'fontSize'; break;\r\n                                    case 'weight': match[1] = 'fontWeight'; break;\r\n                                    case 'style': match[1] = 'fontStyle'; break;\r\n                                    case 'valign': match[1] = 'verticalAlign'; break;\r\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\r\n                                    case 'color': match[1] = 'tint'; break;\r\n\r\n                                }\r\n                                style[match[1]] = match[4];\r\n                                match = regex.exec(tag);\r\n                            }\r\n                            styleTree.push(style);\r\n                        }\r\n                    }\r\n                    else {\r\n                        FoundTag = false;\r\n                    }\r\n\r\n                    if (FoundTag) {\r\n                        inputTextIndex += tag.length;\r\n                        i += tag.length - 1;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //detect emoji\r\n                var emojiMatch = emojiRegex().exec(c);\r\n                if (emojiMatch !== null) {\r\n                    i--; c = '';\r\n                    while (emojiMatch !== null && c !== emojiMatch[0]) {\r\n                        i++;\r\n                        c = emojiMatch[0];\r\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\r\n                    }\r\n                    emoji = true;\r\n                }\r\n            }\r\n\r\n\r\n            //Prepare DynamicChar object\r\n            var char = chars[charIndex];\r\n            if (!char) {\r\n                char = new DynamicChar();\r\n                chars[charIndex] = char;\r\n            }\r\n            char.style = style;\r\n\r\n\r\n            if (emoji) {\r\n                char.style = char.style.clone();\r\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\r\n            }\r\n\r\n            char.data = atlas.getCharObject(c, char.style);\r\n            char.value = c;\r\n            char.space = space;\r\n            char.newline = newline;\r\n            char.emoji = emoji;\r\n\r\n            charIndex++;\r\n            inputTextIndex += c.length;\r\n        }\r\n        charCount = charIndex;\r\n    };\r\n\r\n    //PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\r\n    this.lazyUpdate = null;\r\n    var self = this;\r\n    this.update = function () {\r\n        if (self.lazyUpdate !== null) return;\r\n        self.lazyUpdate = setTimeout(function () {\r\n            \r\n            //console.log(\"UPDATING TEXT\");\r\n            var dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\r\n\r\n            if (self.dirtyText || self.dirtyStyle) {\r\n                self.dirtyText = self.dirtyStyle = false;\r\n                self.dirtyRender = true; //force render after textchange\r\n                self.processInputText();\r\n            }\r\n\r\n            if (dirtySize || self.dirtyRender) {\r\n                self.dirtyRender = false;\r\n                lastWidth = self._width;\r\n                lastHeight = self.height;\r\n                self.prepareForRender();\r\n                self.render();\r\n            }\r\n            self.lazyUpdate = null;\r\n        }, 0);\r\n\r\n    };\r\n}\r\n\r\n\r\nDynamicText.prototype = Object.create(UIBase.prototype);\r\nDynamicText.prototype.constructor = DynamicText;\r\nmodule.exports = DynamicText;\r\nDynamicText.settings = {\r\n    debugSpriteSheet: false,\r\n    defaultEmojiFont: \"Segoe UI Emoji\" //force one font family for emojis so we dont rerender them multiple times\r\n};\r\n\r\nObject.defineProperties(DynamicText.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._inputText;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._inputText) {\r\n                this._inputText = val;\r\n                this.dirtyText = true;\r\n                this.update();\r\n                //console.log(\"Updating Text to: \" + val);\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            \r\n            this.value = val;\r\n        }\r\n    },\r\n    style: {\r\n        get: function () {\r\n            return this._style;\r\n        },\r\n        set: function (val) {\r\n            //get a clean default style\r\n            var style = new DynamicTextStyle(this);\r\n\r\n            //merge it with new style\r\n            style.merge(val);\r\n\r\n            //merge it onto this default style\r\n            this._style.merge(style);\r\n\r\n            this.dirtyStyle = true;\r\n            this.update();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Atlas\r\nvar metricsCanvas = document.createElement(\"canvas\");\r\nvar metricsContext = metricsCanvas.getContext(\"2d\");\r\nmetricsCanvas.width = 100;\r\nmetricsCanvas.height = 100;\r\n\r\n\r\nvar DynamicAtlas = function (padding) {\r\n    var res = devicePixelRatio || 1,\r\n        canvas,\r\n        context,\r\n        objects,\r\n        newObjects = [],\r\n        baseTexture,\r\n        lazyTimeout,\r\n        rootNode,\r\n        canvasList = [],\r\n        atlasdim,\r\n        startdim = 256,\r\n        maxdim = 2048;\r\n\r\n\r\n    var AtlasNode = function (w, h) {\r\n        var children = this.children = [];\r\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\r\n        this.data = null;\r\n\r\n        this.insert = function (width, height, obj) {\r\n            if (children.length > 0) {\r\n                var newNode = children[0].insert(width, height, obj);\r\n                if (newNode !== null) return newNode;\r\n\r\n                return children[1].insert(width, height, obj);\r\n            } else {\r\n                if (this.data !== null) return null;\r\n                if (width > this.rect.width || height > this.rect.height) return null;\r\n                if (width == this.rect.width && height == this.rect.height) {\r\n                    this.data = obj;\r\n                    obj.frame.x = this.rect.x;\r\n                    obj.frame.y = this.rect.y;\r\n                    return this;\r\n                }\r\n\r\n                children.push(new AtlasNode());\r\n                children.push(new AtlasNode());\r\n\r\n                var dw = this.rect.width - width;\r\n                var dh = this.rect.height - height;\r\n\r\n                if (dw > dh) {\r\n                    children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\r\n                    children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\r\n                } else {\r\n                    children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\r\n                    children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\r\n                }\r\n\r\n                return children[0].insert(width, height, obj);\r\n            }\r\n        };\r\n    };\r\n\r\n    var addCanvas = function () {\r\n        //create new canvas\r\n        canvas = document.createElement(\"canvas\");\r\n        context = canvas.getContext(\"2d\");\r\n        canvasList.push(canvas);\r\n\r\n        //reset dimentions\r\n        atlasdim = startdim;\r\n        canvas.width = canvas.height = atlasdim;\r\n        rootNode = new AtlasNode(atlasdim, atlasdim);\r\n\r\n        //reset array with canvas objects and create new atlas\r\n        objects = [];\r\n\r\n        //set new basetexture\r\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\r\n        baseTexture.mipmap = false; //if not, pixi bug resizing POW2\r\n        baseTexture.resolution = 1; //todo: support all resolutions\r\n        baseTexture.update();\r\n\r\n        //Debug Spritesheet\r\n        if (DynamicText.settings.debugSpriteSheet) {\r\n            canvas.className = \"DynamicText_SpriteSheet\";\r\n            document.body.appendChild(canvas);\r\n        }\r\n\r\n    };\r\n\r\n    this.fontFamilyCache = {};\r\n\r\n    var drawObjects = function (arr, resized) {\r\n        if (resized) baseTexture.update();\r\n        for (var i = 0; i < arr.length; i++)\r\n            drawObject(arr[i]);\r\n    };\r\n\r\n    var drawObject = function (obj) {\r\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\r\n        obj.texture.frame = obj.frame;\r\n        obj.texture.update();\r\n    };\r\n\r\n    this.getCharObject = function (char, style) {\r\n        var font = style.ctxFont();\r\n\r\n        //create new cache for fontFamily\r\n        var familyCache = this.fontFamilyCache[font];\r\n        if (!familyCache) {\r\n            familyCache = {};\r\n            this.fontFamilyCache[font] = familyCache;\r\n        }\r\n\r\n\r\n\r\n        //get char data\r\n        var key = style.ctxKey(char);\r\n        var obj = familyCache[key];\r\n        if (!obj) {\r\n            //create char object\r\n            var metrics = generateCharData(char, style);\r\n\r\n\r\n\r\n            //temp resize if doesnt fit (not nesseary when we dont need to generate textures)\r\n            if (metrics.rect) {\r\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height) {\r\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\r\n                    baseTexture.update();\r\n                }\r\n            }\r\n\r\n\r\n            //todo: cleanup when we know whats needed\r\n            obj = {\r\n                metrics: metrics,\r\n                font: font,\r\n                value: char,\r\n                frame: metrics.rect,\r\n                baseTexture: metrics.rect ? baseTexture : null,\r\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\r\n                yOffset: metrics.descent || 0,\r\n                width: metrics.width || 0,\r\n                lineHeight: metrics.lineHeight || 0,\r\n                _cache: metrics.canvas,\r\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null //temp texture\r\n            };\r\n\r\n            //add to collections\r\n            familyCache[key] = obj;\r\n\r\n\r\n            //add to atlas if visible char\r\n            if (metrics.rect) {\r\n                newObjects.push(obj);\r\n\r\n\r\n\r\n                if (lazyTimeout === undefined)\r\n                    lazyTimeout = setTimeout(function () {\r\n                        addNewObjects();\r\n                        lazyTimeout = undefined;\r\n                    }, 0);\r\n\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    var compareFunction = function (a, b) {\r\n        if (a.frame.height < b.frame.height)\r\n            return 1;\r\n\r\n        if (a.frame.height > b.frame.height)\r\n            return -1;\r\n\r\n\r\n        if (a.frame.width < b.frame.width)\r\n            return 1;\r\n\r\n        if (a.frame.width > b.frame.width)\r\n            return -1;\r\n\r\n\r\n        return 0;\r\n    };\r\n\r\n    var addNewObjects = function () {\r\n        newObjects.sort(compareFunction);\r\n        var _resized = false;\r\n        var _newcanvas = false;\r\n\r\n        for (var i = 0; i < newObjects.length; i++) {\r\n            var obj = newObjects[i];\r\n            var node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\r\n\r\n            if (node !== null) {\r\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; //update basetexture if new canvas was created (temp)\r\n                objects.push(obj);\r\n                continue;\r\n            }\r\n\r\n            //step one back (so it will be added after resize/new canvas)\r\n            i--;\r\n\r\n            if (atlasdim < maxdim) {\r\n                _resized = true;\r\n                resizeCanvas(atlasdim * 2);\r\n                continue;\r\n            }\r\n\r\n            //close current spritesheet and make a new one\r\n            drawObjects(objects, _resized);\r\n            addCanvas();\r\n            _newcanvas = true;\r\n            _resized = false;\r\n        }\r\n\r\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\r\n        newObjects = [];\r\n    };\r\n\r\n    var resizeCanvas = function (dim) {\r\n        canvas.width = canvas.height = atlasdim = dim;\r\n\r\n        rootNode = new AtlasNode(dim, dim);\r\n        objects.sort(compareFunction);\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\r\n        }\r\n    };\r\n\r\n    var generateCharData = function (char, style) {\r\n\r\n        var fontSize = Math.max(1, int(style.fontSize, 26)),\r\n            lineHeight = fontSize * 1.25;\r\n\r\n\r\n        //Start our returnobject\r\n        var data = {\r\n            fontSize: fontSize,\r\n            lineHeight: lineHeight,\r\n            width: 0\r\n        };\r\n\r\n        //Return if newline\r\n        if (!char || /(?:\\r\\n|\\r|\\n)/.test(char))\r\n            return data;\r\n\r\n        //Ctx font string\r\n        var font = style.ctxFont();\r\n        metricsContext.font = font;\r\n\r\n        //Get char width\r\n        data.width = Math.round(metricsContext.measureText(char).width);\r\n\r\n        //Return if char = space\r\n        if (/(\\s)/.test(char)) return data;\r\n\r\n        //set canvas size (with padding so we can messure)\r\n        var paddingY = Math.round(fontSize * 0.7), paddingX = Math.max(5, Math.round(fontSize * 0.7));\r\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\r\n        metricsCanvas.height = 1.5 * fontSize;\r\n        var w = metricsCanvas.width, h = metricsCanvas.height, baseline = (h / 2) + (paddingY * 0.5);\r\n\r\n        //set font again after resize\r\n        metricsContext.font = font;\r\n\r\n        //make sure canvas is clean\r\n        metricsContext.clearRect(0, 0, w, h);\r\n\r\n        //save clean state with font\r\n        metricsContext.save();\r\n\r\n        //convert shadow string to shadow data\r\n        var shadowData = function (str) {\r\n            var data = str.trim().split(' ');\r\n            return {\r\n                color: string(data[0], \"#000000\"),\r\n                alpha: float(data[1], 0.5),\r\n                xOffset: float(data[2], 3),\r\n                yOffset: float(data[3], 3),\r\n                blur: float(data[4], 5)\r\n            };\r\n        };\r\n\r\n        //convert fill string to fill data\r\n        var fillData = function (str) {\r\n            var data = str.trim().split(' ');\r\n            var c = string(data[0], \"#FFFFFF\");\r\n            var a = float(data[1], 1);\r\n            return {\r\n                color: c,\r\n                alpha: a,\r\n                position: float(data[2], -1),\r\n                rgba: hexToRgba(c, a)\r\n            };\r\n        };\r\n\r\n        //create fill style from fill string\r\n        var getFillStyle = function (str) {\r\n            var fills = str.split(',').filter(function (s) { return s !== ''; }), i;\r\n\r\n            //convert to fill data\r\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\r\n\r\n            switch (fills.length) {\r\n                case 0: return \"white\";\r\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || \"#FFFFFF\";\r\n                default:\r\n                    //make gradient\r\n                    try {\r\n                        var gradEnd = baseline + lineHeight - fontSize,\r\n                            gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\r\n\r\n                        for (i = 0; i < fills.length; i++)\r\n                            gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color);\r\n\r\n                        return gradient;\r\n                    }\r\n                    catch (e) {\r\n                        return \"#FFFFFF\";\r\n                    }\r\n            }\r\n        };\r\n\r\n\r\n        //function to draw shadows\r\n        var drawShadows = function (shadowString, stroke) {\r\n            var shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\r\n            if (shadows.length) {\r\n                for (var i = 0; i < shadows.length; i++) {\r\n                    var s = shadowData(shadows[i]);\r\n                    metricsContext.globalAlpha = s.alpha;\r\n                    metricsContext.shadowColor = s.color;\r\n                    metricsContext.shadowOffsetX = s.xOffset + w;\r\n                    metricsContext.shadowOffsetY = s.yOffset;\r\n                    metricsContext.shadowBlur = s.blur;\r\n\r\n                    if (stroke) {\r\n                        metricsContext.lineWidth = style.stroke;\r\n                        metricsContext.strokeText(char, paddingX - w, baseline);\r\n                    }\r\n                    else metricsContext.fillText(char, paddingX - w, baseline);\r\n                }\r\n                metricsContext.restore();\r\n            }\r\n        };\r\n\r\n        //draw text shadows\r\n        if (style.shadow.length)\r\n            drawShadows(style.shadow, false);\r\n\r\n        //draw stroke shadows\r\n        if (style.stroke && style.strokeShadow.length) {\r\n            drawShadows(style.strokeShadow, true);\r\n        }\r\n\r\n        //draw text\r\n        metricsContext.fillStyle = getFillStyle(string(style.fill, \"#000000\"));\r\n        metricsContext.fillText(char, paddingX, baseline);\r\n        metricsContext.restore();\r\n\r\n        //draw stroke\r\n        if (style.stroke) {\r\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, \"#000000\"));\r\n            metricsContext.lineWidth = style.stroke;\r\n            metricsContext.strokeText(char, paddingX, baseline);\r\n            metricsContext.restore();\r\n        }\r\n\r\n\r\n        //begin messuring\r\n        var pixelData = metricsContext.getImageData(0, 0, w, h).data;\r\n\r\n        var i = 3,\r\n            line = w * 4,\r\n            len = pixelData.length;\r\n\r\n\r\n\r\n        //scanline on alpha\r\n        while (i < len && !pixelData[i]) { i += 4; }\r\n        var ascent = (i / line) | 0;\r\n\r\n\r\n        if (i < len) {\r\n            //rev scanline on alpha\r\n            i = len - 1;\r\n            while (i > 0 && !pixelData[i]) { i -= 4; }\r\n            var descent = (i / line) | 0;\r\n\r\n\r\n            //left to right scanline on alpha\r\n            for (i = 3; i < len && !pixelData[i];) {\r\n                i += line;\r\n                if (i >= len) { i = (i - len) + 4; }\r\n            }\r\n            var minx = ((i % line) / 4) | 0;\r\n\r\n            //right to left scanline on alpha\r\n            var step = 1;\r\n            for (i = len - 1; i >= 0 && !pixelData[i];) {\r\n                i -= line;\r\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\r\n            }\r\n            var maxx = ((i % line) / 4) + 1 | 0;\r\n\r\n\r\n            // set font metrics\r\n            data.ascent = Math.round(baseline - ascent);\r\n            data.descent = Math.round(descent - baseline);\r\n            data.height = 1 + Math.round(descent - ascent);\r\n            data.bounds = {\r\n                minx: minx - paddingX,\r\n                maxx: maxx - paddingX,\r\n                miny: 0,\r\n                maxy: descent - ascent\r\n            };\r\n            data.rect = {\r\n                x: data.bounds.minx,\r\n                y: -data.ascent - 2,\r\n                width: data.bounds.maxx - data.bounds.minx + 2,\r\n                height: data.ascent + data.descent + 4\r\n            };\r\n\r\n\r\n            //cache (for fast rearrange later)\r\n            data.canvas = document.createElement(\"canvas\");\r\n            data.canvas.width = data.rect.width;\r\n            data.canvas.height = data.rect.height;\r\n            var c = data.canvas.getContext(\"2d\");\r\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\r\n\r\n            //reset rect position\r\n            data.rect.x = data.rect.y = 0;\r\n\r\n\r\n        }\r\n        return data;\r\n    };\r\n\r\n    addCanvas();\r\n};\r\n\r\n\r\n\r\n//helper function for float or default\r\nfunction float(val, def) {\r\n    if (isNaN(val)) return def;\r\n    return parseFloat(val);\r\n}\r\n\r\n//helper function for int or default\r\nfunction int(val, def) {\r\n    if (isNaN(val)) return def;\r\n    return parseInt(val);\r\n}\r\n\r\n//helper function for string or default\r\nfunction string(val, def) {\r\n    if (typeof val === 'string' && val.length) return val;\r\n    return def;\r\n}\r\n\r\n//helper function to convert string hex to int or default\r\nfunction hexToInt(str, def) {\r\n    if (typeof str === 'number')\r\n        return str;\r\n\r\n    var result = parseInt(str.replace('#', '0x'));\r\n\r\n    if (isNaN(result)) return def;\r\n    return result;\r\n}\r\n\r\n//helper function to convert hex to rgba\r\nfunction hexToRgba(hex, alpha) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    alpha = float(alpha, 1);\r\n    return result ? \"rgba(\" + parseInt(result[1], 16) + \",\" + parseInt(result[2], 16) + \",\" + parseInt(result[3], 16) + \",\" + alpha + \")\" : false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","function DynamicTextStyle(parent) {\r\n    this.respectDirty = true;\r\n    this._parent = parent || null;\r\n    this._scale = 1;\r\n    this._align = 'left';\r\n    this._fontFamily = 'Arial';\r\n    this._fontSize = 26;\r\n    this._fontWeight = 'normal';\r\n    this._fontStyle = 'normal';\r\n    this._letterSpacing = 0;\r\n    this._lineHeight = 0;\r\n    this._verticalAlign = 0;\r\n    this._rotation = 0;\r\n    this._skew = 0;\r\n    this._tint = \"#FFFFFF\";\r\n    this._fill = '#FFFFFF';\r\n    this._shadow = '';\r\n    this._stroke = 0;\r\n    this._strokeFill = '';\r\n    this._strokeShadow = '';\r\n    this._wrap = true;\r\n    this._breakWords = false;\r\n    this._overflowX = 'visible'; //visible|hidden\r\n    this._overflowY = 'visible'; //visible|hidden\r\n    this._ellipsis = false;\r\n\r\n\r\n    var _cachedEllipsisSize = null;\r\n    this.ellipsisSize = function (atlas) {\r\n        if (!this.ellipsis) return 0;\r\n        if (_cachedEllipsisSize === null)\r\n            _cachedEllipsisSize = (atlas.getCharObject(\".\", this).width + this.letterSpacing) * 3;\r\n        return _cachedEllipsisSize;\r\n    };\r\n}\r\n\r\n\r\nDynamicTextStyle.prototype.clone = function () {\r\n    var style = new DynamicTextStyle();\r\n    style.merge(this);\r\n    return style;\r\n};\r\n\r\nDynamicTextStyle.prototype.merge = function (style) {\r\n\r\n    if (typeof style === 'object') {\r\n        this.respectDirty = false;\r\n        for (var param in style) {\r\n            var val = style[param];\r\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\r\n            this[param] = style[param];\r\n        }\r\n        this.respectDirty = true;\r\n        this._dirty = true;\r\n    }\r\n};\r\n\r\nDynamicTextStyle.prototype.ctxKey = function (char) {\r\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\r\n};\r\n\r\nDynamicTextStyle.prototype.ctxFont = function () {\r\n    var fontSize = Math.min(200, Math.max(1, this.fontSize || 26)) + \"px \";\r\n    var fontWeight = this.fontWeight === \"bold\" ? this.fontWeight + \" \" : \"\";\r\n    var fontStyle = this.fontStyle === \"italic\" || this.fontStyle === \"oblique\" ? this.fontStyle + \" \" : \"\";\r\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\r\n};\r\n\r\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\r\nmodule.exports = DynamicTextStyle;\r\n\r\nObject.defineProperties(DynamicTextStyle.prototype, {\r\n    _dirty: {\r\n        set: function (val) {\r\n            if (this.respectDirty) {\r\n                if (this._parent !== null) {\r\n                    this._parent.dirtyStyle = val;\r\n                    this._parent.update();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._scale) {\r\n                this._scale = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    align: {\r\n        get: function () {\r\n            return this._align;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._align) {\r\n                this._align = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontFamily: {\r\n        get: function () {\r\n            return this._fontFamily;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontFamily) {\r\n                this._fontFamily = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontSize: {\r\n        get: function () {\r\n            return this._fontSize;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontSize) {\r\n                this._fontSize = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontWeight: {\r\n        get: function () {\r\n            return this._fontWeight;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontWeight) {\r\n                this._fontWeight = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fontStyle: {\r\n        get: function () {\r\n            return this._fontStyle;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fontStyle) {\r\n                this._fontStyle = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    letterSpacing: {\r\n        get: function () {\r\n            return this._letterSpacing;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._letterSpacing) {\r\n                this._letterSpacing = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    lineHeight: {\r\n        get: function () {\r\n            return this._lineHeight;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._lineHeight) {\r\n                this._lineHeight = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    verticalAlign: {\r\n        get: function () {\r\n            return this._verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._verticalAlign) {\r\n                this._verticalAlign = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._rotation) {\r\n                this._rotation = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    skew: {\r\n        get: function () {\r\n            return this._skew;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._skew) {\r\n                this._skew = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    tint: {\r\n        get: function () {\r\n            return this._tint;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._tint) {\r\n                this._tint = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    fill: {\r\n        get: function () {\r\n            return this._fill;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._fill) {\r\n                this._fill = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    shadow: {\r\n        get: function () {\r\n            return this._shadow;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._shadow) {\r\n                this._shadow = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    stroke: {\r\n        get: function () {\r\n            return this._stroke;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._stroke) {\r\n                this._stroke = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    strokeFill: {\r\n        get: function () {\r\n            return this._strokeFill;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._strokeFill) {\r\n                this._strokeFill = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    strokeShadow: {\r\n        get: function () {\r\n            return this._strokeShadow;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._strokeShadow) {\r\n                this._strokeShadow = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    wrap: {\r\n        get: function () {\r\n            return this._wrap;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._wrap) {\r\n                this._wrap = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    breakWords: {\r\n        get: function () {\r\n            return this._breakWords;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._breakWords) {\r\n                this._breakWords = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    overflowX: {\r\n        get: function () {\r\n            return this._overflowX;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._overflowX) {\r\n                this._overflowX = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    overflowY: {\r\n        get: function () {\r\n            return this._overflowY;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._overflowY) {\r\n                this._overflowY = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    },\r\n    ellipsis: {\r\n        get: function () {\r\n            return this._ellipsis;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._ellipsis) {\r\n                this._ellipsis = val;\r\n                this._dirty = true;\r\n            }\r\n        }\r\n    }\r\n});","var Ease = {},\r\n    EaseBase = require('./EaseBase'),\r\n    ExponentialEase = require('./ExponentialEase'),\r\n    HALF_PI = Math.PI * 0.5;\r\n\r\nfunction create(fn) {\r\n    var e = Object.create(EaseBase.prototype);\r\n    e.getPosition = fn;\r\n    return e;\r\n}\r\n\r\n\r\n//Liear\r\nEase.Linear = new EaseBase();\r\n\r\n//Exponetial Eases\r\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction) {\r\n    return {\r\n        easeIn: easeInFunction,\r\n        easeOut: easeOutFunction,\r\n        easeInOut: easeInOutFunction\r\n    };\r\n}\r\n\r\nEase.Power0 = {\r\n    \"easeNone\" : Ease.Linear,\r\n};\r\n\r\nEase.Power1 = Ease.Quad = wrapEase(\r\n    new ExponentialEase(1, 1, 0),\r\n    new ExponentialEase(1, 0, 1),\r\n    new ExponentialEase(1, 1, 1));\r\n\r\nEase.Power2 = Ease.Cubic = wrapEase(\r\n    new ExponentialEase(2, 1, 0),\r\n    new ExponentialEase(2, 0, 1),\r\n    new ExponentialEase(2, 1, 1));\r\n\r\nEase.Power3 = Ease.Quart = wrapEase(\r\n    new ExponentialEase(3, 1, 0),\r\n    new ExponentialEase(3, 0, 1),\r\n    new ExponentialEase(3, 1, 1));\r\n\r\nEase.Power4 = Ease.Quint = wrapEase(\r\n    new ExponentialEase(4, 1, 0),\r\n    new ExponentialEase(4, 0, 1),\r\n    new ExponentialEase(4, 1, 1));\r\n\r\n\r\n//Bounce\r\nEase.Bounce = {\r\n    \"BounceIn\": create(function (p) {\r\n        if ((p = 1 - p) < 1 / 2.75) {\r\n            return 1 - (7.5625 * p * p);\r\n        } else if (p < 2 / 2.75) {\r\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\r\n        } else if (p < 2.5 / 2.75) {\r\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\r\n        }\r\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\r\n    }),\r\n    \"BounceOut\": create(function (p) {\r\n        if (p < 1 / 2.75) {\r\n            return 7.5625 * p * p;\r\n        } else if (p < 2 / 2.75) {\r\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\r\n        } else if (p < 2.5 / 2.75) {\r\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\r\n        }\r\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\r\n    }),\r\n    \"BounceInOut\": create(function (p) {\r\n        var invert = (p < 0.5);\r\n        if (invert) {\r\n            p = 1 - (p * 2);\r\n        } else {\r\n            p = (p * 2) - 1;\r\n        }\r\n        if (p < 1 / 2.75) {\r\n            p = 7.5625 * p * p;\r\n        } else if (p < 2 / 2.75) {\r\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\r\n        } else if (p < 2.5 / 2.75) {\r\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\r\n        } else {\r\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\r\n        }\r\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\r\n    })\r\n};\r\n\r\n//Circ\r\nEase.Circ = {\r\n    \"CircIn\": create(function (p) {\r\n        return -(Math.sqrt(1 - (p * p)) - 1);\r\n    }),\r\n    \"CircOut\": create(function (p) {\r\n        return Math.sqrt(1 - (p = p - 1) * p);\r\n    }),\r\n    \"CircInOut\": create(function (p) {\r\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\r\n    })\r\n};\r\n\r\n\r\n//Expo\r\nEase.Expo = {\r\n    \"ExpoIn\": create(function (p) {\r\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\r\n    }),\r\n    \"ExpoOut\": create(function (p) {\r\n        return 1 - Math.pow(2, -10 * p);\r\n    }),\r\n    \"ExpoInOut\": create(function (p) {\r\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n    })\r\n};\r\n\r\n\r\n//Sine\r\nEase.Sine = {\r\n    \"SineIn\": create(function (p) {\r\n        return -Math.cos(p * HALF_PI) + 1;\r\n    }),\r\n    \"SineOut\": create(function (p) {\r\n        return Math.sin(p * HALF_PI);\r\n    }),\r\n    \"SineInOut\": create(function (p) {\r\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\r\n    })\r\n};\r\n\r\n\r\nmodule.exports = Ease;\r\n\r\n\r\n","function EaseBase() {\r\n    this.getPosition = function (p) {\r\n        return p;\r\n    };\r\n}\r\n\r\nEaseBase.prototype.constructor = EaseBase;\r\nmodule.exports = EaseBase;\r\n\r\n\r\n\r\n","var EaseBase = require('./EaseBase');\r\n\r\nfunction ExponentialEase(power, easeIn, easeOut) {\r\n    var pow = power;\r\n    var t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\r\n    this.getPosition = function (p) {\r\n        var r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n        if (pow === 1) {\r\n            r *= r;\r\n        } else if (pow === 2) {\r\n            r *= r * r;\r\n        } else if (pow === 3) {\r\n            r *= r * r * r;\r\n        } else if (pow === 4) {\r\n            r *= r * r * r * r;\r\n        }\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\r\n    };\r\n}\r\n\r\nExponentialEase.prototype = Object.create(EaseBase.prototype);\r\nExponentialEase.prototype.constructor = ExponentialEase;\r\nmodule.exports = ExponentialEase;\r\n\r\n\r\n\r\n","var Helpers = {\r\n    Lerp: function (start, stop, amt) {\r\n        if (amt > 1) amt = 1;\r\n        else if (amt < 0) amt = 0;\r\n        return start + (stop - start) * amt;\r\n    },\r\n    Round: function(number, decimals) {\r\n        var pow = Math.pow(10, decimals);\r\n        return Math.round(number * pow) / pow;\r\n    },\r\n    componentToHex: function(c) {\r\n       var hex = c.toString(16);\r\n       return hex.length == 1 ? \"0\" + hex : hex;\r\n    },\r\n    rgbToHex: function(r, g, b) {\r\n        return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n    },\r\n    rgbToNumber: function (r, g, b) {\r\n        return r * 65536 + g * 256 + b;\r\n    },\r\n    numberToRgb: function (c) {\r\n        return {\r\n            r: Math.floor(c / (256 * 256)),\r\n            g: Math.floor(c / 256) % 256,\r\n            b: c % 256,\r\n        };\r\n    },\r\n    hexToRgb: function (hex) {\r\n        if (hex === null)\r\n            hex = 0xffffff;\r\n\r\n        if (!isNaN(hex)) return this.numberToRgb(hex);\r\n\r\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n            return r + r + g + g + b + b;\r\n        });\r\n\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n};\r\n\r\nmodule.exports = Helpers;","var UIBase = require('./UIBase'),\r\n    InputController = require('./Interaction/InputController'),\r\n    ClickEvent = require('./Interaction/ClickEvent');\r\n/**\r\n * base object for all Input type objects\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {number} passed to uibase\r\n * @param height {number} passed to uibase\r\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\r\n */\r\nfunction InputBase(width, height, tabIndex, tabGroup) {\r\n    UIBase.call(this, width, height);\r\n    var self = this;\r\n    this._focused = false;\r\n    this._useTab = this._usePrev = this._useNext = true;\r\n    this.container.interactive = true;\r\n    InputController.registrer(this, tabIndex, tabGroup);\r\n\r\n\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 9) {\r\n            if (self._useTab) {\r\n                InputController.fireTab();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (e.which === 38) {\r\n            if (self._usePrev) {\r\n                InputController.firePrev();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (e.which === 40) {\r\n            if (self._useNext) {\r\n                InputController.fireNext();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    var documentMouseDown = function (e) {\r\n        if (!self.__down)\r\n            self.blur();\r\n    };\r\n\r\n    this.container.on(\"pointerdown\", function (e) {\r\n        self.focus();\r\n        self.__down = true;\r\n    });\r\n\r\n    this.container.on(\"pointerup\", function (e) {\r\n        self.__down = false;\r\n    });\r\n\r\n    this.container.on(\"pointerupoutside\", function (e) {\r\n        self.__down = false;\r\n    });\r\n\r\n    //var cancelFocusEvent = new ClickEvent(this.stage)\r\n\r\n    this._bindEvents = function () {\r\n        if (this.stage !== null) {\r\n            this.stage.on(\"pointerdown\", documentMouseDown);\r\n            document.addEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n\r\n    this._clearEvents = function () {\r\n        if (this.stage !== null) {\r\n            this.stage.off(\"pointerdown\", documentMouseDown);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nInputBase.prototype = Object.create(UIBase.prototype);\r\nInputBase.prototype.constructor = InputBase;\r\nmodule.exports = InputBase;\r\n\r\nInputBase.prototype.focus = function () {\r\n    if (!this._focused) {\r\n        this._focused = true;\r\n        this._bindEvents();\r\n        InputController.set(this);\r\n        this.emit(\"focusChanged\", true);\r\n        this.emit(\"focus\");\r\n\r\n    }\r\n};\r\n\r\nInputBase.prototype.blur = function () {\r\n    if (this._focused) {\r\n        InputController.clear();\r\n        this._focused = false;\r\n        this._clearEvents();\r\n        this.emit(\"focusChanged\", false);\r\n        this.emit(\"blur\");\r\n\r\n    }\r\n};","var ClickEvent = function (obj, includeHover, rightMouseButton) {\r\n\r\n\r\n\r\n    var bound = false,\r\n        self = this,\r\n        id = 0,\r\n        ishover = false,\r\n        mouse = new PIXI.Point(),\r\n        offset = new PIXI.Point(),\r\n        movementX = 0,\r\n        movementY = 0,\r\n        right = typeof rightMouseButton === 'undefined' ? false : rightMouseButton,\r\n        hover = typeof includeHover === 'undefined' ? true : includeHover;\r\n\r\n    var eventname_mousedown = right ? \"rightdown\" : \"mousedown\";\r\n    var eventname_mouseup = right ? \"rightup\" : \"mouseup\";\r\n    var eventname_mouseupoutside = right ? \"rightupoutside\" : \"mouseupoutside\";\r\n\r\n    obj.container.interactive = true;\r\n\r\n    var _onMouseDown = function (event) {\r\n        mouse.copy(event.data.global);\r\n        id = event.data.identifier;\r\n        self.onPress.call(obj, event, true);\r\n        if (!bound) {\r\n            obj.container.on(eventname_mouseup, _onMouseUp);\r\n            obj.container.on(eventname_mouseupoutside, _onMouseUpOutside);\r\n            if (!right) {\r\n                obj.container.on('touchend', _onMouseUp);\r\n                obj.container.on('touchendoutside', _onMouseUpOutside);\r\n            }\r\n            bound = true;\r\n        }\r\n        event.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    var _mouseUpAll = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        offset.set(event.data.global.x - mouse.x, event.data.global.y - mouse.y);\r\n        if (bound) {\r\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\r\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\r\n            if (!right) {\r\n                obj.container.removeListener('touchend', _onMouseUp);\r\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\r\n            }\r\n            bound = false;\r\n        }\r\n        self.onPress.call(obj, event, false);\r\n    };\r\n\r\n    var _onMouseUp = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        _mouseUpAll(event);\r\n\r\n        //prevent clicks with scrolling/dragging objects\r\n        if (obj.dragThreshold) {\r\n            movementX = Math.abs(offset.x);\r\n            movementY = Math.abs(offset.y);\r\n            if (Math.max(movementX, movementY) > obj.dragThreshold) return;\r\n        }\r\n\r\n\r\n        self.onClick.call(obj, event);\r\n    };\r\n\r\n    var _onMouseUpOutside = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        _mouseUpAll(event);\r\n    };\r\n\r\n    var _onMouseOver = function (event) {\r\n        if (!ishover) {\r\n            ishover = true;\r\n            self.onHover.call(obj, event);\r\n        }\r\n    };\r\n\r\n    var _onMouseOut = function (event) {\r\n        if (ishover) {\r\n            ishover = false;\r\n            self.onLeave.call(obj, event);\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\r\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\r\n\r\n            if (!right) {\r\n                obj.container.removeListener('touchend', _onMouseUp);\r\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\r\n            }\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener(eventname_mousedown, _onMouseDown);\r\n        if (!right) obj.container.removeListener('touchstart', _onMouseDown);\r\n\r\n        if (hover) {\r\n            obj.container.removeListener('mouseover', _onMouseOver);\r\n            obj.container.removeListener('mouseout', _onMouseOut);\r\n        }\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on(eventname_mousedown, _onMouseDown);\r\n        if (!right) obj.container.on('touchstart', _onMouseDown);\r\n\r\n        if (hover) {\r\n            obj.container.on('mouseover', _onMouseOver);\r\n            obj.container.on('mouseout', _onMouseOut);\r\n        }\r\n    };\r\n\r\n    this.startEvent();\r\n};\r\n\r\nClickEvent.prototype.constructor = ClickEvent;\r\nmodule.exports = ClickEvent;\r\n\r\nClickEvent.prototype.onHover = function (event) { };\r\nClickEvent.prototype.onLeave = function (event) { };\r\nClickEvent.prototype.onPress = function (event, isPressed) { };\r\nClickEvent.prototype.onClick = function (event) { };","var _items = [];\r\nvar DragDropController = {\r\n    add: function (item, event) {\r\n        item._dragDropEventId = event.data.identifier;\r\n        if (_items.indexOf(item) === -1) {\r\n            _items.push(item);\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    getItem: function (object) {\r\n        var item = null, index;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] === object) {\r\n                item = _items[i];\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (item !== null) {\r\n            _items.splice(index, 1);\r\n            return item;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n    getEventItem: function (event, group) {\r\n        var item = null, index, id = event.data.identifier;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i]._dragDropEventId === id) {\r\n                if (group !== _items[i].dragGroup) {\r\n                    return false;\r\n                }\r\n                item = _items[i];\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (item !== null) {\r\n            _items.splice(index, 1);\r\n            return item;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = DragDropController;","var DragEvent = function (obj) {\r\n    var bound = false,\r\n        start = new PIXI.Point(),\r\n        offset = new PIXI.Point(),\r\n        mouse = new PIXI.Point(),\r\n        movementX = 0,\r\n        movementY = 0,\r\n        cancel = false,\r\n        dragging = false,\r\n        self = this,\r\n        id = 0;\r\n\r\n    obj.container.interactive = true;\r\n\r\n    var _onDragStart = function (e) {\r\n        id = e.data.identifier;\r\n        self.onPress.call(obj, e, true);\r\n        if (!bound) {\r\n            start.copy(e.data.global);\r\n            obj.stage.on('mousemove', _onDragMove);\r\n            obj.stage.on('touchmove', _onDragMove);\r\n            obj.stage.on('mouseup', _onDragEnd);\r\n            obj.stage.on('mouseupoutside', _onDragEnd);\r\n            obj.stage.on('touchend', _onDragEnd);\r\n            obj.stage.on('touchendoutside', _onDragEnd);\r\n            obj.stage.on('touchcancel', _onDragEnd);\r\n            bound = true;\r\n        }\r\n\r\n        e.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    var _onDragMove = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        mouse.copy(event.data.global);\r\n        offset.set(mouse.x - start.x, mouse.y - start.y);\r\n        if (!dragging) {\r\n            movementX = Math.abs(offset.x);\r\n            movementY = Math.abs(offset.y);\r\n            if (movementX === 0 && movementY === 0 || Math.max(movementX, movementY) < obj.dragThreshold) return; //thresshold\r\n            if (obj.dragRestrictAxis !== null) {\r\n                cancel = false;\r\n                if (obj.dragRestrictAxis == \"x\" && movementY > movementX) cancel = true;\r\n                else if (obj.dragRestrictAxis == \"y\" && movementY <= movementX) cancel = true;\r\n                if (cancel) {\r\n                    _onDragEnd(event);\r\n                    return;\r\n                }\r\n            }\r\n            self.onDragStart.call(obj, event);\r\n            dragging = true;\r\n        }\r\n        self.onDragMove.call(obj, event, offset);\r\n    };\r\n\r\n    var _onDragEnd = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        if (bound) {\r\n            obj.stage.removeListener('mousemove', _onDragMove);\r\n            obj.stage.removeListener('touchmove', _onDragMove);\r\n            obj.stage.removeListener('mouseup', _onDragEnd);\r\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchend', _onDragEnd);\r\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchcancel', _onDragEnd);\r\n            dragging = false;\r\n            bound = false;\r\n            self.onDragEnd.call(obj, event);\r\n            self.onPress.call(obj, event, false);\r\n\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            obj.stage.removeListener('mousemove', _onDragMove);\r\n            obj.stage.removeListener('touchmove', _onDragMove);\r\n            obj.stage.removeListener('mouseup', _onDragEnd);\r\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchend', _onDragEnd);\r\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mousedown', _onDragStart);\r\n        obj.container.removeListener('touchstart', _onDragStart);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mousedown', _onDragStart);\r\n        obj.container.on('touchstart', _onDragStart);\r\n    };\r\n\r\n    this.startEvent();\r\n};\r\n\r\nDragEvent.prototype.constructor = DragEvent;\r\nmodule.exports = DragEvent;\r\n\r\nDragEvent.prototype.onPress = function (event, isPressed) { };\r\nDragEvent.prototype.onDragEnd = function (event) { };\r\nDragEvent.prototype.onDragMove = function (event, offset) { };\r\nDragEvent.prototype.onDragStart = function (event) { };","var _currentItem;\r\nvar tabGroups = {};\r\nvar checkGroups = {};\r\nvar checkGroupValues = {};\r\n\r\nvar InputController = {\r\n    registrer: function (item, tabIndex, tabGroup) {\r\n        var groupName = tabGroup || \"default\";\r\n\r\n        var items = tabGroups[groupName];\r\n        if (!items)\r\n            items = tabGroups[groupName] = [];\r\n\r\n        var i = items.indexOf(item);\r\n        if (i === -1) {\r\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\r\n            item._tabGroup = items;\r\n            items.push(item);\r\n            items.sort(function (a, b) {\r\n                if (a._tabIndex < b._tabIndex)\r\n                    return -1;\r\n                if (a._tabIndex > b._tabIndex)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n        }\r\n    },\r\n    set: function (item) {\r\n        if (_currentItem && typeof _currentItem.blur === \"function\")\r\n            _currentItem.blur();\r\n        _currentItem = item;\r\n    },\r\n    clear: function () {\r\n        _currentItem = undefined;\r\n    },\r\n    fireTab: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\r\n            if (i >= _currentItem._tabGroup.length) i = 0;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    fireNext: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\r\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    firePrev: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\r\n            if (i < 0) i = 0;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    registrerCheckGroup: function (cb) {\r\n        var name = cb.checkGroup;\r\n        var group = checkGroups[name];\r\n        if (!group) group = checkGroups[name] = {};\r\n        group[cb.value] = cb;\r\n\r\n        if (cb.checked)\r\n            checkGroupValues[name] = cb.value;\r\n    },\r\n    updateCheckGroupSelected: function (cb) {\r\n        var group = checkGroups[cb.checkGroup];\r\n        for (var val in group) {\r\n            var b = group[val];\r\n            if (b !== cb)\r\n                b.checked = false;\r\n        }\r\n        checkGroupValues[cb.checkGroup] = cb.value;\r\n    },\r\n    getCheckGroupSelectedValue: function (name) {\r\n        if (checkGroupValues[name])\r\n            return checkGroupValues[name];\r\n        return \"\";\r\n    },\r\n    setCheckGroupSelectedValue: function (name, val) {\r\n        var group = checkGroups[name];\r\n        if (group) {\r\n            var cb = group[val];\r\n            if (cb) {\r\n                cb.checked = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = InputController;","var Interaction = {\r\n    ClickEvent: require('./ClickEvent'),\r\n    DragEvent: require('./DragEvent'),\r\n    MouseScrollEvent: require('./MouseScrollEvent')\r\n};\r\n\r\n\r\nmodule.exports = Interaction;","var MouseScrollEvent = function (obj, preventDefault) {\r\n    var bound = false, delta = new PIXI.Point(), self = this;\r\n    obj.container.interactive = true;\r\n\r\n    var _onMouseScroll = function (event) {\r\n        if (preventDefault)\r\n            event.preventDefault();\r\n\r\n        delta.set(event.deltaX, event.deltaY);\r\n        self.onMouseScroll.call(obj, event, delta);\r\n    };\r\n\r\n    var _onHover = function (event) {\r\n        if (!bound) {\r\n            document.addEventListener(\"mousewheel\", _onMouseScroll, false);\r\n            document.addEventListener(\"DOMMouseScroll\", _onMouseScroll, false);\r\n            bound = true;\r\n        }\r\n    };\r\n\r\n    var _onMouseOut = function (event) {\r\n        if (bound) {\r\n            document.removeEventListener(\"mousewheel\", _onMouseScroll);\r\n            document.removeEventListener(\"DOMMouseScroll\", _onMouseScroll);\r\n            bound = false;\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            document.removeEventListener(\"mousewheel\", _onMouseScroll);\r\n            document.removeEventListener(\"DOMMouseScroll\", _onMouseScroll);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mouseover', _onHover);\r\n        obj.container.removeListener('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mouseover', _onHover);\r\n        obj.container.on('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent();\r\n\r\n    \r\n};\r\n\r\nMouseScrollEvent.prototype.constructor = MouseScrollEvent;\r\nmodule.exports = MouseScrollEvent;\r\n\r\nMouseScrollEvent.prototype.onMouseScroll = function (event, delta) { };","var Slider = require('./Slider'),\r\n    Tween = require('./Tween'),\r\n    Ease = require('./Ease/Ease');\r\n\r\n/**\r\n* An UI scrollbar to control a ScrollingContainer\r\n* \r\n* @class\r\n* @extends PIXI.UI.Slider\r\n* @memberof PIXI.UI\r\n* @param options {Object} ScrollBar settings\r\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\r\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\r\n* @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\r\n* @param [options.vertical=false] {boolean} Direction of the scrollbar\r\n* @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\r\n*\r\n*/\r\nfunction ScrollBar(options) {\r\n    Slider.call(this, { track: options.track, handle: options.handle, fill: null, vertical: options.vertical });\r\n    this.scrollingContainer = options.scrollingContainer;\r\n    this.autohide = options.autohide;\r\n    this._hidden = false;\r\n\r\n}\r\n\r\nScrollBar.prototype = Object.create(Slider.prototype);\r\nScrollBar.prototype.constructor = ScrollBar;\r\nmodule.exports = ScrollBar;\r\n\r\n\r\nScrollBar.prototype.initialize = function () {\r\n    Slider.prototype.initialize.call(this);\r\n    this.decimals = 3; //up decimals to trigger ValueChanging more often\r\n\r\n    this._onValueChanging = function (val) {\r\n        var sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\r\n        if (sizeAmt < 1)\r\n            this.scrollingContainer.forcePctPosition(this.vertical ? \"y\" : \"x\", this._amt);\r\n    };\r\n\r\n    this.scrollingContainer._scrollBars.push(this);\r\n\r\n};\r\n\r\nScrollBar.prototype.alignToContainer = function () {\r\n    var newPos,\r\n        size,\r\n        x_y = this.vertical ? \"y\" : \"x\",\r\n        width_height = this.vertical ? \"height\" : \"width\",\r\n        top_left = this.vertical ? \"top\" : \"left\",\r\n        _posAmt = !this.scrollingContainer.innerContainer[width_height] ? 0 : -(this.scrollingContainer.innerContainer[x_y] / this.scrollingContainer.innerContainer[width_height]),\r\n        sizeAmt = !this.scrollingContainer.innerContainer[width_height] ? 1 : this.scrollingContainer[\"_\" + width_height] / this.scrollingContainer.innerContainer[width_height];\r\n\r\n    //update amt\r\n    this._amt = !this.scrollingContainer[\"_\" + width_height] ? 0 : -(this.scrollingContainer.innerContainer[x_y] / (this.scrollingContainer.innerContainer[width_height] - this.scrollingContainer[\"_\" + width_height]));\r\n\r\n    if (sizeAmt >= 1) {\r\n        size = this[\"_\" + width_height];\r\n        this.handle[top_left] = size * 0.5;\r\n        this.toggleHidden(true);\r\n    }\r\n    else {\r\n        size = this[\"_\" + width_height] * sizeAmt;\r\n        if (this._amt > 1) size -= (this[\"_\" + width_height] - size) * (this._amt - 1);\r\n        else if (this._amt < 0) size -= (this[\"_\" + width_height] - size) * -this._amt;\r\n        if (this._amt < 0) newPos = size * 0.5;\r\n        else if (this._amt > 1) newPos = this[\"_\" + width_height] - size * 0.5;\r\n        else newPos = (_posAmt * this.scrollingContainer[\"_\" + width_height]) + (size * 0.5);\r\n        this.handle[top_left] = newPos;\r\n        this.toggleHidden(false);\r\n    }\r\n    this.handle[width_height] = size;\r\n};\r\n\r\n\r\nScrollBar.prototype.toggleHidden = function (hidden) {\r\n    if (this.autohide) {\r\n        if (hidden && !this._hidden) {\r\n            Tween.to(this, 0.2, { alpha: 0 });\r\n            this._hidden = true;\r\n        }\r\n        else if (!hidden && this._hidden) {\r\n            Tween.to(this, 0.2, { alpha: 1 });\r\n            this._hidden = false;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    Container = require('./Container'),\r\n    Helpers = require('./Helpers'),\r\n    Ticker = require('./Ticker'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    MouseScrollEvent = require('./Interaction/MouseScrollEvent');\r\n\r\n\r\n/**\r\n * An UI Container object with expandMask hidden and possibility to enable scrolling\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\r\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\r\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\r\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\r\n * @param [options.width=0] {Number|String} container width \r\n * @param [options.height=0] {Number} container height \r\n * @param [options.radius=0] {Number} corner radius of clipping mask\r\n * @param [options.expandMask=0] {Number} mask expand (px)\r\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\r\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\r\n */\r\nfunction ScrollingContainer(options) {\r\n    options = options || {};\r\n    Container.call(this, options.width, options.height);\r\n    this.mask = new PIXI.Graphics();\r\n    this.innerContainer = new PIXI.Container();\r\n    this.innerBounds = new PIXI.Rectangle();\r\n    this.container.addChild(this.mask);\r\n    this.container.addChild(this.innerContainer);\r\n    this.container.mask = this.mask;\r\n    this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\r\n    this.scrollY = options.scrollY !== undefined ? options.scrollY : true;\r\n    this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\r\n    this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\r\n    this.radius = options.radius || 0;\r\n    this.expandMask = options.expandMask || 0;\r\n    this.overflowY = options.overflowY || 0;\r\n    this.overflowX = options.overflowX || 0;\r\n\r\n    this.animating = false;\r\n    this.scrolling = false;\r\n    this._scrollBars = [];\r\n\r\n    this.boundCached = performance.now() - 1000;\r\n}\r\n\r\n\r\nScrollingContainer.prototype = Object.create(Container.prototype);\r\nScrollingContainer.prototype.constructor = ScrollingContainer;\r\nmodule.exports = ScrollingContainer;\r\n\r\n\r\nScrollingContainer.prototype.initialize = function () {\r\n    Container.prototype.initialize.apply(this);\r\n    if (this.scrollX || this.scrollY) {\r\n        this.initScrolling();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.update = function () {\r\n    Container.prototype.update.apply(this);\r\n    if (this._lastWidth != this._width || this._lastHeight != this._height) {\r\n        var of = this.expandMask;\r\n        this.mask.clear();\r\n        this.mask.lineStyle(0);\r\n        this.mask.beginFill(0xFFFFFF, 1);\r\n        if (this.radius === 0) {\r\n\r\n            //this.mask.drawRect(0, 0, this._width, this._height);\r\n            //this.mask.drawRect(-of, -of, this._width + of, this.height + of);\r\n            //this.mask.moveTo(-of, -of);\r\n            //this.mask.lineTo(this._width + of, -of);\r\n            //this.mask.lineTo(this._width + of, this._height + of);\r\n            //this.mask.lineTo(-of, this._height + of);\r\n            this.mask.drawRect(-of, -of, this._width + of, this._height + of);\r\n        }\r\n        else {\r\n            this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\r\n        }\r\n        this.mask.endFill();\r\n        this._lastWidth = this._width;\r\n        this._lastHeight = this._height;\r\n    }\r\n\r\n\r\n    if (this.setScrollPosition) {\r\n        this.setScrollPosition();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        Container.prototype.addChild.call(this, UIObject);\r\n        this.innerContainer.addChild(UIObject.container);\r\n        this.getInnerBounds(true); //make sure bounds is updated instantly when a child is added\r\n    }\r\n    return UIObject;\r\n};\r\n\r\n\r\nScrollingContainer.prototype.updateScrollBars = function () {\r\n    for (var i = 0; i < this._scrollBars.length; i++) {\r\n        this._scrollBars[i].alignToContainer();\r\n    }\r\n};\r\n\r\n\r\nScrollingContainer.prototype.getInnerBounds = function (force) {\r\n    //this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\r\n    if (force || performance.now() - this.boundCached > 1000) {\r\n        this.innerContainer.getLocalBounds(this.innerBounds);\r\n        this.innerContainer.getLocalBounds(this.innerBounds);\r\n        this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\r\n        this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\r\n        this.boundCached = performance.now();\r\n    }\r\n\r\n    return this.innerBounds;\r\n};\r\n\r\nScrollingContainer.prototype.initScrolling = function () {\r\n    var container = this.innerContainer,\r\n        containerStart = new PIXI.Point(),\r\n        targetPosition = new PIXI.Point(),\r\n        lastPosition = new PIXI.Point(),\r\n        Position = new PIXI.Point(),\r\n        Speed = new PIXI.Point(),\r\n        stop,\r\n        self = this;\r\n\r\n    this.forcePctPosition = function (direction, pct) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        if (this.scrollX && direction == \"x\") {\r\n            container.position[direction] = -((bounds.width - this._width) * pct);\r\n        }\r\n        if (this.scrollY && direction == \"y\") {\r\n            container.position[direction] = -((bounds.height - this._height) * pct);\r\n        }\r\n        Position[direction] = targetPosition[direction] = container.position[direction];\r\n    };\r\n\r\n    this.focusPosition = function (pos) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        var dif;\r\n        if (this.scrollX) {\r\n            var x = Math.max(0, (Math.min(bounds.width, pos.x)));\r\n            if (x + container.x > this._width) {\r\n                dif = x - this._width;\r\n                container.x = -dif;\r\n            }\r\n            else if (x + container.x < 0) {\r\n                dif = x + container.x;\r\n                container.x -= dif;\r\n            }\r\n        }\r\n\r\n        if (this.scrollY) {\r\n            var y = Math.max(0, (Math.min(bounds.height, pos.y)));\r\n\r\n            if (y + container.y > this._height) {\r\n                dif = y - this._height;\r\n                container.y = -dif;\r\n            }\r\n            else if (y + container.y < 0) {\r\n                dif = y + container.y;\r\n                container.y -= dif;\r\n            }\r\n        }\r\n\r\n        lastPosition.copy(container.position);\r\n        targetPosition.copy(container.position);\r\n        Position.copy(container.position);\r\n        this.updateScrollBars();\r\n\r\n    };\r\n\r\n    this.setScrollPosition = function (speed) {\r\n        if (speed) {\r\n            Speed = speed;\r\n        }\r\n\r\n        if (!this.animating) {\r\n            this.animating = true;\r\n            lastPosition.copy(container.position);\r\n            targetPosition.copy(container.position);\r\n            Ticker.on(\"update\", this.updateScrollPosition, this);\r\n        }\r\n    };\r\n\r\n    this.updateScrollPosition = function (delta) {\r\n        stop = true;\r\n        if (this.scrollX) this.updateDirection(\"x\", delta);\r\n        if (this.scrollY) this.updateDirection(\"y\", delta);\r\n        if (stop) {\r\n            Ticker.removeListener(\"update\", this.updateScrollPosition);\r\n            this.animating = false;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    this.updateDirection = function (direction, delta) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        var min;\r\n        if (direction == \"y\")\r\n            min = Math.round(Math.min(0, this._height - bounds.height));\r\n        else\r\n            min = Math.round(Math.min(0, this._width - bounds.width));\r\n\r\n        if (!this.scrolling && Math.round(Speed[direction]) !== 0) {\r\n            targetPosition[direction] += Speed[direction];\r\n            Speed[direction] = Helpers.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\r\n\r\n            if (targetPosition[direction] > 0) {\r\n                targetPosition[direction] = 0;\r\n\r\n            }\r\n            else if (targetPosition[direction] < min) {\r\n                targetPosition[direction] = min;\r\n\r\n            }\r\n        }\r\n\r\n        if (!this.scrolling && Math.round(Speed[direction]) === 0 && (container[direction] > 0 || container[direction] < min)) {\r\n            var target = Position[direction] > 0 ? 0 : min;\r\n            Position[direction] = Helpers.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\r\n            stop = false;\r\n        }\r\n        else if (this.scrolling || Math.round(Speed[direction]) !== 0) {\r\n\r\n            if (this.scrolling) {\r\n                Speed[direction] = Position[direction] - lastPosition[direction];\r\n                lastPosition.copy(Position);\r\n            }\r\n            if (targetPosition[direction] > 0) {\r\n                Speed[direction] = 0;\r\n                Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\r\n            }\r\n            else if (targetPosition[direction] < min) {\r\n                Speed[direction] = 0;\r\n                Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\r\n            }\r\n            else {\r\n                Position[direction] = targetPosition[direction];\r\n            }\r\n            stop = false;\r\n        }\r\n\r\n        container.position[direction] = Math.round(Position[direction]);\r\n\r\n        self.updateScrollBars();\r\n\r\n    };\r\n\r\n\r\n    //Drag scroll\r\n    if (this.dragScrolling) {\r\n        var drag = new DragEvent(this);\r\n        drag.onDragStart = function (e) {\r\n            if (!this.scrolling) {\r\n                containerStart.copy(container.position);\r\n                Position.copy(container.position);\r\n                this.scrolling = true;\r\n                this.setScrollPosition();\r\n                self.emit(\"dragStart\", e);\r\n            }\r\n        };\r\n\r\n        drag.onDragMove = function (e, offset) {\r\n            if (this.scrollX)\r\n                targetPosition.x = containerStart.x + offset.x;\r\n            if (this.scrollY)\r\n                targetPosition.y = containerStart.y + offset.y;\r\n        };\r\n\r\n        drag.onDragEnd = function (e) {\r\n            if (this.scrolling) {\r\n                this.scrolling = false;\r\n                self.emit(\"dragEnd\", e);\r\n            }\r\n        };\r\n    }\r\n\r\n    //Mouse scroll\r\n    var scrollSpeed = new PIXI.Point();\r\n    var scroll = new MouseScrollEvent(this, true);\r\n    scroll.onMouseScroll = function (e, delta) {\r\n        scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\r\n        this.setScrollPosition(scrollSpeed);\r\n    };\r\n\r\n\r\n    self.updateScrollBars();\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A sliced sprite with dynamic width and height.\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\r\n * @param BorderWidth {Number} Width of the sprite borders\r\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\r\n * @param verticalSlice {Boolean} Slice the sprite vertically\r\n * @param [tile=false] {Boolean} tile or streach\r\n */\r\nfunction SliceSprite(texture, borderWidth, horizontalSlice, verticalSlice, tile) {\r\n    UIBase.call(this, texture.width, texture.height);\r\n\r\n    var ftl, ftr, fbl, fbr, ft, fb, fl, fr, ff, stl, str, sbl, sbr, st, sb, sl, sr, sf,\r\n        bw = borderWidth || 5,\r\n        vs = typeof verticalSlice !== \"undefined\" ? verticalSlice : true,\r\n        hs = typeof horizontalSlice !== \"undefined\" ? horizontalSlice : true,\r\n        t = texture.baseTexture,\r\n        f = texture.frame;\r\n\r\n\r\n    if (hs) this.setting.minWidth = borderWidth * 2;\r\n    if (vs) this.setting.minHeight = borderWidth * 2;\r\n\r\n    this.initialize = function () {\r\n        UIBase.prototype.initialize.apply(this);\r\n\r\n        //get frames\r\n        if (vs && hs) {\r\n            ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\r\n            ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\r\n            fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\r\n            fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\r\n            ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\r\n            fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\r\n            fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\r\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\r\n            ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\r\n        }\r\n        else if (hs) {\r\n            fl = new PIXI.Rectangle(f.x, f.y, bw, f.height);\r\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\r\n            ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\r\n        }\r\n        else { //vs\r\n            ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\r\n            fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\r\n            ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\r\n        }\r\n\r\n        //TODO: swap frames if rotation\r\n\r\n\r\n\r\n        //make sprites\r\n        sf = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff)) : new PIXI.Sprite(new PIXI.Texture(t, ff));\r\n        this.container.addChildAt(sf, 0);\r\n        if (vs && hs) {\r\n            stl = new PIXI.Sprite(new PIXI.Texture(t, ftl));\r\n            str = new PIXI.Sprite(new PIXI.Texture(t, ftr));\r\n            sbl = new PIXI.Sprite(new PIXI.Texture(t, fbl));\r\n            sbr = new PIXI.Sprite(new PIXI.Texture(t, fbr));\r\n            this.container.addChildAt(stl, 0);\r\n            this.container.addChildAt(str, 0);\r\n            this.container.addChildAt(sbl, 0);\r\n            this.container.addChildAt(sbr, 0);\r\n\r\n        }\r\n        if (hs) {\r\n            sl = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl)) : new PIXI.Sprite(new PIXI.Texture(t, fl));\r\n            sr = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr)) : new PIXI.Sprite(new PIXI.Texture(t, fr));\r\n            this.container.addChildAt(sl, 0);\r\n            this.container.addChildAt(sr, 0);\r\n        }\r\n        if (vs) {\r\n            st = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft)) : new PIXI.Sprite(new PIXI.Texture(t, ft));\r\n            sb = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb)) : new PIXI.Sprite(new PIXI.Texture(t, fb));\r\n            this.container.addChildAt(st, 0);\r\n            this.container.addChildAt(sb, 0);\r\n        }\r\n\r\n        //set constant position and sizes\r\n        if (vs && hs) st.x = sb.x = sl.y = sr.y = stl.width = str.width = sbl.width = sbr.width = stl.height = str.height = sbl.height = sbr.height = bw;\r\n        if (hs) sf.x = sl.width = sr.width = bw;\r\n        if (vs) sf.y = st.height = sb.height = bw;\r\n    };\r\n\r\n    /**\r\n     * Updates the sliced sprites position and size\r\n     *\r\n     * @private\r\n     */\r\n    this.update = function () {\r\n        if (!this.initialized) return;\r\n        if (vs && hs) {\r\n            str.x = sbr.x = sr.x = this._width - bw;\r\n            sbl.y = sbr.y = sb.y = this._height - bw;\r\n            sf.width = st.width = sb.width = this._width - bw * 2;\r\n            sf.height = sl.height = sr.height = this._height - bw * 2;\r\n        }\r\n        else if (hs) {\r\n            sr.x = this._width - bw;\r\n            sl.height = sr.height = sf.height = this._height;\r\n            sf.width = this._width - bw * 2;\r\n        }\r\n        else { //vs\r\n            sb.y = this._height - bw;\r\n            st.width = sb.width = sf.width = this._width;\r\n            sf.height = this._height - bw * 2;\r\n        }\r\n\r\n        if (this.tint !== null) {\r\n            sf.tint = this.tint;\r\n            if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\r\n            if (hs) sl.tint = sr.tint = this.tint;\r\n            if (vs) st.tint = sb.tint = this.tint;\r\n        }\r\n\r\n        if (this.blendMode !== null) {\r\n            sf.blendMode = this.blendMode;\r\n            if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\r\n            if (hs) sl.blendMode = sr.blendMode = this.blendMode;\r\n            if (vs) st.blendMode = sb.blendMode = this.blendMode;\r\n        }\r\n    };\r\n}\r\n\r\nSliceSprite.prototype = Object.create(UIBase.prototype);\r\nSliceSprite.prototype.constructor = SliceSprite;\r\nmodule.exports = SliceSprite;\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    ClickEvent = require('./Interaction/ClickEvent'),\r\n    Tween = require('./Tween'),\r\n    Ease = require('./Ease/Ease'),\r\n    Helpers = require('./Helpers');\r\n\r\n/**\r\n* An UI Slider, the default width/height is 90%\r\n* \r\n* @class\r\n* @extends UIBase\r\n* @memberof PIXI.UI\r\n* @param options {Object} Slider settings\r\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\r\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\r\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\r\n* @param [options.vertical=false] {boolean} Direction of the slider\r\n* @param [options.value=0] {number} value of the slider\r\n* @param [options.minValue=0] {number} minimum value\r\n* @param [options.maxValue=100] {number} max value\r\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\r\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\r\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\r\n* \r\n* \r\n*/\r\nfunction Slider(options) {\r\n    UIBase.call(this);\r\n    this._amt = 0;\r\n    this._disabled = false;\r\n\r\n    //set options\r\n    this.track = options.track;\r\n    this.handle = options.handle;\r\n    this.fill = options.fill || null;\r\n    this._minValue = options.minValue || 0;\r\n    this._maxValue = options.maxValue || 100;\r\n    this.decimals = options.decimals || 0;\r\n    this.vertical = options.vertical || false;\r\n    this._onValueChange = options.onValueChange || null;\r\n    this._onValueChanging = options.onValueChanging || null;\r\n    this.value = options.value || 50;\r\n    this.handle.pivot = 0.5;\r\n\r\n\r\n\r\n    this.addChild(this.track);\r\n    if (this.fill) this.track.addChild(this.fill);\r\n    this.addChild(this.handle);\r\n    this.handle.container.buttonMode = true;\r\n\r\n    if (this.vertical) {\r\n        this.height = \"100%\";\r\n        this.width = this.track.width;\r\n        this.track.height = \"100%\";\r\n        this.handle.horizontalAlign = \"center\";\r\n        if (this.fill) this.fill.horizontalAlign = \"center\";\r\n    }\r\n    else {\r\n        this.width = \"100%\";\r\n        this.height = this.track.height;\r\n        this.track.width = \"100%\";\r\n        this.handle.verticalAlign = \"middle\";\r\n        if (this.fill) this.fill.verticalAlign = \"middle\";\r\n    }\r\n\r\n}\r\n\r\nSlider.prototype = Object.create(UIBase.prototype);\r\nSlider.prototype.constructor = Slider;\r\nmodule.exports = Slider;\r\n\r\nSlider.prototype.update = function (soft) {\r\n    var handleSize, val;\r\n\r\n    if (this.vertical) {\r\n        handleSize = this.handle._height || this.handle.container.height;\r\n        val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\r\n        if (soft) {\r\n            Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\r\n            if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\r\n        }\r\n        else {\r\n            Tween.set(this.handle, { top: val });\r\n            if (this.fill) Tween.set(this.fill, { height: val });\r\n        }\r\n    }\r\n    else {\r\n        handleSize = this.handle._width || this.handle.container.width;\r\n        val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\r\n        if (soft) {\r\n            Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\r\n            if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\r\n        }\r\n        else {\r\n            Tween.set(this.handle, { left: val });\r\n            if (this.fill) Tween.set(this.fill, { width: val });\r\n        }\r\n    }\r\n};\r\n\r\nSlider.prototype.initialize = function () {\r\n    UIBase.prototype.initialize.call(this);\r\n\r\n\r\n\r\n    var self = this;\r\n    var startValue = 0;\r\n\r\n\r\n\r\n    ////Handle dragging\r\n    var handleDrag = new DragEvent(this.handle);\r\n    handleDrag.onPress = function (event, isPressed) {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrag.onDragStart = function (event) {\r\n        startValue = self._amt;\r\n        maxPosition = self.vertical ? self._height - self.handle._height : self._width - self.handle._width;\r\n    };\r\n\r\n    handleDrag.onDragMove = function (event, offset) {\r\n\r\n        self._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((self.vertical ? offset.y : offset.x) / maxPosition)));\r\n\r\n        triggerValueChanging();\r\n        self.update();\r\n    };\r\n\r\n    handleDrag.onDragEnd = function () {\r\n        triggerValueChange();\r\n        self.update();\r\n    };\r\n\r\n    //Bar pressing/dragging\r\n    var localMousePosition = new PIXI.Point();\r\n    var trackDrag = new DragEvent(this.track);\r\n\r\n    trackDrag.onPress = function (event, isPressed) {\r\n        if (isPressed)\r\n            updatePositionToMouse(event.data.global, true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    trackDrag.onDragMove = function (event) {\r\n        updatePositionToMouse(event.data.global, false);\r\n    };\r\n\r\n    trackDrag.onDragEnd = function () {\r\n        triggerValueChange();\r\n    };\r\n\r\n    var updatePositionToMouse = function (mousePosition, soft) {\r\n        self.track.container.toLocal(mousePosition, null, localMousePosition, true);\r\n\r\n        var newPos = self.vertical ? localMousePosition.y - self.handle._height * 0.5 : localMousePosition.x - self.handle._width * 0.5;\r\n        var maxPos = self.vertical ? self._height - self.handle._height : self._width - self.handle._width;\r\n        self._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\r\n        self.update(soft);\r\n        triggerValueChanging();\r\n    };\r\n\r\n    var triggerValueChange = function () {\r\n        self.emit(\"change\", self.value);\r\n        if (self._lastChange != self.value) {\r\n            self._lastChange = self.value;\r\n            if (typeof self.onValueChange === \"function\")\r\n                self.onValueChange(self.value);\r\n        }\r\n    };\r\n\r\n    var triggerValueChanging = function () {\r\n        self.emit(\"changeing\", self.value);\r\n        if (self._lastChanging != self.value) {\r\n            self._lastChanging = self.value;\r\n            if (typeof self._onValueChanging === \"function\")\r\n                self._onValueChanging(self.value);\r\n        }\r\n    };\r\n};\r\n\r\n\r\nObject.defineProperties(Slider.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\r\n        },\r\n        set: function (val) {\r\n            this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\r\n            if (typeof this.onValueChange === \"function\")\r\n                self.onValueChange(this.value);\r\n            if (typeof this._onValueChanging === \"function\")\r\n                this._onValueChanging(this.value);\r\n            this.update();\r\n        }\r\n    },\r\n\r\n    onValueChange: {\r\n        get: function () {\r\n            return this._onValueChange;\r\n        },\r\n        set: function (val) {\r\n            this._onValueChange = val;\r\n        }\r\n    },\r\n    onValueChanging: {\r\n        get: function () {\r\n            return this._onValueChanging;\r\n        },\r\n        set: function (val) {\r\n            this._onValueChanging = val;\r\n        }\r\n    },\r\n    minValue: {\r\n        get: function () {\r\n            return this._minValue;\r\n        },\r\n        set: function (val) {\r\n            this._minValue = val;\r\n            this.update();\r\n        }\r\n    },\r\n    maxValue: {\r\n        get: function () {\r\n            return this._maxValue;\r\n        },\r\n        set: function (val) {\r\n            this._maxValue = val;\r\n            this.update();\r\n        }\r\n    },\r\n    disabled: {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._disabled) {\r\n                this._disabled = val;\r\n                this.handle.container.buttonMode = !val;\r\n                this.handle.container.interactive = !val;\r\n                this.track.container.interactive = !val;\r\n            }\r\n        }\r\n    }\r\n});","var Container = require('./Container');\r\nvar Tween = require('./Tween');\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param desc {Boolean} Sort the list descending\r\n * @param tweenTime {Number} if above 0 the sort will be animated\r\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\r\n */\r\nfunction SortableList(desc, tweenTime, tweenEase) {\r\n    Container.call(this);\r\n    this.desc = typeof desc !== \"undefined\" ? desc : false;\r\n    this.tweenTime = tweenTime || 0;\r\n    this.tweenEase = tweenEase;\r\n    this.items = [];\r\n\r\n}\r\n\r\nSortableList.prototype = Object.create(Container.prototype);\r\nSortableList.prototype.constructor = SortableList;\r\nmodule.exports = SortableList;\r\n\r\nSortableList.prototype.addChild = function (UIObject, fnValue, fnThenBy) {\r\n    Container.prototype.addChild.call(this, UIObject);\r\n    if (this.items.indexOf(UIObject) == -1) {\r\n        this.items.push(UIObject);\r\n    }\r\n\r\n    if (typeof fnValue === \"function\")\r\n        UIObject._sortListValue = fnValue;\r\n\r\n    if (typeof fnThenBy === \"function\")\r\n        UIObject._sortListThenByValue = fnThenBy;\r\n\r\n    if (!UIObject._sortListRnd)\r\n        UIObject._sortListRnd = Math.random();\r\n\r\n\r\n\r\n    this.sort();\r\n};\r\n\r\nSortableList.prototype.removeChild = function (UIObject) {\r\n    if (arguments.length > 1) {\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        Container.prototype.removeChild.call(this, UIObject);\r\n        var index = this.items.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.items.splice(index, 1);\r\n        }\r\n        this.sort();\r\n    }\r\n};\r\n\r\nSortableList.prototype.sort = function (instant) {\r\n    clearTimeout(this._sortTimeout);\r\n\r\n    if (instant) {\r\n        this._sort();\r\n        return;\r\n    }\r\n\r\n    var _this = this;\r\n    this._sortTimeout = setTimeout(function () { _this._sort(); }, 0);\r\n};\r\n\r\nSortableList.prototype._sort = function () {\r\n    var self = this,\r\n        desc = this.desc,\r\n        y = 0,\r\n        alt = true;\r\n\r\n    this.items.sort(function (a, b) {\r\n        var res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1 :\r\n                  a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\r\n\r\n        if (res === 0 && a._sortListThenByValue && b._sortListThenByValue) {\r\n            res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1 :\r\n                  a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\r\n        }\r\n        if (res === 0) {\r\n            res = a._sortListRnd > b._sortListRnd ? 1 :\r\n                  a._sortListRnd < b._sortListRnd ? -1 : 0;\r\n        }\r\n        return res;\r\n    });\r\n\r\n    for (var i = 0; i < this.items.length; i++) {\r\n        var item = this.items[i];\r\n\r\n        alt = !alt;\r\n\r\n        if (this.tweenTime > 0) {\r\n            Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y: y }, this.tweenEase);\r\n        }\r\n        else {\r\n            item.x = 0;\r\n            item.y = y;\r\n        }\r\n        y += item.height;\r\n        if (typeof item.altering === \"function\")\r\n            item.altering(alt);\r\n    }\r\n\r\n    //force it to update parents when sort animation is done (prevent scrolling container bug)\r\n    if (this.tweenTime > 0) {\r\n        setTimeout(function () {\r\n            self.updatesettings(false, true);\r\n        }, this.tweenTime * 1000);\r\n    }\r\n};\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI sprite object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} The texture for the sprite\r\n */\r\nfunction Sprite(t) {\r\n    this.sprite = new PIXI.Sprite(t);\r\n    UIBase.call(this, this.sprite.width, this.sprite.height);\r\n    this.container.addChild(this.sprite);\r\n}\r\n\r\nSprite.prototype = Object.create(UIBase.prototype);\r\nSprite.prototype.constructor = Sprite;\r\nmodule.exports = Sprite;\r\n\r\n\r\nSprite.fromFrame = function (frameId) {\r\n    return new Sprite(new PIXI.Texture.fromFrame(frameId));\r\n};\r\n\r\nSprite.fromImage = function (imageUrl) {\r\n    return new Sprite(new PIXI.Texture.fromImage(imageUrl));\r\n};\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nSprite.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        this.sprite.tint = this.tint;\r\n\r\n    if (this.blendMode !== null)\r\n        this.sprite.blendMode = this.blendMode;\r\n\r\n    this.sprite.width = this._width;\r\n    this.sprite.height = this._height;\r\n};\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A Stage for UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.Container\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Stage\r\n * @param height {Number} Height of the Stage\r\n */\r\nfunction Stage(width, height) {\r\n    PIXI.Container.call(this);\r\n    this.__width = width;\r\n    this.__height = height;\r\n    this.minWidth = 0;\r\n    this.minHeight = 0;\r\n\r\n    this.UIChildren = [];\r\n    this.stage = this;\r\n    this.interactive = true;\r\n    this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\r\n    this.initialized = true;\r\n    this.resize(width, height);\r\n}\r\n\r\nStage.prototype = Object.create(PIXI.Container.prototype);\r\nStage.prototype.constructor = Stage;\r\nmodule.exports = Stage;\r\n\r\nStage.prototype.addChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent !== null)\r\n            UIObject.parent.removeChild(UIObject);\r\n\r\n        UIObject.parent = this;\r\n        this.UIChildren.push(UIObject);\r\n        PIXI.Container.prototype.addChild.call(this, UIObject.container);\r\n        UIObject.updatesettings(true);\r\n    }\r\n};\r\n\r\nStage.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        PIXI.Container.prototype.removeChild.call(this, UIObject.container);\r\n        var index = this.UIChildren.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.UIChildren.splice(index, 1);\r\n            UIObject.parent = null;\r\n        }\r\n\r\n    }\r\n};\r\n\r\nStage.prototype.resize = function (width, height) {\r\n    if (!isNaN(height)) this.__height = height;\r\n    if (!isNaN(width)) this.__width = width;\r\n\r\n    if (this.minWidth || this.minHeight) {\r\n        var rx = 1,\r\n            ry = 1;\r\n\r\n        if (width && width < this.minWidth) {\r\n            rx = this.minWidth / width;\r\n        }\r\n\r\n        if (height && height < this.minHeight) {\r\n            ry = this.minHeight / height;\r\n        }\r\n\r\n        if (rx > ry && rx > 1) {\r\n            this.scale.set(1 / rx);\r\n            this.__height *= rx;\r\n            this.__width *= rx;\r\n        }\r\n        else if (ry > 1) {\r\n            this.scale.set(1 / ry);\r\n            this.__width *= ry;\r\n            this.__height *= ry;\r\n        }\r\n        else if (this.scale.x !== 1) {\r\n            this.scale.set(1);\r\n        }\r\n    }\r\n\r\n    this.hitArea.width = this.__width;\r\n    this.hitArea.height = this.__height;\r\n\r\n    for (var i = 0; i < this.UIChildren.length; i++)\r\n        this.UIChildren[i].updatesettings(true, false);\r\n};\r\n\r\nObject.defineProperties(Stage.prototype, {\r\n    _width: {\r\n        get: function () {\r\n            return this.__width;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this.__width = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    },\r\n    _height: {\r\n        get: function () {\r\n            return this.__height;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this.__height = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    }\r\n});","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Text {String} Text content\r\n * @param TextStyle {PIXI.TextStyle} Style used for the Text\r\n */\r\nfunction Text(text, PIXITextStyle) {\r\n    this._text = new PIXI.Text(text, PIXITextStyle);\r\n    UIBase.call(this, this._text.width, this._text.height);\r\n    this.container.addChild(this._text);\r\n\r\n    this.baseupdate = function () {\r\n        //force original text width unless using anchors\r\n        if (this._anchorLeft === null || this._anchorRight === null) {\r\n            this.setting.width = this._text.width;\r\n            this.setting.widthPct = null;\r\n        }\r\n        else {\r\n            this._text.width = this._width;\r\n        }\r\n\r\n        //force original text height unless using anchors\r\n        if (this._anchorTop === null || this._anchorBottom === null) {\r\n            this.setting.height = this._text.height;\r\n            this.setting.heightPct = null;\r\n        }\r\n        else {\r\n            this._text.width = this._width;\r\n        }\r\n\r\n\r\n        UIBase.prototype.baseupdate.call(this);\r\n    };\r\n\r\n    this.update = function () {\r\n        //set tint\r\n        if (this.tint !== null)\r\n            this._text.tint = this.tint;\r\n\r\n        //set blendmode\r\n        if (this.blendMode !== null)\r\n            this._text.blendMode = this.blendMode;\r\n    };\r\n}\r\n\r\nText.prototype = Object.create(UIBase.prototype);\r\nText.prototype.constructor = Text;\r\nmodule.exports = Text;\r\n\r\n\r\nObject.defineProperties(Text.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._text.text;\r\n        },\r\n        set: function (val) {\r\n            this._text.text = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});","var InputBase = require('./InputBase'),\r\n    Container = require('./Container'),\r\n    DragEvent = require('./Interaction/DragEvent');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param options.value {String} Text content\r\n * @param [options.multiLine=false] {Boolean} Multiline input\r\n * @param options.style {PIXI.TextStyle} Style used for the Text\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\r\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\r\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\r\n * @param [options.width=150] {Number} width of input\r\n * @param [options.height=20] {Number} height of input\r\n * @param [options.padding=3] {Number} input padding\r\n * @param [options.paddingTop=0] {Number} input padding\r\n * @param [options.paddingBottom=0] {Number} input padding\r\n * @param [options.paddingLeft=0] {Number} input padding\r\n * @param [options.paddingRight=0] {Number} input padding\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n * @param [options.maxLength=0] {Number} 0 = unlimited\r\n * @param [options.caretWidth=1] {Number} width of the caret\r\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\r\n */\r\nfunction TextInput(options) {\r\n    //create temp input (for mobile keyboard)\r\n    if (typeof _pui_tempInput === \"undefined\") {\r\n        _pui_tempInput = document.createElement(\"INPUT\");\r\n        _pui_tempInput.setAttribute(\"type\", \"text\");\r\n        _pui_tempInput.setAttribute(\"id\", \"_pui_tempInput\");\r\n        _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:-10px; top:-10px; width:0px; height: 0px;\");\r\n        document.body.appendChild(_pui_tempInput);\r\n    }\r\n    var width = typeof options.width !== 'undefined' ? options.width : options.background ? options.background.width : 150;\r\n    var height = typeof options.height !== 'undefined' ? options.height : options.background ? options.background.height : 150;\r\n    InputBase.call(this, width, height, options.tabIndex || 0, options.tabGroup || 0);\r\n\r\n    this._dirtyText = true;\r\n    this.maxLength = options.maxLength || 0;\r\n    this._value = this._lastValue = options.value || \"\";\r\n\r\n    if (this.maxLength) this._value = this._value.slice(0, this.maxLength);\r\n\r\n    var self = this;\r\n    var chars = [];\r\n    var multiLine = options.multiLine !== undefined ? options.multiLine : false;\r\n    var color = options.style && options.style.fill ? options.style.fill : \"#000000\";\r\n    var selectedColor = options.selectedColor || \"#ffffff\";\r\n    var selectedBackgroundColor = options.selectedBackgroundColor || \"#318cfa\";\r\n    var tempText = new PIXI.Text(\"1\", options.style);\r\n    var textHeight = tempText.height;\r\n    var lineHeight = options.lineHeight || textHeight || self._height;\r\n    tempText.destroy();\r\n\r\n\r\n    //set cursor\r\n    //this.container.cursor = \"text\";\r\n\r\n    //selection graphics\r\n    var selection = self.selection = new PIXI.Graphics();\r\n    selection.visible = false;\r\n    selection._startIndex = 0;\r\n    selection._endIndex = 0;\r\n\r\n    //caret graphics\r\n    var caret = self.caret = new PIXI.Graphics();\r\n    caret.visible = false;\r\n    caret._index = 0;\r\n    caret.lineStyle(options.caretWidth || 1, \"#ffffff\", 1);\r\n    caret.moveTo(0, 0);\r\n    caret.lineTo(0, textHeight);\r\n\r\n\r\n    //insert bg\r\n    if (options.background) {\r\n        this.background = options.background;\r\n        this.background.width = \"100%\";\r\n        this.background.height = \"100%\";\r\n        this.addChild(this.background);\r\n    }\r\n\r\n    //var padding\r\n    var paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding !== undefined ? options.padding : 3;\r\n    var paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding !== undefined ? options.padding : 3;\r\n    var paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding !== undefined ? options.padding : 3;\r\n    var paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding !== undefined ? options.padding : 3;\r\n\r\n    //insert text container (scrolling container)\r\n    var textContainer = this.textContainer = new PIXI.UI.ScrollingContainer({\r\n        scrollX: !multiLine,\r\n        scrollY: multiLine,\r\n        dragScrolling: multiLine,\r\n        expandMask: 2,\r\n        softness: 0.2,\r\n        overflowX: 40,\r\n        overflowY: 40\r\n    });\r\n    textContainer.anchorTop = paddingTop;\r\n    textContainer.anchorBottom = paddingBottom;\r\n    textContainer.anchorLeft = paddingLeft;\r\n    textContainer.anchorRight = paddingRight;\r\n    this.addChild(textContainer);\r\n\r\n    if (multiLine) {\r\n        this._useNext = this._usePrev = false;\r\n        textContainer.dragRestrictAxis = \"y\";\r\n        textContainer.dragThreshold = 5;\r\n        this.dragRestrictAxis = \"x\";\r\n        this.dragThreshold = 5;\r\n\r\n    }\r\n\r\n\r\n    var innerContainer = textContainer.innerContainer;\r\n    innerContainer.cacheAsBitmap = true;\r\n    //textContainer.container.addChild(innerContainer);\r\n\r\n\r\n    this.update = function () {\r\n        if (this._width != this._lastWidth) {\r\n            this._lastWidth = this._width;\r\n            if (multiLine) {\r\n                updateText();\r\n                if (caret.visible) self.setCaretIndex(caret._index);\r\n                if (hasSelection) updateSelectionGraphics();\r\n            }\r\n\r\n        }\r\n\r\n        //update text        \r\n        if (this._dirtyText) {\r\n            updateText();\r\n            this._dirtyText = false;\r\n        }\r\n    };\r\n\r\n    //selection Vars\r\n    var caretInterval, //interval for flash\r\n        si, //startIndex\r\n        sie, //startIndexEnd\r\n        ei, //endIndex\r\n        eie, //endIndexEnd\r\n        sp = new PIXI.Point(), //startposition\r\n        ds = new PIXI.Point(), //dragStart\r\n        de = new PIXI.Point(), //dragend\r\n        rdd = false, //Reverse drag direction\r\n        vrdd = false, //vertical Reverse drag direction\r\n        selectionStart = -1,\r\n        selectionEnd = -1,\r\n        hasSelection = false,\r\n        t = performance.now(), //timestamp\r\n        cc = 0,  //click counter\r\n        textLengthPX = 0,\r\n        textHeightPX = 0,\r\n        lineIndexMax = 0,\r\n        ctrlDown = false,\r\n        shiftDown = false,\r\n        shiftKey = 16,\r\n        ctrlKey = 17,\r\n        cmdKey = 91;\r\n\r\n\r\n\r\n    var updateText = function () {\r\n        textLengthPX = 0;\r\n        textHeightPX = 0;\r\n        lineIndexMax = 0;\r\n\r\n        var lineIndex = 0,\r\n            length = self._value.length,\r\n            x = 0,\r\n            y = (lineHeight - textHeight) * 0.5,\r\n            i = 0;\r\n\r\n        //destroy excess chars\r\n        if (chars.length > length) {\r\n            for (i = chars.length - 1; i >= length; i--) {\r\n                innerContainer.removeChild(chars[i]);\r\n                chars[i].destroy();\r\n            }\r\n            chars.splice(length, chars.length - length);\r\n        }\r\n\r\n        //update and add chars\r\n        var whitespace = false;\r\n        var newline = false;\r\n        var wordIndex = 0;\r\n        var lastWordIndex = -1;\r\n        var wrap = false;\r\n        for (i = 0; i < self._value.length; i++) {\r\n            if (whitespace || newline) {\r\n                lastWordIndex = i;\r\n                wordIndex++;\r\n            }\r\n\r\n            var c = self._value[i];\r\n            whitespace = c === \" \";\r\n            newline = c === \"\\n\";\r\n\r\n\r\n            if (newline) { //newline \"hack\". webgl render errors if \\n is passed to text\r\n                c = \"\";\r\n            }\r\n\r\n\r\n\r\n            var charText = chars[i];\r\n            if (!charText) {\r\n                charText = new PIXI.Text(c, options.style);\r\n                innerContainer.addChild(charText);\r\n                chars.push(charText);\r\n            }\r\n            else {\r\n                charText.text = c;\r\n            }\r\n\r\n            charText.scale.x = newline ? 0 : 1;\r\n            charText.wrapped = wrap;\r\n            wrap = false;\r\n\r\n            if (newline || (multiLine && x + charText.width >= self._width - paddingLeft - paddingRight)) {\r\n                lineIndex++;\r\n                x = 0;\r\n                y += lineHeight;\r\n\r\n                if (lastWordIndex != -1 && !newline) {\r\n                    i = lastWordIndex - 1;\r\n                    lastWordIndex = -1;\r\n                    wrap = true;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n\r\n            charText.lineIndex = lineIndex;\r\n            charText.x = x;\r\n            charText.y = y;\r\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\r\n            x += charText.width;\r\n\r\n\r\n            if (x > textLengthPX)\r\n                textLengthPX = x;\r\n            if (y > textHeightPX)\r\n                textHeightPX = y;\r\n        }\r\n\r\n        lineIndexMax = lineIndex;\r\n\r\n        //put caret on top\r\n        innerContainer.addChild(caret);\r\n\r\n        //recache\r\n        if (innerContainer.cacheAsBitmap) {\r\n            innerContainer.cacheAsBitmap = false;\r\n            innerContainer.cacheAsBitmap = true;\r\n        }\r\n\r\n        textContainer.update();\r\n\r\n    };\r\n\r\n    var updateClosestIndex = function (point, start) {\r\n        var currentDistX = 99999;\r\n        var currentClosest;\r\n        var currentIndex = -1;\r\n        var atEnd = false;\r\n\r\n        var closestLineIndex = 0;\r\n        if (lineIndexMax > 0)\r\n            closestLineIndex = Math.max(0, Math.min(lineIndexMax, Math.floor(point.y / lineHeight)));\r\n\r\n\r\n\r\n\r\n\r\n        for (var i = 0; i < chars.length; i++) {\r\n            var char = chars[i];\r\n            if (char.lineIndex != closestLineIndex) continue;\r\n\r\n            var distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\r\n            if (distX < currentDistX) {\r\n                currentDistX = distX;\r\n                currentClosest = char;\r\n                currentIndex = i;\r\n                atEnd = point.x > char.x + (char.width * 0.5);\r\n            }\r\n        }\r\n\r\n\r\n        if (start) {\r\n            si = currentIndex;\r\n            sie = atEnd;\r\n        }\r\n        else {\r\n            ei = currentIndex;\r\n            eie = atEnd;\r\n        }\r\n    };\r\n\r\n    var deleteSelection = function () {\r\n        if (hasSelection) {\r\n            self.value = self.value.slice(0, selectionStart) + self.value.slice(selectionEnd + 1);\r\n            self.setCaretIndex(selectionStart);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var updateSelectionColors = function () {\r\n        //Color charecters\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (i >= selectionStart && i <= selectionEnd)\r\n                chars[i].style.fill = selectedColor;\r\n            else\r\n                chars[i].style.fill = color;\r\n        }\r\n    };\r\n\r\n    var _sp = new PIXI.Point();\r\n    var scrollToPosition = function (pos) {\r\n        _sp.copy(pos);\r\n        if (multiLine && _sp.y >= lineHeight)\r\n            _sp.y += lineHeight;\r\n        textContainer.focusPosition(_sp);\r\n    };\r\n\r\n    var resetScrollPosition = function () {\r\n        _sp.set(0, 0);\r\n        textContainer.focusPosition(_sp);\r\n    };\r\n\r\n    //caret\r\n    var hideCaret = function () {\r\n        caret.visible = false;\r\n        clearInterval(caretInterval);\r\n    };\r\n\r\n    var showCaret = function () {\r\n        self.clearSelection();\r\n        clearInterval(caretInterval);\r\n        caret.alpha = 1;\r\n        caret.visible = true;\r\n        caretInterval = setInterval(function () {\r\n            caret.alpha = caret.alpha === 0 ? 1 : 0;\r\n        }, 500);\r\n\r\n    };\r\n\r\n    var insertTextAtCaret = function (c) {\r\n        if (hasSelection)\r\n            deleteSelection();\r\n        if (!self.maxLength || chars.length < self.maxLength) {\r\n\r\n            if (caret._atEnd) {\r\n                self.value += c;\r\n                self.setCaretIndex(chars.length);\r\n            }\r\n            else {\r\n                var index = Math.min(chars.length - 1, caret._index);\r\n                self.value = self.value.slice(0, index) + c + self.value.slice(index);\r\n                self.setCaretIndex(index + c.length);\r\n            }\r\n        }\r\n    };\r\n\r\n    //events\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === ctrlKey || e.which === cmdKey) ctrlDown = true;\r\n        if (e.which === shiftKey) shiftDown = true;\r\n\r\n        if (e.which === 13) { //enter\r\n            insertTextAtCaret('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (ctrlDown) {\r\n\r\n            //ctrl + ?\r\n            if (e.which === 65) { //ctrl + a\r\n                self.select();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            else if (e.which === 90) { //ctrl + z (undo)\r\n                if (self.value != self._lastValue)\r\n                    self.value = self._lastValue;\r\n                self.setCaretIndex(self._lastValue.length + 1);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (e.which === 8) {\r\n            //backspace\r\n            if (!deleteSelection()) {\r\n                if (caret._index > 0 || (chars.length === 1 && caret._atEnd)) {\r\n                    if (caret._atEnd) {\r\n                        self.value = self.value.slice(0, chars.length - 1);\r\n                        self.setCaretIndex(caret._index);\r\n                    }\r\n                    else {\r\n                        self.value = self.value.slice(0, caret._index - 1) + self.value.slice(caret._index);\r\n                        self.setCaretIndex(caret._index - 1);\r\n                    }\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (e.which === 46) {\r\n            //delete\r\n            if (!deleteSelection()) {\r\n                if (!caret._atEnd) {\r\n                    self.value = self.value.slice(0, caret._index) + self.value.slice(caret._index + 1);\r\n                    self.setCaretIndex(caret._index);\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        else if (e.which === 37 || e.which === 39) {\r\n            rdd = e.which === 37;\r\n            if (shiftDown) {\r\n                if (hasSelection) {\r\n                    var caretAtStart = selectionStart === caret._index;\r\n                    if (caretAtStart) {\r\n                        if (selectionStart === selectionEnd && rdd === caret._forward) {\r\n                            self.setCaretIndex(caret._forward ? caret._index : caret._index + 1);\r\n                        }\r\n                        else {\r\n                            var startindex = rdd ? caret._index - 1 : caret._index + 1;\r\n                            self.selectRange(startindex, selectionEnd);\r\n                            caret._index = Math.min(chars.length - 1, Math.max(0, startindex));\r\n                        }\r\n                    }\r\n                    else {\r\n                        var endIndex = rdd ? caret._index - 1 : caret._index + 1;\r\n                        self.selectRange(selectionStart, endIndex);\r\n                        caret._index = Math.min(chars.length - 1, Math.max(0, endIndex));\r\n                    }\r\n                }\r\n                else {\r\n                    var _i = caret._atEnd ? caret._index + 1 : caret._index;\r\n                    var selectIndex = rdd ? _i - 1 : _i;\r\n                    self.selectRange(selectIndex, selectIndex);\r\n                    caret._index = selectIndex;\r\n                    caret._forward = !rdd;\r\n                }\r\n            }\r\n            else {\r\n                //Navigation\r\n                if (hasSelection)\r\n                    self.setCaretIndex(rdd ? selectionStart : selectionEnd + 1);\r\n                else\r\n                    self.setCaretIndex(caret._index + (rdd ? caret._atEnd ? 0 : -1 : 1));\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n\r\n        }\r\n        else if (multiLine && (e.which === 38 || e.which === 40)) {\r\n            vrdd = e.which === 38;\r\n            if (shiftDown) {\r\n                if (hasSelection) {\r\n                    de.y = Math.max(0, Math.min(textHeightPX, de.y + (vrdd ? -lineHeight : lineHeight)));\r\n                    updateClosestIndex(de, false);\r\n                    console.log(si, ei);\r\n                    if (Math.abs(si - ei) <= 1) {\r\n                        console.log(si, ei);\r\n                        self.setCaretIndex(sie ? si + 1 : si);\r\n                    } else {\r\n                        caret._index = (eie ? ei + 1 : ei) + (caret._down ? -1 : 0);\r\n                        self.selectRange(caret._down ? si : si - 1, caret._index);\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    si = caret._index;\r\n                    sie = false;\r\n                    de.copy(caret);\r\n                    de.y = Math.max(0, Math.min(textHeightPX, de.y + (vrdd ? -lineHeight : lineHeight)));\r\n                    updateClosestIndex(de, false);\r\n                    caret._index = (eie ? ei + 1 : ei) - (vrdd ? 0 : 1);\r\n                    self.selectRange(vrdd ? si - 1 : si, caret._index);\r\n                    caret._down = !vrdd;\r\n                }\r\n            }\r\n            else {\r\n                if (hasSelection) {\r\n                    self.setCaretIndex(vrdd ? selectionStart : selectionEnd + 1);\r\n                }\r\n                else {\r\n                    ds.copy(caret);\r\n                    ds.y += vrdd ? -lineHeight : lineHeight;\r\n                    ds.x += 1;\r\n                    updateClosestIndex(ds, true);\r\n                    self.setCaretIndex(sie ? si + 1 : si);\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n    };\r\n\r\n    var keyUpEvent = function (e) {\r\n        if (e.which == ctrlKey || e.which == cmdKey) ctrlDown = false;\r\n        if (e.which === shiftKey) shiftDown = false;\r\n    };\r\n\r\n    var copyEvent = function (e) {\r\n        if (hasSelection) {\r\n            var clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData('Text', self.value.slice(selectionStart, selectionEnd + 1));\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var cutEvent = function (e) {\r\n        if (hasSelection) {\r\n            copyEvent(e);\r\n            deleteSelection();\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var pasteEvent = function (e) {\r\n        var clipboardData = e.clipboardData || window.clipboardData;\r\n        insertTextAtCaret(clipboardData.getData('Text'));\r\n        e.preventDefault();\r\n    };\r\n\r\n    var inputEvent = function (e) {\r\n        insertTextAtCaret(e.data);\r\n        e.preventDefault();\r\n    };\r\n\r\n    var inputBlurEvent = function (e) {\r\n        self.blur();\r\n    };\r\n\r\n    var event = new DragEvent(this);\r\n\r\n    event.onPress = function (e, mouseDown) {\r\n\r\n        if (mouseDown) {\r\n            var timeSinceLast = performance.now() - t;\r\n            t = performance.now();\r\n            if (timeSinceLast < 250) {\r\n                cc++;\r\n                if (cc > 1)\r\n                    this.select();\r\n                else {\r\n                    innerContainer.toLocal(sp, undefined, ds, true);\r\n                    updateClosestIndex(ds, true);\r\n                    var c = chars[si];\r\n                    if (c) {\r\n                        if (c.wordIndex != -1)\r\n                            this.selectWord(c.wordIndex);\r\n                        else\r\n                            this.selectRange(si, si);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                cc = 0;\r\n                sp.copy(e.data.global);\r\n                innerContainer.toLocal(sp, undefined, ds, true);\r\n                if (chars.length) {\r\n                    updateClosestIndex(ds, true);\r\n                    self.setCaretIndex(sie ? si + 1 : si);\r\n                }\r\n            }\r\n        }\r\n        e.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    event.onDragMove = function (e, offset) {\r\n        if (!chars.length || !this._focused) return;\r\n\r\n        de.x = sp.x + offset.x;\r\n        de.y = sp.y + offset.y;\r\n        innerContainer.toLocal(de, undefined, de, true);\r\n        updateClosestIndex(de, false);\r\n\r\n        if (si < ei) {\r\n            self.selectRange(sie ? si + 1 : si, eie ? ei : ei - 1);\r\n            caret._index = eie ? ei : ei - 1;\r\n        }\r\n        else if (si > ei) {\r\n            self.selectRange(ei, sie ? si : si - 1);\r\n            caret._index = ei;\r\n        }\r\n        else {\r\n            if (sie === eie) {\r\n                self.setCaretIndex(sie ? si + 1 : si);\r\n            }\r\n            else {\r\n                self.selectRange(si, ei);\r\n                caret._index = ei;\r\n            }\r\n        }\r\n\r\n        caret._forward = si <= ei;\r\n        caret._down = offset.y > 0;\r\n\r\n        scrollToPosition(de);\r\n    };\r\n\r\n\r\n\r\n\r\n    //public methods\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n\r\n            var l = this.container.worldTransform.tx + \"px\";\r\n            var t = this.container.worldTransform.ty + \"px\";\r\n            var h = this.container.height + \"px\";\r\n            var w = this.container.width + \"px\";\r\n\r\n            _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:\" + l + \"; top:\" + t + \"; height:\" + h + \"; width:\" + w + \";\");\r\n            _pui_tempInput.value = \"\";\r\n            _pui_tempInput.focus();\r\n            _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:-10px; top:-10px; width:0px; height: 0px;\");\r\n\r\n            innerContainer.cacheAsBitmap = false;\r\n            _pui_tempInput.addEventListener(\"blur\", inputBlurEvent, false);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n            document.addEventListener(\"keyup\", keyUpEvent, false);\r\n            document.addEventListener('paste', pasteEvent, false);\r\n            document.addEventListener('copy', copyEvent, false);\r\n            document.addEventListener('cut', cutEvent, false);\r\n            _pui_tempInput.addEventListener('textInput', inputEvent, false);\r\n\r\n            setTimeout(function () {\r\n                if (!caret.visible && !self.selection.visible && !multiLine)\r\n                    self.setCaretIndex(chars.length);\r\n            }, 0);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            ctrlDown = false;\r\n            shiftDown = false;\r\n            hideCaret();\r\n            this.clearSelection();\r\n            if (chars.length > 1) innerContainer.cacheAsBitmap = true;\r\n            _pui_tempInput.removeEventListener(\"blur\", inputBlurEvent);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n            document.removeEventListener(\"keyup\", keyUpEvent);\r\n            document.removeEventListener('paste', pasteEvent);\r\n            document.removeEventListener('copy', copyEvent);\r\n            document.removeEventListener('cut', cutEvent);\r\n            _pui_tempInput.removeEventListener('textInput', inputEvent);\r\n            _pui_tempInput.blur();\r\n\r\n        }\r\n\r\n        if (!multiLine)\r\n            resetScrollPosition();\r\n    };\r\n\r\n    this.setCaretIndex = function (index) {\r\n        caret._atEnd = index >= chars.length;\r\n        caret._index = Math.max(0, Math.min(chars.length - 1, index));\r\n\r\n        if (chars.length && index > 0) {\r\n\r\n            var i = Math.max(0, Math.min(index, chars.length - 1));\r\n            var c = chars[i];\r\n\r\n            if (c && c.wrapped) {\r\n                caret.x = c.x;\r\n                caret.y = c.y;\r\n            }\r\n            else {\r\n                i = Math.max(0, Math.min(index - 1, chars.length - 1));\r\n                c = chars[i];\r\n                caret.x = chars[i].x + chars[i].width;\r\n                caret.y = (chars[i].lineIndex * lineHeight) + (lineHeight - textHeight) * 0.5;\r\n            }\r\n        }\r\n        else {\r\n            caret.x = 0;\r\n            caret.y = (lineHeight - textHeight) * 0.5;\r\n        }\r\n\r\n        scrollToPosition(caret);\r\n        showCaret();\r\n\r\n    };\r\n\r\n    this.select = function () {\r\n        this.selectRange(0, chars.length - 1);\r\n    };\r\n\r\n    this.selectWord = function (wordIndex) {\r\n        var startIndex = chars.length;\r\n        var endIndex = 0;\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (chars[i].wordIndex !== wordIndex) continue;\r\n            if (i < startIndex)\r\n                startIndex = i;\r\n            if (i > endIndex)\r\n                endIndex = i;\r\n        }\r\n\r\n        this.selectRange(startIndex, endIndex);\r\n    };\r\n\r\n    var drawSelectionRect = function (x, y, w, h) {\r\n        self.selection.beginFill(\"0x\" + selectedBackgroundColor.slice(1), 1);\r\n        self.selection.moveTo(x, y);\r\n        self.selection.lineTo(x + w, y);\r\n        self.selection.lineTo(x + w, y + h);\r\n        self.selection.lineTo(x, y + h);\r\n        self.selection.endFill();\r\n    };\r\n\r\n    var updateSelectionGraphics = function () {\r\n        var c1 = chars[selectionStart];\r\n        if (c1 !== undefined) {\r\n            var cx = c1.x,\r\n                cy = c1.y,\r\n                w = 0,\r\n                h = textHeight,\r\n                cl = c1.lineIndex;\r\n\r\n            self.selection.clear();\r\n            for (var i = selectionStart; i <= selectionEnd; i++) {\r\n                var c = chars[i];\r\n                if (c.lineIndex != cl) {\r\n                    drawSelectionRect(cx, cy, w, h);\r\n                    cx = c.x;\r\n                    cy = c.y;\r\n                    cl = c.lineIndex;\r\n                    w = 0;\r\n                }\r\n                w += c.width;\r\n            }\r\n            drawSelectionRect(cx, cy, w, h);\r\n            innerContainer.addChildAt(self.selection, 0);\r\n        }\r\n    };\r\n\r\n    this.selectRange = function (startIndex, endIndex) {\r\n        if (startIndex > -1 && endIndex > -1) {\r\n            var start = Math.min(startIndex, endIndex, chars.length - 1);\r\n            var end = Math.min(Math.max(startIndex, endIndex), chars.length - 1);\r\n            if (start != selectionStart || end != selectionEnd) {\r\n                hasSelection = true;\r\n                this.selection.visible = true;\r\n                selectionStart = start;\r\n                selectionEnd = end;\r\n                hideCaret();\r\n                updateSelectionGraphics();\r\n                updateSelectionColors();\r\n            }\r\n            this.focus();\r\n        }\r\n        else {\r\n            self.clearSelection();\r\n        }\r\n    };\r\n\r\n    this.clearSelection = function () {\r\n        if (hasSelection) {\r\n            //remove color\r\n            hasSelection = false;\r\n            this.selection.visible = false;\r\n            selectionStart = -1;\r\n            selectionEnd = -1;\r\n            updateSelectionColors();\r\n        }\r\n    };\r\n}\r\n\r\nTextInput.prototype = Object.create(InputBase.prototype);\r\nTextInput.prototype.constructor = TextInput;\r\nmodule.exports = TextInput;\r\n\r\nObject.defineProperties(TextInput.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            if (this.maxLength)\r\n                val = val.slice(0, this.maxLength);\r\n\r\n            if (this._value != val) {\r\n                this._lastValue = this._value;\r\n                this._value = val;\r\n                this._dirtyText = true;\r\n                this.update();\r\n                this.emit(\"change\");\r\n\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n/*\r\n * Features:\r\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * select() - selects all text\r\n * selectRange(startIndex, endIndex)\r\n * clearSelection() \r\n * setCaretIndex(index) moves caret to index\r\n * \r\n * \r\n * Events:\r\n * \"change\"\r\n * \"blur\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\" param: [bool]focus\r\n *  \r\n * \r\n */","var Tween = require('./Tween');\r\n\r\nfunction Ticker(autoStart) {\r\n    PIXI.utils.EventEmitter.call(this);\r\n    this._disabled = true;\r\n    this._now = 0;\r\n\r\n    this.DeltaTime = 0;\r\n    this.Time = performance.now();\r\n    this.Ms = 0;\r\n    if (autoStart) {\r\n        this.disabled = false;\r\n    }\r\n    Ticker.shared = this;\r\n}\r\n\r\nTicker.prototype = Object.create(PIXI.utils.EventEmitter.prototype);\r\nTicker.prototype.constructor = Ticker;\r\n\r\nmodule.exports = Ticker;\r\n\r\n\r\n\r\nObject.defineProperties(Ticker.prototype, {\r\n    disabled: {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (val) {\r\n            if (!this._disabled) {\r\n                this._disabled = true;\r\n            }\r\n            else {\r\n                this._disabled = false;\r\n                Ticker.shared = this;\r\n                this.update(performance.now(), true);\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\n\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nTicker.prototype.update = function (time) {\r\n    Ticker.shared._now = time;\r\n    Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\r\n    Ticker.shared.Time = Ticker.shared._now;\r\n    Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\r\n    Ticker.shared.emit(\"update\", Ticker.shared.DeltaTime);\r\n    Tween._update(Ticker.shared.DeltaTime);\r\n    if (!Ticker.shared._disabled)\r\n        requestAnimationFrame(Ticker.shared.update);\r\n};\r\n\r\n\r\n\r\n\r\nTicker.on = function (event, fn, context) {\r\n    Ticker.prototype.on.apply(this.shared, arguments);\r\n};\r\n\r\nTicker.once = function (event, fn, context) {\r\n    Ticker.prototype.once.apply(this.shared, arguments);\r\n};\r\n\r\nTicker.removeListener = function (event, fn) {\r\n    Ticker.prototype.removeListener.apply(this.shared, arguments);\r\n};\r\n\r\n\r\nTicker.shared = new Ticker(true);","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI sprite object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} The texture for the sprite\r\n * @param [Width=Texture.width] {number} Width of tilingsprite\r\n * @param [Height=Texture.height] {number} Height of tiling sprite\r\n */\r\nfunction TilingSprite(t, width, height) {\r\n    this.sprite = new PIXI.extras.TilingSprite(t);\r\n    UIBase.call(this, width || this.sprite.width, height || this.sprite.height);\r\n    this.container.addChild(this.sprite);\r\n}\r\n\r\nTilingSprite.prototype = Object.create(UIBase.prototype);\r\nTilingSprite.prototype.constructor = TilingSprite;\r\nmodule.exports = TilingSprite;\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nTilingSprite.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        this.sprite.tint = this.tint;\r\n\r\n    if (this.blendMode !== null)\r\n        this.sprite.blendMode = this.blendMode;\r\n\r\n    this.sprite.width = this._width;\r\n    this.sprite.height = this._height;\r\n};\r\n\r\nObject.defineProperties(TilingSprite.prototype, {\r\n    tilePosition: {\r\n        get: function () {\r\n            return this.sprite.tilePosition;\r\n        },\r\n        set: function (val) {\r\n            this.sprite.tilePosition = val;\r\n        }\r\n    },\r\n    tileScale: {\r\n        get: function () {\r\n            return this.sprite.tileScale;\r\n        },\r\n        set: function (val) {\r\n            this.sprite.tileScale = val;\r\n        }\r\n    }\r\n});","var Helpers = require('./Helpers');\r\nvar Ease = require('./Ease/Ease');\r\nvar _tweenItemCache = [];\r\nvar _callbackItemCache = [];\r\nvar _tweenObjects = {};\r\nvar _activeTweenObjects = {};\r\nvar _currentId = 1;\r\n\r\nvar TweenObject = function (object) {\r\n    this.object = object;\r\n    this.tweens = {};\r\n    this.active = false;\r\n};\r\n\r\nvar CallbackItem = function () {\r\n    this._ready = false;\r\n    this.obj = null;\r\n    this.parent = null;\r\n    this.key = \"\";\r\n    this.time = 0;\r\n    this.callback = null;\r\n    this.currentTime = 0;\r\n};\r\n\r\nCallbackItem.prototype.remove = function () {\r\n    this._ready = true;\r\n    delete this.parent.tweens[this.key];\r\n    if (!Object.keys(this.parent.tweens).length) {\r\n        this.parent.active = false;\r\n        delete _activeTweenObjects[this.obj._tweenObjectId];\r\n    }\r\n};\r\n\r\nCallbackItem.prototype.set = function (obj, callback, time) {\r\n    this.obj = obj.object;\r\n\r\n    if (!this.obj._currentCallbackID)\r\n        this.obj._currentCallbackID = 1;\r\n    else\r\n        this.obj._currentCallbackID++;\r\n\r\n    this.time = time;\r\n    this.parent = obj;\r\n    this.callback = callback;\r\n    this._ready = false;\r\n    this.key = \"cb_\" + this.obj._currentCallbackID;\r\n    this.currentTime = 0;\r\n    if (!this.parent.active) {\r\n        this.parent.active = true;\r\n        _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\r\n    }\r\n};\r\n\r\nCallbackItem.prototype.update = function (delta) {\r\n    this.currentTime += delta;\r\n    if (this.currentTime >= this.time) {\r\n        this.remove();\r\n        this.callback();\r\n    }\r\n};\r\n\r\n\r\n\r\nvar TweenItem = function () {\r\n    this._ready = false;\r\n    this.parent = null;\r\n    this.obj = null;\r\n    this.key = \"\";\r\n    this.from = 0;\r\n    this.to = 0;\r\n    this.time = 0;\r\n    this.ease = 0;\r\n    this.currentTime = 0;\r\n    this.t = 0;\r\n    this.isColor = false;\r\n};\r\n\r\nTweenItem.prototype.remove = function () {\r\n    this._ready = true;\r\n    delete this.parent.tweens[this.key];\r\n    if (!Object.keys(this.parent.tweens).length) {\r\n        this.parent.active = false;\r\n        delete _activeTweenObjects[this.obj._tweenObjectId];\r\n    }\r\n};\r\n\r\nTweenItem.prototype.set = function (obj, key, from, to, time, ease) {\r\n    this.isColor = isNaN(from) && from[0] == \"#\" || isNaN(to) && to[0] == \"#\";\r\n    this.parent = obj;\r\n    this.obj = obj.object;\r\n    this.key = key;\r\n    this.surfix = getSurfix(to);\r\n\r\n    if (this.isColor) {\r\n        this.to = Helpers.hexToRgb(to);\r\n        this.from = Helpers.hexToRgb(from);\r\n        this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\r\n    }\r\n    else {\r\n        this.to = getToValue(to);\r\n        this.from = getFromValue(from, to, this.obj, key);\r\n    }\r\n\r\n    this.time = time;\r\n    this.currentTime = 0;\r\n    this.ease = ease;\r\n    this._ready = false;\r\n\r\n    if (!this.parent.active) {\r\n        this.parent.active = true;\r\n        _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\r\n    }\r\n\r\n};\r\n\r\nTweenItem.prototype.update = function (delta) {\r\n    this.currentTime += delta;\r\n    this.t = Math.min(this.currentTime, this.time) / this.time;\r\n    if (this.ease)\r\n        this.t = this.ease.getPosition(this.t);\r\n\r\n\r\n\r\n\r\n    if (this.isColor) {\r\n        this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\r\n        this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\r\n        this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\r\n        this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\r\n    }\r\n    else {\r\n        var val = Helpers.Lerp(this.from, this.to, this.t);\r\n        this.obj[this.key] = this.surfix ? val + this.surfix : val;\r\n    }\r\n\r\n    \r\n\r\n    if (this.currentTime >= this.time) {\r\n        this.remove();\r\n    }\r\n};\r\n\r\n\r\nvar widthKeys = [\"width\", \"minWidth\", \"maxWidth\", \"anchorLeft\", \"anchorRight\", \"left\", \"right\", \"x\"];\r\nvar heightKeys = [\"height\", \"minHeight\", \"maxHeight\", \"anchorTop\", \"anchorBottom\", \"top\", \"bottom\", \"y\"];\r\n\r\n\r\nfunction getFromValue(from, to, obj, key) {\r\n    //both number\r\n    if (!isNaN(from) && !isNaN(to))\r\n        return from;\r\n\r\n    //both percentage\r\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\r\n        return parseFloat(from.replace('%', ''));\r\n\r\n    //convert from to px\r\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1) {\r\n        if (widthKeys.indexOf(key) !== -1)\r\n            return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01);\r\n        else if (heightKeys.indexOf(key) !== -1)\r\n            return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01);\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    //convert from to percentage\r\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1) {\r\n        if (widthKeys.indexOf(key) !== -1)\r\n            return from / obj.parent._width * 100;\r\n        else if (heightKeys.indexOf(key) !== -1)\r\n            return from / obj.parent._height * 100;\r\n        else\r\n            return 0;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getSurfix(to) {\r\n    if (isNaN(to) && to.indexOf('%') !== -1)\r\n        return \"%\";\r\n}\r\n\r\nfunction getToValue(to) {\r\n    if (!isNaN(to))\r\n        return to;\r\n    if (isNaN(to) && to.indexOf('%') !== -1)\r\n        return parseFloat(to.replace('%', ''));\r\n}\r\n\r\n\r\nfunction getObject(obj) {\r\n    if (!obj._tweenObjectId) {\r\n        obj._tweenObjectId = _currentId;\r\n        _currentId++;\r\n    }\r\n    var object = _tweenObjects[obj._tweenObjectId];\r\n    if (!object) {\r\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\r\n    }\r\n    return object;\r\n}\r\n\r\nfunction getTweenItem() {\r\n    for (var i = 0; i < _tweenItemCache.length; i++) {\r\n        if (_tweenItemCache[i]._ready)\r\n            return _tweenItemCache[i];\r\n    }\r\n\r\n    var tween = new TweenItem();\r\n    _tweenItemCache.push(tween);\r\n    return tween;\r\n}\r\n\r\nfunction getCallbackItem() {\r\n    for (var i = 0; i < _callbackItemCache.length; i++) {\r\n        if (_callbackItemCache[i]._ready)\r\n            return _callbackItemCache[i];\r\n    }\r\n\r\n    var cb = new CallbackItem();\r\n    _callbackItemCache.push(cb);\r\n    return cb;\r\n}\r\n\r\nvar Tween = {\r\n    to: function (obj, time, params, ease) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (key === \"onComplete\") {\r\n                var cb = getCallbackItem();\r\n                cb.set(object, params[key], time);\r\n                object.tweens[cb.key] = cb;\r\n                continue;\r\n            }\r\n\r\n            if (time) {\r\n                var match = params[key] == obj[key];\r\n                if (typeof obj[key] === \"undefined\") continue;\r\n\r\n                if (match) {\r\n                    if (object.tweens[key]) object.tweens[key].remove();\r\n                }\r\n                else {\r\n                    if (!object.tweens[key])\r\n                        object.tweens[key] = getTweenItem();\r\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\r\n                }\r\n            }\r\n        }\r\n        if (!time) this.set(obj, params);\r\n    },\r\n    from: function (obj, time, params, ease) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (key === \"onComplete\") {\r\n                var cb = getCallbackItem();\r\n                cb.set(object, params[key], time);\r\n                object.tweens[cb.key] = cb;\r\n                continue;\r\n            }\r\n\r\n            if (time) {\r\n                var match = params[key] == obj[key];\r\n                if (typeof obj[key] === \"undefined\") continue;\r\n\r\n                if (match) {\r\n                    if (object.tweens[key]) object.tweens[key].remove();\r\n                }\r\n                else {\r\n                    if (!object.tweens[key])\r\n                        object.tweens[key] = getTweenItem();\r\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\r\n                }\r\n            }\r\n        }\r\n        if (!time) this.set(obj, params);\r\n    },\r\n    fromTo: function (obj, time, paramsFrom, paramsTo, ease) {\r\n        var object = getObject(obj);\r\n        for (var key in paramsTo) {\r\n            if (key === \"onComplete\") {\r\n                var cb = getCallbackItem();\r\n                cb.set(object, paramsTo[key], time);\r\n                object.tweens[cb.key] = cb;\r\n                continue;\r\n            }\r\n            if (time) {\r\n                var match = paramsFrom[key] == paramsTo[key];\r\n                if (typeof obj[key] === \"undefined\" || typeof paramsFrom[key] === \"undefined\") continue;\r\n\r\n                if (match) {\r\n                    if (object.tweens[key]) object.tweens[key].remove();\r\n                    obj[key] = paramsTo[key];\r\n                }\r\n                else {\r\n                    if (!object.tweens[key]) {\r\n                        object.tweens[key] = getTweenItem();\r\n                    }\r\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\r\n                }\r\n\r\n            }\r\n        }\r\n        if (!time) this.set(obj, paramsTo);\r\n    },\r\n    set: function (obj, params) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (typeof obj[key] === \"undefined\") continue;\r\n            if (object.tweens[key]) object.tweens[key].remove();\r\n            obj[key] = params[key];\r\n        }\r\n    },\r\n    _update: function (delta) {\r\n        for (var id in _activeTweenObjects) {\r\n            var object = _activeTweenObjects[id];\r\n            for (var key in object.tweens) {\r\n                object.tweens[key].update(delta);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = Tween;","var UI = {\r\n    Stage: require('./Stage'),\r\n    Container: require('./Container'),\r\n    ScrollingContainer: require('./ScrollingContainer'),\r\n    SortableList: require('./SortableList'),\r\n    Sprite: require('./Sprite'),\r\n    TilingSprite: require('./TilingSprite'),\r\n    SliceSprite: require('./SliceSprite'),\r\n    Slider: require('./Slider'),\r\n    ScrollBar: require('./ScrollBar'),\r\n    Text: require('./Text'),\r\n    DynamicText: require('./DynamicText/DynamicText'),\r\n    DynamicTextStyle: require('./DynamicText/DynamicTextStyle'),\r\n    TextInput: require('./TextInput'),\r\n    Button: require('./Button'),\r\n    CheckBox: require('./CheckBox'),\r\n    Helpers: require('./Helpers'),\r\n    Tween: require('./Tween'),\r\n    Ease: require('./Ease/Ease'),\r\n    Interaction: require('./Interaction/Interaction'),\r\n    Base: require('./UIBase'),\r\n    Ticker: require('./Ticker').shared,\r\n};\r\n\r\n\r\nmodule.exports = UI;","var UISettings = require('./UISettings'),\r\n    UI = require('./UI'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    DragDropController = require('./Interaction/DragDropController');\r\n\r\n/**\r\n * Base class of all UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @param width {Number} Width of the UIObject\r\n * @param height {Number} Height of the UIObject\r\n */\r\nfunction UIBase(width, height) {\r\n    PIXI.utils.EventEmitter.call(this);\r\n    this.container = new PIXI.Container();\r\n    this.setting = new UISettings();\r\n    this.children = [];\r\n    this.parent = null;\r\n    this.stage = null;\r\n    this.initialized = false;\r\n    this.dragInitialized = false;\r\n    this.dropInitialized = false;\r\n    this.dirty = true;\r\n    this._oldWidth = -1;\r\n    this._oldHeight = -1;\r\n    this.pixelPerfect = true;\r\n\r\n\r\n    if (width && isNaN(width) && width.indexOf('%') != -1) {\r\n        this.setting.widthPct = parseFloat(width.replace('%', '')) * 0.01;\r\n    }\r\n    else {\r\n        this.setting.widthPct = null;\r\n    }\r\n\r\n    if (height && isNaN(height) && height.indexOf('%') != -1)\r\n        this.setting.heightPct = parseFloat(height.replace('%', '')) * 0.01;\r\n    else {\r\n        this.setting.heightPct = null;\r\n    }\r\n\r\n    this.setting.width = width || 0;\r\n    this.setting.height = height || 0;\r\n\r\n    //actual values\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._minWidth = null;\r\n    this._minHeight = null;\r\n    this._maxWidth = null;\r\n    this._maxHeight = null;\r\n    this._anchorLeft = null;\r\n    this._anchorRight = null;\r\n    this._anchorTop = null;\r\n    this._anchorBottom = null;\r\n    this._left = null;\r\n    this._right = null;\r\n    this._top = null;\r\n    this._bottom = null;\r\n\r\n    this._dragPosition = null; //used for overriding positions if tweens is playing\r\n}\r\n\r\nUIBase.prototype = Object.create(PIXI.utils.EventEmitter.prototype);\r\nUIBase.prototype.constructor = UIBase;\r\nmodule.exports = UIBase;\r\n\r\n/**\r\n * Renders the object using the WebGL renderer\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updatesettings = function (updateChildren, updateParent) {\r\n\r\n    if (!this.initialized) {\r\n        if (this.parent !== null && this.parent.stage !== null && this.parent.initialized) {\r\n            this.initialize();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (updateParent) this.updateParent();\r\n    this.baseupdate();\r\n    this.update();\r\n    if (updateChildren) this.updateChildren();\r\n};\r\n\r\n/**\r\n * Update method (override from other UIObjects)\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.update = function () {\r\n};\r\n\r\n\r\n/**\r\n * Updates the parent\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateParent = function () {\r\n    if (this.parent !== null) {\r\n        if (this.parent.updatesettings) {\r\n            this.parent.updatesettings(false, true);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Updates the UIObject with all base settings\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.baseupdate = function () {\r\n    //return if parent size didnt change\r\n    if (this.parent !== null) {\r\n        var parentHeight, parentWidth;\r\n\r\n\r\n\r\n        //transform convertion (% etc)\r\n        this.dirty = true; \r\n        this._width = this.actual_width;\r\n        this._height = this.actual_height;\r\n        this._minWidth = this.actual_minWidth;\r\n        this._minHeight = this.actual_minHeight;\r\n        this._maxWidth = this.actual_maxWidth;\r\n        this._maxHeight = this.actual_maxHeight;\r\n        this._anchorLeft = this.actual_anchorLeft;\r\n        this._anchorRight = this.actual_anchorRight;\r\n        this._anchorTop = this.actual_anchorTop;\r\n        this._anchorBottom = this.actual_anchorBottom;\r\n        this._left = this.actual_left;\r\n        this._right = this.actual_right;\r\n        this._top = this.actual_top;\r\n        this._bottom = this.actual_bottom;\r\n        this._parentWidth = parentWidth = this.parent._width;\r\n        this._parentHeight = parentHeight = this.parent._height;\r\n        this.dirty = false;\r\n\r\n\r\n        var pivotXOffset = this.pivotX * this._width;\r\n        var pivotYOffset = this.pivotY * this._height;\r\n\r\n        if (this.pixelPerfect) {\r\n            pivotXOffset = Math.round(pivotXOffset);\r\n            pivotYOffset = Math.round(pivotYOffset);\r\n        }\r\n\r\n\r\n        if (this.horizontalAlign === null) {\r\n            //get anchors (use left right if conflict)\r\n            if (this._anchorLeft !== null && this._anchorRight === null && this._right !== null)\r\n                this._anchorRight = this._right;\r\n            else if (this._anchorLeft === null && this._anchorRight !== null && this._left !== null)\r\n                this._anchorLeft = this._left;\r\n            else if (this._anchorLeft === null && this._anchorRight === null && this._left !== null && this._right !== null) {\r\n                this._anchorLeft = this._left;\r\n                this._anchorRight = this._right;\r\n            }\r\n\r\n\r\n            var useHorizontalAnchor = this._anchorLeft !== null || this._anchorRight !== null;\r\n            var useLeftRight = !useHorizontalAnchor && (this._left !== null || this._right !== null);\r\n\r\n            if (useLeftRight) {\r\n                if (this._left !== null)\r\n                    this.container.position.x = this._left;\r\n                else if (this._right !== null)\r\n                    this.container.position.x = parentWidth - this._right;\r\n            }\r\n            else if (useHorizontalAnchor) {\r\n\r\n                if (this._anchorLeft !== null && this._anchorRight === null)\r\n                    this.container.position.x = this._anchorLeft;\r\n                else if (this._anchorLeft === null && this._anchorRight !== null)\r\n                    this.container.position.x = parentWidth - this._width - this._anchorRight;\r\n                else if (this._anchorLeft !== null && this._anchorRight !== null) {\r\n                    this.container.position.x = this._anchorLeft;\r\n                    this._width = parentWidth - this._anchorLeft - this._anchorRight;\r\n                }\r\n                this.container.position.x += pivotXOffset;\r\n            }\r\n            else {\r\n                this.container.position.x = 0;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (this.verticalAlign === null) {\r\n            //get anchors (use top bottom if conflict)\r\n            if (this._anchorTop !== null && this._anchorBottom === null && this._bottom !== null)\r\n                this._anchorBottom = this._bottom;\r\n            if (this._anchorTop === null && this._anchorBottom !== null && this._top !== null)\r\n                this._anchorTop = this._top;\r\n\r\n            var useVerticalAnchor = this._anchorTop !== null || this._anchorBottom !== null;\r\n            var useTopBottom = !useVerticalAnchor && (this._top !== null || this._bottom !== null);\r\n\r\n            if (useTopBottom) {\r\n                if (this._top !== null)\r\n                    this.container.position.y = this._top;\r\n                else if (this._bottom !== null)\r\n                    this.container.position.y = parentHeight - this._bottom;\r\n            }\r\n            else if (useVerticalAnchor) {\r\n                if (this._anchorTop !== null && this._anchorBottom === null)\r\n                    this.container.position.y = this._anchorTop;\r\n                else if (this._anchorTop === null && this._anchorBottom !== null)\r\n                    this.container.position.y = parentHeight - this._height - this._anchorBottom;\r\n                else if (this._anchorTop !== null && this._anchorBottom !== null) {\r\n                    this.container.position.y = this._anchorTop;\r\n                    this._height = parentHeight - this._anchorTop - this._anchorBottom;\r\n                }\r\n                this.container.position.y += pivotYOffset;\r\n            }\r\n            else {\r\n                this.container.position.y = 0;\r\n            }\r\n        }\r\n\r\n        //min/max sizes\r\n        if (this._maxWidth !== null && this._width > this._maxWidth) this._width = this._maxWidth;\r\n        if (this._width < this._minWidth) this._width = this._minWidth;\r\n\r\n        if (this._maxHeight !== null && this._height > this._maxHeight) this._height = this._maxHeight;\r\n        if (this._height < this._minHeight) this._height = this._minHeight;\r\n\r\n\r\n        //pure vertical/horizontal align\r\n        if (this.horizontalAlign !== null) {\r\n            if (this.horizontalAlign == \"center\")\r\n                this.container.position.x = parentWidth * 0.5 - this._width * 0.5;\r\n            else if (this.horizontalAlign == \"right\")\r\n                this.container.position.x = parentWidth - this._width;\r\n            else\r\n                this.container.position.x = 0;\r\n            this.container.position.x += pivotXOffset;\r\n        }\r\n        if (this.verticalAlign !== null) {\r\n            if (this.verticalAlign == \"middle\")\r\n                this.container.position.y = parentHeight * 0.5 - this._height * 0.5;\r\n            else if (this.verticalAlign == \"bottom\")\r\n                this.container.position.y = parentHeight - this._height;\r\n            else\r\n                this.container.position.y = 0;\r\n            this.container.position.y += pivotYOffset;\r\n        }\r\n\r\n\r\n        //Unrestricted dragging\r\n        if (this.dragging && !this.setting.dragRestricted) {\r\n            this.container.position.x = this._dragPosition.x;\r\n            this.container.position.y = this._dragPosition.y;\r\n        }\r\n\r\n\r\n        //scale\r\n        if (this.setting.scaleX !== null) this.container.scale.x = this.setting.scaleX;\r\n        if (this.setting.scaleY !== null) this.container.scale.y = this.setting.scaleY;\r\n\r\n        //pivot\r\n        if (this.setting.pivotX !== null) this.container.pivot.x = pivotXOffset;\r\n        if (this.setting.pivotY !== null) this.container.pivot.y = pivotYOffset;\r\n\r\n        if (this.setting.alpha !== null) this.container.alpha = this.setting.alpha;\r\n        if (this.setting.rotation !== null) this.container.rotation = this.setting.rotation;\r\n\r\n        //make pixel perfect\r\n        if (this.pixelPerfect) {\r\n            this._width = Math.round(this._width);\r\n            this._height = Math.round(this._height);\r\n            this.container.position.x = Math.round(this.container.position.x);\r\n            this.container.position.y = Math.round(this.container.position.y);\r\n        }\r\n\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Updates all UI Children\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateChildren = function () {\r\n    for (var i = 0; i < this.children.length; i++) {\r\n        this.children[i].updatesettings(true);\r\n    }\r\n};\r\n\r\nUIBase.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent) {\r\n            UIObject.parent.removeChild(UIObject);\r\n        }\r\n\r\n        UIObject.parent = this;\r\n        this.container.addChild(UIObject.container);\r\n        this.children.push(UIObject);\r\n        this.updatesettings(true, true);\r\n    }\r\n\r\n    return UIObject;\r\n};\r\n\r\nUIBase.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        var index = this.children.indexOf(UIObject);\r\n        if (index !== -1) {\r\n            var oldUIParent = UIObject.parent;\r\n            var oldParent = UIObject.container.parent;\r\n            UIObject.container.parent.removeChild(UIObject.container);\r\n            this.children.splice(index, 1);\r\n            UIObject.parent = null;\r\n\r\n            //oldParent._recursivePostUpdateTransform();\r\n            setTimeout(function () { //hack but cant get the transforms to update propertly otherwice?\r\n                if (oldUIParent.updatesettings)\r\n                    oldUIParent.updatesettings(true, true);\r\n            }, 0);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Initializes the object when its added to an UIStage\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.initialize = function () {\r\n    this.initialized = true;\r\n    this.stage = this.parent.stage;\r\n    if (this.draggable) {\r\n        this.initDraggable();\r\n    }\r\n\r\n    if (this.droppable) {\r\n        this.initDroppable();\r\n    }\r\n};\r\n\r\nUIBase.prototype.clearDraggable = function () {\r\n    if (this.dragInitialized) {\r\n        this.dragInitialized = false;\r\n        this.drag.stopEvent();\r\n    }\r\n};\r\n\r\nUIBase.prototype.initDraggable = function () {\r\n    if (!this.dragInitialized) {\r\n        this.dragInitialized = true;\r\n        var containerStart = new PIXI.Point(),\r\n            stageOffset = new PIXI.Point(),\r\n            self = this;\r\n\r\n        this._dragPosition = new PIXI.Point();\r\n        this.drag = new DragEvent(this);\r\n        this.drag.onDragStart = function (e) {\r\n            \r\n            var added = DragDropController.add(this, e);\r\n            if (!this.dragging && added) {\r\n                this.dragging = true;\r\n                this.container.interactive = false;\r\n                containerStart.copy(this.container.position);\r\n                if (this.dragContainer) {\r\n                    var c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\r\n                    if (c) {\r\n                        //_this.container._recursivePostUpdateTransform();\r\n                        stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\r\n                        c.addChild(this.container);\r\n                    }\r\n                } else {\r\n                    stageOffset.set(0);\r\n                }\r\n                this.emit(\"draggablestart\", e);\r\n            }\r\n\r\n            \r\n        };\r\n\r\n\r\n        this.drag.onDragMove = function (e, offset) {\r\n            if (this.dragging) {\r\n                this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\r\n                this.x = this._dragPosition.x;\r\n                this.y = this._dragPosition.y;\r\n                this.emit(\"draggablemove\", e);\r\n            }\r\n            \r\n        };\r\n\r\n        this.drag.onDragEnd = function (e) {\r\n            if (this.dragging) {\r\n                this.dragging = false;\r\n                //Return to container after 0ms if not picked up by a droppable\r\n                setTimeout(function () {\r\n                    self.container.interactive = true;\r\n                    var item = DragDropController.getItem(self);\r\n                    if (item) {\r\n                        var container = self.parent === self.stage ? self.stage : self.parent.container;\r\n                        container.toLocal(self.container.position, self.container.parent, self);\r\n                        if (container != self.container) {\r\n                            self.parent.addChild(self);\r\n                        }\r\n                    }\r\n                    self.emit(\"draggableend\", e);\r\n                }, 0);\r\n            }\r\n            \r\n        };\r\n    }\r\n};\r\n\r\nUIBase.prototype.clearDroppable = function () {\r\n    if (this.dropInitialized) {\r\n        this.dropInitialized = false;\r\n        this.container.removeListener('mouseup', this.onDrop);\r\n        this.container.removeListener('touchend', this.onDrop);\r\n    }\r\n};\r\n\r\nUIBase.prototype.initDroppable = function () {\r\n    if (!this.dropInitialized) {\r\n        this.dropInitialized = true;\r\n        var container = this.container,\r\n            self = this;\r\n\r\n        this.container.interactive = true;\r\n        this.onDrop = function (event) {\r\n            var item = DragDropController.getEventItem(event, self.dropGroup);\r\n            if (item && item.dragging) {\r\n                item.dragging = false;\r\n                item.container.interactive = true;\r\n                var parent = self.droppableReparent !== null ? self.droppableReparent : self;\r\n                parent.container.toLocal(item.container.position, item.container.parent, item);\r\n                if (parent.container != item.container.parent)\r\n                    parent.addChild(item);\r\n            }\r\n        };\r\n\r\n        container.on('mouseup', this.onDrop);\r\n        container.on('touchend', this.onDrop);\r\n    }\r\n};\r\n\r\nObject.defineProperties(UIBase.prototype, {\r\n    x: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            this.left = val;\r\n        }\r\n    },\r\n    y: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            this.top = val;\r\n        }\r\n    },\r\n    width: {\r\n        get: function () {\r\n            return this.setting.width;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.widthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.widthPct = null;\r\n            \r\n            this.setting.width = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_width: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.widthPct !== null) {\r\n                    this._width = this.parent._width * this.setting.widthPct;\r\n                }\r\n                else {\r\n                    this._width = this.setting.width;\r\n                }\r\n            }\r\n            return this._width;\r\n        }\r\n    },\r\n    height: {\r\n        get: function () {\r\n            return this.setting.height;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.heightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.heightPct = null;\r\n            \r\n            this.setting.height = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_height: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.heightPct !== null) {\r\n                    this._height = this.parent._height * this.setting.heightPct;\r\n                }\r\n                else {\r\n                    this._height = this.setting.height;\r\n                }\r\n            }\r\n            return this._height;\r\n        }\r\n    },\r\n    minWidth: {\r\n        get: function () {\r\n            return this.setting.minWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.minWidthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.minWidthPct = null;\r\n            \r\n            this.setting.minWidth = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_minWidth: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.minWidthPct !== null) {\r\n                    this._minWidth = this.parent._width * this.setting.minWidthPct;\r\n                }\r\n                else {\r\n                    this._minWidth = this.setting.minWidth;\r\n                }\r\n            }\r\n            return this._minWidth;\r\n        }\r\n    },\r\n    minHeight: {\r\n        get: function () {\r\n            return this.setting.minHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.minHeightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.minHeightPct = null;\r\n            \r\n            this.setting.minHeight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_minHeight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.minHeightPct !== null) {\r\n                    this._minHeight = this.parent._height * this.setting.minHeightPct;\r\n                }\r\n                else {\r\n                    this._minHeight = this.setting.minHeight;\r\n                }\r\n            }\r\n            return this._minHeight;\r\n        }\r\n    },\r\n    maxWidth: {\r\n        get: function () {\r\n            return this.setting.maxWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.maxWidthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.maxWidthPct = null;\r\n            \r\n\r\n            this.setting.maxWidth = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_maxWidth: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.maxWidthPct !== null) {\r\n                    this._maxWidth = this.parent._width * this.setting.maxWidthPct;\r\n                }\r\n                else {\r\n                    this._maxWidth = this.setting.maxWidth;\r\n                }\r\n            }\r\n            return this._maxWidth;\r\n        }\r\n    },\r\n    maxHeight: {\r\n        get: function () {\r\n            return this.setting.maxHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.maxHeightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.maxHeightPct = null;\r\n            \r\n            this.setting.maxHeight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_maxHeight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.maxHeightPct !== null) {\r\n                    this._maxHeight = this.parent._height * this.setting.maxHeightPct;\r\n                }\r\n                else {\r\n                    this._maxHeight = this.setting.maxHeight;\r\n                }\r\n            }\r\n            return this._maxHeight;\r\n        }\r\n    },\r\n    anchorLeft: {\r\n        get: function () {\r\n            return this.setting.anchorLeft;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) \r\n                this.setting.anchorLeftPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else \r\n                this.setting.anchorLeftPct = null;\r\n            \r\n            this.setting.anchorLeft = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorLeft: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorLeftPct !== null) {\r\n                    this._anchorLeft = this.parent._width * this.setting.anchorLeftPct;\r\n                }\r\n                else {\r\n                    this._anchorLeft = this.setting.anchorLeft;\r\n                }\r\n            }\r\n            return this._anchorLeft;\r\n        }\r\n    },\r\n    anchorRight: {\r\n        get: function () {\r\n            return this.setting.anchorRight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorRightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.anchorRightPct = null;\r\n            \r\n            this.setting.anchorRight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorRight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorRightPct !== null) {\r\n                    this._anchorRight = this.parent._width * this.setting.anchorRightPct;\r\n                }\r\n                else {\r\n                    this._anchorRight = this.setting.anchorRight;\r\n                }\r\n            }\r\n            return this._anchorRight;\r\n        }\r\n    },\r\n    anchorTop: {\r\n        get: function () {\r\n            return this.setting.anchorTop;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorTopPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.anchorTopPct = null;\r\n            \r\n            this.setting.anchorTop = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorTop: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorTopPct !== null) {\r\n                    this._anchorTop = this.parent._height * this.setting.anchorTopPct;\r\n                }\r\n                else {\r\n                    this._anchorTop = this.setting.anchorTop;\r\n                }\r\n            }\r\n            return this._anchorTop;\r\n        }\r\n    },\r\n    anchorBottom: {\r\n        get: function () {\r\n            return this.setting.anchorBottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorBottomPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else \r\n                this.setting.anchorBottomPct = null;\r\n            \r\n            this.setting.anchorBottom = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorBottom: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorBottomPct !== null) {\r\n                    this._anchorBottom = this.parent._height * this.setting.anchorBottomPct;\r\n                }\r\n                else {\r\n                    this._anchorBottom = this.setting.anchorBottom;\r\n                }\r\n            }\r\n            return this._anchorBottom;\r\n        }\r\n    },\r\n    left: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.leftPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.leftPct = null;\r\n            \r\n            this.setting.left = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_left: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.leftPct !== null) {\r\n                    this._left = this.parent._width * this.setting.leftPct;\r\n                }\r\n                else {\r\n                    this._left = this.setting.left;\r\n                }\r\n            }\r\n            return this._left;\r\n        }\r\n    },\r\n    right: {\r\n        get: function () {\r\n            return this.setting.right;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.rightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.rightPct = null;\r\n\r\n            this.setting.right = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_right: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.rightPct !== null) {\r\n                    this._right = this.parent._width * this.setting.rightPct;\r\n                }\r\n                else {\r\n                    this._right = this.setting.right;\r\n                }\r\n            }\r\n            return this._right;\r\n        }\r\n    },\r\n    top: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.topPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.topPct = null;\r\n\r\n            this.setting.top = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_top: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.topPct !== null) {\r\n                    this._top = this.parent._height * this.setting.topPct;\r\n                }\r\n                else {\r\n                    this._top = this.setting.top;\r\n                }\r\n            }\r\n            return this._top;\r\n        }\r\n    },\r\n    bottom: {\r\n        get: function () {\r\n            return this.setting.bottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.bottomPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.bottomPct = null;\r\n\r\n            this.setting.bottom = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_bottom: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.bottomPct !== null) {\r\n                    this._bottom = this.parent._height * this.setting.bottomPct;\r\n                }\r\n                else {\r\n                    this._bottom = this.setting.bottom;\r\n                }\r\n            }\r\n            return this._bottom;\r\n        }\r\n    },\r\n    verticalAlign: {\r\n        get: function () {\r\n            return this.setting.verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.verticalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    horizontalAlign: {\r\n        get: function () {\r\n            return this.setting.horizontalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.horizontalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    tint: {\r\n        get: function () {\r\n            return this.setting.tint;\r\n        },\r\n        set: function (val) {\r\n            this.setting.tint = val;\r\n            this.update();\r\n        }\r\n    },\r\n    alpha: {\r\n        get: function () {\r\n            return this.setting.alpha;\r\n        },\r\n        set: function (val) {\r\n            this.setting.alpha = val;\r\n            this.container.alpha = val;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this.setting.rotation;\r\n        },\r\n        set: function (val) {\r\n            this.setting.rotation = val;\r\n            this.container.rotation = val;\r\n        }\r\n    },\r\n    blendMode: {\r\n        get: function () {\r\n            return this.setting.blendMode;\r\n        },\r\n        set: function (val) {\r\n            this.setting.blendMode = val;\r\n            this.update();\r\n        }\r\n    },\r\n    pivotX: {\r\n        get: function () {\r\n            return this.setting.pivotX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    pivotY: {\r\n        get: function () {\r\n            return this.setting.pivotY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotY = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    pivot: {\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.setting.pivotY = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    scaleX: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.container.scale.x = val;\r\n        }\r\n    },\r\n    scaleY: {\r\n        get: function () {\r\n            return this.setting.scaleY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleY = val;\r\n            this.container.scale.y = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.setting.scaleY = val;\r\n            this.container.scale.x = val;\r\n            this.container.scale.y = val;\r\n        }\r\n    },\r\n\r\n    draggable: {\r\n        get: function () {\r\n            return this.setting.draggable;\r\n        },\r\n        set: function (val) {\r\n            this.setting.draggable = val;\r\n            if (this.initialized) {\r\n                if (val)\r\n                    this.initDraggable();\r\n                else\r\n                    this.clearDraggable();\r\n            }\r\n        }\r\n    },\r\n    dragRestricted: {\r\n        get: function () {\r\n            return this.setting.dragRestricted;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragRestricted = val;\r\n        }\r\n    },\r\n    dragRestrictAxis: {\r\n        get: function () {\r\n            return this.setting.dragRestrictAxis;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragRestrictAxis = val;\r\n        }\r\n    },\r\n    dragThreshold: {\r\n        get: function () {\r\n            return this.setting.dragThreshold;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragThreshold = val;\r\n        }\r\n    },\r\n    dragGroup: {\r\n        get: function () {\r\n            return this.setting.dragGroup;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragGroup = val;\r\n        }\r\n    },\r\n    dragContainer: {\r\n        get: function () {\r\n            return this.setting.dragContainer;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragContainer = val;\r\n        }\r\n    },\r\n    droppable: {\r\n        get: function () {\r\n            return this.setting.droppable;\r\n        },\r\n        set: function (val) {\r\n            this.setting.droppable = true;\r\n            if (this.initialized) {\r\n                if (val)\r\n                    this.initDroppable();\r\n                else\r\n                    this.clearDroppable();\r\n            }\r\n        }\r\n    },\r\n    droppableReparent: {\r\n        get: function () {\r\n            return this.setting.droppableReparent;\r\n        },\r\n        set: function (val) {\r\n            this.setting.droppableReparent = val;\r\n        }\r\n    },\r\n    dropGroup: {\r\n        get: function () {\r\n            return this.setting.dropGroup;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dropGroup = val;\r\n        }\r\n    },\r\n    renderable: {\r\n        get: function () {\r\n            return this.container.renderable;\r\n        },\r\n        set: function (val) {\r\n            this.container.renderable = val;\r\n        }\r\n    },\r\n    visible: {\r\n        get: function () {\r\n            return this.container.visible;\r\n        },\r\n        set: function (val) {\r\n            this.container.visible = val;\r\n        }\r\n    },\r\n    cacheAsBitmap: {\r\n        get: function () {\r\n            return this.container.cacheAsBitmap;\r\n        },\r\n        set: function (val) {\r\n            this.container.cacheAsBitmap = val;\r\n        }\r\n    },\r\n    onClick: {\r\n        get: function () {\r\n            return this.container.click;\r\n        },\r\n        set: function (val) {\r\n            this.container.click = val;\r\n        }\r\n    },\r\n    interactive: {\r\n        get: function () {\r\n            return this.container.interactive;\r\n        },\r\n        set: function (val) {\r\n            this.container.interactive = val;\r\n        }\r\n    },\r\n    interactiveChildren: {\r\n        get: function () {\r\n            return this.container.interactiveChildren;\r\n        },\r\n        set: function (val) {\r\n            this.container.interactiveChildren = val;\r\n        }\r\n    },\r\n    parentLayer: {\r\n        get: function () {\r\n            return this.container.parentLayer;\r\n        },\r\n        set: function (val) {\r\n            this.container.parentLayer = val;\r\n        }\r\n    }\r\n});","/**\r\n * Settings object for all UIObjects\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n */\r\nfunction UISettings() {\r\n    this.width = 0;\r\n    this.height = 0;\r\n    this.minHeight = 0;\r\n    this.maxWidth = null;\r\n    this.maxHeight = null;\r\n    this.left = null;\r\n    this.right = null;\r\n    this.top = null;\r\n    this.bottom = null;\r\n    this.anchorLeft = null;\r\n    this.anchorRight = null;\r\n    this.anchorTop = null;\r\n    this.anchorBottom = null;\r\n\r\n    this.widthPct = null;\r\n    this.heightPct = null;\r\n    this.minWidthPct = null;\r\n    this.minHeightPct = null;\r\n    this.maxWidthPct = null;\r\n    this.maxHeightPct = null;\r\n    this.minWidth = 0;\r\n    this.leftPct = null;\r\n    this.rightPct = null;\r\n    this.topPct = null;\r\n    this.bottomPct = null;\r\n    this.anchorLeftPct = null;\r\n    this.anchorRightPct = null;\r\n    this.anchorTopPct = null;\r\n    this.anchorBottomPct = null;\r\n\r\n    this.pivotX = 0;\r\n    this.pivotY = 0;\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n    this.verticalAlign = null;\r\n    this.horizontalAlign = null;\r\n    this.rotation = null;\r\n    this.blendMode = null;\r\n    this.tint = null;\r\n    this.alpha = 1;\r\n\r\n\r\n    this.draggable = null;\r\n    this.dragRestricted = false;\r\n    this.dragRestrictAxis = null; //x, y\r\n    this.dragThreshold = 0;\r\n    this.dragGroup = null;\r\n    this.dragContainer = null;\r\n    this.droppable = null;\r\n    this.droppableReparent = null;\r\n    this.dropGroup = null;\r\n}\r\n\r\n\r\nmodule.exports = UISettings;\r\n\r\n\r\n","\r\nvar Library = {\r\n    UI: require('./UI')\r\n};\r\n\r\n//dump everything into extras\r\n\r\nObject.assign(PIXI, Library);\r\n\r\nmodule.exports = Library;\r\n"],"sourceRoot":"."}