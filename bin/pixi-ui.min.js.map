{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Container.js","src/SliceSprite.js","src/Stage.js","src/Text.js","src/UI.js","src/UIBase.js","src/UISettings.js","src"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixiUi","min","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Container","width","height","UIBase","prototype","Object","create","constructor","SliceSprite","sprite","borderWidth","horizontalSlice","verticalSlice","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","stl","str","sbl","sbr","st","sb","sl","sr","sf","bw","vs","hs","texture","baseTexture","frame","PIXI","Rectangle","x","y","Sprite","Texture","container","addChild","setting","minWidth","minHeight","update","tint","Stage","_width","_height","UIChildren","UIObject","argumentLenght","arguments","parent","removeChild","push","index","indexOf","splice","resize","isNaN","updatesettings","defineProperties","get","set","val","Text","text","PIXITextStyle","UI","UISettings","children","baseupdate","updateChildren","parentWidth","parentHeight","widthPct","heightPct","minWidthPct","minHeightPct","maxWidthPct","maxWidth","maxHeightPct","maxHeight","leftPct","left","rightPct","right","topPct","top","bottomPct","bottom","anchorLeftPct","anchorLeft","anchorRightPct","anchorRight","anchorTopPct","anchorTop","anchorBottomPct","anchorBottom","horizontalAlign","useHorizontalAnchor","useLeftRight","position","pivotX","verticalAlign","useVerticalAnchor","useTopBottom","pivotY","scaleX","scale","scaleY","pivot","Math","round","argumentsLength","replace","parseFloat","percentageMinWidth","percentageMinHeight","Library","assign"],"mappings":"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","file":"pixi-ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Container\r\n * @param height {Number} Height of the Container\r\n */\r\nfunction Container(width, height) {\r\n    UIBase.call(this, width, height);\r\n}\r\n\r\n\r\n\r\nContainer.prototype = Object.create(UIBase.prototype);\r\nContainer.prototype.constructor = Container;\r\nmodule.exports = Container;\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A sliced sprite with dynamic width and height.\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Sprite {PIXI.Sprite} the sprite for this SliceSprite\r\n * @param BorderWidth {Number} Width of the sprite borders\r\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\r\n * @param horizontalSlice {Boolean} Slice the sprite vertically\r\n */\r\nfunction SliceSprite(sprite, borderWidth, horizontalSlice, verticalSlice) {\r\n    UIBase.call(this, sprite.width, sprite.height);\r\n\r\n    var ftl, ftr, fbl, fbr, ft, fb, fl, fr, ff, stl, str, sbl, sbr, st, sb, sl, sr, sf,\r\n        bw = borderWidth || 5,\r\n        vs = typeof verticalSlice !== \"undefined\" ? verticalSlice : true,\r\n        hs = typeof horizontalSlice !== \"undefined\" ? horizontalSlice : true,\r\n        t = sprite.texture.baseTexture,\r\n        f = sprite.texture.frame;\r\n\r\n\r\n    //get frames\r\n    if (vs && hs) {\r\n        ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\r\n        ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\r\n        fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\r\n        fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\r\n        ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\r\n        fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\r\n        fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\r\n        fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\r\n        ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\r\n    }\r\n    else if (hs) {\r\n        fl = new PIXI.Rectangle(f.x, f.y, bw, f.height);\r\n        fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\r\n        ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\r\n    }\r\n    else { //vs\r\n        ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\r\n        fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\r\n        ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\r\n    }\r\n\r\n    //TODO: swap frames if rotation\r\n\r\n\r\n\r\n    //make sprites\r\n    sf = new PIXI.Sprite(new PIXI.Texture(t, ff));\r\n    this.container.addChild(sf);\r\n    if (vs && hs) {\r\n        stl = new PIXI.Sprite(new PIXI.Texture(t, ftl));\r\n        str = new PIXI.Sprite(new PIXI.Texture(t, ftr));\r\n        sbl = new PIXI.Sprite(new PIXI.Texture(t, fbl));\r\n        sbr = new PIXI.Sprite(new PIXI.Texture(t, fbr));\r\n        this.container.addChild(stl, str, sbl, sbr);\r\n\r\n    }\r\n    if (hs) {\r\n        this.setting.minWidth = bw * 2;\r\n        sl = new PIXI.Sprite(new PIXI.Texture(t, fl));\r\n        sr = new PIXI.Sprite(new PIXI.Texture(t, fr));\r\n        this.container.addChild(sl, sr);\r\n    }\r\n    if (vs) {\r\n        this.setting.minHeight = bw * 2;\r\n        st = new PIXI.Sprite(new PIXI.Texture(t, ft));\r\n        sb = new PIXI.Sprite(new PIXI.Texture(t, fb));\r\n        this.container.addChild(st, sb);\r\n    }\r\n\r\n    //set constant position and sizes\r\n    if (vs && hs) st.x = sb.x = sl.y = sr.y = stl.width = str.width = sbl.width = sbr.width = stl.height = str.height = sbl.height = sbr.height = bw;\r\n    if (hs) sf.x = sl.width = sr.width = bw;\r\n    if (vs) sf.y = st.height = sb.height = bw;\r\n\r\n\r\n    /**\r\n     * Updates the sliced sprites position and size\r\n     *\r\n     * @private\r\n     */\r\n    this.update = function () {\r\n        if (vs && hs) {\r\n            str.x = sbr.x = sr.x = this.width - bw;\r\n            sbl.y = sbr.y = sb.y = this.height - bw;\r\n            sf.width = st.width = sb.width = this.width - bw * 2;\r\n            sf.height = sl.height = sr.height = this.height - bw * 2;\r\n        }\r\n        else if (hs) {\r\n            sr.x = this.width - bw;\r\n            sl.height = sr.height = sf.height = this.height;\r\n            sf.width = this.width - bw * 2;\r\n        }\r\n        else { //vs\r\n            sb.y = this.height - bw;\r\n            st.width = sb.width = sf.width = this.width;\r\n            sf.height = this.height - bw * 2;\r\n        }\r\n\r\n        if (this.tint !== null) {\r\n            sf.tint = this.tint;\r\n            if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\r\n            if (hs) sl.tint = sr.tint = this.tint;\r\n            if (vs) st.tint = sb.tint = this.tint;\r\n        }\r\n    };\r\n}\r\n\r\nSliceSprite.prototype = Object.create(UIBase.prototype);\r\nSliceSprite.prototype.constructor = SliceSprite;\r\nmodule.exports = SliceSprite;\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A Stage for UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.Container\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Stage\r\n * @param height {Number} Height of the Stage\r\n */\r\nfunction Stage(width, height) {\r\n    this._width = width;\r\n    this._height = height;\r\n    PIXI.Container.call(this);\r\n    this.UIChildren = [];\r\n}\r\n\r\nStage.prototype = Object.create(PIXI.Container.prototype);\r\nStage.prototype.constructor = Stage;\r\nmodule.exports = Stage;\r\n\r\nStage.prototype.addChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent !== null)\r\n            UIObject.parent.removeChild(UIObject);\r\n\r\n        UIObject.parent = this;\r\n        this.UIChildren.push(UIObject);\r\n        PIXI.Container.prototype.addChild.call(this, UIObject.container);\r\n    }\r\n};\r\n\r\nStage.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        var index = this.UIChildren.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.UIChildren.splice(index, 1);\r\n            UIObject.parent = null;\r\n        }\r\n        PIXI.Container.prototype.addChild.call(this, UIObject.container);\r\n    }\r\n};\r\n\r\nStage.prototype.resize = function (width, height) {\r\n    if (!isNaN(height)) this._height = height;\r\n    if (!isNaN(width)) this._width = width;\r\n\r\n    for (var i = 0; i < this.UIChildren.length; i++)\r\n        this.UIChildren[i].updatesettings();\r\n};\r\n\r\nObject.defineProperties(Stage.prototype, {\r\n    width: {\r\n        get: function () {\r\n            return this._width;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this._width = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    },\r\n    height: {\r\n        get: function () {\r\n            return this._height;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this._height = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    }\r\n});","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Text {String} Text content\r\n * @param TextStyle {PIXI.TextStyle} Style used for the Text\r\n */\r\nfunction Text(text, PIXITextStyle) {\r\n    this.text = new PIXI.Text(text, PIXITextStyle);\r\n    UIBase.call(this, this.text.width, this.text.height);\r\n    this.container.addChild(this.text);\r\n}\r\n\r\nText.prototype = Object.create(UIBase.prototype);\r\nText.prototype.constructor = Text;\r\nmodule.exports = Text;\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nText.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        text.tint = this.tint;\r\n};\r\n\r\n","var UI = {\r\n    UISettings: require('./UISettings'),\r\n    UIBase: require('./UIBase'),\r\n    Stage: require('./Stage'),\r\n    Container: require('./Container'),\r\n    SliceSprite: require('./SliceSprite'),\r\n    Text: require('./Text')\r\n};\r\n\r\nmodule.exports = UI;","var UISettings = require('./UISettings'),\r\n    UI = require('./UI');\r\n\r\n/**\r\n * Base class of all UIObjects\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the UIObject\r\n * @param height {Number} Height of the UIObject\r\n */\r\nfunction UIBase(width, height) {\r\n    this.container = new PIXI.Container();\r\n    this.setting = new UISettings();\r\n    this.children = [];\r\n    this.parent = null;\r\n    this.width = width || 0;\r\n    this.height = height || 0;\r\n}\r\n\r\nUIBase.prototype.constructor = UIBase;\r\nmodule.exports = UIBase;\r\n\r\n/**\r\n * Renders the object using the WebGL renderer\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updatesettings = function () {\r\n    this.baseupdate();\r\n    this.update();\r\n    this.updateChildren();\r\n};\r\n\r\n/**\r\n * Update method (override from other UIObjects)\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.update = function () {\r\n};\r\n\r\n/**\r\n * Updates the UIObject with all base settings\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.baseupdate = function () {\r\n    var parentWidth = this.parent !== null ? this.parent.width : 0;\r\n    var parentHeight = this.parent !== null ? this.parent.height : 0;\r\n    this.setting.height = this.setting._height;\r\n    this.setting.width = this.setting._width;\r\n\r\n    //percentage convertions\r\n    if (this.setting.widthPct !== null)\r\n        this.setting.width = parentWidth * this.setting.widthPct;\r\n    if (this.setting.heightPct !== null)\r\n        this.setting.height = parentHeight * this.setting.heightPct;\r\n    if (this.setting.minWidthPct !== null)\r\n        this.setting.minWidth = parentWidth * this.setting.minWidthPct;\r\n    if (this.setting.minHeightPct !== null)\r\n        this.setting.minHeight = parentHeight * this.setting.minHeightPct;\r\n    if (this.setting.maxWidthPct !== null)\r\n        this.setting.maxWidth = parentWidth * this.setting.maxWidthPct;\r\n    if (this.setting.maxHeightPct !== null)\r\n        this.setting.maxHeight = parentHeight * this.setting.maxHeightPct;\r\n    if (this.setting.leftPct !== null)\r\n        this.setting.left = parentWidth * this.setting.leftPct;\r\n    if (this.setting.rightPct !== null)\r\n        this.setting.right = parentWidth * this.setting.rightPct;\r\n    if (this.setting.topPct !== null)\r\n        this.setting.top = parentHeight * this.setting.topPct;\r\n    if (this.setting.bottomPct !== null)\r\n        this.setting.bottom = parentHeight * this.setting.bottomPct;\r\n    if (this.setting.anchorLeftPct !== null)\r\n        this.setting.anchorLeft = parentWidth * this.setting.anchorLeftPct;\r\n    if (this.setting.anchorRightPct !== null)\r\n        this.setting.anchorRight = parentWidth * this.setting.anchorRightPct;\r\n    if (this.setting.anchorTopPct !== null)\r\n        this.setting.anchorTop = parentHeight * this.setting.anchorTopPct;\r\n    if (this.setting.anchorBottomPct !== null)\r\n        this.setting.anchorBottom = parentHeight * this.setting.anchorBottomPct;\r\n\r\n    if (this.horizontalAlign === null) {\r\n        //get anchors (use left right if conflict)\r\n        var anchorLeft = this.anchorLeft;\r\n        var anchorRight = this.anchorRight;\r\n        if (anchorLeft !== null && anchorRight === null && this.right !== null)\r\n            anchorRight = this.right;\r\n        else if (anchorLeft === null && anchorRight !== null && this.left !== null)\r\n            anchorLeft = this.left;\r\n        else if (anchorLeft === null && anchorRight === null && this.left !== null && this.right !== null) {\r\n            anchorLeft = this.left;\r\n            anchorRight = this.right;\r\n        }\r\n\r\n        var useHorizontalAnchor = anchorLeft !== null || anchorRight !== null;\r\n        var useLeftRight = !useHorizontalAnchor && (this.left !== null || this.right !== null);\r\n\r\n        if (useLeftRight) {\r\n            if (this.left !== null)\r\n                this.container.position.x = this.left;\r\n            else if (this.right !== null)\r\n                this.container.position.x = parentWidth - this.right;\r\n        }\r\n        else if (useHorizontalAnchor) {\r\n            if (anchorLeft !== null && anchorRight === null)\r\n                this.container.position.x = anchorLeft;\r\n            else if (anchorLeft === null && anchorRight !== null)\r\n                this.container.position.x = parentWidth - this.width - anchorRight;\r\n            else if (anchorLeft !== null && anchorRight !== null) {\r\n                this.container.position.x = anchorLeft;\r\n                this.setting.width = parentWidth - anchorLeft - anchorRight;\r\n            }\r\n            this.container.position.x += this.pivotX * this.setting.width;\r\n        }\r\n        else {\r\n            this.container.position.x = 0;\r\n        }\r\n    }\r\n\r\n    if (this.verticalAlign === null) {\r\n        //get anchors (use top bottom if conflict)\r\n        var anchorTop = this.anchorTop;\r\n        var anchorBottom = this.anchorBottom;\r\n        if (anchorTop !== null && anchorBottom === null && this.bottom !== null)\r\n            anchorBottom = this.bottom;\r\n        if (anchorTop === null && anchorBottom !== null && this.top !== null)\r\n            anchorTop = this.top;\r\n\r\n        var useVerticalAnchor = anchorTop !== null || anchorBottom !== null;\r\n        var useTopBottom = !useVerticalAnchor && (this.top !== null || this.bottom !== null);\r\n\r\n        if (useTopBottom) {\r\n            if (this.top !== null)\r\n                this.container.position.y = this.top;\r\n            else if (this.bottom !== null)\r\n                this.container.position.y = parentHeight - this.bottom;\r\n        }\r\n        else if (useVerticalAnchor) {\r\n            if (anchorTop !== null && anchorBottom === null)\r\n                this.container.position.y = anchorTop;\r\n            else if (anchorTop === null && anchorBottom !== null)\r\n                this.container.position.y = parentHeight - this.height - anchorBottom;\r\n            else if (anchorTop !== null && anchorBottom !== null) {\r\n                this.container.position.y = anchorTop;\r\n                this.setting.height = parentHeight - anchorTop - anchorBottom;\r\n            }\r\n            this.container.position.y += this.pivotY * this.setting.width;\r\n        }\r\n        else {\r\n            this.container.position.y = 0;\r\n        }\r\n    }\r\n\r\n    //min/max sizes\r\n    if (this.setting.maxWidth !== null && this.setting.width > this.setting.maxWidth) this.setting.width = this.setting.maxWidth;\r\n    if (this.setting.width < this.setting.minWidth) this.setting.width = this.setting.minWidth;\r\n\r\n    if (this.setting.maxHeight !== null && this.setting.height > this.setting.maxHeight) this.setting.height = this.setting.maxHeight;\r\n    if (this.setting.height < this.setting.minHeight) this.setting.height = this.setting.minHeight;\r\n\r\n\r\n    //pure vertical/horizontal align\r\n    if (this.horizontalAlign !== null) {\r\n        if (this.horizontalAlign == \"center\")\r\n            this.container.position.x = parentWidth * 0.5 - this.width * 0.5;\r\n        else if (this.horizontalAlign == \"right\")\r\n            this.container.position.x = parentWidth - this.width;\r\n        else\r\n            this.container.position.x = 0;\r\n        this.container.position.x += this.width * this.pivotX;\r\n    }\r\n    if (this.verticalAlign !== null) {\r\n        if (this.verticalAlign == \"middle\")\r\n            this.container.position.y = parentHeight * 0.5 - this.height * 0.5;\r\n        else if (this.verticalAlign == \"bottom\")\r\n            this.container.position.y = parentHeight - this.height;\r\n        else\r\n            this.container.position.y = 0;\r\n        this.container.position.y += this.height * this.pivotY;\r\n    }\r\n\r\n\r\n\r\n    //scale\r\n    if (this.setting.scaleX !== null) this.container.scale.x = this.setting.scaleX;\r\n    if (this.setting.scaleY !== null) this.container.scale.y = this.setting.scaleY;\r\n\r\n    //pivot\r\n    if (this.setting.pivotX !== null) this.container.pivot.x = this.setting.width * this.setting.pivotX;\r\n    if (this.setting.pivotY !== null) this.container.pivot.y = this.setting.height * this.setting.pivotY;\r\n\r\n    this.container.position.x = Math.round(this.container.position.x);\r\n    this.container.position.y = Math.round(this.container.position.y);\r\n};\r\n\r\n/**\r\n * Updates all UI Children\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateChildren = function () {\r\n    for (var i = 0; i < this.children.length; i++) {\r\n        this.children[i].updatesettings();\r\n    }\r\n};\r\n\r\nUIBase.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent) {\r\n            UIObject.parent.removeChild(UIObject);\r\n        }\r\n\r\n        UIObject.parent = this;\r\n        this.container.addChild(UIObject.container);\r\n        this.children.push(UIObject);\r\n        this.updatesettings();\r\n    }\r\n\r\n    return UIObject;\r\n};\r\n\r\nUIBase.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        var index = this.children.indexOf(UIObject);\r\n        if (index !== -1) {\r\n            this.container.removeChild(UIObject.container);\r\n            this.children.splice(index, 1);\r\n            UIObject.parent = null;\r\n        }\r\n    }\r\n};\r\n\r\nObject.defineProperties(UIBase.prototype, {\r\n    width: {\r\n        get: function () {\r\n            return this.setting.width;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.widthPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.widthPct = null;\r\n                this.setting._width = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    height: {\r\n        get: function () {\r\n            return this.setting.height;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.heightPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.heightPct = null;\r\n                this.setting._height = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    minWidth: {\r\n        get: function () {\r\n            return this.setting.minWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.percentageMinWidth = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.percentageMinWidth = null;\r\n                this.setting.minWidth = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    minHeight: {\r\n        get: function () {\r\n            return this.setting.minHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.percentageMinHeight = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.percentageMinHeight = null;\r\n                this.setting.minHeight = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    maxWidth: {\r\n        get: function () {\r\n            return this.setting.maxWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.maxWidthPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.maxWidthPct = null;\r\n                this.setting.maxWidth = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    maxHeight: {\r\n        get: function () {\r\n            return this.setting.maxHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.maxHeightPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.maxHeightPct = null;\r\n                this.setting.maxHeight = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    anchorLeft: {\r\n        get: function () {\r\n            return this.setting.anchorLeft;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.anchorLeftPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.anchorLeftPct = null;\r\n                this.setting.anchorLeft = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    anchorRight: {\r\n        get: function () {\r\n            return this.setting.anchorRight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.anchorRightPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.anchorRightPct = null;\r\n                this.setting.anchorRight = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    anchorTop: {\r\n        get: function () {\r\n            return this.setting.anchorTop;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.anchorTopPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.anchorTopPct = null;\r\n                this.setting.anchorTop = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    anchorBottom: {\r\n        get: function () {\r\n            return this.setting.anchorBottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.anchorBottomPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.anchorBottomPct = null;\r\n                this.setting.anchorBottom = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    verticalAlign: {\r\n        get: function () {\r\n            return this.setting.verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.verticalAlign = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    horizontalAlign: {\r\n        get: function () {\r\n            return this.setting.horizontalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.horizontalAlign = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    tint: {\r\n        get: function () {\r\n            return this.setting.tint;\r\n        },\r\n        set: function (val) {\r\n            this.setting.tint = val;\r\n            this.update();\r\n        }\r\n    },\r\n    pivotX: {\r\n        get: function () {\r\n            return this.setting.pivotX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    pivotY: {\r\n        get: function () {\r\n            return this.setting.pivotY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotY = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    pivot: {\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.setting.pivotY = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    scaleX: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    scaleY: {\r\n        get: function () {\r\n            return this.setting.scaleY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleY = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    scale: {\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.setting.scaleY = val;\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    left: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.leftPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.leftPct = null;\r\n                this.setting.left = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    right: {\r\n        get: function () {\r\n            return this.setting.right;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.rightPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.rightPct = null;\r\n                this.setting.right = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    top: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.topPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.topPct = null;\r\n                this.setting.top = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    bottom: {\r\n        get: function () {\r\n            return this.setting.bottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) {\r\n                val = val.replace('%', '');\r\n                this.setting.bottomPct = parseFloat(val) * 0.01;\r\n            }\r\n            else {\r\n                this.setting.bottomPct = null;\r\n                this.setting.bottom = val;\r\n            }\r\n            this.updatesettings();\r\n        }\r\n    },\r\n    x: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            this.left = val;\r\n        }\r\n    },\r\n    y: {\r\n        get: function () {\r\n            return this.setting.right;\r\n        },\r\n        set: function (val) {\r\n            this.top = val;\r\n        }\r\n    },\r\n});\r\n","/**\r\n * Settings object for all UIObjects\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n */\r\nfunction UISettings() {\r\n    this._width = 0;\r\n    this.width = 0;\r\n    this.widthPct = null;\r\n    this._height = 0;\r\n    this.height = 0;\r\n    this.heightPct = null;\r\n    this.minWidth = 0;\r\n    this.minWidthPct = null;\r\n    this.minHeight = 0;\r\n    this.minHeightPct = null;\r\n    this.maxWidth = null;\r\n    this.maxWidthPct = null;\r\n    this.maxHeight = null;\r\n    this.maxHeightPct = null;\r\n    this.left = null;\r\n    this.leftPct = null;\r\n    this.right = null;\r\n    this.rightPct = null;\r\n    this.top = null;\r\n    this.topPct = null;\r\n    this.bottom = null;\r\n    this.bottomPct = null;\r\n    this.anchorLeft = null;\r\n    this.anchorLeftPct = null;\r\n    this.anchorRight = null;\r\n    this.anchorRightPct = null;\r\n    this.anchorTop = null;\r\n    this.anchorTopPct = null;\r\n    this.anchorBottom = null;\r\n    this.anchorBottomPct = null;\r\n    this.pivotX = null;\r\n    this.pivotY = null;\r\n    this.scaleX = null;\r\n    this.scaleY = null;\r\n    this.verticalAlign = null;\r\n    this.horizontalAlign = null;\r\n    this.tint = null;\r\n}\r\n\r\n\r\nmodule.exports = UISettings;\r\n\r\n\r\n","\r\nvar Library = {\r\n    UI: require('./UI')\r\n};\r\n\r\n//dump everything into extras\r\n\r\nObject.assign(PIXI, Library);\r\n\r\nmodule.exports = Library;\r\n"],"sourceRoot":"."}