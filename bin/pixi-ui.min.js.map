{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/emoji-regex/index.js","src/Button.js","src/CheckBox.js","src/Container.js","src/DynamicText/DynamicChar.js","src/DynamicText/DynamicText.js","src/DynamicText/DynamicTextStyle.js","src/Ease/Ease.js","src/Ease/EaseBase.js","src/Ease/ExponentialEase.js","src/InputBase.js","src/Interaction/ClickEvent.js","src/Interaction/DragDropController.js","src/Interaction/DragEvent.js","src/Interaction/InputController.js","src/Interaction/Interaction.js","src/Interaction/MouseScrollEvent.js","src/MathHelper.js","src/ScrollBar.js","src/ScrollingContainer.js","src/SliceSprite.js","src/Slider.js","src/SortableList.js","src/Sprite.js","src/Stage.js","src/Text.js","src/TextInput.js","src/Ticker.js","src/TilingSprite.js","src/Tween.js","src/UI.js","src/UIBase.js","src/UISettings.js","src"],"names":["f","exports","module","define","amd","g","window","global","self","this","pixiUi","min","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","Button","options","InputBase","background","width","height","tabIndex","tabGroup","pivot","verticalAlign","horizontalAlign","addChild","uiText","text","container","buttonMode","keyDownEvent","which","click","clickEvent","ClickEvent","onHover","emit","onLeave","onPress","isPressed","focus","data","originalEvent","preventDefault","onClick","_focused","prototype","document","addEventListener","blur","removeEventListener","Object","create","constructor","defineProperties","value","get","set","val","CheckBox","_checked","undefined","checked","_value","checkGroup","checkgroup","checkmark","alpha","InputController","registrerCheckGroup","change","updateCheckGroupSelected","selectedValue","getCheckGroupSelectedValue","setCheckGroupSelectedValue","Container","UIBase","hitArea","PIXI","Rectangle","update","_width","_height","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","DynamicText","atlas","DynamicAtlas","autoWidth","defaultStyle","DynamicTextStyle","merge","chars","renderChars","spriteCache","charContainer","_inputText","lastWidth","lastHeight","dirtyText","dirtyStyle","dirtySize","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","visible","char","lineWidth","lineHeight","maxLineWidth","Math","max","texture","tex","sprite","Sprite","anchor","x","y","tint","hexToInt","rotation","float","skew","parent","prepareForRender","pos","Point","lineFontSize","lineAlignment","align","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","ellipsis","lineFull","lastChar","overflowY","fontSize","size","round","letterSpacing","wrap","breakWords","overflowX","ellipsisData","d","dot","getCharObject","parseFloat","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","c","charCodeAt","test","allowTags","tag","substring","slice","indexOf","FoundTag","clone","fontStyle","push","fontWeight","splice","startsWith","regex","match","exec","emojiMatch","emojiRegex","fontFamily","settings","defaultEmojiFont","def","isNaN","int","parseInt","string","str","result","replace","hexToRgba","hex","debugSpriteSheet","mergeStyle","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","devicePixelRatio","canvasList","startdim","maxdim","AtlasNode","w","h","children","rect","insert","obj","newNode","frame","dw","dh","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","ctxFont","familyCache","key","ctxKey","metrics","generateCharData","bounds","minx","descent","Texture","setTimeout","addNewObjects","compareFunction","b","sort","_resized","_newcanvas","node","resizeCanvas","dim","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","trim","split","color","fillData","position","rgba","getFillStyle","fills","filter","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","stroke","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","shadow","strokeShadow","fillStyle","fill","strokeStyle","strokeFill","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","scale","_cachedEllipsisSize","ellipsisSize","param","join","fn","EaseBase","getPosition","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeIn","easeOut","easeInOut","Ease","ExponentialEase","HALF_PI","PI","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","p","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","pow","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","power","_useTab","_usePrev","_useNext","interactive","registrer","fireTab","firePrev","fireNext","documentMouseDown","__down","on","_bindEvents","stage","_clearEvents","off","clear","bound","id","ishover","_onMouseDown","event","identifier","_onMouseUp","_onMouseUpOutside","_mouseUpAll","removeListener","_onMouseOver","_onMouseOut","stopEvent","startEvent","_items","DragDropController","add","item","_dragDropEventId","getItem","object","index","getEventItem","group","dragGroup","DragEvent","start","offset","mouse","movementX","movementY","cancel","dragging","_onDragStart","copy","_onDragMove","_onDragEnd","abs","dragThreshold","dragRestrictAxis","onDragStart","onDragMove","onDragEnd","_currentItem","tabGroups","checkGroups","checkGroupValues","groupName","items","_tabIndex","_tabGroup","cb","name","Interaction","MouseScrollEvent","delta","_onMouseScroll","deltaX","deltaY","onMouseScroll","_onHover","MathHelper","Lerp","stop","amt","Round","number","decimals","ScrollBar","Slider","track","handle","vertical","scrollingContainer","autohide","_hidden","Tween","initialize","_onValueChanging","sizeAmt","innerContainer","forcePctPosition","_amt","_scrollBars","alignToContainer","newPos","x_y","width_height","top_left","_posAmt","toggleHidden","hidden","to","ScrollingContainer","mask","Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","performance","now","Ticker","apply","initScrolling","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","UIObject","argumentsLength","arguments","updateScrollBars","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","getInnerBounds","focusPosition","dif","speed","updateScrollPosition","updateDirection","getBounds","target","exp","drag","scrollSpeed","scroll","SliceSprite","borderWidth","horizontalSlice","verticalSlice","tile","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","stl","sbl","sbr","st","sb","sl","sr","sf","bw","vs","hs","setting","minWidth","minHeight","extras","TilingSprite","addChildAt","initialized","blendMode","_disabled","_minValue","minValue","_maxValue","maxValue","_onValueChange","onValueChange","onValueChanging","soft","handleSize","top","left","startValue","handleDrag","stopPropagation","maxPosition","triggerValueChanging","triggerValueChange","localMousePosition","trackDrag","updatePositionToMouse","mousePosition","toLocal","maxPos","_lastChange","_lastChanging","disabled","SortableList","desc","tweenTime","tweenEase","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","removeChild","instant","clearTimeout","_sortTimeout","_sort","_this","alt","res","fromTo","altering","updatesettings","fromFrame","frameId","fromImage","imageUrl","Stage","__width","__height","UIChildren","argumentLenght","resize","rx","ry","Text","PIXITextStyle","_text","baseupdate","_anchorLeft","_anchorRight","widthPct","_anchorTop","_anchorBottom","heightPct","TextInput","_pui_tempInput","setAttribute","_dirtyText","maxLength","_lastValue","multiLine","selectedColor","selectedBackgroundColor","tempText","destroy","selection","_startIndex","_endIndex","caret","_index","caretWidth","moveTo","lineTo","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","UI","anchorTop","anchorBottom","anchorLeft","anchorRight","cacheAsBitmap","updateText","setCaretIndex","hasSelection","updateSelectionGraphics","caretInterval","si","sie","ei","eie","sp","ds","de","rdd","vrdd","selectionStart","selectionEnd","cc","textLengthPX","textHeightPX","lineIndexMax","ctrlDown","shiftDown","shiftKey","ctrlKey","cmdKey","whitespace","lastWordIndex","charText","wrapped","updateClosestIndex","point","currentClosest","currentDistX","currentIndex","atEnd","closestLineIndex","floor","distX","deleteSelection","updateSelectionColors","_sp","scrollToPosition","resetScrollPosition","hideCaret","clearInterval","showCaret","clearSelection","setInterval","insertTextAtCaret","_atEnd","select","caretAtStart","_forward","startindex","selectRange","endIndex","_i","selectIndex","console","log","_down","keyUpEvent","copyEvent","clipboardData","setData","cutEvent","pasteEvent","getData","inputEvent","inputBlurEvent","mouseDown","timeSinceLast","selectWord","worldTransform","tx","ty","startIndex","drawSelectionRect","c1","cx","cy","cl","end","autoStart","utils","EventEmitter","_now","DeltaTime","Time","Ms","shared","time","_update","requestAnimationFrame","once","tilePosition","tileScale","getFromValue","widthKeys","heightKeys","getSurfix","getToValue","getObject","_tweenObjectId","_currentId","_tweenObjects","TweenObject","getTweenItem","_tweenItemCache","_ready","tween","TweenItem","_activeTweenObjects","tweens","active","ease","currentTime","surfix","keys","params","paramsFrom","paramsTo","UISettings","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_minWidth","_minHeight","_maxWidth","_maxHeight","_left","_right","_top","_bottom","_dragPosition","updateChildren","updateParent","parentHeight","parentWidth","actual_width","actual_height","actual_minWidth","actual_minHeight","actual_maxWidth","actual_maxHeight","actual_anchorLeft","actual_anchorRight","actual_anchorTop","actual_anchorBottom","actual_left","actual_right","actual_top","actual_bottom","_parentWidth","_parentHeight","useHorizontalAnchor","useLeftRight","pivotX","useVerticalAnchor","useTopBottom","pivotY","dragRestricted","scaleX","scaleY","oldUIParent","draggable","initDraggable","droppable","initDroppable","clearDraggable","stageOffset","added","dragContainer","clearDroppable","onDrop","dropGroup","droppableReparent","minWidthPct","minHeightPct","maxWidth","maxWidthPct","maxHeight","maxHeightPct","anchorLeftPct","anchorRightPct","anchorTopPct","anchorBottomPct","leftPct","right","rightPct","topPct","bottom","bottomPct","renderable","Library","assign"],"mappings":"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","file":"pixi-ui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nmodule.exports = function () {\n\t// https://mathiasbynens.be/notes/es-unicode-property-escapes#emoji\n\treturn (/\\uD83D\\uDC69(?:\\u200D(?:(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67|(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC69\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC6F\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642]\\uFE0F|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])\\uFE0F|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC69\\u200D[\\u2695\\u2696\\u2708]|\\uD83D\\uDC68(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708]))\\uFE0F|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83D\\uDC69\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69]))|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92])|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]))|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDD1-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC68(?:\\u200D(?:(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC67|(?:(?:\\uD83D[\\uDC68\\uDC69])\\u200D)?\\uD83D\\uDC66)|\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC69\\uDC6E\\uDC70-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3D\\uDD3E\\uDDD1-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])?|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDEEB\\uDEEC\\uDEF4-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEF8]|\\uD83E[\\uDD10-\\uDD3A\\uDD3C-\\uDD3E\\uDD40-\\uDD45\\uDD47-\\uDD4C\\uDD50-\\uDD6B\\uDD80-\\uDD97\\uDDC0\\uDDD0-\\uDDE6])\\uFE0F/g\n\t);\n};","var InputBase = require('./InputBase'),\r\n    ClickEvent = require('./Interaction/ClickEvent.js'),\r\n    InputController = require('./Interaction/InputController');\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\r\n * @param [options.text=null] {PIXI.UI.Text} optional text\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n */\r\n\r\nfunction Button(options) {\r\n    InputBase.call(this, options.background.width, options.background.height, options.tabIndex || 0, options.tabGroup || 0);\r\n    this.background = options.background;\r\n    this.background.width = \"100%\";\r\n    this.background.height = \"100%\";\r\n    this.background.pivot = 0.5;\r\n    this.background.verticalAlign = \"middle\";\r\n    this.background.horizontalAlign = \"center\";\r\n    this.addChild(this.background);\r\n\r\n\r\n    this.uiText = options.text;\r\n    if (this.uiText) {\r\n        this.uiText.verticalAlign = \"middle\";\r\n        this.uiText.horizontalAlign = \"center\";\r\n        this.addChild(this.uiText);\r\n    }\r\n\r\n    this.container.buttonMode = true;\r\n\r\n    var self = this;\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 32) { //space\r\n            self.click();\r\n        }\r\n    };\r\n\r\n    var clickEvent = new ClickEvent(this.background);\r\n    clickEvent.onHover = function (e) {\r\n        self.emit(\"hover\", true);\r\n    };\r\n\r\n    clickEvent.onLeave = function (e) {\r\n        self.emit(\"hover\", false);\r\n    };\r\n\r\n    clickEvent.onPress = function (e, isPressed) {\r\n        if (isPressed) {\r\n            self.focus();\r\n            e.data.originalEvent.preventDefault();\r\n        }\r\n        self.emit(\"press\", isPressed);\r\n    };\r\n\r\n    clickEvent.onClick = function (e) {\r\n        self.click();\r\n    };\r\n\r\n    this.click = function () {\r\n        self.emit(\"click\");\r\n    };\r\n\r\n\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nButton.prototype = Object.create(InputBase.prototype);\r\nButton.prototype.constructor = Button;\r\nmodule.exports = Button;\r\n\r\nObject.defineProperties(Button.prototype, {\r\n    value: {\r\n        get: function () {\r\n            if (this.uiText) {\r\n                return this.uiText.text;\r\n            }\r\n            return \"\";\r\n        },\r\n        set: function (val) {\r\n            if (this.uiText) {\r\n                this.uiText.text = val;\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n/*\r\n * Features:\r\n * Button, radio button (checkgroups)\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * \r\n * Properties:\r\n * checked: get/set Button checked\r\n * value: get/set Button value\r\n * \r\n * Events:\r\n * \"hover\"          param: [bool]isHover (hover/leave)\r\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\r\n * \"click\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\"   param: [bool]isFocussed\r\n * \"change\"         param: [bool]isChecked\r\n *  \r\n */","var InputBase = require('./InputBase'),\r\n    ClickEvent = require('./Interaction/ClickEvent.js'),\r\n    InputController = require('./Interaction/InputController');\r\n\r\n/**\r\n * An UI button object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param [options.checked=false] {bool} is checked\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\r\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\r\n * @param [options.checkgroup=null] {String} CheckGroup name\r\n * @param options.value {String} mostly used along with checkgroup\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n */\r\n\r\nfunction CheckBox(options) {\r\n    InputBase.call(this, options.background.width, options.background.height, options.tabIndex || 0, options.tabGroup || 0);\r\n    this._checked = options.checked !== undefined ? options.checked : false;\r\n    this._value = options.value || \"\";\r\n    this.checkGroup = options.checkgroup || null;\r\n\r\n    this.background = options.background;\r\n    this.background.width = \"100%\";\r\n    this.background.height = \"100%\";\r\n    this.addChild(this.background);\r\n\r\n    this.checkmark = options.checkmark;\r\n    if (this.checkmark) {\r\n        this.checkmark.verticalAlign = \"middle\";\r\n        this.checkmark.horizontalAlign = \"center\";\r\n        if (!this._checked) {\r\n            this.checkmark.alpha = 0;\r\n        }\r\n        this.addChild(this.checkmark);\r\n    }\r\n\r\n\r\n\r\n\r\n    this.container.buttonMode = true;\r\n\r\n    if (this.checkGroup !== null)\r\n        InputController.registrerCheckGroup(this);\r\n\r\n    var self = this;\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 32) { //space\r\n            self.click();\r\n        }\r\n    };\r\n\r\n    var clickEvent = new ClickEvent(this.background);\r\n    clickEvent.onHover = function (e) {\r\n        self.emit(\"hover\", true);\r\n    };\r\n\r\n    clickEvent.onLeave = function (e) {\r\n        self.emit(\"hover\", false);\r\n    };\r\n\r\n    clickEvent.onPress = function (e, isPressed) {\r\n        if (isPressed) {\r\n            self.focus();\r\n            e.data.originalEvent.preventDefault();\r\n        }\r\n        self.emit(\"press\", isPressed);\r\n    };\r\n\r\n    clickEvent.onClick = function (e) {\r\n        self.click();\r\n    };\r\n\r\n    this.change = function (val) {\r\n        if (this.checkmark)\r\n            this.checkmark.alpha = val ? 1 : 0;\r\n    };\r\n\r\n    this.click = function () {\r\n        self.emit(\"click\");\r\n        if (self.checkGroup !== null && self.checked)\r\n            return;\r\n\r\n        self.checked = !self.checked;\r\n    };\r\n\r\n\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nCheckBox.prototype = Object.create(InputBase.prototype);\r\nCheckBox.prototype.constructor = CheckBox;\r\nmodule.exports = CheckBox;\r\n\r\nObject.defineProperties(CheckBox.prototype, {\r\n    checked: {\r\n        get: function () {\r\n            return this._checked;\r\n        },\r\n        set: function (val) {\r\n\r\n\r\n            if (val !== this._checked) {\r\n\r\n                if (this.checkGroup !== null && val)\r\n                    InputController.updateCheckGroupSelected(this);\r\n\r\n\r\n                this.change(val);\r\n                this.emit(\"change\", val);\r\n                this._checked = val;\r\n\r\n            }\r\n        }\r\n    },\r\n    value: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            this._value = val;\r\n            if (this.checked)\r\n                InputController.updateCheckGroupSelected(this);\r\n        }\r\n    },\r\n    selectedValue: {\r\n        get: function () {\r\n            return InputController.getCheckGroupSelectedValue(this.checkGroup);\r\n        },\r\n        set: function (val) {\r\n            InputController.setCheckGroupSelectedValue(this.checkGroup, val);\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n/*\r\n * Features:\r\n * checkbox, radio button (checkgroups)\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark) \r\n * \r\n * Properties:\r\n * checked: get/set checkbox checked\r\n * value: get/set checkbox value\r\n * selectedValue: get/set selected value for checkgroup\r\n * \r\n * Events:\r\n * \"hover\"          param: [bool]isHover (hover/leave)\r\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\r\n * \"click\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\"   param: [bool]isFocussed\r\n * \"change\"         param: [bool]isChecked\r\n *  \r\n */","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Container\r\n * @param height {Number} Height of the Container\r\n */\r\nfunction Container(width, height) {\r\n    UIBase.call(this, width, height);\r\n    this.container.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\r\n}\r\n\r\n\r\nContainer.prototype = Object.create(UIBase.prototype);\r\nContainer.prototype.constructor = Container;\r\nmodule.exports = Container;\r\n\r\n\r\nContainer.prototype.update = function () {\r\n    //if (this.container.interactive) {\r\n        this.container.hitArea.width = this._width;\r\n        this.container.hitArea.height = this._height;\r\n    //}\r\n};\r\n\r\n","function DynamicChar() {\r\n    //styledata (texture, orig width, orig height)\r\n    this.style = null;\r\n\r\n    //char data\r\n    this.data = null;\r\n\r\n    //is this char space?\r\n    this.space = false;\r\n\r\n    //is this char newline?\r\n    this.newline = false;\r\n\r\n    this.emoji = false;\r\n\r\n    //charcode\r\n    this.charcode = 0;\r\n\r\n    //char string value\r\n    this.value = \"\";\r\n\r\n    //word index\r\n    this.wordIndex = -1;\r\n\r\n    //line index of char\r\n    this.lineIndex = -1;\r\n\r\n}\r\n\r\nDynamicChar.prototype.constructor = DynamicChar;\r\nmodule.exports = DynamicChar;","var UIBase = require('../UIBase'),\r\n    DynamicTextStyle = require('./DynamicTextStyle'),\r\n    DynamicChar = require('./DynamicChar'),\r\n    emojiRegex = require('emoji-regex'),\r\n    atlas = null;\r\n\r\n\r\n/**\r\n* An dynamic text object with auto generated atlas\r\n*\r\n* @class\r\n* @extends PIXI.UI.UIBase\r\n* @memberof PIXI.UI\r\n* @param text {String} Text content\r\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\r\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\r\n* @param [allowTags=true] {boolean} Allow inline styling\r\n* @param [options=null] {DynamicTextStyle} Additional text settings\r\n*/\r\nfunction DynamicText(text, options) {\r\n    options = options || {};\r\n\r\n    UIBase.call(this, options.width || 0, options.height || 0);\r\n\r\n    //create atlas\r\n    if (atlas === null)\r\n        atlas = new DynamicAtlas(1);\r\n\r\n    var autoWidth = !options.width;\r\n\r\n    //defaultstyle for this textobject\r\n    var defaultStyle = this.defaultStyle = new DynamicTextStyle();\r\n    defaultStyle.merge(options.style);\r\n\r\n    //collection of all processed char\r\n    var chars = this.chars = [];\r\n    var renderChars = [];\r\n    var spriteCache = []; //(temp)\r\n    var charContainer = new PIXI.Container();\r\n    this.container.addChild(charContainer);\r\n\r\n    //the input text\r\n    this._inputText = text;\r\n\r\n    //list of rendered sprites (temp)\r\n    var sprites = [];\r\n\r\n    //states\r\n    var lastWidth = 0,\r\n        lastHeight = 0;\r\n\r\n    this.dirtyText = true;\r\n    this.dirtyStyle = true;\r\n    this.dirtySize = true;\r\n    this.dirtyRender = true;\r\n\r\n\r\n    //dictionary for line data\r\n    var lineWidthData = [];\r\n    var lineHeightData = [];\r\n    var lineFontSizeData = [];\r\n    var lineAlignmentData = [];\r\n    var renderCount = 0;\r\n    var charCount = 0;\r\n\r\n    //ellipsis caches (not nessesary when no sprites)\r\n    var lineEllipsisData = [];\r\n    var lineHasEllipsis = [];\r\n\r\n    //ROUGH TEMP RENDER (with sprites)\r\n    this.render = function () {\r\n        var yOffset = 0,\r\n            xOffset = 0,\r\n            currentLine = -1,\r\n            i;\r\n\r\n        if (spriteCache.length > renderCount) {\r\n            for (i = renderCount; i < spriteCache.length; i++) {\r\n                var removeSprite = spriteCache[i];\r\n                if (removeSprite)\r\n                    removeSprite.visible = false;\r\n            }\r\n        }\r\n\r\n        var char, lineWidth = 0, lineHeight = 0, maxLineWidth = 0;\r\n\r\n        for (i = 0; i < renderCount; i++) {\r\n            char = renderChars[i];\r\n\r\n            //get line data\r\n            if (currentLine !== char.lineIndex) {\r\n                currentLine = char.lineIndex;\r\n                lineWidth = lineWidthData[currentLine];\r\n                lineHeight = lineHeightData[currentLine];\r\n                yOffset += lineHeight;\r\n\r\n\r\n\r\n                switch (lineAlignmentData[currentLine]) {\r\n                    case 'right': xOffset = this._width - lineWidth; break;\r\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\r\n                    default: xOffset = 0;\r\n                }\r\n\r\n\r\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\r\n            }\r\n\r\n            //no reason to render a blank space or 0x0 letters (no texture created)\r\n            if (!char.data.texture || char.space || char.newline) {\r\n                if (spriteCache[i])\r\n                    spriteCache[i].visible = false;\r\n                continue;\r\n            }\r\n\r\n\r\n            //add new sprite\r\n            var tex = char.data.texture, sprite = spriteCache[i];\r\n\r\n\r\n\r\n            if (!sprite) {\r\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\r\n                sprite.anchor.set(0.5);\r\n            }\r\n            else\r\n                sprite.texture = tex;\r\n\r\n\r\n\r\n            sprite.visible = true;\r\n            sprite.x = char.x + xOffset + tex.width * 0.5;\r\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\r\n\r\n\r\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\r\n            sprite.rotation = float(char.style.rotation, 0);\r\n            sprite.skew.x = float(char.style.skew, 0);\r\n\r\n            if (!sprite.parent)\r\n                charContainer.addChild(sprite);\r\n        }\r\n\r\n        if (autoWidth) this.width = maxLineWidth;\r\n    };\r\n\r\n    //updates the renderChar array and position chars for render\r\n    this.prepareForRender = function () {\r\n        var pos = new PIXI.Point(),\r\n            wordIndex = 0,\r\n            lineHeight = 0,\r\n            lineFontSize = 0,\r\n            lineIndex = 0,\r\n            lineAlignment = defaultStyle.align,\r\n            lastSpaceIndex = -1,\r\n            lastSpaceLineWidth = 0,\r\n            textHeight = 0,\r\n            forceNewline = false,\r\n            style,\r\n            renderIndex = 0,\r\n            ellipsis = false,\r\n            lineFull = false,\r\n            i;\r\n\r\n\r\n\r\n\r\n        for (i = 0; i < charCount; i++) {\r\n            var char = chars[i], lastChar = chars[i - 1];\r\n            style = char.style;\r\n\r\n\r\n            //lineheight\r\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\r\n\r\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height) {\r\n                if (style.overflowY === 'hidden')\r\n                    break;\r\n\r\n            }\r\n\r\n            if (char.newline)\r\n                lineFull = false;\r\n\r\n\r\n            //set word index\r\n            if (char.space || char.newline) wordIndex++;\r\n            else char.wordIndex = wordIndex;\r\n\r\n            //textheight\r\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\r\n\r\n            //lineindex\r\n            char.lineIndex = lineIndex;\r\n\r\n            //lineAlignment\r\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\r\n\r\n\r\n            if (char.space) {\r\n                lastSpaceIndex = i;\r\n                lastSpaceLineWidth = pos.x;\r\n            }\r\n\r\n\r\n            var size = Math.round(char.data.width) + float(style.letterSpacing, 0);\r\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width) {\r\n                if (style.wrap) {\r\n                    if (char.space) {\r\n                        forceNewline = true;\r\n                    }\r\n                    else if (lastSpaceIndex !== -1) {\r\n                        renderIndex -= i - lastSpaceIndex;\r\n                        i = lastSpaceIndex - 1;\r\n                        lastSpaceIndex = -1;\r\n                        pos.x = lastSpaceLineWidth;\r\n                        forceNewline = true;\r\n                        continue;\r\n\r\n                    }\r\n                    else if (style.breakWords) {\r\n                        if (lastChar) {\r\n                            pos.x -= lastChar.style.letterSpacing;\r\n                            pos.x -= lastChar.data.width;\r\n                        }\r\n                        i -= 2;\r\n                        renderIndex--;\r\n                        forceNewline = true;\r\n                        continue;\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n                if (style.overflowX == 'hidden' && !forceNewline) {\r\n                    lineFull = true;\r\n                    if (style.ellipsis && !ellipsis) {\r\n                        ellipsis = true;\r\n                        var ellipsisData = lineEllipsisData[lineIndex];\r\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\r\n                        for (var d = 0; d < 3; d++) {\r\n                            var dot = ellipsisData[d];\r\n                            dot.value = \".\";\r\n                            dot.data = atlas.getCharObject(dot.value, style);\r\n                            dot.style = style;\r\n                            dot.x = pos.x + char.data.xOffset;\r\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\r\n                            dot.lineIndex = lineIndex;\r\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\r\n                            renderChars[renderIndex] = dot;\r\n                            renderIndex++;\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            //Update position and add to renderchars\r\n            if (!lineFull) {\r\n                //position\r\n                char.x = pos.x + char.data.xOffset;\r\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\r\n                pos.x += size;\r\n                renderChars[renderIndex] = char;\r\n                renderIndex++;\r\n            }\r\n\r\n\r\n\r\n            //new line\r\n            if (forceNewline || char.newline || i === charCount - 1) {\r\n                if (lastChar) {\r\n                    pos.x -= lastChar.style.letterSpacing;\r\n                    if (lastChar.space) pos.x -= lastChar.data.width;\r\n                }\r\n\r\n                if (char.space) {\r\n                    pos.x -= char.data.width;\r\n                    pos.x -= float(style.letterSpacing, 0);\r\n                }\r\n\r\n                textHeight += lineHeight;\r\n                lineHasEllipsis[lineIndex] = ellipsis;\r\n                lineWidthData[lineIndex] = pos.x;\r\n                lineHeightData[lineIndex] = lineHeight;\r\n                lineFontSizeData[lineIndex] = lineFontSize;\r\n                lineAlignmentData[lineIndex] = lineAlignment;\r\n\r\n\r\n                //reset line vaules\r\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\r\n                lineAlignment = defaultStyle.align;\r\n                lastSpaceIndex = -1;\r\n                lineIndex++;\r\n                forceNewline = lineFull = ellipsis = false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        renderCount = renderIndex;\r\n    };\r\n\r\n    //phrases the input text and prepares the char array\r\n    var closeTags = ['</i>', '</b>', '</font>', '</center>'];\r\n    this.processInputText = function () {\r\n        var styleTree = [defaultStyle],\r\n            charIndex = 0,\r\n            inputTextIndex = 0,\r\n            inputArray = Array.from(this._inputText);\r\n\r\n        for (var i = 0; i < inputArray.length; i++) {\r\n            style = styleTree[styleTree.length - 1];\r\n            var c = inputArray[i],\r\n                charcode = c.charCodeAt(0),\r\n                newline = false,\r\n                space = false,\r\n                emoji = false;\r\n\r\n\r\n            //Extract Tags\r\n            if (/(?:\\r\\n|\\r|\\n)/.test(c))\r\n                newline = true;\r\n            else if (/(\\s)/.test(c))\r\n                space = true;\r\n            else if (options.allowTags && c === \"<\") {\r\n                var tag = this._inputText.substring(inputTextIndex);\r\n                tag = tag.slice(0, tag.indexOf(\">\") + 1);\r\n                var FoundTag = true;\r\n                if (tag.length) {\r\n                    if (tag === \"<i>\") {\r\n                        style = style.clone();\r\n                        style.fontStyle = 'italic';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (tag === \"<b>\") {\r\n                        style = style.clone();\r\n                        style.fontWeight = 'bold';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (tag === \"<center>\") {\r\n                        style = style.clone();\r\n                        style.align = 'center';\r\n                        styleTree.push(style);\r\n                    }\r\n                    else if (closeTags.indexOf(tag) !== -1) {\r\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\r\n                    }\r\n                    else if (tag.startsWith(\"<font \")) {\r\n                        var regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g,\r\n                            match = regex.exec(tag);\r\n\r\n                        if (match !== null) {\r\n                            style = style.clone();\r\n                            while (match !== null) {\r\n                                switch (match[1]) {\r\n                                    case 'family': match[1] = 'fontFamily'; break;\r\n                                    case 'size': match[1] = 'fontSize'; break;\r\n                                    case 'weight': match[1] = 'fontWeight'; break;\r\n                                    case 'style': match[1] = 'fontStyle'; break;\r\n                                    case 'valign': match[1] = 'verticalAlign'; break;\r\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\r\n                                    case 'color': match[1] = 'tint'; break;\r\n\r\n                                }\r\n                                style[match[1]] = match[4];\r\n                                match = regex.exec(tag);\r\n                            }\r\n                            styleTree.push(style);\r\n                        }\r\n                    }\r\n                    else {\r\n                        FoundTag = false;\r\n                    }\r\n\r\n                    if (FoundTag) {\r\n                        inputTextIndex += tag.length;\r\n                        i += tag.length - 1;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                //detect emoji\r\n                var emojiMatch = emojiRegex().exec(c);\r\n                if (emojiMatch !== null) {\r\n                    i--; c = '';\r\n                    while (emojiMatch !== null && c !== emojiMatch[0]) {\r\n                        i++;\r\n                        c = emojiMatch[0];\r\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\r\n                    }\r\n                    emoji = true;\r\n                }\r\n            }\r\n\r\n\r\n            //Prepare DynamicChar object\r\n            var char = chars[charIndex];\r\n            if (!char) {\r\n                char = new DynamicChar();\r\n                chars[charIndex] = char;\r\n            }\r\n            char.style = style;\r\n\r\n\r\n            if (emoji) {\r\n                char.style = char.style.clone();\r\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\r\n            }\r\n\r\n            char.data = atlas.getCharObject(c, char.style);\r\n            char.value = c;\r\n            char.space = space;\r\n            char.newline = newline;\r\n            char.emoji = emoji;\r\n\r\n            charIndex++;\r\n            inputTextIndex += c.length;\r\n        }\r\n        charCount = charIndex;\r\n    };\r\n\r\n    //PIXIUI update, called every time parent emits a change\r\n    this.update = function () {\r\n        this.dirtySize = !autoWidth && (this._width != lastWidth || this._height != lastHeight || this.dirtyText);\r\n\r\n        if (this.dirtyText || this.dirtyStyle) {\r\n            this.dirtyText = this.dirtyStyle = false;\r\n            this.dirtyRender = true; //force render after textchange\r\n            this.processInputText();\r\n        }\r\n\r\n        if (this.dirtySize || this.dirtyRender) {\r\n            this.dirtySize = this.dirtyRender = false;\r\n            lastWidth = this._width;\r\n            lastHeight = this.height;\r\n            this.prepareForRender();\r\n            this.render();\r\n        }\r\n\r\n    \r\n        \r\n    };\r\n}\r\n\r\n\r\nDynamicText.prototype = Object.create(UIBase.prototype);\r\nDynamicText.prototype.constructor = DynamicText;\r\nmodule.exports = DynamicText;\r\nDynamicText.settings = {\r\n    debugSpriteSheet: false,\r\n    defaultEmojiFont: \"Segoe UI Emoji\" //force one font family for emojis so we dont rerender them multiple times\r\n};\r\n\r\nObject.defineProperties(DynamicText.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._inputText;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._inputText) {\r\n                this._inputText = val;\r\n                this.dirtyText = true;\r\n                this.update();\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    },\r\n    style: {\r\n        get: function () {\r\n            return this.defaultStyle;\r\n        },\r\n        set: function (val) {\r\n            //get a clean default style\r\n            var style = new DynamicTextStyle();\r\n            \r\n            //merge it with new style\r\n            style.merge(val);\r\n            \r\n            //merge it onto this default style\r\n            this.defaultStyle.merge(style);\r\n\r\n            this.dirtyStyle = true;\r\n            this.update();\r\n        }\r\n    },\r\n    mergeStyle: {\r\n        set: function (val) {\r\n            this.defaultStyle.merge(val);\r\n            this.dirtyStyle = true;\r\n            this.update();\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Atlas\r\nvar metricsCanvas = document.createElement(\"canvas\");\r\nvar metricsContext = metricsCanvas.getContext(\"2d\");\r\nmetricsCanvas.width = 100;\r\nmetricsCanvas.height = 100;\r\n\r\n\r\nvar DynamicAtlas = function (padding) {\r\n    var res = devicePixelRatio || 1,\r\n        canvas,\r\n        context,\r\n        objects,\r\n        newObjects = [],\r\n        baseTexture,\r\n        lazyTimeout,\r\n        rootNode,\r\n        canvasList = [],\r\n        atlasdim,\r\n        startdim = 1024,\r\n        maxdim = 2048;\r\n\r\n\r\n    var AtlasNode = function (w, h) {\r\n        var children = this.children = [];\r\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\r\n        this.data = null;\r\n\r\n        this.insert = function (width, height, obj) {\r\n            if (children.length > 0) {\r\n                var newNode = children[0].insert(width, height, obj);\r\n                if (newNode !== null) return newNode;\r\n\r\n                return children[1].insert(width, height, obj);\r\n            } else {\r\n                if (this.data !== null) return null;\r\n                if (width > this.rect.width || height > this.rect.height) return null;\r\n                if (width == this.rect.width && height == this.rect.height) {\r\n                    this.data = obj;\r\n                    obj.frame.x = this.rect.x;\r\n                    obj.frame.y = this.rect.y;\r\n                    return this;\r\n                }\r\n\r\n                children.push(new AtlasNode());\r\n                children.push(new AtlasNode());\r\n\r\n                var dw = this.rect.width - width;\r\n                var dh = this.rect.height - height;\r\n\r\n                if (dw > dh) {\r\n                    children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\r\n                    children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\r\n                } else {\r\n                    children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\r\n                    children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\r\n                }\r\n\r\n                return children[0].insert(width, height, obj);\r\n            }\r\n        };\r\n    };\r\n\r\n    var addCanvas = function () {\r\n        //create new canvas\r\n        canvas = document.createElement(\"canvas\");\r\n        context = canvas.getContext(\"2d\");\r\n        canvasList.push(canvas);\r\n\r\n        //reset dimentions\r\n        atlasdim = startdim;\r\n        canvas.width = canvas.height = atlasdim;\r\n        rootNode = new AtlasNode(atlasdim, atlasdim);\r\n\r\n        //reset array with canvas objects and create new atlas\r\n        objects = [];\r\n\r\n        //set new basetexture\r\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\r\n        baseTexture.mipmap = false; //if not, pixi bug resizing POW2\r\n        baseTexture.resolution = 1; //todo: support all resolutions\r\n        baseTexture.update();\r\n\r\n        //Debug Spritesheet\r\n        if (DynamicText.settings.debugSpriteSheet) {\r\n            canvas.className = \"DynamicText_SpriteSheet\";\r\n            document.body.appendChild(canvas);\r\n        }\r\n\r\n    };\r\n\r\n    this.fontFamilyCache = {};\r\n\r\n    var drawObjects = function (arr, resized) {\r\n        if (resized) baseTexture.update();\r\n        for (var i = 0; i < arr.length; i++)\r\n            drawObject(arr[i]);\r\n    };\r\n\r\n    var drawObject = function (obj) {\r\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\r\n        obj.texture.frame = obj.frame;\r\n        obj.texture.update();\r\n    };\r\n\r\n    this.getCharObject = function (char, style) {\r\n        var font = style.ctxFont();\r\n\r\n        //create new cache for fontFamily\r\n        var familyCache = this.fontFamilyCache[font];\r\n        if (!familyCache) {\r\n            familyCache = {};\r\n            this.fontFamilyCache[font] = familyCache;\r\n        }\r\n\r\n\r\n\r\n        //get char data\r\n        var key = style.ctxKey(char);\r\n        var obj = familyCache[key];\r\n        if (!obj) {\r\n            //create char object\r\n            var metrics = generateCharData(char, style);\r\n\r\n\r\n\r\n            //temp resize if doesnt fit (not nesseary when we dont need to generate textures)\r\n            if (metrics.rect) {\r\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height) {\r\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\r\n                    baseTexture.update();\r\n                }\r\n            }\r\n\r\n\r\n            //todo: cleanup when we know whats needed\r\n            obj = {\r\n                metrics: metrics,\r\n                font: font,\r\n                value: char,\r\n                frame: metrics.rect,\r\n                baseTexture: metrics.rect ? baseTexture : null,\r\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\r\n                yOffset: metrics.descent || 0,\r\n                width: metrics.width || 0,\r\n                lineHeight: metrics.lineHeight || 0,\r\n                _cache: metrics.canvas,\r\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null //temp texture\r\n            };\r\n\r\n            //add to collections\r\n            familyCache[key] = obj;\r\n\r\n\r\n            //add to atlas if visible char\r\n            if (metrics.rect) {\r\n                newObjects.push(obj);\r\n\r\n\r\n\r\n                if (lazyTimeout === undefined)\r\n                    lazyTimeout = setTimeout(function () {\r\n                        addNewObjects();\r\n                        lazyTimeout = undefined;\r\n                    }, 0);\r\n\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    };\r\n\r\n    var compareFunction = function (a, b) {\r\n        if (a.frame.height < b.frame.height)\r\n            return 1;\r\n\r\n        if (a.frame.height > b.frame.height)\r\n            return -1;\r\n\r\n\r\n        if (a.frame.width < b.frame.width)\r\n            return 1;\r\n\r\n        if (a.frame.width > b.frame.width)\r\n            return -1;\r\n\r\n\r\n        return 0;\r\n    };\r\n\r\n    var addNewObjects = function () {\r\n        newObjects.sort(compareFunction);\r\n        var _resized = false;\r\n        var _newcanvas = false;\r\n\r\n        for (var i = 0; i < newObjects.length; i++) {\r\n            var obj = newObjects[i];\r\n            var node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\r\n\r\n            if (node !== null) {\r\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; //update basetexture if new canvas was created (temp)\r\n                objects.push(obj);\r\n                continue;\r\n            }\r\n\r\n            //step one back (so it will be added after resize/new canvas)\r\n            i--;\r\n\r\n            if (atlasdim < maxdim) {\r\n                _resized = true;\r\n                resizeCanvas(atlasdim * 2);\r\n                continue;\r\n            }\r\n\r\n            //close current spritesheet and make a new one\r\n            drawObjects(objects, _resized);\r\n            addCanvas();\r\n            _newcanvas = true;\r\n            _resized = false;\r\n        }\r\n\r\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\r\n        newObjects = [];\r\n    };\r\n\r\n    var resizeCanvas = function (dim) {\r\n        canvas.width = canvas.height = atlasdim = dim;\r\n\r\n        rootNode = new AtlasNode(dim, dim);\r\n        objects.sort(compareFunction);\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\r\n        }\r\n    };\r\n\r\n    var generateCharData = function (char, style) {\r\n\r\n        var fontSize = Math.max(1, int(style.fontSize, 26)),\r\n            lineHeight = fontSize * 1.25;\r\n\r\n\r\n        //Start our returnobject\r\n        var data = {\r\n            fontSize: fontSize,\r\n            lineHeight: lineHeight,\r\n            width: 0\r\n        };\r\n\r\n        //Return if newline\r\n        if (!char || /(?:\\r\\n|\\r|\\n)/.test(char))\r\n            return data;\r\n\r\n        //Ctx font string\r\n        var font = style.ctxFont();\r\n        metricsContext.font = font;\r\n\r\n        //Get char width\r\n        data.width = Math.round(metricsContext.measureText(char).width);\r\n\r\n        //Return if char = space\r\n        if (/(\\s)/.test(char)) return data;\r\n\r\n        //set canvas size (with padding so we can messure)\r\n        var paddingY = Math.round(fontSize * 0.7), paddingX = Math.max(5, Math.round(fontSize * 0.7));\r\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\r\n        metricsCanvas.height = 1.5 * fontSize;\r\n        var w = metricsCanvas.width, h = metricsCanvas.height, baseline = (h / 2) + (paddingY * 0.5);\r\n\r\n        //set font again after resize\r\n        metricsContext.font = font;\r\n\r\n        //make sure canvas is clean\r\n        metricsContext.clearRect(0, 0, w, h);\r\n\r\n        //save clean state with font\r\n        metricsContext.save();\r\n\r\n        //convert shadow string to shadow data\r\n        var shadowData = function (str) {\r\n            var data = str.trim().split(' ');\r\n            return {\r\n                color: string(data[0], \"#000000\"),\r\n                alpha: float(data[1], 0.5),\r\n                xOffset: float(data[2], 3),\r\n                yOffset: float(data[3], 3),\r\n                blur: float(data[4], 5)\r\n            };\r\n        };\r\n\r\n        //convert fill string to fill data\r\n        var fillData = function (str) {\r\n            var data = str.trim().split(' ');\r\n            var c = string(data[0], \"#FFFFFF\");\r\n            var a = float(data[1], 1);\r\n            return {\r\n                color: c,\r\n                alpha: a,\r\n                position: float(data[2], -1),\r\n                rgba: hexToRgba(c, a)\r\n            };\r\n        };\r\n\r\n        //create fill style from fill string\r\n        var getFillStyle = function (str) {\r\n            var fills = str.split(',').filter(function (s) { return s !== ''; }), i;\r\n\r\n            //convert to fill data\r\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\r\n\r\n            switch (fills.length) {\r\n                case 0: return \"white\";\r\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || \"#FFFFFF\";\r\n                default:\r\n                    //make gradient\r\n                    try {\r\n                        var gradEnd = baseline + lineHeight - fontSize,\r\n                            gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\r\n\r\n                        for (i = 0; i < fills.length; i++)\r\n                            gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color);\r\n\r\n                        return gradient;\r\n                    }\r\n                    catch (e) {\r\n                        return \"#FFFFFF\";\r\n                    }\r\n            }\r\n        };\r\n\r\n\r\n        //function to draw shadows\r\n        var drawShadows = function (shadowString, stroke) {\r\n            var shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\r\n            if (shadows.length) {\r\n                for (var i = 0; i < shadows.length; i++) {\r\n                    var s = shadowData(shadows[i]);\r\n                    metricsContext.globalAlpha = s.alpha;\r\n                    metricsContext.shadowColor = s.color;\r\n                    metricsContext.shadowOffsetX = s.xOffset + w;\r\n                    metricsContext.shadowOffsetY = s.yOffset;\r\n                    metricsContext.shadowBlur = s.blur;\r\n\r\n                    if (stroke) {\r\n                        metricsContext.lineWidth = style.stroke;\r\n                        metricsContext.strokeText(char, paddingX - w, baseline);\r\n                    }\r\n                    else metricsContext.fillText(char, paddingX - w, baseline);\r\n                }\r\n                metricsContext.restore();\r\n            }\r\n        };\r\n\r\n        //draw text shadows\r\n        if (style.shadow.length)\r\n            drawShadows(style.shadow, false);\r\n\r\n        //draw stroke shadows\r\n        if (style.stroke && style.strokeShadow.length) {\r\n            drawShadows(style.strokeShadow, true);\r\n        }\r\n\r\n        //draw text\r\n        metricsContext.fillStyle = getFillStyle(string(style.fill, \"#000000\"));\r\n        metricsContext.fillText(char, paddingX, baseline);\r\n        metricsContext.restore();\r\n\r\n        //draw stroke\r\n        if (style.stroke) {\r\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, \"#000000\"));\r\n            metricsContext.lineWidth = style.stroke;\r\n            metricsContext.strokeText(char, paddingX, baseline);\r\n            metricsContext.restore();\r\n        }\r\n\r\n\r\n        //begin messuring\r\n        var pixelData = metricsContext.getImageData(0, 0, w, h).data;\r\n\r\n        var i = 3,\r\n            line = w * 4,\r\n            len = pixelData.length;\r\n\r\n\r\n\r\n        //scanline on alpha\r\n        while (i < len && !pixelData[i]) { i += 4; }\r\n        var ascent = (i / line) | 0;\r\n\r\n\r\n        if (i < len) {\r\n            //rev scanline on alpha\r\n            i = len - 1;\r\n            while (i > 0 && !pixelData[i]) { i -= 4; }\r\n            var descent = (i / line) | 0;\r\n\r\n\r\n            //left to right scanline on alpha\r\n            for (i = 3; i < len && !pixelData[i];) {\r\n                i += line;\r\n                if (i >= len) { i = (i - len) + 4; }\r\n            }\r\n            var minx = ((i % line) / 4) | 0;\r\n\r\n            //right to left scanline on alpha\r\n            var step = 1;\r\n            for (i = len - 1; i >= 0 && !pixelData[i];) {\r\n                i -= line;\r\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\r\n            }\r\n            var maxx = ((i % line) / 4) + 1 | 0;\r\n\r\n\r\n            // set font metrics\r\n            data.ascent = Math.round(baseline - ascent);\r\n            data.descent = Math.round(descent - baseline);\r\n            data.height = 1 + Math.round(descent - ascent);\r\n            data.bounds = {\r\n                minx: minx - paddingX,\r\n                maxx: maxx - paddingX,\r\n                miny: 0,\r\n                maxy: descent - ascent\r\n            };\r\n            data.rect = {\r\n                x: data.bounds.minx,\r\n                y: -data.ascent - 2,\r\n                width: data.bounds.maxx - data.bounds.minx + 2,\r\n                height: data.ascent + data.descent + 4\r\n            };\r\n\r\n\r\n            //cache (for fast rearrange later)\r\n            data.canvas = document.createElement(\"canvas\");\r\n            data.canvas.width = data.rect.width;\r\n            data.canvas.height = data.rect.height;\r\n            var c = data.canvas.getContext(\"2d\");\r\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\r\n\r\n            //reset rect position\r\n            data.rect.x = data.rect.y = 0;\r\n\r\n\r\n        }\r\n        return data;\r\n    };\r\n\r\n    addCanvas();\r\n};\r\n\r\n\r\n\r\n//helper function for float or default\r\nfunction float(val, def) {\r\n    if (isNaN(val)) return def;\r\n    return parseFloat(val);\r\n}\r\n\r\n//helper function for int or default\r\nfunction int(val, def) {\r\n    if (isNaN(val)) return def;\r\n    return parseInt(val);\r\n}\r\n\r\n//helper function for string or default\r\nfunction string(val, def) {\r\n    if (typeof val === 'string' && val.length) return val;\r\n    return def;\r\n}\r\n\r\n//helper function to convert string hex to int or default\r\nfunction hexToInt(str, def) {\r\n    if (typeof str === 'number')\r\n        return str;\r\n\r\n    var result = parseInt(str.replace('#', '0x'));\r\n\r\n    if (isNaN(result)) return def;\r\n    return result;\r\n}\r\n\r\n//helper function to convert hex to rgba\r\nfunction hexToRgba(hex, alpha) {\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    alpha = float(alpha, 1);\r\n    return result ? \"rgba(\" + parseInt(result[1], 16) + \",\" + parseInt(result[2], 16) + \",\" + parseInt(result[3], 16) + \",\" + alpha + \")\" : false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","function DynamicTextStyle() {\r\n    this.scale = 1;\r\n    this.align = 'left';\r\n    this.fontFamily = 'Arial';\r\n    this.fontSize = 26;\r\n    this.fontWeight = 'normal';\r\n    this.fontStyle = 'normal';\r\n    this.letterSpacing = 0;\r\n    this.lineHeight = 0;\r\n    this.verticalAlign = 0;\r\n    this.rotation = 0;\r\n    this.skew = 0;\r\n    this.tint = \"#FFFFFF\";\r\n    this.fill = '#FFFFFF'; \r\n    this.shadow = '';\r\n    this.stroke = 0;\r\n    this.strokeFill = '';\r\n    this.strokeShadow = '';\r\n    this.wrap = true;\r\n    this.breakWords = false;\r\n    this.overflowX = 'visible'; //visible|hidden\r\n    this.overflowY = 'visible'; //visible|hidden\r\n    this.ellipsis = false;\r\n\r\n\r\n    var _cachedEllipsisSize = null;\r\n    this.ellipsisSize = function (atlas) {\r\n        if (!this.ellipsis) return 0;\r\n        if (_cachedEllipsisSize === null)\r\n            _cachedEllipsisSize = (atlas.getCharObject(\".\", this).width + this.letterSpacing) * 3;\r\n        return _cachedEllipsisSize;\r\n    };\r\n}\r\n\r\n\r\nDynamicTextStyle.prototype.clone = function () {\r\n    var style = new DynamicTextStyle();\r\n    style.merge(this);\r\n    return style;\r\n};\r\n\r\nDynamicTextStyle.prototype.merge = function (style) {\r\n    if (typeof style === 'object') {\r\n        for (var param in style) {\r\n            var val = style[param];\r\n            if (typeof val !== 'function')\r\n                this[param] = val;\r\n        }\r\n    }\r\n};\r\n\r\nDynamicTextStyle.prototype.ctxKey = function (char) {\r\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\r\n};\r\n\r\nDynamicTextStyle.prototype.ctxFont = function () {\r\n    var fontSize = Math.min(200, Math.max(1, this.fontSize || 26)) + \"px \";\r\n    var fontWeight = this.fontWeight === \"bold\" ? this.fontWeight + \" \" : \"\";\r\n    var fontStyle = this.fontStyle === \"italic\" || this.fontStyle === \"oblique\" ? this.fontStyle + \" \" : \"\";\r\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\r\n};\r\n\r\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\r\nmodule.exports = DynamicTextStyle;","var Ease = {},\r\n    EaseBase = require('./EaseBase'),\r\n    ExponentialEase = require('./ExponentialEase'),\r\n    HALF_PI = Math.PI * 0.5;\r\n\r\nfunction create(fn) {\r\n    var e = Object.create(EaseBase.prototype);\r\n    e.getPosition = fn;\r\n    return e;\r\n}\r\n\r\n\r\n//Liear\r\nEase.Linear = new EaseBase();\r\n\r\n//Exponetial Eases\r\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction) {\r\n    return {\r\n        easeIn: easeInFunction,\r\n        easeOut: easeOutFunction,\r\n        easeInOut: easeInOutFunction\r\n    };\r\n}\r\n\r\nEase.Power0 = {\r\n    \"easeNone\" : Ease.Linear,\r\n};\r\n\r\nEase.Power1 = Ease.Quad = wrapEase(\r\n    new ExponentialEase(1, 1, 0),\r\n    new ExponentialEase(1, 0, 1),\r\n    new ExponentialEase(1, 1, 1));\r\n\r\nEase.Power2 = Ease.Cubic = wrapEase(\r\n    new ExponentialEase(2, 1, 0),\r\n    new ExponentialEase(2, 0, 1),\r\n    new ExponentialEase(2, 1, 1));\r\n\r\nEase.Power3 = Ease.Quart = wrapEase(\r\n    new ExponentialEase(3, 1, 0),\r\n    new ExponentialEase(3, 0, 1),\r\n    new ExponentialEase(3, 1, 1));\r\n\r\nEase.Power4 = Ease.Quint = wrapEase(\r\n    new ExponentialEase(4, 1, 0),\r\n    new ExponentialEase(4, 0, 1),\r\n    new ExponentialEase(4, 1, 1));\r\n\r\n\r\n//Bounce\nEase.Bounce = {\r\n    \"BounceIn\": create(function (p) {\r\n        if ((p = 1 - p) < 1 / 2.75) {\r\n            return 1 - (7.5625 * p * p);\r\n        } else if (p < 2 / 2.75) {\r\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\r\n        } else if (p < 2.5 / 2.75) {\r\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\r\n        }\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\r\n    }),\n    \"BounceOut\": create(function (p) {\r\n        if (p < 1 / 2.75) {\r\n            return 7.5625 * p * p;\r\n        } else if (p < 2 / 2.75) {\r\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\r\n        } else if (p < 2.5 / 2.75) {\r\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\r\n        }\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\r\n    }),\n    \"BounceInOut\": create(function (p) {\r\n        var invert = (p < 0.5);\n        if (invert) {\r\n            p = 1 - (p * 2);\r\n        } else {\r\n            p = (p * 2) - 1;\r\n        }\n        if (p < 1 / 2.75) {\r\n            p = 7.5625 * p * p;\r\n        } else if (p < 2 / 2.75) {\r\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\r\n        } else if (p < 2.5 / 2.75) {\r\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\r\n        } else {\r\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\r\n        }\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\r\n    })\r\n};\n\n//Circ\nEase.Circ = {\r\n    \"CircIn\": create(function (p) {\r\n        return -(Math.sqrt(1 - (p * p)) - 1);\r\n    }),\n    \"CircOut\": create(function (p) {\r\n        return Math.sqrt(1 - (p = p - 1) * p);\r\n    }),\n    \"CircInOut\": create(function (p) {\r\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\r\n    })\r\n};\n\r\n\r\n//Expo\nEase.Expo = {\n    \"ExpoIn\": create(function (p) {\r\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\r\n    }),\n    \"ExpoOut\": create(function (p) {\r\n        return 1 - Math.pow(2, -10 * p);\r\n    }),\n    \"ExpoInOut\": create(function (p) {\r\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n    })\r\n};\n\n\n//Sine\nEase.Sine = {\r\n    \"SineIn\": create(function (p) {\r\n        return -Math.cos(p * HALF_PI) + 1;\r\n    }),\n    \"SineOut\": create(function (p) {\r\n        return Math.sin(p * HALF_PI);\r\n    }),\n    \"SineInOut\": create(function (p) {\r\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\r\n    })\r\n};\r\n\r\n\r\nmodule.exports = Ease;\r\n\r\n\r\n","function EaseBase() {\r\n    this.getPosition = function (p) {\r\n        return p;\r\n    };\r\n}\r\n\r\nEaseBase.prototype.constructor = EaseBase;\r\nmodule.exports = EaseBase;\r\n\r\n\r\n\r\n","var EaseBase = require('./EaseBase');\r\n\r\nfunction ExponentialEase(power, easeIn, easeOut) {\r\n    var pow = power;\r\n    var t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\r\n    this.getPosition = function (p) {\r\n        var r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n        if (pow === 1) {\r\n            r *= r;\r\n        } else if (pow === 2) {\r\n            r *= r * r;\r\n        } else if (pow === 3) {\r\n            r *= r * r * r;\r\n        } else if (pow === 4) {\r\n            r *= r * r * r * r;\r\n        }\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\r\n    };\r\n}\r\n\r\nExponentialEase.prototype = Object.create(EaseBase.prototype);\r\nExponentialEase.prototype.constructor = ExponentialEase;\r\nmodule.exports = ExponentialEase;\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    InputController = require('./Interaction/InputController'),\r\n    ClickEvent = require('./Interaction/ClickEvent');\r\n/**\r\n * base object for all Input type objects\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param width {number} passed to uibase\r\n * @param height {number} passed to uibase\r\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\r\n */\r\nfunction InputBase(width, height, tabIndex, tabGroup) {\r\n    UIBase.call(this, width, height);\r\n    var self = this;\r\n    this._focused = false;\r\n    this._useTab = this._usePrev = this._useNext = true;\r\n    this.container.interactive = true;\r\n    InputController.registrer(this, tabIndex, tabGroup);\r\n\r\n\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === 9) {\r\n            if (self._useTab) {\r\n                InputController.fireTab();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (e.which === 38) {\r\n            if (self._usePrev) {\r\n                InputController.firePrev();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n        else if (e.which === 40) {\r\n            if (self._useNext) {\r\n                InputController.fireNext();\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    };\r\n\r\n    var documentMouseDown = function (e) {\r\n        if (!self.__down)\r\n            self.blur();\r\n    };\r\n\r\n    this.container.on(\"pointerdown\", function (e) {\r\n        self.focus();\r\n        self.__down = true;\r\n    });\r\n\r\n    this.container.on(\"pointerup\", function (e) {\r\n        self.__down = false;\r\n    });\r\n\r\n    this.container.on(\"pointerupoutside\", function (e) {\r\n        self.__down = false;\r\n    });\r\n\r\n    //var cancelFocusEvent = new ClickEvent(this.stage)\r\n\r\n    this._bindEvents = function () {\r\n        if (this.stage !== null) {\r\n            this.stage.on(\"pointerdown\", documentMouseDown);\r\n            document.addEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n\r\n    this._clearEvents = function () {\r\n        if (this.stage !== null) {\r\n            this.stage.off(\"pointerdown\", documentMouseDown);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n        }\r\n    };\r\n}\r\n\r\nInputBase.prototype = Object.create(UIBase.prototype);\r\nInputBase.prototype.constructor = InputBase;\r\nmodule.exports = InputBase;\r\n\r\nInputBase.prototype.focus = function () {\r\n    if (!this._focused) {\r\n        this._focused = true;\r\n        this._bindEvents();\r\n        InputController.set(this);\r\n        this.emit(\"focusChanged\", true);\r\n        this.emit(\"focus\");\r\n\r\n    }\r\n};\r\n\r\nInputBase.prototype.blur = function () {\r\n    if (this._focused) {\r\n        InputController.clear();\r\n        this._focused = false;\r\n        this._clearEvents();\r\n        this.emit(\"focusChanged\", false);\r\n        this.emit(\"blur\");\r\n\r\n    }\r\n};","var ClickEvent = function (obj) {\r\n    var bound = false,\r\n        self = this,\r\n        id = 0,\r\n        ishover = false;\r\n\r\n    obj.container.interactive = true;\r\n\r\n    var _onMouseDown = function (event) {\r\n        id = event.data.identifier;\r\n        self.onPress.call(obj, event, true);\r\n        if (!bound) {\r\n            obj.container.on('mouseup', _onMouseUp);\r\n            obj.container.on('mouseupoutside', _onMouseUpOutside);\r\n            obj.container.on('touchend', _onMouseUp);\r\n            obj.container.on('touchendoutside', _onMouseUpOutside);\r\n            bound = true;\r\n        }\r\n    };\r\n\r\n    var _mouseUpAll = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        if (bound) {\r\n            obj.container.removeListener('mouseup', _onMouseUp);\r\n            obj.container.removeListener('mouseupoutside', _onMouseUpOutside);\r\n            obj.container.removeListener('touchend', _onMouseUp);\r\n            obj.container.removeListener('touchendoutside', _onMouseUpOutside);\r\n            bound = false;\r\n        }\r\n        self.onPress.call(obj, event, false);\r\n    };\r\n\r\n    var _onMouseUp = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        _mouseUpAll(event);\r\n        self.onClick.call(obj, event);\r\n    };\r\n\r\n    var _onMouseUpOutside = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        _mouseUpAll(event);\r\n    };\r\n\r\n    var _onMouseOver = function (event) {\r\n        if (!ishover) {\r\n            ishover = true;\r\n            self.onHover.call(obj, event);\r\n        }\r\n    };\r\n\r\n    var _onMouseOut = function (event) {\r\n        if (ishover) {\r\n            ishover = false;\r\n            self.onLeave.call(obj, event);\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            obj.container.removeListener('mouseup', _onMouseUp);\r\n            obj.container.removeListener('mouseupoutside', _onMouseUpOutside);\r\n            obj.container.removeListener('touchend', _onMouseUp);\r\n            obj.container.removeListener('touchendoutside', _onMouseUpOutside);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mousedown', _onMouseDown);\r\n        obj.container.removeListener('touchstart', _onMouseDown);\r\n        obj.container.removeListener('mouseover', _onMouseOver);\r\n        obj.container.removeListener('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mousedown', _onMouseDown);\r\n        obj.container.on('touchstart', _onMouseDown);\r\n        obj.container.on('mouseover', _onMouseOver);\r\n        obj.container.on('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent();\r\n};\r\n\r\nClickEvent.prototype.constructor = ClickEvent;\r\nmodule.exports = ClickEvent;\r\n\r\nClickEvent.prototype.onHover = function (event) { };\r\nClickEvent.prototype.onLeave = function (event) { };\r\nClickEvent.prototype.onPress = function (event, isPressed) { };\r\nClickEvent.prototype.onClick = function (event) { };","var _items = [];\r\nvar DragDropController = {\r\n    add: function (item, event) {\r\n        item._dragDropEventId = event.data.identifier;\r\n        if (_items.indexOf(item) === -1) {\r\n            _items.push(item);\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    getItem: function (object) {\r\n        var item = null, index;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i] === object) {\r\n                item = _items[i];\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (item !== null) {\r\n            _items.splice(index, 1);\r\n            return item;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n    getEventItem: function (event, group) {\r\n        var item = null, index, id = event.data.identifier;\r\n        for (var i = 0; i < _items.length; i++) {\r\n            if (_items[i]._dragDropEventId === id) {\r\n                if (group !== _items[i].dragGroup) {\r\n                    return false;\r\n                }\r\n                item = _items[i];\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (item !== null) {\r\n            _items.splice(index, 1);\r\n            return item;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = DragDropController;","var DragEvent = function (obj) {\r\n    var bound = false,\r\n        start = new PIXI.Point(),\r\n        offset = new PIXI.Point(),\r\n        mouse = new PIXI.Point(),\r\n        movementX = 0,\r\n        movementY = 0,\r\n        cancel = false,\r\n        dragging = false,\r\n        self = this,\r\n        id = 0;\r\n\r\n    obj.container.interactive = true;\r\n\r\n    var _onDragStart = function (e) {\r\n        id = e.data.identifier;\r\n        self.onPress.call(obj, e, true);\r\n        if (!bound) {\r\n            start.copy(e.data.global);\r\n            obj.stage.on('mousemove', _onDragMove);\r\n            obj.stage.on('touchmove', _onDragMove);\r\n            obj.stage.on('mouseup', _onDragEnd);\r\n            obj.stage.on('mouseupoutside', _onDragEnd);\r\n            obj.stage.on('touchend', _onDragEnd);\r\n            obj.stage.on('touchendoutside', _onDragEnd);\r\n            obj.stage.on('touchcancel', _onDragEnd);\r\n            bound = true;\r\n        }\r\n    };\r\n\r\n    var _onDragMove = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        mouse.copy(event.data.global);\r\n        offset.set(mouse.x - start.x, mouse.y - start.y);\r\n        if (!dragging) {\r\n            movementX = Math.abs(offset.x);\r\n            movementY = Math.abs(offset.y);\r\n            if (movementX === 0 && movementY === 0 || Math.max(movementX, movementY) < obj.dragThreshold) return; //thresshold\r\n            if (obj.dragRestrictAxis !== null) {\r\n                cancel = false;\r\n                if (obj.dragRestrictAxis == \"x\" && movementY > movementX) cancel = true;\r\n                else if (obj.dragRestrictAxis == \"y\" && movementY <= movementX) cancel = true;\r\n                if (cancel) {\r\n                    _onDragEnd(event);\r\n                    return;\r\n                }\r\n            }\r\n            self.onDragStart.call(obj, event);\r\n            dragging = true;\r\n        }\r\n        self.onDragMove.call(obj, event, offset);\r\n    };\r\n\r\n    var _onDragEnd = function (event) {\r\n        if (event.data.identifier !== id) return;\r\n        if (bound) {\r\n            obj.stage.removeListener('mousemove', _onDragMove);\r\n            obj.stage.removeListener('touchmove', _onDragMove);\r\n            obj.stage.removeListener('mouseup', _onDragEnd);\r\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchend', _onDragEnd);\r\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchcancel', _onDragEnd);\r\n            dragging = false;\r\n            bound = false;\r\n            self.onDragEnd.call(obj, event);\r\n            self.onPress.call(obj, event, false);\r\n\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            obj.stage.removeListener('mousemove', _onDragMove);\r\n            obj.stage.removeListener('touchmove', _onDragMove);\r\n            obj.stage.removeListener('mouseup', _onDragEnd);\r\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\r\n            obj.stage.removeListener('touchend', _onDragEnd);\r\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mousedown', _onDragStart);\r\n        obj.container.removeListener('touchstart', _onDragStart);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mousedown', _onDragStart);\r\n        obj.container.on('touchstart', _onDragStart);\r\n    };\r\n\r\n    this.startEvent();\r\n};\r\n\r\nDragEvent.prototype.constructor = DragEvent;\r\nmodule.exports = DragEvent;\r\n\r\nDragEvent.prototype.onPress = function (event, isPressed) { };\r\nDragEvent.prototype.onDragEnd = function (event) { };\r\nDragEvent.prototype.onDragMove = function (event, offset) { };\r\nDragEvent.prototype.onDragStart = function (event) { };","var _currentItem;\r\nvar tabGroups = {};\r\nvar checkGroups = {};\r\nvar checkGroupValues = {};\r\n\r\nvar InputController = {\r\n    registrer: function (item, tabIndex, tabGroup) {\r\n        var groupName = tabGroup || \"default\";\r\n\r\n        var items = tabGroups[groupName];\r\n        if (!items)\r\n            items = tabGroups[groupName] = [];\r\n\r\n        var i = items.indexOf(item);\r\n        if (i === -1) {\r\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\r\n            item._tabGroup = items;\r\n            items.push(item);\r\n            items.sort(function (a, b) {\r\n                if (a._tabIndex < b._tabIndex)\r\n                    return -1;\r\n                if (a._tabIndex > b._tabIndex)\r\n                    return 1;\r\n                return 0;\r\n            });\r\n        }\r\n    },\r\n    set: function (item) {\r\n        if (_currentItem && typeof _currentItem.blur === \"function\")\r\n            _currentItem.blur();\r\n        _currentItem = item;\r\n    },\r\n    clear: function () {\r\n        _currentItem = undefined;\r\n    },\r\n    fireTab: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\r\n            if (i >= _currentItem._tabGroup.length) i = 0;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    fireNext: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\r\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    firePrev: function () {\r\n        if (_currentItem) {\r\n            var i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\r\n            if (i < 0) i = 0;\r\n            _currentItem._tabGroup[i].focus();\r\n        }\r\n    },\r\n    registrerCheckGroup: function (cb) {\r\n        var name = cb.checkGroup;\r\n        var group = checkGroups[name];\r\n        if (!group) group = checkGroups[name] = {};\r\n        group[cb.value] = cb;\r\n\r\n        if (cb.checked)\r\n            checkGroupValues[name] = cb.value;\r\n    },\r\n    updateCheckGroupSelected: function (cb) {\r\n        var group = checkGroups[cb.checkGroup];\r\n        for (var val in group) {\r\n            var b = group[val];\r\n            if (b !== cb)\r\n                b.checked = false;\r\n        }\r\n        checkGroupValues[cb.checkGroup] = cb.value;\r\n    },\r\n    getCheckGroupSelectedValue: function (name) {\r\n        if (checkGroupValues[name])\r\n            return checkGroupValues[name];\r\n        return \"\";\r\n    },\r\n    setCheckGroupSelectedValue: function (name, val) {\r\n        var group = checkGroups[name];\r\n        if (group) {\r\n            var cb = group[val];\r\n            if (cb) {\r\n                cb.checked = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = InputController;","var Interaction = {\r\n    ClickEvent: require('./ClickEvent'),\r\n    DragEvent: require('./DragEvent'),\r\n    MouseScrollEvent: require('./MouseScrollEvent')\r\n};\r\n\r\n\r\nmodule.exports = Interaction;","var MouseScrollEvent = function (obj, preventDefault) {\r\n    var bound = false, delta = new PIXI.Point(), self = this;\r\n    obj.container.interactive = true;\r\n\r\n    var _onMouseScroll = function (event) {\r\n        if (preventDefault)\r\n            event.preventDefault();\r\n\r\n        delta.set(event.deltaX, event.deltaY);\r\n        self.onMouseScroll.call(obj, event, delta);\r\n    };\r\n\r\n    var _onHover = function (event) {\r\n        if (!bound) {\r\n            document.addEventListener(\"mousewheel\", _onMouseScroll, false);\r\n            document.addEventListener(\"DOMMouseScroll\", _onMouseScroll, false);\r\n            bound = true;\r\n        }\r\n    };\r\n\r\n    var _onMouseOut = function (event) {\r\n        if (bound) {\r\n            document.removeEventListener(\"mousewheel\", _onMouseScroll);\r\n            document.removeEventListener(\"DOMMouseScroll\", _onMouseScroll);\r\n            bound = false;\r\n        }\r\n    };\r\n\r\n    this.stopEvent = function () {\r\n        if (bound) {\r\n            document.removeEventListener(\"mousewheel\", _onMouseScroll);\r\n            document.removeEventListener(\"DOMMouseScroll\", _onMouseScroll);\r\n            bound = false;\r\n        }\r\n        obj.container.removeListener('mouseover', _onHover);\r\n        obj.container.removeListener('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent = function () {\r\n        obj.container.on('mouseover', _onHover);\r\n        obj.container.on('mouseout', _onMouseOut);\r\n    };\r\n\r\n    this.startEvent();\r\n\r\n    \r\n};\r\n\r\nMouseScrollEvent.prototype.constructor = MouseScrollEvent;\r\nmodule.exports = MouseScrollEvent;\r\n\r\nMouseScrollEvent.prototype.onMouseScroll = function (event, delta) { };","var MathHelper = {\r\n    Lerp: function (start, stop, amt) {\r\n        if (amt > 1) amt = 1;\r\n        else if (amt < 0) amt = 0;\r\n        return start + (stop - start) * amt;\r\n    },\r\n    Round: function(number, decimals) {\r\n        var pow = Math.pow(10, decimals);\r\n        return Math.round(number * pow) / pow;\r\n    }\r\n};\r\n\r\nmodule.exports = MathHelper;","var Slider = require('./Slider'),\r\n    Tween = require('./Tween'),\r\n    Ease = require('./Ease/Ease');\r\n\r\n/**\r\n* An UI scrollbar to control a ScrollingContainer\r\n* \r\n* @class\r\n* @extends PIXI.UI.Slider\r\n* @memberof PIXI.UI\r\n* @param options {Object} ScrollBar settings\r\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\r\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\r\n* @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\r\n* @param [options.vertical=false] {boolean} Direction of the scrollbar\r\n* @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\r\n*\r\n*/\r\nfunction ScrollBar(options) {\r\n    Slider.call(this, { track: options.track, handle: options.handle, fill: null, vertical: options.vertical });\r\n    this.scrollingContainer = options.scrollingContainer;\r\n    this.autohide = options.autohide;\r\n    this._hidden = false;\r\n\r\n}\r\n\r\nScrollBar.prototype = Object.create(Slider.prototype);\r\nScrollBar.prototype.constructor = ScrollBar;\r\nmodule.exports = ScrollBar;\r\n\r\n\r\nScrollBar.prototype.initialize = function () {\r\n    Slider.prototype.initialize.call(this);\r\n    this.decimals = 3; //up decimals to trigger ValueChanging more often\r\n\r\n    this._onValueChanging = function (val) {\r\n        var sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\r\n        if (sizeAmt < 1)\r\n            this.scrollingContainer.forcePctPosition(this.vertical ? \"y\" : \"x\", this._amt);\r\n    };\r\n\r\n    this.scrollingContainer._scrollBars.push(this);\r\n\r\n};\r\n\r\nScrollBar.prototype.alignToContainer = function () {\r\n    var newPos,\r\n        size,\r\n        x_y = this.vertical ? \"y\" : \"x\",\r\n        width_height = this.vertical ? \"height\" : \"width\",\r\n        top_left = this.vertical ? \"top\" : \"left\",\r\n        _posAmt = !this.scrollingContainer.innerContainer[width_height] ? 0 : -(this.scrollingContainer.innerContainer[x_y] / this.scrollingContainer.innerContainer[width_height]),\r\n        sizeAmt = !this.scrollingContainer.innerContainer[width_height] ? 1 : this.scrollingContainer[\"_\" + width_height] / this.scrollingContainer.innerContainer[width_height];\r\n\r\n    //update amt\r\n    this._amt = !this.scrollingContainer[\"_\" + width_height] ? 0 : -(this.scrollingContainer.innerContainer[x_y] / (this.scrollingContainer.innerContainer[width_height] - this.scrollingContainer[\"_\" + width_height]));\r\n\r\n    if (sizeAmt >= 1) {\r\n        size = this[\"_\" + width_height];\r\n        this.handle[top_left] = size * 0.5;\r\n        this.toggleHidden(true);\r\n    }\r\n    else {\r\n        size = this[\"_\" + width_height] * sizeAmt;\r\n        if (this._amt > 1) size -= (this[\"_\" + width_height] - size) * (this._amt - 1);\r\n        else if (this._amt < 0) size -= (this[\"_\" + width_height] - size) * -this._amt;\r\n        if (this._amt < 0) newPos = size * 0.5;\r\n        else if (this._amt > 1) newPos = this[\"_\" + width_height] - size * 0.5;\r\n        else newPos = (_posAmt * this.scrollingContainer[\"_\" + width_height]) + (size * 0.5);\r\n        this.handle[top_left] = newPos;\r\n        this.toggleHidden(false);\r\n    }\r\n    this.handle[width_height] = size;\r\n};\r\n\r\n\r\nScrollBar.prototype.toggleHidden = function (hidden) {\r\n    if (this.autohide) {\r\n        if (hidden && !this._hidden) {\r\n            Tween.to(this, 0.2, { alpha: 0 });\r\n            this._hidden = true;\r\n        }\r\n        else if (!hidden && this._hidden) {\r\n            Tween.to(this, 0.2, { alpha: 1 });\r\n            this._hidden = false;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    Container = require('./Container'),\r\n    MathHelper = require('./MathHelper'),\r\n    Ticker = require('./Ticker'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    MouseScrollEvent = require('./Interaction/MouseScrollEvent');\r\n\r\n\r\n/**\r\n * An UI Container object with expandMask hidden and possibility to enable scrolling\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\r\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\r\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\r\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\r\n * @param [options.width=0] {Number|String} container width \r\n * @param [options.height=0] {Number} container height \r\n * @param [options.radius=0] {Number} corner radius of clipping mask\r\n * @param [options.expandMask=0] {Number} mask expand (px)\r\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\r\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\r\n */\r\nfunction ScrollingContainer(options) {\r\n    options = options || {};\r\n    Container.call(this, options.width, options.height);\r\n    this.mask = new PIXI.Graphics();\r\n    this.innerContainer = new PIXI.Container();\r\n    this.innerBounds = new PIXI.Rectangle();\r\n    this.container.addChild(this.mask);\r\n    this.container.addChild(this.innerContainer);\r\n    this.container.mask = this.mask;\r\n    this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\r\n    this.scrollY = options.scrollY !== undefined ? options.scrollY : true;\r\n    this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\r\n    this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\r\n    this.radius = options.radius || 0;\r\n    this.expandMask = options.expandMask || 0;\r\n    this.overflowY = options.overflowY || 0;\r\n    this.overflowX = options.overflowX || 0;\r\n\r\n    this.animating = false;\r\n    this.scrolling = false;\r\n    this._scrollBars = [];\r\n\r\n    this.boundCached = performance.now() - 1000;\r\n}\r\n\r\n\r\nScrollingContainer.prototype = Object.create(Container.prototype);\r\nScrollingContainer.prototype.constructor = ScrollingContainer;\r\nmodule.exports = ScrollingContainer;\r\n\r\n\r\nScrollingContainer.prototype.initialize = function () {\r\n    Container.prototype.initialize.apply(this);\r\n    if (this.scrollX || this.scrollY) {\r\n        this.initScrolling();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.update = function () {\r\n    Container.prototype.update.apply(this);\r\n    if (this._lastWidth != this._width || this._lastHeight != this._height) {\r\n        var of = this.expandMask;\r\n        this.mask.clear();\r\n        this.mask.lineStyle(0);\r\n        this.mask.beginFill(0xFFFFFF, 1);\r\n        if (this.radius === 0) {\r\n\r\n            //this.mask.drawRect(0, 0, this._width, this._height);\r\n            //this.mask.drawRect(-of, -of, this._width + of, this.height + of);\r\n            //this.mask.moveTo(-of, -of);\r\n            //this.mask.lineTo(this._width + of, -of);\r\n            //this.mask.lineTo(this._width + of, this._height + of);\r\n            //this.mask.lineTo(-of, this._height + of);\r\n            this.mask.drawRect(-of, -of, this._width + of, this._height + of);\r\n        }\r\n        else {\r\n            this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\r\n        }\r\n        this.mask.endFill();\r\n        this._lastWidth = this._width;\r\n        this._lastHeight = this._height;\r\n    }\r\n\r\n\r\n    if (this.setScrollPosition) {\r\n        this.setScrollPosition();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        Container.prototype.addChild.call(this, UIObject);\r\n        this.innerContainer.addChild(UIObject.container);\r\n    }\r\n    return UIObject;\r\n};\r\n\r\n\r\nScrollingContainer.prototype.updateScrollBars = function () {\r\n    for (var i = 0; i < this._scrollBars.length; i++) {\r\n        this._scrollBars[i].alignToContainer();\r\n    }\r\n};\r\n\r\nScrollingContainer.prototype.initScrolling = function () {\r\n    var container = this.innerContainer,\r\n        containerStart = new PIXI.Point(),\r\n        targetPosition = new PIXI.Point(),\r\n        lastPosition = new PIXI.Point(),\r\n        Position = new PIXI.Point(),\r\n        Speed = new PIXI.Point(),\r\n        stop,\r\n        self = this;\r\n\r\n    this.forcePctPosition = function (direction, pct) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        if (this.scrollX && direction == \"x\") {\r\n            container.position[direction] = -((bounds.width - this._width) * pct);\r\n        }\r\n        if (this.scrollY && direction == \"y\") {\r\n            container.position[direction] = -((bounds.height - this._height) * pct);\r\n        }\r\n        Position[direction] = targetPosition[direction] = container.position[direction];\r\n    };\r\n\r\n    this.focusPosition = function (pos) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        var dif;\r\n        if (this.scrollX) {\r\n            var x = Math.max(0, (Math.min(bounds.width, pos.x)));\r\n            if (x + container.x > this._width) {\r\n                dif = x - this._width;\r\n                container.x = -dif;\r\n            }\r\n            else if (x + container.x < 0) {\r\n                dif = x + container.x;\r\n                container.x -= dif;\r\n            }\r\n        }\r\n\r\n        if (this.scrollY) {\r\n            var y = Math.max(0, (Math.min(bounds.height, pos.y)));\r\n\r\n            if (y + container.y > this._height) {\r\n                dif = y - this._height;\r\n                container.y = -dif;\r\n            }\r\n            else if (y + container.y < 0) {\r\n                dif = y + container.y;\r\n                container.y -= dif;\r\n            }\r\n        }\r\n\r\n        lastPosition.copy(container.position);\r\n        targetPosition.copy(container.position);\r\n        Position.copy(container.position);\r\n        this.updateScrollBars();\r\n\r\n    };\r\n\r\n    this.setScrollPosition = function (speed) {\r\n        if (speed) {\r\n            Speed = speed;\r\n        }\r\n\r\n        if (!this.animating) {\r\n            this.animating = true;\r\n            lastPosition.copy(container.position);\r\n            targetPosition.copy(container.position);\r\n            Ticker.on(\"update\", this.updateScrollPosition, this);\r\n        }\r\n    };\r\n\r\n    this.updateScrollPosition = function (delta) {\r\n        stop = true;\r\n        if (this.scrollX) this.updateDirection(\"x\", delta);\r\n        if (this.scrollY) this.updateDirection(\"y\", delta);\r\n        if (stop) {\r\n            Ticker.removeListener(\"update\", this.updateScrollPosition);\r\n            this.animating = false;\r\n        }\r\n    };\r\n\r\n\r\n    \r\n    this.getInnerBounds = function () {\r\n        //this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\r\n        if (performance.now() - this.boundCached > 1000) {\r\n            this.innerContainer.getBounds(true, this.innerBounds);\r\n            this.innerContainer.getBounds(true, this.innerBounds);\r\n            this.innerBounds.height = this.innerBounds.y - this.innerContainer.y + this.innerContainer.height;\r\n            this.innerBounds.width = this.innerBounds.x - this.innerContainer.x + this.innerContainer.width;\r\n            this.boundCached = performance.now();\r\n        }\r\n\r\n        return this.innerBounds;\r\n    };\r\n\r\n    this.updateDirection = function (direction, delta) {\r\n        var bounds = this.getInnerBounds();\r\n\r\n        var min;\r\n        if (direction == \"y\")\r\n            min = Math.round(Math.min(0, this._height - bounds.height));\r\n        else\r\n            min = Math.round(Math.min(0, this._width - bounds.width));\r\n\r\n        if (!this.scrolling && Math.round(Speed[direction]) !== 0) {\r\n            targetPosition[direction] += Speed[direction];\r\n            Speed[direction] = MathHelper.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\r\n\r\n            if (targetPosition[direction] > 0) {\r\n                targetPosition[direction] = 0;\r\n\r\n            }\r\n            else if (targetPosition[direction] < min) {\r\n                targetPosition[direction] = min;\r\n\r\n            }\r\n        }\r\n\r\n        if (!this.scrolling && Math.round(Speed[direction]) === 0 && (container[direction] > 0 || container[direction] < min)) {\r\n            var target = Position[direction] > 0 ? 0 : min;\r\n            Position[direction] = MathHelper.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\r\n            stop = false;\r\n        }\r\n        else if (this.scrolling || Math.round(Speed[direction]) !== 0) {\r\n\r\n            if (this.scrolling) {\r\n                Speed[direction] = Position[direction] - lastPosition[direction];\r\n                lastPosition.copy(Position);\r\n            }\r\n            if (targetPosition[direction] > 0) {\r\n                Speed[direction] = 0;\r\n                Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\r\n            }\r\n            else if (targetPosition[direction] < min) {\r\n                Speed[direction] = 0;\r\n                Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\r\n            }\r\n            else {\r\n                Position[direction] = targetPosition[direction];\r\n            }\r\n            stop = false;\r\n        }\r\n\r\n        container.position[direction] = Math.round(Position[direction]);\r\n\r\n        self.updateScrollBars();\r\n\r\n    };\r\n\r\n\r\n    //Drag scroll\r\n    if (this.dragScrolling) {\r\n        var drag = new DragEvent(this);\r\n        drag.onDragStart = function (e) {\r\n            if (!this.scrolling) {\r\n                containerStart.copy(container.position);\r\n                Position.copy(container.position);\r\n                this.scrolling = true;\r\n                this.setScrollPosition();\r\n            }\r\n        };\r\n\r\n        drag.onDragMove = function (e, offset) {\r\n            if (this.scrollX)\r\n                targetPosition.x = containerStart.x + offset.x;\r\n            if (this.scrollY)\r\n                targetPosition.y = containerStart.y + offset.y;\r\n        };\r\n\r\n        drag.onDragEnd = function (e) {\r\n            this.scrolling = false;\r\n        };\r\n    }\r\n\r\n    //Mouse scroll\r\n    var scrollSpeed = new PIXI.Point();\r\n    var scroll = new MouseScrollEvent(this, true);\r\n    scroll.onMouseScroll = function (e, delta) {\r\n        scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\r\n        this.setScrollPosition(scrollSpeed);\r\n    };\r\n\r\n\r\n    self.updateScrollBars();\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A sliced sprite with dynamic width and height.\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\r\n * @param BorderWidth {Number} Width of the sprite borders\r\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\r\n * @param verticalSlice {Boolean} Slice the sprite vertically\r\n * @param [tile=false] {Boolean} tile or streach\r\n */\r\nfunction SliceSprite(texture, borderWidth, horizontalSlice, verticalSlice, tile) {\r\n    UIBase.call(this, texture.width, texture.height);\r\n\r\n    var ftl, ftr, fbl, fbr, ft, fb, fl, fr, ff, stl, str, sbl, sbr, st, sb, sl, sr, sf,\r\n        bw = borderWidth || 5,\r\n        vs = typeof verticalSlice !== \"undefined\" ? verticalSlice : true,\r\n        hs = typeof horizontalSlice !== \"undefined\" ? horizontalSlice : true,\r\n        t = texture.baseTexture,\r\n        f = texture.frame;\r\n\r\n\r\n    if (hs) this.setting.minWidth = borderWidth * 2;\r\n    if (vs) this.setting.minHeight = borderWidth * 2;\r\n\r\n    this.initialize = function () {\r\n        UIBase.prototype.initialize.apply(this);\r\n\r\n        //get frames\r\n        if (vs && hs) {\r\n            ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\r\n            ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\r\n            fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\r\n            fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\r\n            ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\r\n            fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\r\n            fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\r\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\r\n            ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\r\n        }\r\n        else if (hs) {\r\n            fl = new PIXI.Rectangle(f.x, f.y, bw, f.height);\r\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\r\n            ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\r\n        }\r\n        else { //vs\r\n            ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\r\n            fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\r\n            ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\r\n        }\r\n\r\n        //TODO: swap frames if rotation\r\n\r\n\r\n\r\n        //make sprites\r\n        sf = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff)) : new PIXI.Sprite(new PIXI.Texture(t, ff));\r\n        this.container.addChildAt(sf, 0);\r\n        if (vs && hs) {\r\n            stl = new PIXI.Sprite(new PIXI.Texture(t, ftl));\r\n            str = new PIXI.Sprite(new PIXI.Texture(t, ftr));\r\n            sbl = new PIXI.Sprite(new PIXI.Texture(t, fbl));\r\n            sbr = new PIXI.Sprite(new PIXI.Texture(t, fbr));\r\n            this.container.addChildAt(stl, 0);\r\n            this.container.addChildAt(str, 0);\r\n            this.container.addChildAt(sbl, 0);\r\n            this.container.addChildAt(sbr, 0);\r\n\r\n        }\r\n        if (hs) {\r\n            sl = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl)) : new PIXI.Sprite(new PIXI.Texture(t, fl));\r\n            sr = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr)) : new PIXI.Sprite(new PIXI.Texture(t, fr));\r\n            this.container.addChildAt(sl, 0);\r\n            this.container.addChildAt(sr, 0);\r\n        }\r\n        if (vs) {\r\n            st = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft)) : new PIXI.Sprite(new PIXI.Texture(t, ft));\r\n            sb = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb)) : new PIXI.Sprite(new PIXI.Texture(t, fb));\r\n            this.container.addChildAt(st, 0);\r\n            this.container.addChildAt(sb, 0);\r\n        }\r\n\r\n        //set constant position and sizes\r\n        if (vs && hs) st.x = sb.x = sl.y = sr.y = stl.width = str.width = sbl.width = sbr.width = stl.height = str.height = sbl.height = sbr.height = bw;\r\n        if (hs) sf.x = sl.width = sr.width = bw;\r\n        if (vs) sf.y = st.height = sb.height = bw;\r\n    };\r\n\r\n    /**\r\n     * Updates the sliced sprites position and size\r\n     *\r\n     * @private\r\n     */\r\n    this.update = function () {\r\n        if (!this.initialized) return;\r\n        if (vs && hs) {\r\n            str.x = sbr.x = sr.x = this._width - bw;\r\n            sbl.y = sbr.y = sb.y = this._height - bw;\r\n            sf.width = st.width = sb.width = this._width - bw * 2;\r\n            sf.height = sl.height = sr.height = this._height - bw * 2;\r\n        }\r\n        else if (hs) {\r\n            sr.x = this._width - bw;\r\n            sl.height = sr.height = sf.height = this._height;\r\n            sf.width = this._width - bw * 2;\r\n        }\r\n        else { //vs\r\n            sb.y = this._height - bw;\r\n            st.width = sb.width = sf.width = this._width;\r\n            sf.height = this._height - bw * 2;\r\n        }\r\n\r\n        if (this.tint !== null) {\r\n            sf.tint = this.tint;\r\n            if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\r\n            if (hs) sl.tint = sr.tint = this.tint;\r\n            if (vs) st.tint = sb.tint = this.tint;\r\n        }\r\n\r\n        if (this.blendMode !== null) {\r\n            sf.blendMode = this.blendMode;\r\n            if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\r\n            if (hs) sl.blendMode = sr.blendMode = this.blendMode;\r\n            if (vs) st.blendMode = sb.blendMode = this.blendMode;\r\n        }\r\n    };\r\n}\r\n\r\nSliceSprite.prototype = Object.create(UIBase.prototype);\r\nSliceSprite.prototype.constructor = SliceSprite;\r\nmodule.exports = SliceSprite;\r\n\r\n\r\n\r\n","var UIBase = require('./UIBase'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    ClickEvent = require('./Interaction/ClickEvent'),\r\n    Tween = require('./Tween'),\r\n    Ease = require('./Ease/Ease'),\r\n    MathHelper = require('./MathHelper');\r\n\r\n/**\r\n* An UI Slider, the default width/height is 90%\r\n* \r\n* @class\r\n* @extends UIBase\r\n* @memberof PIXI.UI\r\n* @param options {Object} Slider settings\r\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\r\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\r\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\r\n* @param [options.vertical=false] {boolean} Direction of the slider\r\n* @param [options.value=0] {number} value of the slider\r\n* @param [options.minValue=0] {number} minimum value\r\n* @param [options.maxValue=100] {number} max value\r\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\r\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\r\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\r\n* \r\n* \r\n*/\r\nfunction Slider(options) {\r\n    UIBase.call(this);\r\n    this._amt = 0;\r\n    this._disabled = false;\r\n\r\n    //set options\r\n    this.track = options.track;\r\n    this.handle = options.handle;\r\n    this.fill = options.fill || null;\r\n    this._minValue = options.minValue || 0;\r\n    this._maxValue = options.maxValue || 100;\r\n    this.decimals = options.decimals || 0;\r\n    this.vertical = options.vertical || false;\r\n    this._onValueChange = options.onValueChange || null;\r\n    this._onValueChanging = options.onValueChanging || null;\r\n    this.value = options.value || 50;\r\n    this.handle.pivot = 0.5;\r\n\r\n\r\n\r\n    this.addChild(this.track);\r\n    if (this.fill) this.track.addChild(this.fill);\r\n    this.addChild(this.handle);\r\n    this.handle.container.buttonMode = true;\r\n\r\n    if (this.vertical) {\r\n        this.height = \"100%\";\r\n        this.width = this.track.width;\r\n        this.track.height = \"100%\";\r\n        this.handle.horizontalAlign = \"center\";\r\n        if (this.fill) this.fill.horizontalAlign = \"center\";\r\n    }\r\n    else {\r\n        this.width = \"100%\";\r\n        this.height = this.track.height;\r\n        this.track.width = \"100%\";\r\n        this.handle.verticalAlign = \"middle\";\r\n        if (this.fill) this.fill.verticalAlign = \"middle\";\r\n    }\r\n\r\n}\r\n\r\nSlider.prototype = Object.create(UIBase.prototype);\r\nSlider.prototype.constructor = Slider;\r\nmodule.exports = Slider;\r\n\r\nSlider.prototype.update = function (soft) {\r\n    var handleSize, val;\r\n\r\n    if (this.vertical) {\r\n        handleSize = this.handle._height || this.handle.container.height;\r\n        val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\r\n        if (soft) {\r\n            Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\r\n            if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\r\n        }\r\n        else {\r\n            Tween.set(this.handle, { top: val });\r\n            if (this.fill) Tween.set(this.fill, { height: val });\r\n        }\r\n    }\r\n    else {\r\n        handleSize = this.handle._width || this.handle.container.width;\r\n        val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\r\n        if (soft) {\r\n            Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\r\n            if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\r\n        }\r\n        else {\r\n            Tween.set(this.handle, { left: val });\r\n            if (this.fill) Tween.set(this.fill, { width: val });\r\n        }\r\n    }\r\n};\r\n\r\nSlider.prototype.initialize = function () {\r\n    UIBase.prototype.initialize.call(this);\r\n\r\n\r\n\r\n    var self = this;\r\n    var startValue = 0;\r\n\r\n\r\n\r\n    ////Handle dragging\r\n    var handleDrag = new DragEvent(this.handle);\r\n    handleDrag.onPress = function (event, isPressed) {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrag.onDragStart = function (event) {\r\n        startValue = self._amt;\r\n        maxPosition = self.vertical ? self._height - self.handle._height : self._width - self.handle._width;\r\n    };\r\n\r\n    handleDrag.onDragMove = function (event, offset) {\r\n\r\n        self._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((self.vertical ? offset.y : offset.x) / maxPosition)));\r\n\r\n        triggerValueChanging();\r\n        self.update();\r\n    };\r\n\r\n    handleDrag.onDragEnd = function () {\r\n        triggerValueChange();\r\n        self.update();\r\n    };\r\n\r\n    //Bar pressing/dragging\r\n    var localMousePosition = new PIXI.Point();\r\n    var trackDrag = new DragEvent(this.track);\r\n\r\n    trackDrag.onPress = function (event, isPressed) {\r\n        if (isPressed)\r\n            updatePositionToMouse(event.data.global, true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    trackDrag.onDragMove = function (event) {\r\n        updatePositionToMouse(event.data.global, false);\r\n    };\r\n\r\n    trackDrag.onDragEnd = function () {\r\n        triggerValueChange();\r\n    };\r\n\r\n    var updatePositionToMouse = function (mousePosition, soft) {\r\n        self.track.container.toLocal(mousePosition, null, localMousePosition, true);\r\n\r\n        var newPos = self.vertical ? localMousePosition.y - self.handle._height * 0.5 : localMousePosition.x - self.handle._width * 0.5;\r\n        var maxPos = self.vertical ? self._height - self.handle._height : self._width - self.handle._width;\r\n        self._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\r\n        self.update(soft);\r\n        triggerValueChanging();\r\n    };\r\n\r\n    var triggerValueChange = function () {\r\n        if (self._lastChange != self.value) {\r\n            self._lastChange = self.value;\r\n            if (typeof self.onValueChange === \"function\")\r\n                self.onValueChange(self.value);\r\n        }\r\n    };\r\n\r\n    var triggerValueChanging = function () {\r\n        if (self._lastChanging != self.value) {\r\n            self._lastChanging = self.value;\r\n            if (typeof self._onValueChanging === \"function\")\r\n                self._onValueChanging(self.value);\r\n        }\r\n    };\r\n};\r\n\r\n\r\nObject.defineProperties(Slider.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return MathHelper.Round(MathHelper.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\r\n        },\r\n        set: function (val) {\r\n            this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\r\n            if (typeof this.onValueChange === \"function\")\r\n                self.onValueChange(this.value);\r\n            if (typeof this._onValueChanging === \"function\")\r\n                this._onValueChanging(this.value);\r\n            this.update();\r\n        }\r\n    },\r\n\r\n    onValueChange: {\r\n        get: function () {\r\n            return this._onValueChange;\r\n        },\r\n        set: function (val) {\r\n            this._onValueChange = val;\r\n        }\r\n    },\r\n    onValueChanging: {\r\n        get: function () {\r\n            return this._onValueChanging;\r\n        },\r\n        set: function (val) {\r\n            this._onValueChanging = val;\r\n        }\r\n    },\r\n    minValue: {\r\n        get: function () {\r\n            return this._minValue;\r\n        },\r\n        set: function (val) {\r\n            this._minValue = val;\r\n            this.update();\r\n        }\r\n    },\r\n    maxValue: {\r\n        get: function () {\r\n            return this._maxValue;\r\n        },\r\n        set: function (val) {\r\n            this._maxValue = val;\r\n            this.update();\r\n        }\r\n    },\r\n    disabled: {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (val) {\r\n            if (val !== this._disabled) {\r\n                this._disabled = val;\r\n                this.handle.container.buttonMode = !val;\r\n                this.handle.container.interactive = !val;\r\n                this.track.container.interactive = !val;\r\n            }\r\n        }\r\n    }\r\n});","var Container = require('./Container');\r\nvar Tween = require('./Tween');\r\n/**\r\n * An UI Container object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param desc {Boolean} Sort the list descending\r\n * @param tweenTime {Number} if above 0 the sort will be animated\r\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\r\n */\r\nfunction SortableList(desc, tweenTime, tweenEase) {\r\n    Container.call(this);\r\n    this.desc = typeof desc !== \"undefined\" ? desc : false;\r\n    this.tweenTime = tweenTime || 0;\r\n    this.tweenEase = tweenEase;\r\n    this.items = [];\r\n\r\n}\r\n\r\nSortableList.prototype = Object.create(Container.prototype);\r\nSortableList.prototype.constructor = SortableList;\r\nmodule.exports = SortableList;\r\n\r\nSortableList.prototype.addChild = function (UIObject, fnValue, fnThenBy) {\r\n    Container.prototype.addChild.call(this, UIObject);\r\n    if (this.items.indexOf(UIObject) == -1) {\r\n        this.items.push(UIObject);\r\n    }\r\n\r\n    if (typeof fnValue === \"function\")\r\n        UIObject._sortListValue = fnValue;\r\n\r\n    if (typeof fnThenBy === \"function\")\r\n        UIObject._sortListThenByValue = fnThenBy;\r\n\r\n    if (!UIObject._sortListRnd)\r\n        UIObject._sortListRnd = Math.random();\r\n\r\n\r\n\r\n    this.sort();\r\n};\r\n\r\nSortableList.prototype.removeChild = function (UIObject) {\r\n    if (arguments.length > 1) {\r\n        for (var i = 0; i < arguments.length; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        Container.prototype.removeChild.call(this, UIObject);\r\n        var index = this.items.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.items.splice(index, 1);\r\n        }\r\n        this.sort();\r\n    }\r\n};\r\n\r\nSortableList.prototype.sort = function (instant) {\r\n    clearTimeout(this._sortTimeout);\r\n\r\n    if (instant) {\r\n        this._sort();\r\n        return;\r\n    }\r\n\r\n    var _this = this;\r\n    this._sortTimeout = setTimeout(function () { _this._sort(); }, 0);\r\n};\r\n\r\nSortableList.prototype._sort = function () {\r\n    var self = this,\r\n        desc = this.desc,\r\n        y = 0,\r\n        alt = true;\r\n\r\n    this.items.sort(function (a, b) {\r\n        var res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1 :\r\n                  a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\r\n\r\n        if (res === 0 && a._sortListThenByValue && b._sortListThenByValue) {\r\n            res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1 :\r\n                  a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\r\n        }\r\n        if (res === 0) {\r\n            res = a._sortListRnd > b._sortListRnd ? 1 :\r\n                  a._sortListRnd < b._sortListRnd ? -1 : 0;\r\n        }\r\n        return res;\r\n    });\r\n\r\n    for (var i = 0; i < this.items.length; i++) {\r\n        var item = this.items[i];\r\n\r\n        alt = !alt;\r\n\r\n        if (this.tweenTime > 0) {\r\n            Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y: y }, this.tweenEase);\r\n        }\r\n        else {\r\n            item.x = 0;\r\n            item.y = y;\r\n        }\r\n        y += item.height;\r\n        if (typeof item.altering === \"function\")\r\n            item.altering(alt);\r\n    }\r\n\r\n    //force it to update parents when sort animation is done (prevent scrolling container bug)\r\n    if (this.tweenTime > 0) {\r\n        setTimeout(function () {\r\n            self.updatesettings(false, true);\r\n        }, this.tweenTime * 1000);\r\n    }\r\n};\r\n\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI sprite object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} The texture for the sprite\r\n */\r\nfunction Sprite(t) {\r\n    this.sprite = new PIXI.Sprite(t);\r\n    UIBase.call(this, this.sprite.width, this.sprite.height);\r\n    this.container.addChild(this.sprite);\r\n}\r\n\r\nSprite.prototype = Object.create(UIBase.prototype);\r\nSprite.prototype.constructor = Sprite;\r\nmodule.exports = Sprite;\r\n\r\n\r\nSprite.fromFrame = function (frameId) {\r\n    return new Sprite(new PIXI.Texture.fromFrame(frameId));\r\n};\r\n\r\nSprite.fromImage = function (imageUrl) {\r\n    return new Sprite(new PIXI.Texture.fromImage(imageUrl));\r\n};\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nSprite.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        this.sprite.tint = this.tint;\r\n\r\n    if (this.blendMode !== null)\r\n        this.sprite.blendMode = this.blendMode;\r\n\r\n    this.sprite.width = this._width;\r\n    this.sprite.height = this._height;\r\n};\r\n\r\n","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * A Stage for UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.Container\r\n * @memberof PIXI.UI\r\n * @param width {Number} Width of the Stage\r\n * @param height {Number} Height of the Stage\r\n */\r\nfunction Stage(width, height) {\r\n    PIXI.Container.call(this);\r\n    this.__width = width;\r\n    this.__height = height;\r\n    this.minWidth = 0;\r\n    this.minHeight = 0;\r\n\r\n    this.UIChildren = [];\r\n    this.stage = this;\r\n    this.interactive = true;\r\n    this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\r\n    this.initialized = true;\r\n}\r\n\r\nStage.prototype = Object.create(PIXI.Container.prototype);\r\nStage.prototype.constructor = Stage;\r\nmodule.exports = Stage;\r\n\r\nStage.prototype.addChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent !== null)\r\n            UIObject.parent.removeChild(UIObject);\r\n\r\n        UIObject.parent = this;\r\n        this.UIChildren.push(UIObject);\r\n        PIXI.Container.prototype.addChild.call(this, UIObject.container);\r\n        UIObject.updatesettings(true);\r\n    }\r\n};\r\n\r\nStage.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        PIXI.Container.prototype.removeChild.call(this, UIObject.container);\r\n        var index = this.UIChildren.indexOf(UIObject);\r\n        if (index != -1) {\r\n            this.UIChildren.splice(index, 1);\r\n            UIObject.parent = null;\r\n        }\r\n\r\n    }\r\n};\r\n\r\nStage.prototype.resize = function (width, height) {\r\n    if (!isNaN(height)) this.__height = height;\r\n    if (!isNaN(width)) this.__width = width;\r\n\r\n    if (this.minWidth || this.minHeight) {\r\n        var rx = 1,\r\n            ry = 1;\r\n\r\n        if (width && width < this.minWidth) {\r\n            rx = this.minWidth / width;\r\n        }\r\n\r\n        if (height && height < this.minHeight) {\r\n            ry = this.minHeight / height;\r\n        }\r\n\r\n        if (rx > ry && rx > 1) {\r\n            this.scale.set(1 / rx);\r\n            this.__height *= rx;\r\n            this.__width *= rx;\r\n        }\r\n        else if (ry > 1) {\r\n            this.scale.set(1 / ry);\r\n            this.__width *= ry;\r\n            this.__height *= ry;\r\n        }\r\n        else if (this.scale.x !== 1) {\r\n            this.scale.set(1);\r\n        }\r\n    }\r\n\r\n    this.hitArea.width = this.__width;\r\n    this.hitArea.height = this.__height;\r\n\r\n    for (var i = 0; i < this.UIChildren.length; i++)\r\n        this.UIChildren[i].updatesettings(true, false);\r\n};\r\n\r\nObject.defineProperties(Stage.prototype, {\r\n    _width: {\r\n        get: function () {\r\n            return this.__width;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this.__width = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    },\r\n    _height: {\r\n        get: function () {\r\n            return this.__height;\r\n        },\r\n        set: function (val) {\r\n            if (!isNaN(val)) {\r\n                this.__height = val;\r\n                this.resize();\r\n            }\r\n        }\r\n    }\r\n});","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Text {String} Text content\r\n * @param TextStyle {PIXI.TextStyle} Style used for the Text\r\n */\r\nfunction Text(text, PIXITextStyle) {\r\n    this._text = new PIXI.Text(text, PIXITextStyle);\r\n    UIBase.call(this, this._text.width, this._text.height);\r\n    this.container.addChild(this._text);\r\n\r\n    this.baseupdate = function () {\r\n        //force original text width unless using anchors\r\n        if (this._anchorLeft === null || this._anchorRight === null) {\r\n            this.setting.width = this._text.width;\r\n            this.setting.widthPct = null;\r\n        }\r\n        else {\r\n            this._text.width = this._width;\r\n        }\r\n\r\n        //force original text height unless using anchors\r\n        if (this._anchorTop === null || this._anchorBottom === null) {\r\n            this.setting.height = this._text.height;\r\n            this.setting.heightPct = null;\r\n        }\r\n        else {\r\n            this._text.width = this._width;\r\n        }\r\n\r\n\r\n        UIBase.prototype.baseupdate.call(this);\r\n    };\r\n\r\n    this.update = function () {\r\n        //set tint\r\n        if (this.tint !== null)\r\n            this._text.tint = this.tint;\r\n\r\n        //set blendmode\r\n        if (this.blendMode !== null)\r\n            this._text.blendMode = this.blendMode;\r\n    };\r\n}\r\n\r\nText.prototype = Object.create(UIBase.prototype);\r\nText.prototype.constructor = Text;\r\nmodule.exports = Text;\r\n\r\n\r\nObject.defineProperties(Text.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._text.text;\r\n        },\r\n        set: function (val) {\r\n            this._text.text = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});","var InputBase = require('./InputBase'),\r\n    Container = require('./Container'),\r\n    DragEvent = require('./Interaction/DragEvent');\r\n\r\n/**\r\n * An UI text object\r\n *\r\n * @class\r\n * @extends PIXI.UI.InputBase\r\n * @memberof PIXI.UI\r\n * @param options.value {String} Text content\r\n * @param [options.multiLine=false] {Boolean} Multiline input\r\n * @param options.style {PIXI.TextStyle} Style used for the Text\r\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\r\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\r\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\r\n * @param [options.width=150] {Number} width of input\r\n * @param [options.height=20] {Number} height of input\r\n * @param [options.padding=3] {Number} input padding\r\n * @param [options.paddingTop=0] {Number} input padding\r\n * @param [options.paddingBottom=0] {Number} input padding\r\n * @param [options.paddingLeft=0] {Number} input padding\r\n * @param [options.paddingRight=0] {Number} input padding\r\n * @param [options.tabIndex=0] {Number} input tab index\r\n * @param [options.tabGroup=0] {Number|String} input tab group\r\n * @param [options.maxLength=0] {Number} 0 = unlimited\r\n * @param [options.caretWidth=1] {Number} width of the caret\r\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\r\n */\r\nfunction TextInput(options) {\r\n    //create temp input (for mobile keyboard)\r\n    if (typeof _pui_tempInput === \"undefined\") {\r\n        _pui_tempInput = document.createElement(\"INPUT\");\r\n        _pui_tempInput.setAttribute(\"type\", \"text\");\r\n        _pui_tempInput.setAttribute(\"id\", \"_pui_tempInput\");\r\n        _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:-10px; top:-10px; width:0px; height: 0px;\");\r\n        document.body.appendChild(_pui_tempInput);\r\n    }\r\n\r\n\r\n    InputBase.call(this, options.width || 150, options.height || 20, options.tabIndex || 0, options.tabGroup || 0);\r\n    this._dirtyText = true;\r\n    this.maxLength = options.maxLength || 0;\r\n    this._value = this._lastValue = options.value || \"\";\r\n\r\n    if (this.maxLength) this._value = this._value.slice(0, this.maxLength);\r\n\r\n    var self = this;\r\n    var chars = [];\r\n    var multiLine = options.multiLine !== undefined ? options.multiLine : false;\r\n    var color = options.style && options.style.fill ? options.style.fill : \"#000000\";\r\n    var selectedColor = options.selectedColor || \"#ffffff\";\r\n    var selectedBackgroundColor = options.selectedBackgroundColor || \"#318cfa\";\r\n    var tempText = new PIXI.Text(\"1\", options.style);\r\n    var textHeight = tempText.height;\r\n    var lineHeight = options.lineHeight || textHeight || self._height;\r\n    tempText.destroy();\r\n\r\n\r\n    //set cursor\r\n    //this.container.cursor = \"text\";\r\n\r\n    //selection graphics\r\n    var selection = self.selection = new PIXI.Graphics();\r\n    selection.visible = false;\r\n    selection._startIndex = 0;\r\n    selection._endIndex = 0;\r\n\r\n    //caret graphics\r\n    var caret = self.caret = new PIXI.Graphics();\r\n    caret.visible = false;\r\n    caret._index = 0;\r\n    caret.lineStyle(options.caretWidth || 1, \"#ffffff\", 1);\r\n    caret.moveTo(0, 0);\r\n    caret.lineTo(0, textHeight);\r\n\r\n\r\n    //insert bg\r\n    if (options.background) {\r\n        this.background = options.background;\r\n        this.background.width = \"100%\";\r\n        this.background.height = \"100%\";\r\n        this.addChild(this.background);\r\n    }\r\n\r\n    //var padding\r\n    var paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding !== undefined ? options.padding : 3;\r\n    var paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding !== undefined ? options.padding : 3;\r\n    var paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding !== undefined ? options.padding : 3;\r\n    var paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding !== undefined ? options.padding : 3;\r\n\r\n    //insert text container (scrolling container)\r\n    var textContainer = this.textContainer = new PIXI.UI.ScrollingContainer({\r\n        scrollX: !multiLine,\r\n        scrollY: multiLine,\r\n        dragScrolling: multiLine,\r\n        expandMask: 2,\r\n        softness: 0.2,\r\n        overflowX: 40,\r\n        overflowY: 40\r\n    });\r\n    textContainer.anchorTop = paddingTop;\r\n    textContainer.anchorBottom = paddingBottom;\r\n    textContainer.anchorLeft = paddingLeft;\r\n    textContainer.anchorRight = paddingRight;\r\n    this.addChild(textContainer);\r\n\r\n    if (multiLine) {\r\n        this._useNext = this._usePrev = false;\r\n        textContainer.dragRestrictAxis = \"y\";\r\n        textContainer.dragThreshold = 5;\r\n        this.dragRestrictAxis = \"x\";\r\n        this.dragThreshold = 5;\r\n\r\n    }\r\n\r\n\r\n    var innerContainer = textContainer.innerContainer;\r\n    innerContainer.cacheAsBitmap = true;\r\n    //textContainer.container.addChild(innerContainer);\r\n\r\n\r\n    this.update = function () {\r\n        if (this._width != this._lastWidth) {\r\n            this._lastWidth = this._width;\r\n            if (multiLine) {\r\n                updateText();\r\n                if (caret.visible) self.setCaretIndex(caret._index);\r\n                if (hasSelection) updateSelectionGraphics();\r\n            }\r\n\r\n        }\r\n\r\n        //update text        \r\n        if (this._dirtyText) {\r\n            updateText();\r\n            this._dirtyText = false;\r\n        }\r\n    };\r\n\r\n    //selection Vars\r\n    var caretInterval, //interval for flash\r\n        si, //startIndex\r\n        sie, //startIndexEnd\r\n        ei, //endIndex\r\n        eie, //endIndexEnd\r\n        sp = new PIXI.Point(), //startposition\r\n        ds = new PIXI.Point(), //dragStart\r\n        de = new PIXI.Point(), //dragend\r\n        rdd = false, //Reverse drag direction\r\n        vrdd = false, //vertical Reverse drag direction\r\n        selectionStart = -1,\r\n        selectionEnd = -1,\r\n        hasSelection = false,\r\n        t = performance.now(), //timestamp\r\n        cc = 0,  //click counter\r\n        textLengthPX = 0,\r\n        textHeightPX = 0,\r\n        lineIndexMax = 0,\r\n        ctrlDown = false,\r\n        shiftDown = false,\r\n        shiftKey = 16,\r\n        ctrlKey = 17,\r\n        cmdKey = 91;\r\n\r\n\r\n\r\n    var updateText = function () {\r\n        textLengthPX = 0;\r\n        textHeightPX = 0;\r\n        lineIndexMax = 0;\r\n\r\n        var lineIndex = 0,\r\n            length = self._value.length,\r\n            x = 0,\r\n            y = (lineHeight - textHeight) * 0.5,\r\n            i = 0;\r\n\r\n        //destroy excess chars\r\n        if (chars.length > length) {\r\n            for (i = chars.length - 1; i >= length; i--) {\r\n                innerContainer.removeChild(chars[i]);\r\n                chars[i].destroy();\r\n            }\r\n            chars.splice(length, chars.length - length);\r\n        }\r\n\r\n        //update and add chars\r\n        var whitespace = false;\r\n        var newline = false;\r\n        var wordIndex = 0;\r\n        var lastWordIndex = -1;\r\n        var wrap = false;\r\n        for (i = 0; i < self._value.length; i++) {\r\n            if (whitespace || newline) {\r\n                lastWordIndex = i;\r\n                wordIndex++;\r\n            }\r\n\r\n            var c = self._value[i];\r\n            whitespace = c === \" \";\r\n            newline = c === \"\\n\";\r\n\r\n\r\n            if (newline) { //newline \"hack\". webgl render errors if \\n is passed to text\r\n                c = \"\";\r\n            }\r\n\r\n\r\n\r\n            var charText = chars[i];\r\n            if (!charText) {\r\n                charText = new PIXI.Text(c, options.style);\r\n                innerContainer.addChild(charText);\r\n                chars.push(charText);\r\n            }\r\n            else {\r\n                charText.text = c;\r\n            }\r\n\r\n            charText.scale.x = newline ? 0 : 1;\r\n            charText.wrapped = wrap;\r\n            wrap = false;\r\n\r\n            if (newline || (multiLine && x + charText.width >= self._width - paddingLeft - paddingRight)) {\r\n                lineIndex++;\r\n                x = 0;\r\n                y += lineHeight;\r\n\r\n                if (lastWordIndex != -1 && !newline) {\r\n                    i = lastWordIndex - 1;\r\n                    lastWordIndex = -1;\r\n                    wrap = true;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n\r\n            charText.lineIndex = lineIndex;\r\n            charText.x = x;\r\n            charText.y = y;\r\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\r\n            x += charText.width;\r\n\r\n\r\n            if (x > textLengthPX)\r\n                textLengthPX = x;\r\n            if (y > textHeightPX)\r\n                textHeightPX = y;\r\n        }\r\n\r\n        lineIndexMax = lineIndex;\r\n\r\n        //put caret on top\r\n        innerContainer.addChild(caret);\r\n\r\n        //recache\r\n        if (innerContainer.cacheAsBitmap) {\r\n            innerContainer.cacheAsBitmap = false;\r\n            innerContainer.cacheAsBitmap = true;\r\n        }\r\n\r\n        textContainer.update();\r\n\r\n    };\r\n\r\n    var updateClosestIndex = function (point, start) {\r\n        var currentDistX = 99999;\r\n        var currentClosest;\r\n        var currentIndex = -1;\r\n        var atEnd = false;\r\n\r\n        var closestLineIndex = 0;\r\n        if (lineIndexMax > 0)\r\n            closestLineIndex = Math.max(0, Math.min(lineIndexMax, Math.floor(point.y / lineHeight)));\r\n\r\n\r\n\r\n\r\n\r\n        for (var i = 0; i < chars.length; i++) {\r\n            var char = chars[i];\r\n            if (char.lineIndex != closestLineIndex) continue;\r\n\r\n            var distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\r\n            if (distX < currentDistX) {\r\n                currentDistX = distX;\r\n                currentClosest = char;\r\n                currentIndex = i;\r\n                atEnd = point.x > char.x + (char.width * 0.5);\r\n            }\r\n        }\r\n\r\n\r\n        if (start) {\r\n            si = currentIndex;\r\n            sie = atEnd;\r\n        }\r\n        else {\r\n            ei = currentIndex;\r\n            eie = atEnd;\r\n        }\r\n    };\r\n\r\n    var deleteSelection = function () {\r\n        if (hasSelection) {\r\n            self.value = self.value.slice(0, selectionStart) + self.value.slice(selectionEnd + 1);\r\n            self.setCaretIndex(selectionStart);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var updateSelectionColors = function () {\r\n        //Color charecters\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (i >= selectionStart && i <= selectionEnd)\r\n                chars[i].style.fill = selectedColor;\r\n            else\r\n                chars[i].style.fill = color;\r\n        }\r\n    };\r\n\r\n    var _sp = new PIXI.Point();\r\n    var scrollToPosition = function (pos) {\r\n        _sp.copy(pos);\r\n        if (multiLine && _sp.y >= lineHeight)\r\n            _sp.y += lineHeight;\r\n        textContainer.focusPosition(_sp);\r\n    };\r\n\r\n    var resetScrollPosition = function () {\r\n        _sp.set(0, 0);\r\n        textContainer.focusPosition(_sp);\r\n    };\r\n\r\n    //caret\r\n    var hideCaret = function () {\r\n        caret.visible = false;\r\n        clearInterval(caretInterval);\r\n    };\r\n\r\n    var showCaret = function () {\r\n        self.clearSelection();\r\n        clearInterval(caretInterval);\r\n        caret.alpha = 1;\r\n        caret.visible = true;\r\n        caretInterval = setInterval(function () {\r\n            caret.alpha = caret.alpha === 0 ? 1 : 0;\r\n        }, 500);\r\n\r\n    };\r\n\r\n    var insertTextAtCaret = function (c) {\r\n        if (hasSelection)\r\n            deleteSelection();\r\n        if (!self.maxLength || chars.length < self.maxLength) {\r\n\r\n            if (caret._atEnd) {\r\n                self.value += c;\r\n                self.setCaretIndex(chars.length);\r\n            }\r\n            else {\r\n                var index = Math.min(chars.length - 1, caret._index);\r\n                self.value = self.value.slice(0, index) + c + self.value.slice(index);\r\n                self.setCaretIndex(index + c.length);\r\n            }\r\n        }\r\n    };\r\n\r\n    //events\r\n    var keyDownEvent = function (e) {\r\n        if (e.which === ctrlKey || e.which === cmdKey) ctrlDown = true;\r\n        if (e.which === shiftKey) shiftDown = true;\r\n\r\n        if (e.which === 13) { //enter\r\n            insertTextAtCaret('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (ctrlDown) {\r\n\r\n            //ctrl + ?\r\n            if (e.which === 65) { //ctrl + a\r\n                self.select();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            else if (e.which === 90) { //ctrl + z (undo)\r\n                if (self.value != self._lastValue)\r\n                    self.value = self._lastValue;\r\n                self.setCaretIndex(self._lastValue.length + 1);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (e.which === 8) {\r\n            //backspace\r\n            if (!deleteSelection()) {\r\n                if (caret._index > 0 || (chars.length === 1 && caret._atEnd)) {\r\n                    if (caret._atEnd) {\r\n                        self.value = self.value.slice(0, chars.length - 1);\r\n                        self.setCaretIndex(caret._index);\r\n                    }\r\n                    else {\r\n                        self.value = self.value.slice(0, caret._index - 1) + self.value.slice(caret._index);\r\n                        self.setCaretIndex(caret._index - 1);\r\n                    }\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (e.which === 46) {\r\n            //delete\r\n            if (!deleteSelection()) {\r\n                if (!caret._atEnd) {\r\n                    self.value = self.value.slice(0, caret._index) + self.value.slice(caret._index + 1);\r\n                    self.setCaretIndex(caret._index);\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        else if (e.which === 37 || e.which === 39) {\r\n            rdd = e.which === 37;\r\n            if (shiftDown) {\r\n                if (hasSelection) {\r\n                    var caretAtStart = selectionStart === caret._index;\r\n                    if (caretAtStart) {\r\n                        if (selectionStart === selectionEnd && rdd === caret._forward) {\r\n                            self.setCaretIndex(caret._forward ? caret._index : caret._index + 1);\r\n                        }\r\n                        else {\r\n                            var startindex = rdd ? caret._index - 1 : caret._index + 1;\r\n                            self.selectRange(startindex, selectionEnd);\r\n                            caret._index = Math.min(chars.length - 1, Math.max(0, startindex));\r\n                        }\r\n                    }\r\n                    else {\r\n                        var endIndex = rdd ? caret._index - 1 : caret._index + 1;\r\n                        self.selectRange(selectionStart, endIndex);\r\n                        caret._index = Math.min(chars.length - 1, Math.max(0, endIndex));\r\n                    }\r\n                }\r\n                else {\r\n                    var _i = caret._atEnd ? caret._index + 1 : caret._index;\r\n                    var selectIndex = rdd ? _i - 1 : _i;\r\n                    self.selectRange(selectIndex, selectIndex);\r\n                    caret._index = selectIndex;\r\n                    caret._forward = !rdd;\r\n                }\r\n            }\r\n            else {\r\n                //Navigation\r\n                if (hasSelection)\r\n                    self.setCaretIndex(rdd ? selectionStart : selectionEnd + 1);\r\n                else\r\n                    self.setCaretIndex(caret._index + (rdd ? caret._atEnd ? 0 : -1 : 1));\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n\r\n        }\r\n        else if (multiLine && (e.which === 38 || e.which === 40)) {\r\n            vrdd = e.which === 38;\r\n            if (shiftDown) {\r\n                if (hasSelection) {\r\n                    de.y = Math.max(0, Math.min(textHeightPX, de.y + (vrdd ? -lineHeight : lineHeight)));\r\n                    updateClosestIndex(de, false);\r\n                    console.log(si, ei);\r\n                    if (Math.abs(si - ei) <= 1) {\r\n                        console.log(si, ei);\r\n                        self.setCaretIndex(sie ? si + 1 : si);\r\n                    } else {\r\n                        caret._index = (eie ? ei + 1 : ei) + (caret._down ? -1 : 0);\r\n                        self.selectRange(caret._down ? si : si - 1, caret._index);\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    si = caret._index;\r\n                    sie = false;\r\n                    de.copy(caret);\r\n                    de.y = Math.max(0, Math.min(textHeightPX, de.y + (vrdd ? -lineHeight : lineHeight)));\r\n                    updateClosestIndex(de, false);\r\n                    caret._index = (eie ? ei + 1 : ei) - (vrdd ? 0 : 1);\r\n                    self.selectRange(vrdd ? si - 1 : si, caret._index);\r\n                    caret._down = !vrdd;\r\n                }\r\n            }\r\n            else {\r\n                if (hasSelection) {\r\n                    self.setCaretIndex(vrdd ? selectionStart : selectionEnd + 1);\r\n                }\r\n                else {\r\n                    ds.copy(caret);\r\n                    ds.y += vrdd ? -lineHeight : lineHeight;\r\n                    ds.x += 1;\r\n                    updateClosestIndex(ds, true);\r\n                    self.setCaretIndex(sie ? si + 1 : si);\r\n                }\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n    };\r\n\r\n    var keyUpEvent = function (e) {\r\n        if (e.which == ctrlKey || e.which == cmdKey) ctrlDown = false;\r\n        if (e.which === shiftKey) shiftDown = false;\r\n    };\r\n\r\n    var copyEvent = function (e) {\r\n        if (hasSelection) {\r\n            var clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData('Text', self.value.slice(selectionStart, selectionEnd + 1));\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var cutEvent = function (e) {\r\n        if (hasSelection) {\r\n            copyEvent(e);\r\n            deleteSelection();\r\n        }\r\n        e.preventDefault();\r\n    };\r\n\r\n    var pasteEvent = function (e) {\r\n        var clipboardData = e.clipboardData || window.clipboardData;\r\n        insertTextAtCaret(clipboardData.getData('Text'));\r\n        e.preventDefault();\r\n    };\r\n\r\n    var inputEvent = function (e) {\r\n        insertTextAtCaret(e.data);\r\n        e.preventDefault();\r\n    };\r\n\r\n    var inputBlurEvent = function (e) {\r\n        self.blur();\r\n    };\r\n\r\n    var event = new DragEvent(this);\r\n\r\n    event.onPress = function (e, mouseDown) {\r\n\r\n        if (mouseDown) {\r\n            var timeSinceLast = performance.now() - t;\r\n            t = performance.now();\r\n            if (timeSinceLast < 250) {\r\n                cc++;\r\n                if (cc > 1)\r\n                    this.select();\r\n                else {\r\n                    innerContainer.toLocal(sp, undefined, ds, true);\r\n                    updateClosestIndex(ds, true);\r\n                    var c = chars[si];\r\n                    if (c) {\r\n                        if (c.wordIndex != -1)\r\n                            this.selectWord(c.wordIndex);\r\n                        else\r\n                            this.selectRange(si, si);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                cc = 0;\r\n                sp.copy(e.data.global);\r\n                innerContainer.toLocal(sp, undefined, ds, true);\r\n                if (chars.length) {\r\n                    updateClosestIndex(ds, true);\r\n                    self.setCaretIndex(sie ? si + 1 : si);\r\n                }\r\n            }\r\n        }\r\n        e.data.originalEvent.preventDefault();\r\n    };\r\n\r\n    event.onDragMove = function (e, offset) {\r\n        if (!chars.length || !this._focused) return;\r\n\r\n        de.x = sp.x + offset.x;\r\n        de.y = sp.y + offset.y;\r\n        innerContainer.toLocal(de, undefined, de, true);\r\n        updateClosestIndex(de, false);\r\n\r\n        if (si < ei) {\r\n            self.selectRange(sie ? si + 1 : si, eie ? ei : ei - 1);\r\n            caret._index = eie ? ei : ei - 1;\r\n        }\r\n        else if (si > ei) {\r\n            self.selectRange(ei, sie ? si : si - 1);\r\n            caret._index = ei;\r\n        }\r\n        else {\r\n            if (sie === eie) {\r\n                self.setCaretIndex(sie ? si + 1 : si);\r\n            }\r\n            else {\r\n                self.selectRange(si, ei);\r\n                caret._index = ei;\r\n            }\r\n        }\r\n\r\n        caret._forward = si <= ei;\r\n        caret._down = offset.y > 0;\r\n\r\n        scrollToPosition(de);\r\n    };\r\n\r\n\r\n\r\n\r\n    //public methods\r\n    this.focus = function () {\r\n        if (!this._focused) {\r\n            InputBase.prototype.focus.call(this);\r\n\r\n            var l = this.container.worldTransform.tx + \"px\";\r\n            var t = this.container.worldTransform.ty + \"px\";\r\n            var h = this.container.height + \"px\";\r\n            var w = this.container.width + \"px\";\r\n\r\n            _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:\" + l + \"; top:\" + t + \"; height:\" + h + \"; width:\" + w + \";\");\r\n            _pui_tempInput.value = \"\";\r\n            _pui_tempInput.focus();\r\n            _pui_tempInput.setAttribute(\"style\", \"position:fixed; left:-10px; top:-10px; width:0px; height: 0px;\");\r\n\r\n            innerContainer.cacheAsBitmap = false;\r\n            _pui_tempInput.addEventListener(\"blur\", inputBlurEvent, false);\r\n            document.addEventListener(\"keydown\", keyDownEvent, false);\r\n            document.addEventListener(\"keyup\", keyUpEvent, false);\r\n            document.addEventListener('paste', pasteEvent, false);\r\n            document.addEventListener('copy', copyEvent, false);\r\n            document.addEventListener('cut', cutEvent, false);\r\n            _pui_tempInput.addEventListener('textInput', inputEvent, false);\r\n\r\n            setTimeout(function () {\r\n                if (!caret.visible && !self.selection.visible && !multiLine)\r\n                    self.setCaretIndex(chars.length);\r\n            }, 0);\r\n\r\n        }\r\n\r\n    };\r\n\r\n    this.blur = function () {\r\n        if (this._focused) {\r\n            InputBase.prototype.blur.call(this);\r\n            ctrlDown = false;\r\n            shiftDown = false;\r\n            hideCaret();\r\n            this.clearSelection();\r\n            if (chars.length > 1) innerContainer.cacheAsBitmap = true;\r\n            _pui_tempInput.removeEventListener(\"blur\", inputBlurEvent);\r\n            document.removeEventListener(\"keydown\", keyDownEvent);\r\n            document.removeEventListener(\"keyup\", keyUpEvent);\r\n            document.removeEventListener('paste', pasteEvent);\r\n            document.removeEventListener('copy', copyEvent);\r\n            document.removeEventListener('cut', cutEvent);\r\n            _pui_tempInput.removeEventListener('textInput', inputEvent);\r\n            _pui_tempInput.blur();\r\n\r\n        }\r\n\r\n        if (!multiLine)\r\n            resetScrollPosition();\r\n    };\r\n\r\n    this.setCaretIndex = function (index) {\r\n        caret._atEnd = index >= chars.length;\r\n        caret._index = Math.max(0, Math.min(chars.length - 1, index));\r\n\r\n        if (chars.length && index > 0) {\r\n\r\n            var i = Math.max(0, Math.min(index, chars.length - 1));\r\n            var c = chars[i];\r\n\r\n            if (c && c.wrapped) {\r\n                caret.x = c.x;\r\n                caret.y = c.y;\r\n            }\r\n            else {\r\n                i = Math.max(0, Math.min(index - 1, chars.length - 1));\r\n                c = chars[i];\r\n                caret.x = chars[i].x + chars[i].width;\r\n                caret.y = (chars[i].lineIndex * lineHeight) + (lineHeight - textHeight) * 0.5;\r\n            }\r\n        }\r\n        else {\r\n            caret.x = 0;\r\n            caret.y = (lineHeight - textHeight) * 0.5;\r\n        }\r\n\r\n        scrollToPosition(caret);\r\n        showCaret();\r\n\r\n    };\r\n\r\n    this.select = function () {\r\n        this.selectRange(0, chars.length - 1);\r\n    };\r\n\r\n    this.selectWord = function (wordIndex) {\r\n        var startIndex = chars.length;\r\n        var endIndex = 0;\r\n        for (var i = 0; i < chars.length; i++) {\r\n            if (chars[i].wordIndex !== wordIndex) continue;\r\n            if (i < startIndex)\r\n                startIndex = i;\r\n            if (i > endIndex)\r\n                endIndex = i;\r\n        }\r\n\r\n        this.selectRange(startIndex, endIndex);\r\n    };\r\n\r\n    var drawSelectionRect = function (x, y, w, h) {\r\n        self.selection.beginFill(\"0x\" + selectedBackgroundColor.slice(1), 1);\r\n        self.selection.moveTo(x, y);\r\n        self.selection.lineTo(x + w, y);\r\n        self.selection.lineTo(x + w, y + h);\r\n        self.selection.lineTo(x, y + h);\r\n        self.selection.endFill();\r\n    };\r\n\r\n    var updateSelectionGraphics = function () {\r\n        var c1 = chars[selectionStart];\r\n        if (c1 !== undefined) {\r\n            var cx = c1.x,\r\n                cy = c1.y,\r\n                w = 0,\r\n                h = textHeight,\r\n                cl = c1.lineIndex;\r\n\r\n            self.selection.clear();\r\n            for (var i = selectionStart; i <= selectionEnd; i++) {\r\n                var c = chars[i];\r\n                if (c.lineIndex != cl) {\r\n                    drawSelectionRect(cx, cy, w, h);\r\n                    cx = c.x;\r\n                    cy = c.y;\r\n                    cl = c.lineIndex;\r\n                    w = 0;\r\n                }\r\n                w += c.width;\r\n            }\r\n            drawSelectionRect(cx, cy, w, h);\r\n            innerContainer.addChildAt(self.selection, 0);\r\n        }\r\n    };\r\n\r\n    this.selectRange = function (startIndex, endIndex) {\r\n        if (startIndex > -1 && endIndex > -1) {\r\n            var start = Math.min(startIndex, endIndex, chars.length - 1);\r\n            var end = Math.min(Math.max(startIndex, endIndex), chars.length - 1);\r\n            if (start != selectionStart || end != selectionEnd) {\r\n                hasSelection = true;\r\n                this.selection.visible = true;\r\n                selectionStart = start;\r\n                selectionEnd = end;\r\n                hideCaret();\r\n                updateSelectionGraphics();\r\n                updateSelectionColors();\r\n            }\r\n            this.focus();\r\n        }\r\n        else {\r\n            self.clearSelection();\r\n        }\r\n    };\r\n\r\n    this.clearSelection = function () {\r\n        if (hasSelection) {\r\n            //remove color\r\n            hasSelection = false;\r\n            this.selection.visible = false;\r\n            selectionStart = -1;\r\n            selectionEnd = -1;\r\n            updateSelectionColors();\r\n        }\r\n    };\r\n}\r\n\r\nTextInput.prototype = Object.create(InputBase.prototype);\r\nTextInput.prototype.constructor = TextInput;\r\nmodule.exports = TextInput;\r\n\r\nObject.defineProperties(TextInput.prototype, {\r\n    value: {\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        set: function (val) {\r\n            if (this.maxLength)\r\n                val = val.slice(0, this.maxLength);\r\n\r\n            if (this._value != val) {\r\n                this._lastValue = this._value;\r\n                this._value = val;\r\n                this._dirtyText = true;\r\n                this.update();\r\n                this.emit(\"change\");\r\n\r\n            }\r\n        }\r\n    },\r\n    text: {\r\n        get: function () {\r\n            return this.value;\r\n        },\r\n        set: function (val) {\r\n            this.value = val;\r\n        }\r\n    }\r\n});\r\n\r\n\r\n/*\r\n * Features:\r\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\r\n * \r\n * Methods:\r\n * blur()\r\n * focus()\r\n * select() - selects all text\r\n * selectRange(startIndex, endIndex)\r\n * clearSelection() \r\n * setCaretIndex(index) moves caret to index\r\n * \r\n * \r\n * Events:\r\n * \"change\"\r\n * \"blur\"\r\n * \"blur\"\r\n * \"focus\"\r\n * \"focusChanged\" param: [bool]focus\r\n *  \r\n * \r\n */","var Tween = require('./Tween');\r\n\r\nfunction Ticker(autoStart) {\r\n    PIXI.utils.EventEmitter.call(this);\r\n    this._disabled = true;\r\n    this._now = 0;\r\n\r\n    this.DeltaTime = 0;\r\n    this.Time = performance.now();\r\n    this.Ms = 0;\r\n    if (autoStart) {\r\n        this.disabled = false;\r\n    }\r\n    Ticker.shared = this;\r\n}\r\n\r\nTicker.prototype = Object.create(PIXI.utils.EventEmitter.prototype);\r\nTicker.prototype.constructor = Ticker;\r\n\r\nmodule.exports = Ticker;\r\n\r\n\r\n\r\nObject.defineProperties(Ticker.prototype, {\r\n    disabled: {\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        set: function (val) {\r\n            if (!this._disabled) {\r\n                this._disabled = true;\r\n            }\r\n            else {\r\n                this._disabled = false;\r\n                Ticker.shared = this;\r\n                this.update(performance.now(), true);\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\n\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nTicker.prototype.update = function (time) {\r\n    Ticker.shared._now = time;\r\n    Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\r\n    Ticker.shared.Time = Ticker.shared._now;\r\n    Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\r\n    Ticker.shared.emit(\"update\", Ticker.shared.DeltaTime);\r\n    Tween._update(Ticker.shared.DeltaTime);\r\n    if (!Ticker.shared._disabled)\r\n        requestAnimationFrame(Ticker.shared.update);\r\n};\r\n\r\n\r\n\r\n\r\nTicker.on = function (event, fn, context) {\r\n    Ticker.prototype.on.apply(this.shared, arguments);\r\n};\r\n\r\nTicker.once = function (event, fn, context) {\r\n    Ticker.prototype.once.apply(this.shared, arguments);\r\n};\r\n\r\nTicker.removeListener = function (event, fn) {\r\n    Ticker.prototype.removeListener.apply(this.shared, arguments);\r\n};\r\n\r\n\r\nTicker.shared = new Ticker(true);","var UIBase = require('./UIBase');\r\n\r\n/**\r\n * An UI sprite object\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @memberof PIXI.UI\r\n * @param Texture {PIXI.Texture} The texture for the sprite\r\n * @param [Width=Texture.width] {number} Width of tilingsprite\r\n * @param [Height=Texture.height] {number} Height of tiling sprite\r\n */\r\nfunction TilingSprite(t, width, height) {\r\n    this.sprite = new PIXI.extras.TilingSprite(t);\r\n    UIBase.call(this, width || this.sprite.width, height || this.sprite.height);\r\n    this.container.addChild(this.sprite);\r\n}\r\n\r\nTilingSprite.prototype = Object.create(UIBase.prototype);\r\nTilingSprite.prototype.constructor = TilingSprite;\r\nmodule.exports = TilingSprite;\r\n\r\n/**\r\n * Updates the text\r\n *\r\n * @private\r\n */\r\nTilingSprite.prototype.update = function () {\r\n    if (this.tint !== null)\r\n        this.sprite.tint = this.tint;\r\n\r\n    if (this.blendMode !== null)\r\n        this.sprite.blendMode = this.blendMode;\r\n\r\n    this.sprite.width = this._width;\r\n    this.sprite.height = this._height;\r\n};\r\n\r\nObject.defineProperties(TilingSprite.prototype, {\r\n    tilePosition: {\r\n        get: function () {\r\n            return this.sprite.tilePosition;\r\n        },\r\n        set: function (val) {\r\n            this.sprite.tilePosition = val;\r\n        }\r\n    },\r\n    tileScale: {\r\n        get: function () {\r\n            return this.sprite.tileScale;\r\n        },\r\n        set: function (val) {\r\n            this.sprite.tileScale = val;\r\n        }\r\n    }\r\n});","var MathHelper = require('./MathHelper');\r\nvar Ease = require('./Ease/Ease');\r\nvar _tweenItemCache = [];\r\nvar _tweenObjects = {};\r\nvar _activeTweenObjects = {};\r\nvar _currentId = 0;\r\n\r\nvar TweenObject = function (object) {\r\n    this.object = object;\r\n    this.tweens = {};\r\n    this.active = false;\r\n};\r\n\r\nvar TweenItem = function () {\r\n    this._ready = false;\r\n    this.parent = null;\r\n    this.obj = null;\r\n    this.key = \"\";\r\n    this.from = 0;\r\n    this.to = 0;\r\n    this.time = 0;\r\n    this.ease = 0;\r\n    this.currentTime = 0;\r\n    this.t = 0;\r\n};\r\n\r\nvar widthKeys = [\"width\", \"minWidth\", \"maxWidth\", \"anchorLeft\", \"anchorRight\", \"left\", \"right\", \"x\"];\r\nvar heightKeys = [\"height\", \"minHeight\", \"maxHeight\", \"anchorTop\", \"anchorBottom\", \"top\", \"bottom\", \"y\"];\r\n\r\n\r\nfunction getFromValue(from, to, obj, key) {\r\n    //both number\r\n    if (!isNaN(from) && !isNaN(to))\r\n        return from;\r\n\r\n    //both percentage\r\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\r\n        return parseFloat(from.replace('%', ''));\r\n\r\n    //convert from to px\r\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1) {\r\n        if (widthKeys.indexOf(key) !== -1)\r\n            return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01);\r\n        else if (heightKeys.indexOf(key) !== -1)\r\n            return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01);\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    //convert from to percentage\r\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1) {\r\n        if (widthKeys.indexOf(key) !== -1)\r\n            return from / obj.parent._width * 100;\r\n        else if (heightKeys.indexOf(key) !== -1)\r\n            return from / obj.parent._height * 100;\r\n        else\r\n            return 0;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getSurfix(to) {\r\n    if (isNaN(to) && to.indexOf('%') !== -1)\r\n        return \"%\";\r\n}\r\n\r\nfunction getToValue(to) {\r\n    if (!isNaN(to))\r\n        return to;\r\n    if (isNaN(to) && to.indexOf('%') !== -1)\r\n        return parseFloat(to.replace('%', ''));\r\n}\r\n\r\nTweenItem.prototype.set = function (obj, key, from, to, time, ease) {\r\n    this.parent = obj;\r\n    this.obj = obj.object;\r\n    this.key = key;\r\n    this.surfix = getSurfix(to);\r\n    this.to = getToValue(to);\r\n    this.from = getFromValue(from, to, this.obj, key);\r\n    this.time = time;\r\n    this.currentTime = 0;\r\n    this.ease = ease;\r\n    this._ready = false;\r\n\r\n    if (!this.parent.active)\r\n        _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\r\n};\r\n\r\nTweenItem.prototype.update = function (delta) {\r\n    this.currentTime += delta;\r\n    this.t = Math.min(this.currentTime, this.time) / this.time;\r\n    if (this.ease)\r\n        this.t = this.ease.getPosition(this.t);\r\n\r\n    var val = MathHelper.Lerp(this.from, this.to, this.t);\r\n    this.obj[this.key] = this.surfix ? val + this.surfix : val;\r\n\r\n    if (this.currentTime >= this.time) {\r\n        this._ready = true;\r\n        delete this.parent.tweens[this.key];\r\n        if (!Object.keys(this.parent.tweens).length) {\r\n            this.parent.active = false;\r\n            delete _activeTweenObjects[this.obj._tweenObjectId];\r\n        }\r\n    }\r\n};\r\n\r\n\r\nfunction getObject(obj) {\r\n    if (!obj._tweenObjectId) {\r\n        obj._tweenObjectId = _currentId;\r\n        _currentId++;\r\n    }\r\n    var object = _tweenObjects[obj._tweenObjectId];\r\n    if (!object) {\r\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\r\n    }\r\n    return object;\r\n}\r\n\r\nfunction getTweenItem() {\r\n    for (var i = 0; i < _tweenItemCache.length; i++) {\r\n        if (_tweenItemCache[i]._ready)\r\n            return _tweenItemCache[i];\r\n    }\r\n\r\n    var tween = new TweenItem();\r\n    _tweenItemCache.push(tween);\r\n    return tween;\r\n}\r\n\r\nvar Tween = {\r\n    to: function (obj, time, params, ease) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (params[key] == obj[key] || typeof obj[key] === \"undefined\") continue;\r\n            if (!object.tweens[key])\r\n                object.tweens[key] = getTweenItem();\r\n            object.tweens[key].set(object, key, obj[key], params[key], time, ease);\r\n\r\n        }\r\n    },\r\n    from: function (obj, time, params, ease) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (params[key] == obj[key] || typeof obj[key] === \"undefined\") continue;\r\n            if (!object.tweens[key])\r\n                object.tweens[key] = getTweenItem();\r\n            object.tweens[key].set(object, key, params[key], obj[key], time, ease);\r\n        }\r\n    },\r\n    fromTo: function (obj, time, paramsFrom, paramsTo, ease) {\r\n        var object = getObject(obj);\r\n        for (var key in paramsFrom) {\r\n            if (paramsFrom[key] == paramsTo[key] || typeof obj[key] === \"undefined\" || typeof paramsTo[key] === \"undefined\") continue;\r\n            if (!object.tweens[key]) {\r\n                object.tweens[key] = getTweenItem();\r\n            }\r\n            object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\r\n        }\r\n    },\r\n    set: function (obj, params) {\r\n        var object = getObject(obj);\r\n        for (var key in params) {\r\n            if (params[key] == obj[key] || typeof obj[key] === \"undefined\") continue;\r\n            if (object.tweens[key]) delete object.tweens[key];\r\n            obj[key] = params[key];\r\n        }\r\n    },\r\n    _update: function (delta) {\r\n        for (var id in _activeTweenObjects) {\r\n            var object = _activeTweenObjects[id];\r\n            for (var key in object.tweens) {\r\n                object.tweens[key].update(delta);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = Tween;","var UI = {\r\n    Stage: require('./Stage'),\r\n    Container: require('./Container'),\r\n    ScrollingContainer: require('./ScrollingContainer'),\r\n    SortableList: require('./SortableList'),\r\n    Sprite: require('./Sprite'),\r\n    TilingSprite: require('./TilingSprite'),\r\n    SliceSprite: require('./SliceSprite'),\r\n    Slider: require('./Slider'),\r\n    ScrollBar: require('./ScrollBar'),\r\n    Text: require('./Text'),\r\n    DynamicText: require('./DynamicText/DynamicText'),\r\n    DynamicTextStyle: require('./DynamicText/DynamicTextStyle'),\r\n    TextInput: require('./TextInput'),\r\n    Button: require('./Button'),\r\n    CheckBox: require('./CheckBox'),\r\n    MathHelper: require('./MathHelper'),\r\n    Tween: require('./Tween'),\r\n    Ease: require('./Ease/Ease'),\r\n    Interaction: require('./Interaction/Interaction'),\r\n    Ticker: require('./Ticker').shared,\r\n};\r\n\r\n\r\nmodule.exports = UI;","var UISettings = require('./UISettings'),\r\n    UI = require('./UI'),\r\n    DragEvent = require('./Interaction/DragEvent'),\r\n    DragDropController = require('./Interaction/DragDropController');\r\n\r\n/**\r\n * Base class of all UIObjects\r\n *\r\n * @class\r\n * @extends PIXI.UI.UIBase\r\n * @param width {Number} Width of the UIObject\r\n * @param height {Number} Height of the UIObject\r\n */\r\nfunction UIBase(width, height) {\r\n    PIXI.utils.EventEmitter.call(this);\r\n    this.container = new PIXI.Container();\r\n    this.setting = new UISettings();\r\n    this.children = [];\r\n    this.parent = null;\r\n    this.stage = null;\r\n    this.initialized = false;\r\n    this.dragInitialized = false;\r\n    this.dropInitialized = false;\r\n    this.dirty = true;\r\n    this._oldWidth = -1;\r\n    this._oldHeight = -1;\r\n    this.pixelPerfect = true;\r\n\r\n\r\n    if (width && isNaN(width) && width.indexOf('%') != -1) {\r\n        this.setting.widthPct = parseFloat(width.replace('%', '')) * 0.01;\r\n    }\r\n    else {\r\n        this.setting.widthPct = null;\r\n    }\r\n\r\n    if (height && isNaN(height) && height.indexOf('%') != -1)\r\n        this.setting.heightPct = parseFloat(height.replace('%', '')) * 0.01;\r\n    else {\r\n        this.setting.heightPct = null;\r\n    }\r\n\r\n    this.setting.width = width || 0;\r\n    this.setting.height = height || 0;\r\n\r\n    //actual values\r\n    this._width = 0;\r\n    this._height = 0;\r\n    this._minWidth = null;\r\n    this._minHeight = null;\r\n    this._maxWidth = null;\r\n    this._maxHeight = null;\r\n    this._anchorLeft = null;\r\n    this._anchorRight = null;\r\n    this._anchorTop = null;\r\n    this._anchorBottom = null;\r\n    this._left = null;\r\n    this._right = null;\r\n    this._top = null;\r\n    this._bottom = null;\r\n\r\n    this._dragPosition = null; //used for overriding positions if tweens is playing\r\n}\r\n\r\nUIBase.prototype = Object.create(PIXI.utils.EventEmitter.prototype);\r\nUIBase.prototype.constructor = UIBase;\r\nmodule.exports = UIBase;\r\n\r\n/**\r\n * Renders the object using the WebGL renderer\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updatesettings = function (updateChildren, updateParent) {\r\n\r\n    if (!this.initialized) {\r\n        if (this.parent !== null && this.parent.stage !== null && this.parent.initialized) {\r\n            this.initialize();\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (updateParent)\r\n        this.updateParent();\r\n\r\n    this.baseupdate();\r\n    this.update();\r\n\r\n    if (updateChildren)\r\n        this.updateChildren();\r\n\r\n\r\n\r\n\r\n};\r\n\r\n/**\r\n * Update method (override from other UIObjects)\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.update = function () {\r\n};\r\n\r\n\r\n/**\r\n * Updates the parent\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateParent = function () {\r\n    if (this.parent !== null) {\r\n        if (this.parent.updatesettings) {\r\n            this.parent.updatesettings(false, true);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Updates the UIObject with all base settings\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.baseupdate = function () {\r\n    //return if parent size didnt change\r\n    if (this.parent !== null) {\r\n        var parentHeight, parentWidth;\r\n\r\n\r\n\r\n        //transform convertion (% etc)\r\n        this.dirty = true; \r\n        this._width = this.actual_width;\r\n        this._height = this.actual_height;\r\n        this._minWidth = this.actual_minWidth;\r\n        this._minHeight = this.actual_minHeight;\r\n        this._maxWidth = this.actual_maxWidth;\r\n        this._maxHeight = this.actual_maxHeight;\r\n        this._anchorLeft = this.actual_anchorLeft;\r\n        this._anchorRight = this.actual_anchorRight;\r\n        this._anchorTop = this.actual_anchorTop;\r\n        this._anchorBottom = this.actual_anchorBottom;\r\n        this._left = this.actual_left;\r\n        this._right = this.actual_right;\r\n        this._top = this.actual_top;\r\n        this._bottom = this.actual_bottom;\r\n        this._parentWidth = parentWidth = this.parent._width;\r\n        this._parentHeight = parentHeight = this.parent._height;\r\n        this.dirty = false;\r\n\r\n\r\n        if (this.horizontalAlign === null) {\r\n            //get anchors (use left right if conflict)\r\n            if (this._anchorLeft !== null && this._anchorRight === null && this._right !== null)\r\n                this._anchorRight = this._right;\r\n            else if (this._anchorLeft === null && this._anchorRight !== null && this._left !== null)\r\n                this._anchorLeft = this._left;\r\n            else if (this._anchorLeft === null && this._anchorRight === null && this._left !== null && this._right !== null) {\r\n                this._anchorLeft = this._left;\r\n                this._anchorRight = this._right;\r\n            }\r\n\r\n\r\n            var useHorizontalAnchor = this._anchorLeft !== null || this._anchorRight !== null;\r\n            var useLeftRight = !useHorizontalAnchor && (this._left !== null || this._right !== null);\r\n\r\n            if (useLeftRight) {\r\n                if (this._left !== null)\r\n                    this.container.position.x = this._left;\r\n                else if (this._right !== null)\r\n                    this.container.position.x = parentWidth - this._right;\r\n            }\r\n            else if (useHorizontalAnchor) {\r\n\r\n                if (this._anchorLeft !== null && this._anchorRight === null)\r\n                    this.container.position.x = this._anchorLeft;\r\n                else if (this._anchorLeft === null && this._anchorRight !== null)\r\n                    this.container.position.x = parentWidth - this._width - this._anchorRight;\r\n                else if (this._anchorLeft !== null && this._anchorRight !== null) {\r\n                    this.container.position.x = this._anchorLeft;\r\n                    this._width = parentWidth - this._anchorLeft - this._anchorRight;\r\n                }\r\n                this.container.position.x += this.pivotX * this._width;\r\n            }\r\n            else {\r\n                this.container.position.x = 0;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (this.verticalAlign === null) {\r\n            //get anchors (use top bottom if conflict)\r\n            if (this._anchorTop !== null && this._anchorBottom === null && this._bottom !== null)\r\n                this._anchorBottom = this._bottom;\r\n            if (this._anchorTop === null && this._anchorBottom !== null && this._top !== null)\r\n                this._anchorTop = this._top;\r\n\r\n            var useVerticalAnchor = this._anchorTop !== null || this._anchorBottom !== null;\r\n            var useTopBottom = !useVerticalAnchor && (this._top !== null || this._bottom !== null);\r\n\r\n            if (useTopBottom) {\r\n                if (this._top !== null)\r\n                    this.container.position.y = this._top;\r\n                else if (this._bottom !== null)\r\n                    this.container.position.y = parentHeight - this._bottom;\r\n            }\r\n            else if (useVerticalAnchor) {\r\n                if (this._anchorTop !== null && this._anchorBottom === null)\r\n                    this.container.position.y = this._anchorTop;\r\n                else if (this._anchorTop === null && this._anchorBottom !== null)\r\n                    this.container.position.y = parentHeight - this._height - this._anchorBottom;\r\n                else if (this._anchorTop !== null && this._anchorBottom !== null) {\r\n                    this.container.position.y = this._anchorTop;\r\n                    this._height = parentHeight - this._anchorTop - this._anchorBottom;\r\n                }\r\n                this.container.position.y += this.pivotY * this._height;\r\n            }\r\n            else {\r\n                this.container.position.y = 0;\r\n            }\r\n        }\r\n\r\n        //min/max sizes\r\n        if (this._maxWidth !== null && this._width > this._maxWidth) this._width = this._maxWidth;\r\n        if (this._width < this._minWidth) this._width = this._minWidth;\r\n\r\n        if (this._maxHeight !== null && this._height > this._maxHeight) this._height = this._maxHeight;\r\n        if (this._height < this._minHeight) this._height = this._minHeight;\r\n\r\n\r\n        //pure vertical/horizontal align\r\n        if (this.horizontalAlign !== null) {\r\n            if (this.horizontalAlign == \"center\")\r\n                this.container.position.x = parentWidth * 0.5 - this._width * 0.5;\r\n            else if (this.horizontalAlign == \"right\")\r\n                this.container.position.x = parentWidth - this._width;\r\n            else\r\n                this.container.position.x = 0;\r\n            this.container.position.x += this._width * this.pivotX;\r\n        }\r\n        if (this.verticalAlign !== null) {\r\n            if (this.verticalAlign == \"middle\")\r\n                this.container.position.y = parentHeight * 0.5 - this._height * 0.5;\r\n            else if (this.verticalAlign == \"bottom\")\r\n                this.container.position.y = parentHeight - this._height;\r\n            else\r\n                this.container.position.y = 0;\r\n            this.container.position.y += this._height * this.pivotY;\r\n        }\r\n\r\n\r\n        //Unrestricted dragging\r\n        if (this.dragging && !this.setting.dragRestricted) {\r\n            this.container.position.x = this._dragPosition.x;\r\n            this.container.position.y = this._dragPosition.y;\r\n        }\r\n\r\n\r\n        //scale\r\n        if (this.setting.scaleX !== null) this.container.scale.x = this.setting.scaleX;\r\n        if (this.setting.scaleY !== null) this.container.scale.y = this.setting.scaleY;\r\n\r\n        //pivot\r\n        if (this.setting.pivotX !== null) this.container.pivot.x = this._width * this.setting.pivotX;\r\n        if (this.setting.pivotY !== null) this.container.pivot.y = this._height * this.setting.pivotY;\r\n\r\n        if (this.setting.alpha !== null) this.container.alpha = this.setting.alpha;\r\n        if (this.setting.rotation !== null) this.container.rotation = this.setting.rotation;\r\n\r\n        //make pixel perfect\r\n        if (this.pixelPerfect) {\r\n            this._width = Math.round(this._width);\r\n            this._height = Math.round(this._height);\r\n            this.container.position.x = Math.round(this.container.position.x);\r\n            this.container.position.y = Math.round(this.container.position.y);\r\n        }\r\n\r\n\r\n\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Updates all UI Children\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.updateChildren = function () {\r\n    for (var i = 0; i < this.children.length; i++) {\r\n        this.children[i].updatesettings(true);\r\n    }\r\n};\r\n\r\nUIBase.prototype.addChild = function (UIObject) {\r\n    var argumentsLength = arguments.length;\r\n    if (argumentsLength > 1) {\r\n        for (var i = 0; i < argumentsLength; i++) {\r\n            this.addChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        if (UIObject.parent) {\r\n            UIObject.parent.removeChild(UIObject);\r\n        }\r\n\r\n        UIObject.parent = this;\r\n        this.container.addChild(UIObject.container);\r\n        this.children.push(UIObject);\r\n        this.updatesettings(true, true);\r\n    }\r\n\r\n    return UIObject;\r\n};\r\n\r\nUIBase.prototype.removeChild = function (UIObject) {\r\n    var argumentLenght = arguments.length;\r\n    if (argumentLenght > 1) {\r\n        for (var i = 0; i < argumentLenght; i++) {\r\n            this.removeChild(arguments[i]);\r\n        }\r\n    }\r\n    else {\r\n        var index = this.children.indexOf(UIObject);\r\n        if (index !== -1) {\r\n            var oldUIParent = UIObject.parent;\r\n            var oldParent = UIObject.container.parent;\r\n            UIObject.container.parent.removeChild(UIObject.container);\r\n            this.children.splice(index, 1);\r\n            UIObject.parent = null;\r\n\r\n            //oldParent._recursivePostUpdateTransform();\r\n            setTimeout(function () { //hack but cant get the transforms to update propertly otherwice?\r\n                if (oldUIParent.updatesettings)\r\n                    oldUIParent.updatesettings(true, true);\r\n            }, 0);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Initializes the object when its added to an UIStage\r\n *\r\n * @private\r\n */\r\nUIBase.prototype.initialize = function () {\r\n    this.initialized = true;\r\n    this.stage = this.parent.stage;\r\n    if (this.draggable) {\r\n        this.initDraggable();\r\n    }\r\n\r\n    if (this.droppable) {\r\n        this.initDroppable();\r\n    }\r\n};\r\n\r\nUIBase.prototype.clearDraggable = function () {\r\n    if (this.dragInitialized) {\r\n        this.dragInitialized = false;\r\n        this.drag.stopEvent();\r\n    }\r\n};\r\n\r\nUIBase.prototype.initDraggable = function () {\r\n    if (!this.dragInitialized) {\r\n        this.dragInitialized = true;\r\n        var containerStart = new PIXI.Point(),\r\n            stageOffset = new PIXI.Point(),\r\n            self = this;\r\n\r\n        this._dragPosition = new PIXI.Point();\r\n        this.drag = new DragEvent(this);\r\n        this.drag.onDragStart = function (e) {\r\n            var added = DragDropController.add(this, e);\r\n            if (!this.dragging && added) {\r\n                this.dragging = true;\r\n                this.container.interactive = false;\r\n                containerStart.copy(this.container.position);\r\n                if (this.dragContainer) {\r\n                    var c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\r\n                    if (c) {\r\n                        //_this.container._recursivePostUpdateTransform();\r\n                        stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\r\n                        c.addChild(this.container);\r\n                    }\r\n                } else {\r\n                    stageOffset.set(0);\r\n                }\r\n\r\n            }\r\n        };\r\n\r\n\r\n        this.drag.onDragMove = function (e, offset) {\r\n            if (this.dragging) {\r\n                this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\r\n                this.x = this._dragPosition.x;\r\n                this.y = this._dragPosition.y;\r\n            }\r\n        };\r\n\r\n        this.drag.onDragEnd = function (e) {\r\n            if (this.dragging) {\r\n                this.dragging = false;\r\n                //Return to container after 1ms if not picked up by a droppable\r\n                setTimeout(function () {\r\n                    self.container.interactive = true;\r\n                    var item = DragDropController.getItem(self);\r\n                    if (item) {\r\n                        var container = self.parent === self.stage ? self.stage : self.parent.container;\r\n                        container.toLocal(self.container.position, self.container.parent, self);\r\n                        if (container != self.container) {\r\n                            self.parent.addChild(self);\r\n                        }\r\n                    }\r\n                }, 1);\r\n            }\r\n\r\n        };\r\n    }\r\n};\r\n\r\nUIBase.prototype.clearDroppable = function () {\r\n    if (this.dropInitialized) {\r\n        this.dropInitialized = false;\r\n        this.container.removeListener('mouseup', this.onDrop);\r\n        this.container.removeListener('touchend', this.onDrop);\r\n    }\r\n};\r\n\r\nUIBase.prototype.initDroppable = function () {\r\n    if (!this.dropInitialized) {\r\n        this.dropInitialized = true;\r\n        var container = this.container,\r\n            self = this;\r\n\r\n        this.container.interactive = true;\r\n        this.onDrop = function (event) {\r\n            var item = DragDropController.getEventItem(event, self.dropGroup);\r\n            if (item && item.dragging) {\r\n                item.dragging = false;\r\n                item.container.interactive = true;\r\n                var parent = self.droppableReparent !== null ? self.droppableReparent : self;\r\n                parent.container.toLocal(item.container.position, item.container.parent, item);\r\n                if (parent.container != item.container.parent)\r\n                    parent.addChild(item);\r\n            }\r\n        };\r\n\r\n        container.on('mouseup', this.onDrop);\r\n        container.on('touchend', this.onDrop);\r\n    }\r\n};\r\n\r\nObject.defineProperties(UIBase.prototype, {\r\n    x: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            this.left = val;\r\n        }\r\n    },\r\n    y: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            this.top = val;\r\n        }\r\n    },\r\n    width: {\r\n        get: function () {\r\n            return this.setting.width;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.widthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.widthPct = null;\r\n            \r\n            this.setting.width = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_width: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.widthPct !== null) {\r\n                    this._width = this.parent._width * this.setting.widthPct;\r\n                }\r\n                else {\r\n                    this._width = this.setting.width;\r\n                }\r\n            }\r\n            return this._width;\r\n        }\r\n    },\r\n    height: {\r\n        get: function () {\r\n            return this.setting.height;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.heightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.heightPct = null;\r\n            \r\n            this.setting.height = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_height: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.heightPct !== null) {\r\n                    this._height = this.parent._height * this.setting.heightPct;\r\n                }\r\n                else {\r\n                    this._height = this.setting.height;\r\n                }\r\n            }\r\n            return this._height;\r\n        }\r\n    },\r\n    minWidth: {\r\n        get: function () {\r\n            return this.setting.minWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.minWidthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.minWidthPct = null;\r\n            \r\n            this.setting.minWidth = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_minWidth: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.minWidthPct !== null) {\r\n                    this._minWidth = this.parent._width * this.setting.minWidthPct;\r\n                }\r\n                else {\r\n                    this._minWidth = this.setting.minWidth;\r\n                }\r\n            }\r\n            return this._minWidth;\r\n        }\r\n    },\r\n    minHeight: {\r\n        get: function () {\r\n            return this.setting.minHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.minHeightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.minHeightPct = null;\r\n            \r\n            this.setting.minHeight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_minHeight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.minHeightPct !== null) {\r\n                    this._minHeight = this.parent._height * this.setting.minHeightPct;\r\n                }\r\n                else {\r\n                    this._minHeight = this.setting.minHeight;\r\n                }\r\n            }\r\n            return this._minHeight;\r\n        }\r\n    },\r\n    maxWidth: {\r\n        get: function () {\r\n            return this.setting.maxWidth;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.maxWidthPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.maxWidthPct = null;\r\n            \r\n\r\n            this.setting.maxWidth = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_maxWidth: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.maxWidthPct !== null) {\r\n                    this._maxWidth = this.parent._width * this.setting.maxWidthPct;\r\n                }\r\n                else {\r\n                    this._maxWidth = this.setting.maxWidth;\r\n                }\r\n            }\r\n            return this._maxWidth;\r\n        }\r\n    },\r\n    maxHeight: {\r\n        get: function () {\r\n            return this.setting.maxHeight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.maxHeightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.maxHeightPct = null;\r\n            \r\n            this.setting.maxHeight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_maxHeight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.maxHeightPct !== null) {\r\n                    this._maxHeight = this.parent._height * this.setting.maxHeightPct;\r\n                }\r\n                else {\r\n                    this._maxHeight = this.setting.maxHeight;\r\n                }\r\n            }\r\n            return this._maxHeight;\r\n        }\r\n    },\r\n    anchorLeft: {\r\n        get: function () {\r\n            return this.setting.anchorLeft;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1) \r\n                this.setting.anchorLeftPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else \r\n                this.setting.anchorLeftPct = null;\r\n            \r\n            this.setting.anchorLeft = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorLeft: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorLeftPct !== null) {\r\n                    this._anchorLeft = this.parent._width * this.setting.anchorLeftPct;\r\n                }\r\n                else {\r\n                    this._anchorLeft = this.setting.anchorLeft;\r\n                }\r\n            }\r\n            return this._anchorLeft;\r\n        }\r\n    },\r\n    anchorRight: {\r\n        get: function () {\r\n            return this.setting.anchorRight;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorRightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.anchorRightPct = null;\r\n            \r\n            this.setting.anchorRight = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorRight: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorRightPct !== null) {\r\n                    this._anchorRight = this.parent._width * this.setting.anchorRightPct;\r\n                }\r\n                else {\r\n                    this._anchorRight = this.setting.anchorRight;\r\n                }\r\n            }\r\n            return this._anchorRight;\r\n        }\r\n    },\r\n    anchorTop: {\r\n        get: function () {\r\n            return this.setting.anchorTop;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorTopPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.anchorTopPct = null;\r\n            \r\n            this.setting.anchorTop = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorTop: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorTopPct !== null) {\r\n                    this._anchorTop = this.parent._height * this.setting.anchorTopPct;\r\n                }\r\n                else {\r\n                    this._anchorTop = this.setting.anchorTop;\r\n                }\r\n            }\r\n            return this._anchorTop;\r\n        }\r\n    },\r\n    anchorBottom: {\r\n        get: function () {\r\n            return this.setting.anchorBottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.anchorBottomPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else \r\n                this.setting.anchorBottomPct = null;\r\n            \r\n            this.setting.anchorBottom = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_anchorBottom: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.anchorBottomPct !== null) {\r\n                    this._anchorBottom = this.parent._height * this.setting.anchorBottomPct;\r\n                }\r\n                else {\r\n                    this._anchorBottom = this.setting.anchorBottom;\r\n                }\r\n            }\r\n            return this._anchorBottom;\r\n        }\r\n    },\r\n    left: {\r\n        get: function () {\r\n            return this.setting.left;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.leftPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.leftPct = null;\r\n            \r\n            this.setting.left = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_left: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.leftPct !== null) {\r\n                    this._left = this.parent._width * this.setting.leftPct;\r\n                }\r\n                else {\r\n                    this._left = this.setting.left;\r\n                }\r\n            }\r\n            return this._left;\r\n        }\r\n    },\r\n    right: {\r\n        get: function () {\r\n            return this.setting.right;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.rightPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.rightPct = null;\r\n\r\n            this.setting.right = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_right: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.rightPct !== null) {\r\n                    this._right = this.parent._width * this.setting.rightPct;\r\n                }\r\n                else {\r\n                    this._right = this.setting.right;\r\n                }\r\n            }\r\n            return this._right;\r\n        }\r\n    },\r\n    top: {\r\n        get: function () {\r\n            return this.setting.top;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.topPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.topPct = null;\r\n\r\n            this.setting.top = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_top: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.topPct !== null) {\r\n                    this._top = this.parent._height * this.setting.topPct;\r\n                }\r\n                else {\r\n                    this._top = this.setting.top;\r\n                }\r\n            }\r\n            return this._top;\r\n        }\r\n    },\r\n    bottom: {\r\n        get: function () {\r\n            return this.setting.bottom;\r\n        },\r\n        set: function (val) {\r\n            if (isNaN(val) && val.indexOf('%') !== -1)\r\n                this.setting.bottomPct = parseFloat(val.replace('%', '')) * 0.01;\r\n            else\r\n                this.setting.bottomPct = null;\r\n\r\n            this.setting.bottom = val;\r\n            this.updatesettings(true);\r\n        }\r\n    },\r\n    actual_bottom: {\r\n        get: function () {\r\n            if (this.dirty) {\r\n                if (this.setting.bottomPct !== null) {\r\n                    this._bottom = this.parent._height * this.setting.bottomPct;\r\n                }\r\n                else {\r\n                    this._bottom = this.setting.bottom;\r\n                }\r\n            }\r\n            return this._bottom;\r\n        }\r\n    },\r\n    verticalAlign: {\r\n        get: function () {\r\n            return this.setting.verticalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.verticalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    horizontalAlign: {\r\n        get: function () {\r\n            return this.setting.horizontalAlign;\r\n        },\r\n        set: function (val) {\r\n            this.setting.horizontalAlign = val;\r\n            this.baseupdate();\r\n        }\r\n    },\r\n    tint: {\r\n        get: function () {\r\n            return this.setting.tint;\r\n        },\r\n        set: function (val) {\r\n            this.setting.tint = val;\r\n            this.update();\r\n        }\r\n    },\r\n    alpha: {\r\n        get: function () {\r\n            return this.setting.alpha;\r\n        },\r\n        set: function (val) {\r\n            this.setting.alpha = val;\r\n            this.container.alpha = val;\r\n        }\r\n    },\r\n    rotation: {\r\n        get: function () {\r\n            return this.setting.rotation;\r\n        },\r\n        set: function (val) {\r\n            this.setting.rotation = val;\r\n            this.container.rotation = val;\r\n        }\r\n    },\r\n    blendMode: {\r\n        get: function () {\r\n            return this.setting.blendMode;\r\n        },\r\n        set: function (val) {\r\n            this.setting.blendMode = val;\r\n            this.update();\r\n        }\r\n    },\r\n    pivotX: {\r\n        get: function () {\r\n            return this.setting.pivotX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    pivotY: {\r\n        get: function () {\r\n            return this.setting.pivotY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.pivotY = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    pivot: {\r\n        set: function (val) {\r\n            this.setting.pivotX = val;\r\n            this.setting.pivotY = val;\r\n            this.baseupdate();\r\n            this.update();\r\n        }\r\n    },\r\n    scaleX: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.container.scale.x = val;\r\n        }\r\n    },\r\n    scaleY: {\r\n        get: function () {\r\n            return this.setting.scaleY;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleY = val;\r\n            this.container.scale.y = val;\r\n        }\r\n    },\r\n    scale: {\r\n        get: function () {\r\n            return this.setting.scaleX;\r\n        },\r\n        set: function (val) {\r\n            this.setting.scaleX = val;\r\n            this.setting.scaleY = val;\r\n            this.container.scale.x = val;\r\n            this.container.scale.y = val;\r\n        }\r\n    },\r\n\r\n    draggable: {\r\n        get: function () {\r\n            return this.setting.draggable;\r\n        },\r\n        set: function (val) {\r\n            this.setting.draggable = val;\r\n            if (this.initialized) {\r\n                if (val)\r\n                    this.initDraggable();\r\n                else\r\n                    this.clearDraggable();\r\n            }\r\n        }\r\n    },\r\n    dragRestricted: {\r\n        get: function () {\r\n            return this.setting.dragRestricted;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragRestricted = val;\r\n        }\r\n    },\r\n    dragRestrictAxis: {\r\n        get: function () {\r\n            return this.setting.dragRestrictAxis;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragRestrictAxis = val;\r\n        }\r\n    },\r\n    dragThreshold: {\r\n        get: function () {\r\n            return this.setting.dragThreshold;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragThreshold = val;\r\n        }\r\n    },\r\n    dragGroup: {\r\n        get: function () {\r\n            return this.setting.dragGroup;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragGroup = val;\r\n        }\r\n    },\r\n    dragContainer: {\r\n        get: function () {\r\n            return this.setting.dragContainer;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dragContainer = val;\r\n        }\r\n    },\r\n    droppable: {\r\n        get: function () {\r\n            return this.setting.droppable;\r\n        },\r\n        set: function (val) {\r\n            this.setting.droppable = true;\r\n            if (this.initialized) {\r\n                if (val)\r\n                    this.initDroppable();\r\n                else\r\n                    this.clearDroppable();\r\n            }\r\n        }\r\n    },\r\n    droppableReparent: {\r\n        get: function () {\r\n            return this.setting.droppableReparent;\r\n        },\r\n        set: function (val) {\r\n            this.setting.droppableReparent = val;\r\n        }\r\n    },\r\n    dropGroup: {\r\n        get: function () {\r\n            return this.setting.dropGroup;\r\n        },\r\n        set: function (val) {\r\n            this.setting.dropGroup = val;\r\n        }\r\n    },\r\n    renderable: {\r\n        get: function () {\r\n            return this.container.renderable;\r\n        },\r\n        set: function (val) {\r\n            this.container.renderable = val;\r\n        }\r\n    },\r\n    visible: {\r\n        get: function () {\r\n            return this.container.visible;\r\n        },\r\n        set: function (val) {\r\n            this.container.visible = val;\r\n        }\r\n    },\r\n    cacheAsBitmap: {\r\n        get: function () {\r\n            return this.container.cacheAsBitmap;\r\n        },\r\n        set: function (val) {\r\n            this.container.cacheAsBitmap = val;\r\n        }\r\n    },\r\n    onClick: {\r\n        get: function () {\r\n            return this.container.click;\r\n        },\r\n        set: function (val) {\r\n            this.container.click = val;\r\n        }\r\n    }\r\n});","/**\r\n * Settings object for all UIObjects\r\n *\r\n * @class\r\n * @memberof PIXI.UI\r\n */\r\nfunction UISettings() {\r\n    this.width = 0;\r\n    this.height = 0;\r\n    this.minHeight = 0;\r\n    this.maxWidth = null;\r\n    this.maxHeight = null;\r\n    this.left = null;\r\n    this.right = null;\r\n    this.top = null;\r\n    this.bottom = null;\r\n    this.anchorLeft = null;\r\n    this.anchorRight = null;\r\n    this.anchorTop = null;\r\n    this.anchorBottom = null;\r\n\r\n    this.widthPct = null;\r\n    this.heightPct = null;\r\n    this.minWidthPct = null;\r\n    this.minHeightPct = null;\r\n    this.maxWidthPct = null;\r\n    this.maxHeightPct = null;\r\n    this.minWidth = 0;\r\n    this.leftPct = null;\r\n    this.rightPct = null;\r\n    this.topPct = null;\r\n    this.bottomPct = null;\r\n    this.anchorLeftPct = null;\r\n    this.anchorRightPct = null;\r\n    this.anchorTopPct = null;\r\n    this.anchorBottomPct = null;\r\n\r\n    this.pivotX = 0;\r\n    this.pivotY = 0;\r\n    this.scaleX = 1;\r\n    this.scaleY = 1;\r\n    this.verticalAlign = null;\r\n    this.horizontalAlign = null;\r\n    this.rotation = null;\r\n    this.blendMode = null;\r\n    this.tint = null;\r\n    this.alpha = 1;\r\n\r\n\r\n    this.draggable = null;\r\n    this.dragRestricted = false;\r\n    this.dragRestrictAxis = null; //x, y\r\n    this.dragThreshold = 0;\r\n    this.dragGroup = null;\r\n    this.dragContainer = null;\r\n    this.droppable = null;\r\n    this.droppableReparent = null;\r\n    this.dropGroup = null;\r\n}\r\n\r\n\r\nmodule.exports = UISettings;\r\n\r\n\r\n","\r\nvar Library = {\r\n    UI: require('./UI')\r\n};\r\n\r\n//dump everything into extras\r\n\r\nObject.assign(PIXI, Library);\r\n\r\nmodule.exports = Library;\r\n"],"sourceRoot":"."}