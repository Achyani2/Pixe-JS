{"version":3,"file":"pixi-ui.min.js","sources":["../src/UISettings.ts","../src/Interaction/DragEvent.ts","../src/Interaction/DragDropController.js","../src/UIBase.ts","../src/Interaction/InputController.ts","../src/Interaction/ClickEvent.ts","../src/InputBase.ts","../src/Button.ts","../src/CheckBox.ts","../src/Container.ts","../src/DynamicText/DynamicTextStyle.js","../src/DynamicText/DynamicChar.js","../src/DynamicText/DynamicText.js","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/Interaction/MouseScrollEvent.ts","../src/Interaction/Interaction.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/ScrollBar.ts","../src/Ticker.ts","../src/ScrollingContainer.ts","../src/SortableList.js","../src/SliceSprite.js","../src/Sprite.ts","../src/TextInput.ts","../src/Stage.js","../src/Text.js","../src/TilingSprite.ts","../src/index.ts"],"sourcesContent":["/**\n * Layout and rendering configuration for a `PIXI.UI.UIBase`.\n *\n * @class\n * @memberof PIXI.UI\n */\nexport class UISettings\n{\n    public width: number;\n    public height: number;\n    public minWidth: number;\n    public minHeight: number;\n    public maxWidth: number;\n    public maxHeight: number;\n\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public widthPct: number;\n    public heightPct: number;\n    public minWidthPct: number;\n    public minHeightPct: number;\n    public maxWidthPct: number;\n    public maxHeightPct: number;\n\n    public leftPct: number;\n    public topPct: number;\n    public rightPct: number;\n    public bottomPct: number;\n\n    public anchorLeftPct: number;\n    public anchorTopPct: number;\n    public anchorBottomPct: number;\n    public anchorRightPct: number;\n\n    public pivotX: number;\n    public pivotY: number;\n    public scaleX: number;\n    public scaleY: number;\n\n    public horizontalAlign: boolean;\n    public verticalAlign: boolean;\n\n    public rotation: number;\n    public blendMode: number;\n    public tint: number;\n    public alpha: number;\n\n    public draggable: boolean;\n    public dragRestricted: boolean;\n    public dragRestrictAxis: PIXI.Point;\n    public dragGroup: any;\n    public dragThreshold: number;\n    public dragContainer: PIXI.Container;\n    public droppable: boolean;\n    public droppableParent: boolean;\n    public droppableReparent: boolean;\n    public dropGroup: any;\n\n    constructor()\n    {\n        this.width = 0;\n        this.height = 0;\n        this.minWidth = 0;\n        this.minHeight = 0;\n        this.maxWidth = null;\n        this.maxHeight = null;\n\n        this.left = null;\n        this.right = null;\n        this.top = null;\n        this.bottom = null;\n\n        this.anchorLeft = null;\n        this.anchorRight = null;\n        this.anchorTop = null;\n        this.anchorBottom = null;\n\n        this.widthPct = null;\n        this.heightPct = null;\n        this.minWidthPct = null;\n        this.minHeightPct = null;\n        this.maxWidthPct = null;\n        this.maxHeightPct = null;\n        this.leftPct = null;\n        this.rightPct = null;\n        this.topPct = null;\n        this.bottomPct = null;\n        this.anchorLeftPct = null;\n        this.anchorRightPct = null;\n        this.anchorTopPct = null;\n        this.anchorBottomPct = null;\n\n        this.pivotX = 0;\n        this.pivotY = 0;\n        this.scaleX = 1;\n        this.scaleY = 1;\n        this.verticalAlign = null;\n        this.horizontalAlign = null;\n        this.rotation = null;\n        this.blendMode = null;\n        this.tint = null;\n        this.alpha = 1;\n\n        this.draggable = null;\n        this.dragRestricted = false;\n        this.dragRestrictAxis = null; // x, y\n        this.dragThreshold = 0;\n        this.dragGroup = null;\n        this.dragContainer = null;\n        this.droppable = null;\n        this.droppableReparent = null;\n        this.dropGroup = null;\n    }\n}\n\nexport default UISettings;\n","import * as PIXI from 'pixi.js';\n\nexport class DragEvent\n{\n    private bound: boolean;\n    private start: PIXI.Point;\n    private offset: PIXI.Point;\n    private mouse: PIXI.Point;\n\n    movementX: number;\n    movementY: number;\n\n    cancel: boolean;\n    dragging: boolean;\n\n    id: number;\n    obj: any;\n\n    constructor(obj: any)\n    {\n        this.bound = false;\n        this.start = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.mouse = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n        this.dragging = false;\n        this.id = 0;\n\n        this.obj = obj;\n        this.obj.container.interactive = true;\n\n        this.startEvent();\n    }\n\n    _onDragStart = (e): void =>\n    {\n        const {\n            obj,\n            start,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        this.id = e.data.identifier;\n        this.onPress.call(obj, e, true);\n\n        if (!this.bound)\n        {\n            start.copyFrom(e.data.global);\n\n            obj.stage.on('mousemove', _onDragMove);\n            obj.stage.on('touchmove', _onDragMove);\n            obj.stage.on('mouseup', _onDragEnd);\n            obj.stage.on('mouseupoutside', _onDragEnd);\n            obj.stage.on('touchend', _onDragEnd);\n            obj.stage.on('touchendoutside', _onDragEnd);\n            obj.stage.on('touchcancel', _onDragEnd);\n\n            this.bound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    _onDragMove = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            mouse,\n            offset,\n            start,\n            obj,\n        } = this;\n\n        mouse.copyFrom(e.data.global);\n        offset.set(mouse.x - start.x, mouse.y - start.y);\n\n        if (!this.dragging)\n        {\n            this.movementX = Math.abs(offset.x);\n            this.movementY = Math.abs(offset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < obj.dragThreshold)\n            {\n                return; // thresshold\n            }\n\n            if (obj.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (obj.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (obj.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this._onDragEnd(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart.call(obj, e);\n            this.dragging = true;\n        }\n\n        this.onDragMove.call(obj, e, offset);\n    };\n\n    _onDragEnd = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            obj,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n            obj.stage.removeListener('touchcancel', _onDragEnd);\n\n            this.dragging = false;\n            this.bound = false;\n\n            this.onDragEnd.call(obj, e);\n            this.onPress.call(obj, e, false);\n        }\n    };\n\n    stopEvent(): void\n    {\n        const {\n            obj,\n            _onDragStart,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n\n            this.bound = false;\n        }\n\n        obj.container.removeListener('mousedown', _onDragStart);\n        obj.container.removeListener('touchstart', _onDragStart);\n    }\n\n    startEvent(): void\n    {\n        const { obj, _onDragStart } = this;\n\n        obj.container.on('mousedown', _onDragStart);\n        obj.container.on('touchstart', _onDragStart);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onPress(e, isPressed: boolean): void\n    {\n        // Default onPress\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragStart(e): void\n    {\n        // Default onDragStart\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragMove(e, offset: PIXI.Point): void\n    {\n        // Default onDragMove\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragEnd(e): void\n    {\n        // Default onDragEnd\n    }\n}\n","const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","import { UISettings } from './UISettings';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { DragDropController } from './Interaction/DragDropController';\nimport * as PIXI from 'pixi.js';\n\n/**\n * Base class of all UIObjects\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @param width {Number} Width of the UIObject\n * @param height {Number} Height of the UIObject\n */\nexport abstract class UIBase extends PIXI.utils.EventEmitter\n{\n    container: PIXI.Container;\n    setting: UISettings;\n    children: UIBase[];\n    stage: any;\n\n    initialized: boolean;\n    dragInitialized: boolean;\n    dropInitialized: boolean;\n    dragging: boolean;\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    _width: number;\n    _height: number;\n    _minWidth: number;\n    _minHeight: number;\n    _maxWidth: number;\n    _maxHeight: number;\n    _anchorLeft: number;\n    _anchorRight: number;\n    _anchorTop: number;\n    _anchorBottom: number;\n    _left: number;\n    _right: number;\n    _top: number;\n    _bottom: number;\n\n    _dragPosition: any;\n    parent: UIBase;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.container = new PIXI.Container();\n        this.setting = new UISettings();\n        this.children = [];\n        this.stage = null;\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        if (width && isNaN(width) && width.indexOf('%') != -1)\n        {\n            this.setting.widthPct = parseFloat(width.replace('%', '')) * 0.01;\n        }\n        else\n        {\n            this.setting.widthPct = null;\n        }\n\n        if (height && isNaN(height) && height.indexOf('%') != -1)\n        { this.setting.heightPct = parseFloat(height.replace('%', '')) * 0.01; }\n        else\n        {\n            this.setting.heightPct = null;\n        }\n\n        this.setting.width = width || 0;\n        this.setting.height = height || 0;\n\n        // actual values\n        this._width = 0;\n        this._height = 0;\n        this._minWidth = null;\n        this._minHeight = null;\n        this._maxWidth = null;\n        this._maxHeight = null;\n        this._anchorLeft = null;\n        this._anchorRight = null;\n        this._anchorTop = null;\n        this._anchorBottom = null;\n        this._left = null;\n        this._right = null;\n        this._top = null;\n        this._bottom = null;\n\n        this._dragPosition = null; // used for overriding positions if tweens is playing\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     */\n    private updatesettings(updateChildren: boolean, updateParent?: boolean): void\n    {\n        if (!this.initialized)\n        {\n            if (this.parent && this.parent.stage && this.parent.initialized)\n            {\n                this.initialize();\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (updateParent)\n        {\n            this.updateParent();\n        }\n\n        this.baseupdate();\n        this.update();\n\n        if (updateChildren)\n        {\n            this.updateChildren();\n        }\n    }\n\n    /**\n     * Update method (override from other UIObjects)\n     *\n     * @private\n     */\n    abstract update ();\n\n    /**\n     * Updates the parent\n     *\n     * @private\n     */\n    updateParent(): void\n    {\n        if (this.parent)\n        {\n            if (this.parent.updatesettings)\n            {\n                this.parent.updatesettings(false, true);\n            }\n        }\n    }\n\n    /**\n     * Updates the UIObject with all base settings\n     *\n     * @private\n     */\n    baseupdate(): void\n    {\n    // return if parent size didnt change\n        if (this.parent)\n        {\n            let parentHeight; let\n                parentWidth;\n\n            // transform convertion (% etc)\n            this.dirty = true;\n            this._width = this.actual_width;\n            this._height = this.actual_height;\n            this._minWidth = this.actual_minWidth;\n            this._minHeight = this.actual_minHeight;\n            this._maxWidth = this.actual_maxWidth;\n            this._maxHeight = this.actual_maxHeight;\n            this._anchorLeft = this.actual_anchorLeft;\n            this._anchorRight = this.actual_anchorRight;\n            this._anchorTop = this.actual_anchorTop;\n            this._anchorBottom = this.actual_anchorBottom;\n            this._left = this.actual_left;\n            this._right = this.actual_right;\n            this._top = this.actual_top;\n            this._bottom = this.actual_bottom;\n            this._parentWidth = parentWidth = this.parent._width;\n            this._parentHeight = parentHeight = this.parent._height;\n            this.dirty = false;\n\n            let pivotXOffset = this.pivotX * this._width;\n            let pivotYOffset = this.pivotY * this._height;\n\n            if (this.pixelPerfect)\n            {\n                pivotXOffset = Math.round(pivotXOffset);\n                pivotYOffset = Math.round(pivotYOffset);\n            }\n\n            if (this.horizontalAlign === null)\n            {\n            // get anchors (use left right if conflict)\n                if (this._anchorLeft !== null && this._anchorRight === null && this._right !== null)\n                { this._anchorRight = this._right; }\n                else if (this._anchorLeft === null && this._anchorRight !== null && this._left !== null)\n                { this._anchorLeft = this._left; }\n                else if (this._anchorLeft === null && this._anchorRight === null && this._left !== null && this._right !== null)\n                {\n                    this._anchorLeft = this._left;\n                    this._anchorRight = this._right;\n                }\n\n                const useHorizontalAnchor = this._anchorLeft !== null || this._anchorRight !== null;\n                const useLeftRight = !useHorizontalAnchor && (this._left !== null || this._right !== null);\n\n                if (useLeftRight)\n                {\n                    if (this._left !== null)\n                    { this.container.position.x = this._left; }\n                    else if (this._right !== null)\n                    { this.container.position.x = parentWidth - this._right; }\n                }\n                else if (useHorizontalAnchor)\n                {\n                    if (this._anchorLeft !== null && this._anchorRight === null)\n                    { this.container.position.x = this._anchorLeft; }\n                    else if (this._anchorLeft === null && this._anchorRight !== null)\n                    { this.container.position.x = parentWidth - this._width - this._anchorRight; }\n                    else if (this._anchorLeft !== null && this._anchorRight !== null)\n                    {\n                        this.container.position.x = this._anchorLeft;\n                        this._width = parentWidth - this._anchorLeft - this._anchorRight;\n                    }\n                    this.container.position.x += pivotXOffset;\n                }\n                else\n                {\n                    this.container.position.x = 0;\n                }\n            }\n\n            if (this.verticalAlign === null)\n            {\n            // get anchors (use top bottom if conflict)\n                if (this._anchorTop !== null && this._anchorBottom === null && this._bottom !== null)\n                { this._anchorBottom = this._bottom; }\n                if (this._anchorTop === null && this._anchorBottom !== null && this._top !== null)\n                { this._anchorTop = this._top; }\n\n                const useVerticalAnchor = this._anchorTop !== null || this._anchorBottom !== null;\n                const useTopBottom = !useVerticalAnchor && (this._top !== null || this._bottom !== null);\n\n                if (useTopBottom)\n                {\n                    if (this._top !== null)\n                    { this.container.position.y = this._top; }\n                    else if (this._bottom !== null)\n                    { this.container.position.y = parentHeight - this._bottom; }\n                }\n                else if (useVerticalAnchor)\n                {\n                    if (this._anchorTop !== null && this._anchorBottom === null)\n                    { this.container.position.y = this._anchorTop; }\n                    else if (this._anchorTop === null && this._anchorBottom !== null)\n                    { this.container.position.y = parentHeight - this._height - this._anchorBottom; }\n                    else if (this._anchorTop !== null && this._anchorBottom !== null)\n                    {\n                        this.container.position.y = this._anchorTop;\n                        this._height = parentHeight - this._anchorTop - this._anchorBottom;\n                    }\n                    this.container.position.y += pivotYOffset;\n                }\n                else\n                {\n                    this.container.position.y = 0;\n                }\n            }\n\n            // min/max sizes\n            if (this._maxWidth !== null && this._width > this._maxWidth) this._width = this._maxWidth;\n            if (this._width < this._minWidth) this._width = this._minWidth;\n\n            if (this._maxHeight !== null && this._height > this._maxHeight) this._height = this._maxHeight;\n            if (this._height < this._minHeight) this._height = this._minHeight;\n\n            // pure vertical/horizontal align\n            if (this.horizontalAlign !== null)\n            {\n                if (this.horizontalAlign == 'center')\n                {\n                    this.container.position.x = parentWidth * 0.5 - this._width * 0.5;\n                }\n                else if (this.horizontalAlign == 'right')\n                {\n                    this.container.position.x = parentWidth - this._width;\n                }\n                else\n                {\n                    this.container.position.x = 0;\n                }\n\n                this.container.position.x += pivotXOffset;\n            }\n            if (this.verticalAlign !== null)\n            {\n                if (this.verticalAlign == 'middle')\n                {\n                    this.container.position.y = parentHeight * 0.5 - this._height * 0.5;\n                }\n                else if (this.verticalAlign == 'bottom')\n                {\n                    this.container.position.y = parentHeight - this._height;\n                }\n                else\n                {\n                    this.container.position.y = 0;\n                }\n\n                this.container.position.y += pivotYOffset;\n            }\n\n            // Unrestricted dragging\n            if (this.dragging && !this.setting.dragRestricted)\n            {\n                this.container.position.x = this._dragPosition.x;\n                this.container.position.y = this._dragPosition.y;\n            }\n\n            // scale\n            if (this.setting.scaleX !== null) this.container.scale.x = this.setting.scaleX;\n            if (this.setting.scaleY !== null) this.container.scale.y = this.setting.scaleY;\n\n            // pivot\n            if (this.setting.pivotX !== null) this.container.pivot.x = pivotXOffset;\n            if (this.setting.pivotY !== null) this.container.pivot.y = pivotYOffset;\n\n            if (this.setting.alpha !== null) this.container.alpha = this.setting.alpha;\n            if (this.setting.rotation !== null) this.container.rotation = this.setting.rotation;\n\n            // make pixel perfect\n            if (this.pixelPerfect)\n            {\n                this._width = Math.round(this._width);\n                this._height = Math.round(this._height);\n                this.container.position.x = Math.round(this.container.position.x);\n                this.container.position.y = Math.round(this.container.position.y);\n            }\n        }\n    }\n\n    /**\n     * Updates all UI Children\n     *\n     * @private\n     */\n    updateChildren(): void\n    {\n        for (let i = 0; i < this.children.length; i++)\n        {\n            this.children[i].updatesettings(true);\n        }\n    }\n\n    addChild(UIObject): any\n    {\n        const argumentsLength = arguments.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.container.addChild(UIObject.container);\n            this.children.push(UIObject);\n            this.updatesettings(true, true);\n        }\n\n        return UIObject;\n    }\n\n    removeChild(UIObject): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.children.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                const oldUIParent = UIObject.parent;\n                const oldParent = UIObject.container.parent;\n\n                UIObject.container.parent.removeChild(UIObject.container);\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n\n                // oldParent._recursivePostUpdateTransform();\n                setTimeout(function ()\n                { // hack but cant get the transforms to update propertly otherwice?\n                    if (oldUIParent.updatesettings)\n                    { oldUIParent.updatesettings(true, true); }\n                }, 0);\n            }\n        }\n    }\n\n    /**\n     * Initializes the object when its added to an UIStage\n     *\n     * @private\n     */\n    initialize(): void\n    {\n        this.initialized = true;\n        this.stage = this.parent.stage;\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n    }\n\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            this.drag.stopEvent();\n        }\n    }\n\n    initDraggable(): void\n    {\n        if (!this.dragInitialized)\n        {\n            this.dragInitialized = true;\n            const containerStart = new PIXI.Point();\n            const stageOffset = new PIXI.Point();\n            const self = this;\n\n            this._dragPosition = new PIXI.Point();\n            this.drag = new DragEvent(this);\n            this.drag.onDragStart = function (e)\n            {\n                const added = DragDropController.add(this, e);\n\n                if (!this.dragging && added)\n                {\n                    this.dragging = true;\n                    this.container.interactive = false;\n                    containerStart.copy(this.container.position);\n                    if (this.dragContainer)\n                    {\n                        const c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\n\n                        if (c)\n                        {\n                        // _this.container._recursivePostUpdateTransform();\n                            stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\n                            c.addChild(this.container);\n                        }\n                    }\n                    else\n                    {\n                        stageOffset.set(0);\n                    }\n                    this.emit('draggablestart', e);\n                }\n            };\n\n            this.drag.onDragMove = function (e, offset)\n            {\n                if (this.dragging)\n                {\n                    this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\n                    this.x = this._dragPosition.x;\n                    this.y = this._dragPosition.y;\n                    this.emit('draggablemove', e);\n                }\n            };\n\n            this.drag.onDragEnd = function (e)\n            {\n                if (this.dragging)\n                {\n                    this.dragging = false;\n                    // Return to container after 0ms if not picked up by a droppable\n                    setTimeout(function ()\n                    {\n                        self.container.interactive = true;\n                        const item = DragDropController.getItem(self);\n\n                        if (item)\n                        {\n                            const container = self.parent === self.stage ? self.stage : self.parent.container;\n\n                            container.toLocal(self.container.position, self.container.parent, self);\n                            if (container != self.container)\n                            {\n                                self.parent.addChild(self);\n                            }\n                        }\n                        self.emit('draggableend', e);\n                    }, 0);\n                }\n            };\n        }\n    }\n\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.container.removeListener('mouseup', this.onDrop);\n            this.container.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.container;\n            const self = this;\n\n            this.container.interactive = true;\n            this.onDrop = function (event)\n            {\n                const item = DragDropController.getEventItem(event, self.dropGroup);\n\n                if (item && item.dragging)\n                {\n                    item.dragging = false;\n                    item.container.interactive = true;\n                    const parent = self.droppableReparent !== null ? self.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent)\n                    { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n\n    get x(): number\n    {\n        return this.setting.left;\n    }\n    set x(val: number)\n    {\n        this.left = val;\n    }\n\n    get y(): number\n    {\n        return this.setting.top;\n    }\n    set y(val: number)\n    {\n        this.top = val;\n    }\n\n    get width(): number\n    {\n        return this.setting.width;\n    }\n    set width(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.widthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.widthPct = null; }\n\n        this.setting.width = val;\n        this.updatesettings(true);\n    }\n\n    get actual_width(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.widthPct !== null)\n            {\n                this._width = this.parent._width * this.setting.widthPct;\n            }\n            else\n            {\n                this._width = this.setting.width;\n            }\n        }\n\n        return this._width;\n    }\n\n    get height(): number\n    {\n        return this.setting.height;\n    }\n    set height(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.heightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.heightPct = null; }\n\n        this.setting.height = val;\n        this.updatesettings(true);\n    }\n\n    get actual_height(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.heightPct !== null)\n            {\n                this._height = this.parent._height * this.setting.heightPct;\n            }\n            else\n            {\n                this._height = this.setting.height;\n            }\n        }\n\n        return this._height;\n    }\n\n    get minWidth(): number\n    {\n        return this.setting.minWidth;\n    }\n    set minWidth(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.minWidthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.minWidthPct = null; }\n\n        this.setting.minWidth = val;\n        this.updatesettings(true);\n    }\n\n    get actual_minWidth(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.minWidthPct !== null)\n            {\n                this._minWidth = this.parent._width * this.setting.minWidthPct;\n            }\n            else\n            {\n                this._minWidth = this.setting.minWidth;\n            }\n        }\n\n        return this._minWidth;\n    }\n\n    get minHeight(): number\n    {\n        return this.setting.minHeight;\n    }\n    set minHeight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.minHeightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.minHeightPct = null; }\n\n        this.setting.minHeight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_minHeight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.minHeightPct !== null)\n            {\n                this._minHeight = this.parent._height * this.setting.minHeightPct;\n            }\n            else\n            {\n                this._minHeight = this.setting.minHeight;\n            }\n        }\n\n        return this._minHeight;\n    }\n\n    get maxWidth(): number\n    {\n        return this.setting.maxWidth;\n    }\n    set maxWidth(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.maxWidthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.maxWidthPct = null; }\n\n        this.setting.maxWidth = val;\n        this.updatesettings(true);\n    }\n\n    get actual_maxWidth(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.maxWidthPct !== null)\n            {\n                this._maxWidth = this.parent._width * this.setting.maxWidthPct;\n            }\n            else\n            {\n                this._maxWidth = this.setting.maxWidth;\n            }\n        }\n\n        return this._maxWidth;\n    }\n\n    get maxHeight(): number\n    {\n        return this.setting.maxHeight;\n    }\n    set maxHeight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.maxHeightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.maxHeightPct = null; }\n\n        this.setting.maxHeight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_maxHeight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.maxHeightPct !== null)\n            {\n                this._maxHeight = this.parent._height * this.setting.maxHeightPct;\n            }\n            else\n            {\n                this._maxHeight = this.setting.maxHeight;\n            }\n        }\n\n        return this._maxHeight;\n    }\n\n    get anchorLeft(): number\n    {\n        return this.setting.anchorLeft;\n    }\n    set anchorLeft(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorLeftPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorLeftPct = null; }\n\n        this.setting.anchorLeft = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorLeft(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorLeftPct !== null)\n            {\n                this._anchorLeft = this.parent._width * this.setting.anchorLeftPct;\n            }\n            else\n            {\n                this._anchorLeft = this.setting.anchorLeft;\n            }\n        }\n\n        return this._anchorLeft;\n    }\n\n    get anchorRight(): number\n    {\n        return this.setting.anchorRight;\n    }\n    set anchorRight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorRightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorRightPct = null; }\n\n        this.setting.anchorRight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorRight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorRightPct !== null)\n            {\n                this._anchorRight = this.parent._width * this.setting.anchorRightPct;\n            }\n            else\n            {\n                this._anchorRight = this.setting.anchorRight;\n            }\n        }\n\n        return this._anchorRight;\n    }\n\n    get anchorTop(): number\n    {\n        return this.setting.anchorTop;\n    }\n    set anchorTop(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorTopPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorTopPct = null; }\n\n        this.setting.anchorTop = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorTop(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorTopPct !== null)\n            {\n                this._anchorTop = this.parent._height * this.setting.anchorTopPct;\n            }\n            else\n            {\n                this._anchorTop = this.setting.anchorTop;\n            }\n        }\n\n        return this._anchorTop;\n    }\n\n    get anchorBottom(): number\n    {\n        return this.setting.anchorBottom;\n    }\n    set anchorBottom(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorBottomPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorBottomPct = null; }\n\n        this.setting.anchorBottom = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorBottom(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorBottomPct !== null)\n            {\n                this._anchorBottom = this.parent._height * this.setting.anchorBottomPct;\n            }\n            else\n            {\n                this._anchorBottom = this.setting.anchorBottom;\n            }\n        }\n\n        return this._anchorBottom;\n    }\n\n    get left(): number\n    {\n        return this.setting.left;\n    }\n    set left(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.leftPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.leftPct = null; }\n\n        this.setting.left = val;\n        this.updatesettings(true);\n    }\n\n    get actual_left(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.leftPct !== null)\n            {\n                this._left = this.parent._width * this.setting.leftPct;\n            }\n            else\n            {\n                this._left = this.setting.left;\n            }\n        }\n\n        return this._left;\n    }\n\n    get right(): number\n    {\n        return this.setting.right;\n    }\n    set right(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.rightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.rightPct = null; }\n\n        this.setting.right = val;\n        this.updatesettings(true);\n    }\n\n    get actual_right(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.rightPct !== null)\n            {\n                this._right = this.parent._width * this.setting.rightPct;\n            }\n            else\n            {\n                this._right = this.setting.right;\n            }\n        }\n\n        return this._right;\n    }\n\n    get top(): number\n    {\n        return this.setting.top;\n    }\n    set top(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.topPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.topPct = null; }\n\n        this.setting.top = val;\n        this.updatesettings(true);\n    }\n\n    get actual_top(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.topPct !== null)\n            {\n                this._top = this.parent._height * this.setting.topPct;\n            }\n            else\n            {\n                this._top = this.setting.top;\n            }\n        }\n\n        return this._top;\n    }\n\n    get bottom(): number\n    {\n        return this.setting.bottom;\n    }\n    set bottom(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.bottomPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.bottomPct = null; }\n\n        this.setting.bottom = val;\n        this.updatesettings(true);\n    }\n\n    get actual_bottom()\n    {\n        if (this.dirty)\n        {\n            if (this.setting.bottomPct !== null)\n            {\n                this._bottom = this.parent._height * this.setting.bottomPct;\n            }\n            else\n            {\n                this._bottom = this.setting.bottom;\n            }\n        }\n\n        return this._bottom;\n    }\n\n    get verticalAlign(): number\n    {\n        return this.setting.verticalAlign;\n    }\n    set verticalAlign(val: number)\n    {\n        this.setting.verticalAlign = val;\n        this.baseupdate();\n    }\n\n    get valign(): number\n    {\n        return this.setting.verticalAlign;\n    }\n    set valign(val: number)\n    {\n        this.setting.verticalAlign = val;\n        this.baseupdate();\n    }\n\n    get horizontalAlign(): boolean\n    {\n        return this.setting.horizontalAlign;\n    }\n    set horizontalAlign(val: boolean)\n    {\n        this.setting.horizontalAlign = val;\n        this.baseupdate();\n    }\n\n    get align(): boolean\n    {\n        return this.setting.horizontalAlign;\n    }\n    set align(val: boolean)\n    {\n        this.setting.horizontalAlign = val;\n        this.baseupdate();\n    }\n\n    get tint(): number\n    {\n        return this.setting.tint;\n    }\n    set tint(val: number)\n    {\n        this.setting.tint = val;\n        this.update();\n    }\n\n    get alpha(): number\n    {\n        return this.setting.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.setting.alpha = val;\n        this.container.alpha = val;\n    }\n\n    get rotation(): number\n    {\n        return this.setting.rotation;\n    }\n    set rotation(val: number)\n    {\n        this.setting.rotation = val;\n        this.container.rotation = val;\n    }\n\n    get blendMode(): number\n    {\n        return this.setting.blendMode;\n    }\n    set blendMode(val: number)\n    {\n        this.setting.blendMode = val;\n        this.update();\n    }\n\n    get pivotX(): number\n    {\n        return this.setting.pivotX;\n    }\n    set pivotX(val: number)\n    {\n        this.setting.pivotX = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    get pivotY(): number\n    {\n        return this.setting.pivotY;\n    }\n    set pivotY(val: number)\n    {\n        this.setting.pivotY = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    set pivot(val: number)\n    {\n        this.setting.pivotX = val;\n        this.setting.pivotY = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    get scaleX(): number\n    {\n        return this.setting.scaleX;\n    }\n    set scaleX(val: number)\n    {\n        this.setting.scaleX = val;\n        this.container.scale.x = val;\n    }\n\n    get scaleY(): number\n    {\n        return this.setting.scaleY;\n    }\n    set scaleY(val: number)\n    {\n        this.setting.scaleY = val;\n        this.container.scale.y = val;\n    }\n\n    get scale(): number\n    {\n        return this.setting.scaleX;\n    }\n    set scale(val: number)\n    {\n        this.setting.scaleX = val;\n        this.setting.scaleY = val;\n        this.container.scale.x = val;\n        this.container.scale.y = val;\n    }\n\n    get draggable(): boolean\n    {\n        return this.setting.draggable;\n    }\n    set draggable(val: boolean)\n    {\n        this.setting.draggable = val;\n        if (this.initialized)\n        {\n            if (val)\n            { this.initDraggable(); }\n            else\n            { this.clearDraggable(); }\n        }\n    }\n\n    get dragRestricted(): boolean\n    {\n        return this.setting.dragRestricted;\n    }\n    set dragRestricted(val: boolean)\n    {\n        this.setting.dragRestricted = val;\n    }\n\n    get dragRestrictAxis(): any\n    {\n        return this.setting.dragRestrictAxis;\n    }\n    set dragRestrictAxis(val: any)\n    {\n        this.setting.dragRestrictAxis = val;\n    }\n\n    get dragThreshold(): number\n    {\n        return this.setting.dragThreshold;\n    }\n    set dragThreshold(val: number)\n    {\n        this.setting.dragThreshold = val;\n    }\n\n    get dragGroup(): number\n    {\n        return this.setting.dragGroup;\n    }\n    set dragGroup(val: number)\n    {\n        this.setting.dragGroup = val;\n    }\n\n    get dragContainer(): number\n    {\n        return this.setting.dragContainer;\n    }\n    set dragContainer(val: number)\n    {\n        this.setting.dragContainer = val;\n    }\n\n    get droppable(): boolean\n    {\n        return this.setting.droppable;\n    }\n    set droppable(val: boolean)\n    {\n        this.setting.droppable = true;\n        if (this.initialized)\n        {\n            if (val)\n            { this.initDroppable(); }\n            else\n            { this.clearDroppable(); }\n        }\n    }\n\n    get droppableReparent(): boolean\n    {\n        return this.setting.droppableReparent;\n    }\n    set droppableReparent(val: boolean)\n    {\n        this.setting.droppableReparent = val;\n    }\n\n    get dropGroup(): any\n    {\n        return this.setting.dropGroup;\n    }\n    set dropGroup(val: any)\n    {\n        this.setting.dropGroup = val;\n    }\n\n    get renderable(): boolean\n    {\n        return this.container.renderable;\n    }\n    set renderable(val: boolean)\n    {\n        this.container.renderable = val;\n    }\n\n    get visible(): boolean\n    {\n        return this.container.visible;\n    }\n    set visible(val: boolean)\n    {\n        this.container.visible = val;\n    }\n\n    get cacheAsBitmap(): boolean\n    {\n        return this.container.cacheAsBitmap;\n    }\n    set cacheAsBitmap(val: boolean)\n    {\n        this.container.cacheAsBitmap = val;\n    }\n\n    get onClick(): any\n    {\n        return this.container.click;\n    }\n    set onClick(val: any)\n    {\n        this.container.click = val;\n    }\n\n    get interactive(): boolean\n    {\n        return this.container.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.container.interactive = val;\n    }\n\n    get interactiveChildren(): boolean\n    {\n        return this.container.interactiveChildren;\n    }\n    set interactiveChildren(val: boolean)\n    {\n        this.container.interactiveChildren = val;\n    }\n\n    get parentLayer(): any\n    {\n        return this.container.parentLayer;\n    }\n    set parentLayer(val: any)\n    {\n        this.container.parentLayer = val;\n    }\n}\n","let _currentItem;\nconst tabGroups = {};\nconst checkGroups = {};\nconst checkGroupValues = {};\n\n/**\n * Handles focus-management in the scene graph.\n */\nexport const InputController = {\n    registrer(item, tabIndex, tabGroup): void\n    {\n        const groupName = tabGroup || 'default';\n\n        let items = tabGroups[groupName];\n\n        if (!items)\n        { items = tabGroups[groupName] = []; }\n\n        const i = items.indexOf(item);\n\n        if (i === -1)\n        {\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            item._tabGroup = items;\n            items.push(item);\n            items.sort(function sorter(a, b)\n            {\n                if (a._tabIndex < b._tabIndex)\n                { return -1; }\n                if (a._tabIndex > b._tabIndex)\n                { return 1; }\n\n                return 0;\n            });\n        }\n    },\n    set(item): void\n    {\n        this.blur();\n        _currentItem = item;\n    },\n    clear(): void\n    {\n        _currentItem = undefined;\n    },\n    blur(): void\n    {\n        if (_currentItem && typeof _currentItem.blur === 'function')\n        {\n            _currentItem.blur();\n        }\n    },\n    fireTab(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    fireNext(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    firePrev(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\n\n            if (i < 0) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    registrerCheckGroup(cb): void\n    {\n        const name = cb.checkGroup;\n        let group = checkGroups[name];\n\n        if (!group) group = checkGroups[name] = {};\n        group[cb.value] = cb;\n\n        if (cb.checked)\n        { checkGroupValues[name] = cb.value; }\n    },\n    updateCheckGroupSelected(cb): void\n    {\n        const group = checkGroups[cb.checkGroup];\n\n        for (const val in group)\n        {\n            const b = group[val];\n\n            if (b !== cb)\n            { b.checked = false; }\n        }\n        checkGroupValues[cb.checkGroup] = cb.value;\n    },\n    getCheckGroupSelectedValue(name): string\n    {\n        if (checkGroupValues[name])\n        { return checkGroupValues[name]; }\n\n        return '';\n    },\n    setCheckGroupSelectedValue(name, val): void\n    {\n        const group = checkGroups[name];\n\n        if (group)\n        {\n            const cb = group[val];\n\n            if (cb)\n            {\n                cb.checked = true;\n            }\n        }\n    },\n};\n\n","import * as PIXI from 'pixi.js';\n\nexport class ClickEvent\n{\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    private obj: any;\n\n    private movementX: number;\n    private movementY: number;\n\n    right: boolean;\n    hover: boolean;\n    double: boolean;\n\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private eventname_mousedown: string;\n    private eventname_mouseup: string;\n    private eventname_mouseupoutside: string;\n\n    time: number;\n\n    constructor(obj, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.right = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this.hover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.double = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        this.eventname_mousedown = this.right ? 'rightdown' : 'mousedown';\n        this.eventname_mouseup = this.right ? 'rightup' : 'mouseup';\n        this.eventname_mouseupoutside = this.right ? 'rightupoutside' : 'mouseupoutside';\n\n        obj.container.interactive = true;\n        this.time = 0;\n\n        this.startEvent();\n    }\n\n    _onMouseDown = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.obj, event, true);\n\n        if (!this.bound)\n        {\n            obj.container.on(eventname_mouseup, _onMouseUp);\n            obj.container.on(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.container.on('touchend', _onMouseUp);\n                obj.container.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this.double)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    _mouseUpAll = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.container.removeListener('touchend', _onMouseUp);\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    _onMouseUp = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.obj.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.obj.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this.double)\n        {\n            this.onClick.call(this.obj, event);\n        }\n    };\n\n    _onMouseUpOutside = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n    };\n\n    _onMouseOver = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.obj.container.on('mousemove', this._onMouseMove);\n            this.obj.container.on('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, true);\n        }\n    };\n\n    _onMouseOut = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.obj.container.removeListener('mousemove', this._onMouseMove);\n            this.obj.container.removeListener('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, false);\n        }\n    };\n\n    _onMouseMove = (event): void =>\n    {\n        this.onMove.call(this.obj, event);\n    };\n\n    stopEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n            _onMouseMove,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.container.removeListener('touchend', _onMouseUp);\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        obj.container.removeListener(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.container.removeListener('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.container.removeListener('mouseover', _onMouseOver);\n            obj.container.removeListener('mouseout', _onMouseOut);\n            obj.container.removeListener('mousemove', _onMouseMove);\n            obj.container.removeListener('touchmove', _onMouseMove);\n        }\n    };\n\n    startEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mousedown,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n        } = this;\n\n        obj.container.on(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.container.on('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.container.on('mouseover', _onMouseOver);\n            obj.container.on('mouseout', _onMouseOut);\n        }\n    };\n\n    onHover(event, over): void\n    {\n\n    }\n\n    onPress(event, isPressed): void\n    {\n\n    }\n\n    onClick(event): void\n    {\n\n    }\n\n    onMove(event): void\n    {\n\n    }\n}\n","import { UIBase } from './UIBase';\nimport { InputController } from './Interaction/InputController';\n\n/**\n * Represents a view that can accept any form of input. It can gain and loose focus.\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param width {number} passed to uibase\n * @param height {number} passed to uibase\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n */\nexport abstract class InputBase extends UIBase\n{\n    _focused: boolean;\n    _useTab: boolean;\n    _usePrev: boolean;\n    _useNext: boolean;\n\n    __down: boolean;\n\n    constructor(width: number, height: number, tabIndex: number, tabGroup: any)\n    {\n        super(width, height);\n\n        this._focused = false;\n        this._useTab = this._usePrev = this._useNext = true;\n        this.container.interactive = true;\n        InputController.registrer(this, tabIndex, tabGroup);\n\n        this.container.on('pointerdown', (e) =>\n        {\n            this.focus();\n            this.__down = true;\n        });\n\n        this.container.on('pointerup', (e) =>\n        {\n            this.__down = false;\n        });\n\n        this.container.on('pointerupoutside', (e) =>\n        {\n            this.__down = false;\n        });\n    }\n\n    blur(): void\n    {\n        if (this._focused)\n        {\n            InputController.clear();\n            this._focused = false;\n            this._clearEvents();\n            this.emit('focusChanged', false);\n            this.emit('blur');\n        }\n    }\n\n    focus(): void\n    {\n        if (!this._focused)\n        {\n            this._focused = true;\n            this._bindEvents();\n            InputController.set(this);\n            this.emit('focusChanged', true);\n            this.emit('focus');\n        }\n    }\n\n    protected keyDownEvent = (e: any): void =>\n    {\n        if (e.which === 9)\n        {\n            if (this._useTab)\n            {\n                InputController.fireTab();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 38)\n        {\n            if (this._usePrev)\n            {\n                InputController.firePrev();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 40)\n        {\n            if (this._useNext)\n            {\n                InputController.fireNext();\n                e.preventDefault();\n            }\n        }\n    };\n\n    private documentMouseDown = (): void =>\n    {\n        if (!this.__down)\n        {\n            this.blur();\n        }\n    };\n\n    private _bindEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.on('pointerdown', this.documentMouseDown);\n            document.addEventListener('keydown', this.keyDownEvent);\n        }\n    };\n\n    private _clearEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.off('pointerdown', this.documentMouseDown);\n            document.removeEventListener('keydown', this.keyDownEvent);\n        }\n    };\n}\n","import { ClickEvent } from './Interaction/ClickEvent.js';\nimport { InputBase } from './InputBase';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface IButtonOptions\n{\n    background?: Sprite;\n    text?: string;\n    tabIndex?: number;\n    tabGroup?: any;\n    width?: number;\n    height?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n * @param [options.text=null] {PIXI.UI.Text} optional text\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.width=options.background.width] {Number|String} width\n * @param [options.height=options.background.height] {Number|String} height\n */\nexport class Button extends InputBase\n{\n    background: Sprite;\n    isHover: boolean;\n    uiText: any;\n\n    click: () => void;\n    initialize: () => void;\n\n    constructor(options: IButtonOptions)\n    {\n        super(\n            options.width || (options.background ? options.background.width : 100),\n            options.height || (options.background ? options.background.height : 100),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this.background = options.background;\n\n        if (this.background)\n        {\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.background.pivot = 0.5;\n            this.background.verticalAlign = 'middle';\n            this.background.horizontalAlign = 'center';\n            this.addChild(this.background);\n        }\n\n        this.isHover = false;\n        this.uiText = options.text;\n\n        if (this.uiText)\n        {\n            this.uiText.verticalAlign = 'middle';\n            this.uiText.horizontalAlign = 'center';\n            this.addChild(this.uiText);\n        }\n\n        this.container.buttonMode = true;\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent = new ClickEvent(this);\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                InputBase.prototype.focus.call(this);\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                InputBase.prototype.blur.call(this);\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n\n        this.initialize = (): void =>\n        {\n            super.initialize();\n            this.container.interactiveChildren = false;\n            // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n\n            setTimeout(() =>\n            {\n                const bounds = this.container.getLocalBounds();\n\n                this.container.hitArea = new PIXI.Rectangle(\n                    bounds.x < 0 ? bounds.x : 0,\n                    bounds.y < 0 ? bounds.y : 0,\n                    Math.max(bounds.x + bounds.width + (bounds.x < 0 ? -bounds.x : 0), this._width),\n                    Math.max(bounds.y + bounds.height + (bounds.y < 0 ? -bounds.y : 0), this._height),\n                );\n            }, 20);\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    get value(): string\n    {\n        if (this.uiText)\n        {\n            return this.uiText.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.uiText)\n        {\n            this.uiText.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.uiText;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { InputBase } from './InputBase';\nimport { ClickEvent } from './Interaction/ClickEvent';\nimport { InputController } from './Interaction/InputController';\nimport { Sprite } from './Sprite';\n\ninterface ICheckBoxOptions\n{\n    checked?: boolean;\n    background: Sprite;\n    checkmark?: Sprite;\n    checkgroup?: any;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param [options.checked=false] {bool} is checked\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n * @param [options.checkgroup=null] {String} CheckGroup name\n * @param options.value {String} mostly used along with checkgroup\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n */\nexport class CheckBox extends InputBase\n{\n    private _checked: boolean;\n    private _value: string;\n    private checkGroup: any;\n\n    background: Sprite;\n    checkmark: Sprite;\n\n    change: (val: boolean) => void;\n    click: () => void;\n\n    constructor(options: ICheckBoxOptions)\n    {\n        super(\n            options.background.width,\n            options.background.height,\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkgroup || null;\n\n        this.background = options.background;\n        this.background.width = '100%';\n        this.background.height = '100%';\n        this.addChild(this.background);\n\n        this.checkmark = options.checkmark;\n\n        if (this.checkmark)\n        {\n            this.checkmark.verticalAlign = 'middle';\n            this.checkmark.horizontalAlign = 'center';\n\n            if (!this._checked)\n            {\n                this.checkmark.alpha = 0;\n            }\n\n            this.addChild(this.checkmark);\n        }\n\n        this.container.buttonMode = true;\n\n        if (this.checkGroup !== null)\n        {\n            InputController.registrerCheckGroup(this);\n        }\n\n        // var keyDownEvent = function (e) {\n        //    if (e.which === 32) { //space\n        //        self.click();\n        //    }\n        // };\n\n        const clickEvent = new ClickEvent(this);\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.change = (val): void =>\n        {\n            if (this.checkmark)\n            {\n                this.checkmark.alpha = val ? 1 : 0;\n            }\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n\n            if (this.checkGroup !== null && this.checked)\n            {\n                return;\n            }\n\n            this.checked = !this.checked;\n            this.emit('change', this.checked);\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                super.focus();\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                super.blur();\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                InputController.updateCheckGroupSelected(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            InputController.updateCheckGroupSelected(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return InputController.getCheckGroupSelectedValue(this.checkGroup);\n    }\n    set selectedValue(val: string)\n    {\n        InputController.setCheckGroupSelectedValue(this.checkGroup, val);\n    }\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","import { UIBase } from './UIBase';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param width {Number} Width of the Container\n * @param height {Number} Height of the Container\n */\nexport class Container extends UIBase\n{\n    constructor(width: number, height: number)\n    {\n        super(width, height);\n        this.container.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    }\n\n    update()\n    {\n        // if (this.container.interactive) {\n        this.container.hitArea.width = this._width;\n        this.container.hitArea.height = this._height;\n        // }\n    }\n}\n\n","function DynamicTextStyle(parent)\n{\n    this.respectDirty = true;\n    this._parent = parent || null;\n    this._scale = 1;\n    this._align = 'left';\n    this._fontFamily = 'Arial';\n    this._fontSize = 26;\n    this._fontWeight = 'normal';\n    this._fontStyle = 'normal';\n    this._letterSpacing = 0;\n    this._lineHeight = 0;\n    this._verticalAlign = 0;\n    this._rotation = 0;\n    this._skew = 0;\n    this._tint = '#FFFFFF';\n    this._fill = '#FFFFFF';\n    this._shadow = '';\n    this._stroke = 0;\n    this._strokeFill = '';\n    this._strokeShadow = '';\n    this._wrap = true;\n    this._breakWords = false;\n    this._overflowX = 'visible'; // visible|hidden\n    this._overflowY = 'visible'; // visible|hidden\n    this._ellipsis = false;\n\n    let _cachedEllipsisSize = null;\n\n    this.ellipsisSize = function (atlas)\n    {\n        if (!this.ellipsis) return 0;\n        if (_cachedEllipsisSize === null)\n        { _cachedEllipsisSize = (atlas.getCharObject('.', this).width + this.letterSpacing) * 3; }\n\n        return _cachedEllipsisSize;\n    };\n}\n\nDynamicTextStyle.prototype.clone = function ()\n{\n    const style = new DynamicTextStyle();\n\n    style.merge(this);\n\n    return style;\n};\n\nDynamicTextStyle.prototype.merge = function (style)\n{\n    if (typeof style === 'object')\n    {\n        this.respectDirty = false;\n        for (const param in style)\n        {\n            const val = style[param];\n\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\n            this[param] = style[param];\n        }\n        this.respectDirty = true;\n        this._dirty = true;\n    }\n};\n\nDynamicTextStyle.prototype.ctxKey = function (char)\n{\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\n};\n\nDynamicTextStyle.prototype.ctxFont = function ()\n{\n    const fontSize = `${Math.min(200, Math.max(1, this.fontSize || 26))}px `;\n    const fontWeight = this.fontWeight === 'bold' ? `${this.fontWeight} ` : '';\n    const fontStyle = this.fontStyle === 'italic' || this.fontStyle === 'oblique' ? `${this.fontStyle} ` : '';\n\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\n};\n\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\n\nexport { DynamicTextStyle };\n\nObject.defineProperties(DynamicTextStyle.prototype, {\n    _dirty: {\n        set(val)\n        {\n            if (this.respectDirty)\n            {\n                if (this._parent !== null)\n                {\n                    this._parent.dirtyStyle = val;\n                    this._parent.update();\n                }\n            }\n        },\n    },\n    scale: {\n        get()\n        {\n            return this._scale;\n        },\n        set(val)\n        {\n            if (val !== this._scale)\n            {\n                this._scale = val;\n                this._dirty = true;\n            }\n        },\n    },\n    align: {\n        get()\n        {\n            return this._align;\n        },\n        set(val)\n        {\n            if (val !== this._align)\n            {\n                this._align = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontFamily: {\n        get()\n        {\n            return this._fontFamily;\n        },\n        set(val)\n        {\n            if (val !== this._fontFamily)\n            {\n                this._fontFamily = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontSize: {\n        get()\n        {\n            return this._fontSize;\n        },\n        set(val)\n        {\n            if (val !== this._fontSize)\n            {\n                this._fontSize = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontWeight: {\n        get()\n        {\n            return this._fontWeight;\n        },\n        set(val)\n        {\n            if (val !== this._fontWeight)\n            {\n                this._fontWeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontStyle: {\n        get()\n        {\n            return this._fontStyle;\n        },\n        set(val)\n        {\n            if (val !== this._fontStyle)\n            {\n                this._fontStyle = val;\n                this._dirty = true;\n            }\n        },\n    },\n    letterSpacing: {\n        get()\n        {\n            return this._letterSpacing;\n        },\n        set(val)\n        {\n            if (val !== this._letterSpacing)\n            {\n                this._letterSpacing = val;\n                this._dirty = true;\n            }\n        },\n    },\n    lineHeight: {\n        get()\n        {\n            return this._lineHeight;\n        },\n        set(val)\n        {\n            if (val !== this._lineHeight)\n            {\n                this._lineHeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    verticalAlign: {\n        get()\n        {\n            return this._verticalAlign;\n        },\n        set(val)\n        {\n            if (val !== this._verticalAlign)\n            {\n                this._verticalAlign = val;\n                this._dirty = true;\n            }\n        },\n    },\n    rotation: {\n        get()\n        {\n            return this._rotation;\n        },\n        set(val)\n        {\n            if (val !== this._rotation)\n            {\n                this._rotation = val;\n                this._dirty = true;\n            }\n        },\n    },\n    skew: {\n        get()\n        {\n            return this._skew;\n        },\n        set(val)\n        {\n            if (val !== this._skew)\n            {\n                this._skew = val;\n                this._dirty = true;\n            }\n        },\n    },\n    tint: {\n        get()\n        {\n            return this._tint;\n        },\n        set(val)\n        {\n            if (val !== this._tint)\n            {\n                this._tint = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fill: {\n        get()\n        {\n            return this._fill;\n        },\n        set(val)\n        {\n            if (val !== this._fill)\n            {\n                this._fill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    shadow: {\n        get()\n        {\n            return this._shadow;\n        },\n        set(val)\n        {\n            if (val !== this._shadow)\n            {\n                this._shadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    stroke: {\n        get()\n        {\n            return this._stroke;\n        },\n        set(val)\n        {\n            if (val !== this._stroke)\n            {\n                this._stroke = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeFill: {\n        get()\n        {\n            return this._strokeFill;\n        },\n        set(val)\n        {\n            if (val !== this._strokeFill)\n            {\n                this._strokeFill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeShadow: {\n        get()\n        {\n            return this._strokeShadow;\n        },\n        set(val)\n        {\n            if (val !== this._strokeShadow)\n            {\n                this._strokeShadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    wrap: {\n        get()\n        {\n            return this._wrap;\n        },\n        set(val)\n        {\n            if (val !== this._wrap)\n            {\n                this._wrap = val;\n                this._dirty = true;\n            }\n        },\n    },\n    breakWords: {\n        get()\n        {\n            return this._breakWords;\n        },\n        set(val)\n        {\n            if (val !== this._breakWords)\n            {\n                this._breakWords = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowX: {\n        get()\n        {\n            return this._overflowX;\n        },\n        set(val)\n        {\n            if (val !== this._overflowX)\n            {\n                this._overflowX = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowY: {\n        get()\n        {\n            return this._overflowY;\n        },\n        set(val)\n        {\n            if (val !== this._overflowY)\n            {\n                this._overflowY = val;\n                this._dirty = true;\n            }\n        },\n    },\n    ellipsis: {\n        get()\n        {\n            return this._ellipsis;\n        },\n        set(val)\n        {\n            if (val !== this._ellipsis)\n            {\n                this._ellipsis = val;\n                this._dirty = true;\n            }\n        },\n    },\n});\n","function DynamicChar()\n{\n    // styledata (texture, orig width, orig height)\n    this.style = null;\n\n    // char data\n    this.data = null;\n\n    // is this char space?\n    this.space = false;\n\n    // is this char newline?\n    this.newline = false;\n\n    this.emoji = false;\n\n    // charcode\n    this.charcode = 0;\n\n    // char string value\n    this.value = '';\n\n    // word index\n    this.wordIndex = -1;\n\n    // line index of char\n    this.lineIndex = -1;\n}\n\nDynamicChar.prototype.constructor = DynamicChar;\n\nexport { DynamicChar };\n","import { UIBase } from '../UIBase';\nimport { DynamicTextStyle } from './DynamicTextStyle';\nimport { DynamicChar }  from './DynamicChar';\nimport emojiRegex  from 'emoji-regex';\nlet atlas = null;\n\n/**\n* An dynamic text object with auto generated atlas\n*\n* @class\n* @extends PIXI.UI.UIBase\n* @memberof PIXI.UI\n* @param text {String} Text content\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\n* @param [allowTags=true] {boolean} Allow inline styling\n* @param [options=null] {DynamicTextStyle} Additional text settings\n*/\nfunction DynamicText(text, options)\n{\n    options = options || {};\n\n    UIBase.call(this, options.width || 0, options.height || 0);\n\n    // create atlas\n    if (atlas === null)\n    { atlas = new DynamicAtlas(1); }\n\n    const autoWidth = !options.width;\n    const autoHeight = !options.height;\n\n    // defaultstyle for this textobject\n    const defaultStyle = this._style = new DynamicTextStyle(this);\n\n    defaultStyle.merge(options.style);\n\n    // collection of all processed char\n    const chars = this.chars = [];\n    const renderChars = [];\n    const spriteCache = []; // (temp)\n    const charContainer = new PIXI.Container();\n\n    this.container.addChild(charContainer);\n\n    // the input text\n    this._inputText = text;\n\n    // list of rendered sprites (temp)\n    const sprites = [];\n\n    // states\n    let lastWidth = 0;\n    let lastHeight = 0;\n\n    this.dirtyText = true;\n    this.dirtyStyle = true;\n    this.dirtyRender = true;\n\n    // dictionary for line data\n    const lineWidthData = [];\n    const lineHeightData = [];\n    const lineFontSizeData = [];\n    const lineAlignmentData = [];\n    let renderCount = 0;\n    let charCount = 0;\n\n    // ellipsis caches (not nessesary when no sprites)\n    const lineEllipsisData = [];\n    const lineHasEllipsis = [];\n\n    // ROUGH TEMP RENDER (with sprites)\n    this.render = function ()\n    {\n        let yOffset = 0;\n        let xOffset = 0;\n        let currentLine = -1;\n        let i;\n\n        if (spriteCache.length > renderCount)\n        {\n            for (i = renderCount; i < spriteCache.length; i++)\n            {\n                const removeSprite = spriteCache[i];\n\n                if (removeSprite)\n                { removeSprite.visible = false; }\n            }\n        }\n\n        let char; let lineWidth = 0; let lineHeight = 0; let\n            maxLineWidth = 0;\n\n        for (i = 0; i < renderCount; i++)\n        {\n            char = renderChars[i];\n\n            // get line data\n            if (currentLine !== char.lineIndex)\n            {\n                currentLine = char.lineIndex;\n                lineWidth = lineWidthData[currentLine];\n                lineHeight = lineHeightData[currentLine];\n                yOffset += lineHeight;\n\n                switch (lineAlignmentData[currentLine])\n                {\n                    case 'right': xOffset = this._width - lineWidth; break;\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\n                    default: xOffset = 0;\n                }\n\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\n            }\n\n            // no reason to render a blank space or 0x0 letters (no texture created)\n            if (!char.data.texture || char.space || char.newline)\n            {\n                if (spriteCache[i])\n                { spriteCache[i].visible = false; }\n                continue;\n            }\n\n            // add new sprite\n            const tex = char.data.texture; let\n                sprite = spriteCache[i];\n\n            if (!sprite)\n            {\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\n                sprite.anchor.set(0.5);\n            }\n            else\n            { sprite.texture = tex; }\n\n            sprite.visible = true;\n            sprite.x = char.x + xOffset + tex.width * 0.5;\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\n\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\n            sprite.rotation = float(char.style.rotation, 0);\n            sprite.skew.x = float(char.style.skew, 0);\n\n            if (!sprite.parent)\n            { charContainer.addChild(sprite); }\n        }\n\n        if (autoWidth) this.width = maxLineWidth;\n        if (autoHeight) this.height = yOffset;\n    };\n\n    // updates the renderChar array and position chars for render\n    this.prepareForRender = function ()\n    {\n        const pos = new PIXI.Point();\n        let wordIndex = 0;\n        let lineHeight = 0;\n        let lineFontSize = 0;\n        let lineIndex = 0;\n        let lineAlignment = defaultStyle.align;\n        let lastSpaceIndex = -1;\n        let lastSpaceLineWidth = 0;\n        let textHeight = 0;\n        let forceNewline = false;\n        let style;\n        let renderIndex = 0;\n        let ellipsis = false;\n        let lineFull = false;\n        let i;\n\n        for (i = 0; i < charCount; i++)\n        {\n            const char = chars[i]; const\n                lastChar = chars[i - 1];\n\n            style = char.style;\n\n            // lineheight\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\n\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height)\n            {\n                if (style.overflowY === 'hidden')\n                { break; }\n            }\n\n            if (char.newline)\n            { lineFull = false; }\n\n            // set word index\n            if (char.space || char.newline) wordIndex++;\n            else char.wordIndex = wordIndex;\n\n            // textheight\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\n\n            // lineindex\n            char.lineIndex = lineIndex;\n\n            // lineAlignment\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\n\n            if (char.space)\n            {\n                lastSpaceIndex = i;\n                lastSpaceLineWidth = pos.x;\n            }\n\n            const size = Math.round(char.data.width) + float(style.letterSpacing, 0);\n\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width)\n            {\n                if (style.wrap)\n                {\n                    if (char.space)\n                    {\n                        forceNewline = true;\n                    }\n                    else if (lastSpaceIndex !== -1)\n                    {\n                        renderIndex -= i - lastSpaceIndex;\n                        i = lastSpaceIndex - 1;\n                        lastSpaceIndex = -1;\n                        pos.x = lastSpaceLineWidth;\n                        forceNewline = true;\n                        continue;\n                    }\n                    else if (style.breakWords)\n                    {\n                        if (lastChar)\n                        {\n                            pos.x -= lastChar.style.letterSpacing;\n                            pos.x -= lastChar.data.width;\n                        }\n                        i -= 2;\n                        renderIndex--;\n                        forceNewline = true;\n                        continue;\n                    }\n                }\n\n                if (style.overflowX == 'hidden' && !forceNewline)\n                {\n                    lineFull = true;\n                    if (style.ellipsis && !ellipsis)\n                    {\n                        ellipsis = true;\n                        let ellipsisData = lineEllipsisData[lineIndex];\n\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\n                        for (let d = 0; d < 3; d++)\n                        {\n                            const dot = ellipsisData[d];\n\n                            dot.value = '.';\n                            dot.data = atlas.getCharObject(dot.value, style);\n                            dot.style = style;\n                            dot.x = pos.x + char.data.xOffset;\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\n                            dot.lineIndex = lineIndex;\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\n                            renderChars[renderIndex] = dot;\n                            renderIndex++;\n                        }\n                    }\n                }\n            }\n\n            // Update position and add to renderchars\n            if (!lineFull)\n            {\n                // position\n                char.x = pos.x + char.data.xOffset;\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\n                pos.x += size;\n                renderChars[renderIndex] = char;\n                renderIndex++;\n            }\n\n            // new line\n            if (forceNewline || char.newline || i === charCount - 1)\n            {\n                if (lastChar)\n                {\n                    pos.x -= lastChar.style.letterSpacing;\n                }\n\n                if (char.space)\n                {\n                    pos.x -= char.data.width;\n                    pos.x -= float(style.letterSpacing, 0);\n                }\n\n                textHeight += lineHeight;\n                lineHasEllipsis[lineIndex] = ellipsis;\n                lineWidthData[lineIndex] = pos.x;\n                lineHeightData[lineIndex] = lineHeight;\n                lineFontSizeData[lineIndex] = lineFontSize;\n                lineAlignmentData[lineIndex] = lineAlignment;\n\n                // reset line vaules\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\n                lineAlignment = defaultStyle.align;\n                lastSpaceIndex = -1;\n                lineIndex++;\n                forceNewline = lineFull = ellipsis = false;\n            }\n        }\n\n        renderCount = renderIndex;\n    };\n\n    // phrases the input text and prepares the char array\n    const closeTags = ['</i>', '</b>', '</font>', '</center>'];\n\n    this.processInputText = function ()\n    {\n        const styleTree = [defaultStyle];\n        let charIndex = 0;\n        let inputTextIndex = 0;\n        const inputArray = Array.from(this._inputText);\n\n        for (let i = 0; i < inputArray.length; i++)\n        {\n            style = styleTree[styleTree.length - 1];\n            let c = inputArray[i];\n            const charcode = c.charCodeAt(0);\n            let newline = false;\n            let space = false;\n            let emoji = false;\n\n            // Extract Tags\n            if ((/(?:\\r\\n|\\r|\\n)/).test(c))\n            { newline = true; }\n            else if ((/(\\s)/).test(c))\n            { space = true; }\n            else if (options.allowTags && c === '<')\n            {\n                let tag = this._inputText.substring(inputTextIndex);\n\n                tag = tag.slice(0, tag.indexOf('>') + 1);\n                let FoundTag = true;\n\n                if (tag.length)\n                {\n                    if (tag === '<i>')\n                    {\n                        style = style.clone();\n                        style.fontStyle = 'italic';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<b>')\n                    {\n                        style = style.clone();\n                        style.fontWeight = 'bold';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<center>')\n                    {\n                        style = style.clone();\n                        style.align = 'center';\n                        styleTree.push(style);\n                    }\n                    else if (closeTags.indexOf(tag) !== -1)\n                    {\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\n                    }\n                    else if (tag.startsWith('<font '))\n                    {\n                        const regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g;\n                        let match = regex.exec(tag);\n\n                        if (match !== null)\n                        {\n                            style = style.clone();\n                            while (match !== null)\n                            {\n                                switch (match[1])\n                                {\n                                    case 'family': match[1] = 'fontFamily'; break;\n                                    case 'size': match[1] = 'fontSize'; break;\n                                    case 'weight': match[1] = 'fontWeight'; break;\n                                    case 'style': match[1] = 'fontStyle'; break;\n                                    case 'valign': match[1] = 'verticalAlign'; break;\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\n                                    case 'color': match[1] = 'tint'; break;\n                                }\n                                style[match[1]] = match[4];\n                                match = regex.exec(tag);\n                            }\n                            styleTree.push(style);\n                        }\n                    }\n                    else\n                    {\n                        FoundTag = false;\n                    }\n\n                    if (FoundTag)\n                    {\n                        inputTextIndex += tag.length;\n                        i += tag.length - 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                // detect emoji\n                let emojiMatch = emojiRegex().exec(c);\n\n                if (emojiMatch !== null)\n                {\n                    i--; c = '';\n                    while (emojiMatch !== null && c !== emojiMatch[0])\n                    {\n                        i++;\n                        c = emojiMatch[0];\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\n                    }\n                    emoji = true;\n                }\n            }\n\n            // Prepare DynamicChar object\n            let char = chars[charIndex];\n\n            if (!char)\n            {\n                char = new DynamicChar();\n                chars[charIndex] = char;\n            }\n            char.style = style;\n\n            if (emoji)\n            {\n                char.style = char.style.clone();\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\n            }\n\n            char.data = atlas.getCharObject(c, char.style);\n            char.value = c;\n            char.space = space;\n            char.newline = newline;\n            char.emoji = emoji;\n\n            charIndex++;\n            inputTextIndex += c.length;\n        }\n        charCount = charIndex;\n    };\n\n    // PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\n    this.lazyUpdate = null;\n    const self = this;\n\n    this.update = function ()\n    {\n        if (self.lazyUpdate !== null) return;\n        self.lazyUpdate = setTimeout(function ()\n        {\n            // console.log(\"UPDATING TEXT\");\n            const dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\n\n            if (self.dirtyText || self.dirtyStyle)\n            {\n                self.dirtyText = self.dirtyStyle = false;\n                self.dirtyRender = true; // force render after textchange\n                self.processInputText();\n            }\n\n            if (dirtySize || self.dirtyRender)\n            {\n                self.dirtyRender = false;\n                lastWidth = self._width;\n                lastHeight = self.height;\n                self.prepareForRender();\n                self.render();\n            }\n            self.lazyUpdate = null;\n        }, 0);\n    };\n}\n\nDynamicText.prototype = Object.create(UIBase.prototype);\nDynamicText.prototype.constructor = DynamicText;\n\nexport { DynamicText };\n\nDynamicText.settings = {\n    debugSpriteSheet: false,\n    defaultEmojiFont: 'Segoe UI Emoji', // force one font family for emojis so we dont rerender them multiple times\n};\n\nObject.defineProperties(DynamicText.prototype, {\n    value: {\n        get()\n        {\n            return this._inputText;\n        },\n        set(val)\n        {\n            if (val !== this._inputText)\n            {\n                this._inputText = val;\n                this.dirtyText = true;\n                this.update();\n                // console.log(\"Updating Text to: \" + val);\n            }\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n    style: {\n        get()\n        {\n            return this._style;\n        },\n        set(val)\n        {\n            // get a clean default style\n            const style = new DynamicTextStyle(this);\n\n            // merge it with new style\n            style.merge(val);\n\n            // merge it onto this default style\n            this._style.merge(style);\n\n            this.dirtyStyle = true;\n            this.update();\n        },\n    },\n});\n\n// Atlas\nconst metricsCanvas = document.createElement('canvas');\nconst metricsContext = metricsCanvas.getContext('2d');\n\nmetricsCanvas.width = 100;\nmetricsCanvas.height = 100;\n\nvar DynamicAtlas = function (padding)\n{\n    const res = devicePixelRatio || 1;\n    let canvas;\n    let context;\n    let objects;\n    let newObjects = [];\n    let baseTexture;\n    let lazyTimeout;\n    let rootNode;\n    const canvasList = [];\n    let atlasdim;\n    const startdim = 256;\n    const maxdim = 2048;\n\n    var AtlasNode = function (w, h)\n    {\n        const children = this.children = [];\n\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\n        this.data = null;\n\n        this.insert = function (width, height, obj)\n        {\n            if (children.length > 0)\n            {\n                const newNode = children[0].insert(width, height, obj);\n\n                if (newNode !== null) return newNode;\n\n                return children[1].insert(width, height, obj);\n            }\n            if (this.data !== null) return null;\n            if (width > this.rect.width || height > this.rect.height) return null;\n            if (width == this.rect.width && height == this.rect.height)\n            {\n                this.data = obj;\n                obj.frame.x = this.rect.x;\n                obj.frame.y = this.rect.y;\n\n                return this;\n            }\n\n            children.push(new AtlasNode());\n            children.push(new AtlasNode());\n\n            const dw = this.rect.width - width;\n            const dh = this.rect.height - height;\n\n            if (dw > dh)\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\n            }\n            else\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\n            }\n\n            return children[0].insert(width, height, obj);\n        };\n    };\n\n    const addCanvas = function ()\n    {\n        // create new canvas\n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvasList.push(canvas);\n\n        // reset dimentions\n        atlasdim = startdim;\n        canvas.width = canvas.height = atlasdim;\n        rootNode = new AtlasNode(atlasdim, atlasdim);\n\n        // reset array with canvas objects and create new atlas\n        objects = [];\n\n        // set new basetexture\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\n        baseTexture.mipmap = false; // if not, pixi bug resizing POW2\n        baseTexture.resolution = 1; // todo: support all resolutions\n        baseTexture.update();\n\n        // Debug Spritesheet\n        if (DynamicText.settings.debugSpriteSheet)\n        {\n            canvas.className = 'DynamicText_SpriteSheet';\n            document.body.appendChild(canvas);\n        }\n    };\n\n    this.fontFamilyCache = {};\n\n    const drawObjects = function (arr, resized)\n    {\n        if (resized) baseTexture.update();\n        for (let i = 0; i < arr.length; i++)\n        { drawObject(arr[i]); }\n    };\n\n    var drawObject = function (obj)\n    {\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\n        obj.texture.frame = obj.frame;\n        obj.texture.update();\n    };\n\n    this.getCharObject = function (char, style)\n    {\n        const font = style.ctxFont();\n\n        // create new cache for fontFamily\n        let familyCache = this.fontFamilyCache[font];\n\n        if (!familyCache)\n        {\n            familyCache = {};\n            this.fontFamilyCache[font] = familyCache;\n        }\n\n        // get char data\n        const key = style.ctxKey(char);\n        let obj = familyCache[key];\n\n        if (!obj)\n        {\n            // create char object\n            const metrics = generateCharData(char, style);\n\n            // temp resize if doesnt fit (not nesseary when we dont need to generate textures)\n            if (metrics.rect)\n            {\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height)\n                {\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\n                    baseTexture.update();\n                }\n            }\n\n            // todo: cleanup when we know whats needed\n            obj = {\n                metrics,\n                font,\n                value: char,\n                frame: metrics.rect,\n                baseTexture: metrics.rect ? baseTexture : null,\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\n                yOffset: metrics.descent || 0,\n                width: metrics.width || 0,\n                lineHeight: metrics.lineHeight || 0,\n                _cache: metrics.canvas,\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null, // temp texture\n            };\n\n            // add to collections\n            familyCache[key] = obj;\n\n            // add to atlas if visible char\n            if (metrics.rect)\n            {\n                newObjects.push(obj);\n\n                if (lazyTimeout === undefined)\n                {\n                    lazyTimeout = setTimeout(function ()\n                    {\n                        addNewObjects();\n                        lazyTimeout = undefined;\n                    }, 0);\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    const compareFunction = function (a, b)\n    {\n        if (a.frame.height < b.frame.height)\n        { return 1; }\n\n        if (a.frame.height > b.frame.height)\n        { return -1; }\n\n        if (a.frame.width < b.frame.width)\n        { return 1; }\n\n        if (a.frame.width > b.frame.width)\n        { return -1; }\n\n        return 0;\n    };\n\n    var addNewObjects = function ()\n    {\n        newObjects.sort(compareFunction);\n        let _resized = false;\n        let _newcanvas = false;\n\n        for (let i = 0; i < newObjects.length; i++)\n        {\n            const obj = newObjects[i];\n            const node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n\n            if (node !== null)\n            {\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; // update basetexture if new canvas was created (temp)\n                objects.push(obj);\n                continue;\n            }\n\n            // step one back (so it will be added after resize/new canvas)\n            i--;\n\n            if (atlasdim < maxdim)\n            {\n                _resized = true;\n                resizeCanvas(atlasdim * 2);\n                continue;\n            }\n\n            // close current spritesheet and make a new one\n            drawObjects(objects, _resized);\n            addCanvas();\n            _newcanvas = true;\n            _resized = false;\n        }\n\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\n        newObjects = [];\n    };\n\n    var resizeCanvas = function (dim)\n    {\n        canvas.width = canvas.height = atlasdim = dim;\n\n        rootNode = new AtlasNode(dim, dim);\n        objects.sort(compareFunction);\n\n        for (let i = 0; i < objects.length; i++)\n        {\n            const obj = objects[i];\n\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n        }\n    };\n\n    var generateCharData = function (char, style)\n    {\n        const fontSize = Math.max(1, int(style.fontSize, 26));\n        const lineHeight = fontSize * 1.25;\n\n        // Start our returnobject\n        const data = {\n            fontSize,\n            lineHeight,\n            width: 0,\n        };\n\n        // Return if newline\n        if (!char || (/(?:\\r\\n|\\r|\\n)/).test(char))\n        { return data; }\n\n        // Ctx font string\n        const font = style.ctxFont();\n\n        metricsContext.font = font;\n\n        // Get char width\n        data.width = Math.round(metricsContext.measureText(char).width);\n\n        // Return if char = space\n        if ((/(\\s)/).test(char)) return data;\n\n        // set canvas size (with padding so we can messure)\n        const paddingY = Math.round(fontSize * 0.7); const\n            paddingX = Math.max(5, Math.round(fontSize * 0.7));\n\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\n        metricsCanvas.height = 1.5 * fontSize;\n        const w = metricsCanvas.width; const h = metricsCanvas.height; const\n            baseline = (h / 2) + (paddingY * 0.5);\n\n        // set font again after resize\n        metricsContext.font = font;\n\n        // make sure canvas is clean\n        metricsContext.clearRect(0, 0, w, h);\n\n        // save clean state with font\n        metricsContext.save();\n\n        // convert shadow string to shadow data\n        const shadowData = function (str)\n        {\n            const data = str.trim().split(' ');\n\n            return {\n                color: string(data[0], '#000000'),\n                alpha: float(data[1], 0.5),\n                xOffset: float(data[2], 3),\n                yOffset: float(data[3], 3),\n                blur: float(data[4], 5),\n            };\n        };\n\n        // convert fill string to fill data\n        const fillData = function (str)\n        {\n            const data = str.trim().split(' ');\n            const c = string(data[0], '#FFFFFF');\n            const a = float(data[1], 1);\n\n            return {\n                color: c,\n                alpha: a,\n                position: float(data[2], -1),\n                rgba: hexToRgba(c, a),\n            };\n        };\n\n        // create fill style from fill string\n        const getFillStyle = function (str)\n        {\n            const fills = str.split(',').filter(function (s) { return s !== ''; }); let\n                i;\n\n            // convert to fill data\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\n\n            switch (fills.length)\n            {\n                case 0: return 'white';\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || '#FFFFFF';\n                default:\n                    // make gradient\n                    try\n                    {\n                        const gradEnd = baseline + lineHeight - fontSize;\n                        const gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\n\n                        for (i = 0; i < fills.length; i++)\n                        { gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color); }\n\n                        return gradient;\n                    }\n                    catch (e)\n                    {\n                        return '#FFFFFF';\n                    }\n            }\n        };\n\n        // function to draw shadows\n        const drawShadows = function (shadowString, stroke)\n        {\n            const shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\n\n            if (shadows.length)\n            {\n                for (let i = 0; i < shadows.length; i++)\n                {\n                    const s = shadowData(shadows[i]);\n\n                    metricsContext.globalAlpha = s.alpha;\n                    metricsContext.shadowColor = s.color;\n                    metricsContext.shadowOffsetX = s.xOffset + w;\n                    metricsContext.shadowOffsetY = s.yOffset;\n                    metricsContext.shadowBlur = s.blur;\n\n                    if (stroke)\n                    {\n                        metricsContext.lineWidth = style.stroke;\n                        metricsContext.strokeText(char, paddingX - w, baseline);\n                    }\n                    else metricsContext.fillText(char, paddingX - w, baseline);\n                }\n                metricsContext.restore();\n            }\n        };\n\n        // draw text shadows\n        if (style.shadow.length)\n        { drawShadows(style.shadow, false); }\n\n        // draw stroke shadows\n        if (style.stroke && style.strokeShadow.length)\n        {\n            drawShadows(style.strokeShadow, true);\n        }\n\n        // draw text\n        metricsContext.fillStyle = getFillStyle(string(style.fill, '#000000'));\n        metricsContext.fillText(char, paddingX, baseline);\n        metricsContext.restore();\n\n        // draw stroke\n        if (style.stroke)\n        {\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, '#000000'));\n            metricsContext.lineWidth = style.stroke;\n            metricsContext.strokeText(char, paddingX, baseline);\n            metricsContext.restore();\n        }\n\n        // begin messuring\n        const pixelData = metricsContext.getImageData(0, 0, w, h).data;\n\n        let i = 3;\n        const line = w * 4;\n        const len = pixelData.length;\n\n        // scanline on alpha\n        while (i < len && !pixelData[i]) { i += 4; }\n        const ascent = (i / line) | 0;\n\n        if (i < len)\n        {\n            // rev scanline on alpha\n            i = len - 1;\n            while (i > 0 && !pixelData[i]) { i -= 4; }\n            const descent = (i / line) | 0;\n\n            // left to right scanline on alpha\n            for (i = 3; i < len && !pixelData[i];)\n            {\n                i += line;\n                if (i >= len) { i = (i - len) + 4; }\n            }\n            const minx = ((i % line) / 4) | 0;\n\n            // right to left scanline on alpha\n            let step = 1;\n\n            for (i = len - 1; i >= 0 && !pixelData[i];)\n            {\n                i -= line;\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\n            }\n            const maxx = ((i % line) / 4) + 1 | 0;\n\n            // set font metrics\n            data.ascent = Math.round(baseline - ascent);\n            data.descent = Math.round(descent - baseline);\n            data.height = 1 + Math.round(descent - ascent);\n            data.bounds = {\n                minx: minx - paddingX,\n                maxx: maxx - paddingX,\n                miny: 0,\n                maxy: descent - ascent,\n            };\n            data.rect = {\n                x: data.bounds.minx,\n                y: -data.ascent - 2,\n                width: data.bounds.maxx - data.bounds.minx + 2,\n                height: data.ascent + data.descent + 4,\n            };\n\n            // cache (for fast rearrange later)\n            data.canvas = document.createElement('canvas');\n            data.canvas.width = data.rect.width;\n            data.canvas.height = data.rect.height;\n            const c = data.canvas.getContext('2d');\n\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\n\n            // reset rect position\n            data.rect.x = data.rect.y = 0;\n        }\n\n        return data;\n    };\n\n    addCanvas();\n};\n\n// helper function for float or default\nfunction float(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseFloat(val);\n}\n\n// helper function for int or default\nfunction int(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseInt(val);\n}\n\n// helper function for string or default\nfunction string(val, def)\n{\n    if (typeof val === 'string' && val.length) return val;\n\n    return def;\n}\n\n// helper function to convert string hex to int or default\nfunction hexToInt(str, def)\n{\n    if (typeof str === 'number')\n    { return str; }\n\n    const result = parseInt(str.replace('#', '0x'));\n\n    if (isNaN(result)) return def;\n\n    return result;\n}\n\n// helper function to convert hex to rgba\nfunction hexToRgba(hex, alpha)\n{\n    const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n    alpha = float(alpha, 1);\n\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},${alpha})` : false;\n}\n\n","function EaseBase()\n{\n    this.getPosition = function (p)\n    {\n        return p;\n    };\n}\n\nEaseBase.prototype.constructor = EaseBase;\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","export const Ease = {};\nimport { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst HALF_PI = Math.PI * 0.5;\n\nfunction create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\n// Liear\nEase.Linear = new EaseBase();\n\n// Exponetial Eases\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Ease.Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\n","import * as PIXI from 'pixi.js';\n\nexport class MouseScrollEvent\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    private obj: any;\n\n    constructor(obj: any, preventDefault: boolean)\n    {\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.obj = obj;\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseScrollImpl(e): void\n    {\n        const { obj, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(obj, event, delta);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n\n    stopEvent(): void\n    {\n        const { obj, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        obj.container.removeListener('mouseover', onHoverImpl);\n        obj.container.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    startEvent(): void\n    {\n        const { obj, onHoverImpl, onMouseOutImpl } = this;\n\n        obj.container.on('mouseover', onHoverImpl);\n        obj.container.on('mouseout', onMouseOutImpl);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { ClickEvent } from './ClickEvent';\nimport { DragEvent } from './DragEvent';\nimport { InputController } from './InputController';\nimport { MouseScrollEvent } from './MouseScrollEvent';\n\nexport const Interaction = {\n    ClickEvent,\n    DragEvent,\n    InputController,\n    MouseScrollEvent,\n};\n\nexport default Interaction;\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { UIBase } from './UIBase';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n* An UI Slider, the default width/height is 90%\n*\n* @class\n* @extends UIBase\n* @memberof PIXI.UI\n* @param options {Object} Slider settings\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n* @param [options.vertical=false] {boolean} Direction of the slider\n* @param [options.value=0] {number} value of the slider\n* @param [options.minValue=0] {number} minimum value\n* @param [options.maxValue=100] {number} max value\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\n*/\nexport class Slider extends UIBase\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    constructor(options: ISliderOptions)\n    {\n        super(0, 0);\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.container.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.container.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.container.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.container.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragEvent(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragEvent(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.container.buttonMode = !val;\n            this.handle.container.interactive = !val;\n            this.track.container.interactive = !val;\n        }\n    }\n}\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollingContainer } from './ScrollingContainer';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollingContainer;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PIXI.UI.Slider\n * @memberof PIXI.UI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollingContainer;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { Container } from './Container';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { MouseScrollEvent } from './Interaction/MouseScrollEvent';\nimport * as PIXI from 'pixi.js';\nimport { UIBase } from './UIBase';\n\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    width?: number;\n    height?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * An UI Container object with expandMask hidden and possibility to enable scrolling\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n * @param [options.width=0] {Number|String} container width\n * @param [options.height=0] {Number} container height\n * @param [options.radius=0] {Number} corner radius of clipping mask\n * @param [options.expandMask=0] {Number} mask expand (px)\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n */\nexport class ScrollingContainer extends Container\n{\n    mask: PIXI.Graphics;\n    innerContainer: PIXI.Container;\n    innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    forcePctPosition: (direction: string, pct: number) => void;\n    focusPosition: (pos: PIXI.Point) => void;\n    setScrollPosition: (speed?: PIXI.Point) => void;\n    updateScrollPosition: (delta: number) => void;\n    updateDirection: (direction: string, delta: number) => void;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super(options.width, options.height);\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new PIXI.Container();\n        this.innerBounds = new PIXI.Rectangle();\n        this.container.addChild(this.mask);\n        this.container.addChild(this.innerContainer);\n        this.container.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    update(): void\n    {\n        super.update();\n\n        if (this._lastWidth !== this._width || this._lastHeight !== this._height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n            // this.mask.drawRect(0, 0, this._width, this._height);\n            // this.mask.drawRect(-of, -of, this._width + of, this.height + of);\n            // this.mask.moveTo(-of, -of);\n            // this.mask.lineTo(this._width + of, -of);\n            // this.mask.lineTo(this._width + of, this._height + of);\n            // this.mask.lineTo(-of, this._height + of);\n                this.mask.drawRect(-of, -of, this._width + of, this._height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n            this._lastWidth = this._width;\n            this._lastHeight = this._height;\n        }\n\n        if (this.setScrollPosition)\n        {\n            this.setScrollPosition();\n        }\n    }\n\n    addChild(...newChildren: UIBase[]): UIBase\n    {\n        const argumentsLength = newChildren.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(newChildren[i]);\n            }\n        }\n        else\n        {\n            super.addChild(newChildren[0]);\n            this.innerContainer.addChild(newChildren[0].container);\n            this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n        }\n\n        return newChildren[0];\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    initScrolling(): void\n    {\n        const container = this.innerContainer;\n        const containerStart = new PIXI.Point();\n        const targetPosition = new PIXI.Point();\n        const lastPosition = new PIXI.Point();\n        const Position = new PIXI.Point();\n        let Speed = new PIXI.Point();\n        let stop;\n\n        this.forcePctPosition = (direction: string, pct: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            if (this.scrollX && direction === 'x')\n            {\n                container.position[direction] = -((bounds.width - this._width) * pct);\n            }\n            if (this.scrollY && direction === 'y')\n            {\n                container.position[direction] = -((bounds.height - this._height) * pct);\n            }\n\n            Position[direction] = targetPosition[direction] = container.position[direction];\n        };\n\n        this.focusPosition = (pos: PIXI.Point): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let dif;\n\n            if (this.scrollX)\n            {\n                const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n                if (x + container.x > this._width)\n                {\n                    dif = x - this._width;\n                    container.x = -dif;\n                }\n                else if (x + container.x < 0)\n                {\n                    dif = x + container.x;\n                    container.x -= dif;\n                }\n            }\n\n            if (this.scrollY)\n            {\n                const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n                if (y + container.y > this._height)\n                {\n                    dif = y - this._height;\n                    container.y = -dif;\n                }\n                else if (y + container.y < 0)\n                {\n                    dif = y + container.y;\n                    container.y -= dif;\n                }\n            }\n\n            lastPosition.copyFrom(container.position);\n            targetPosition.copyFrom(container.position);\n            Position.copyFrom(container.position);\n            this.updateScrollBars();\n        };\n\n        this.setScrollPosition = (speed: PIXI.Point): void =>\n        {\n            if (speed)\n            {\n                Speed = speed;\n            }\n\n            if (!this.animating)\n            {\n                this.animating = true;\n                lastPosition.copyFrom(container.position);\n                targetPosition.copyFrom(container.position);\n\n                Ticker.on('update', this.updateScrollPosition, this);\n            }\n        };\n\n        this.updateScrollPosition = (delta: number): void =>\n        {\n            stop = true;\n            if (this.scrollX) this.updateDirection('x', delta);\n            if (this.scrollY) this.updateDirection('y', delta);\n            if (stop)\n            {\n                Ticker.removeListener('update', this.updateScrollPosition);\n                this.animating = false;\n            }\n        };\n\n        this.updateDirection = (direction: string, delta: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let min;\n\n            if (direction === 'y')\n            {\n                min = Math.round(Math.min(0, this._height - bounds.height));\n            }\n            else\n            {\n                min = Math.round(Math.min(0, this._width - bounds.width));\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) !== 0)\n            {\n                targetPosition[direction] += Speed[direction];\n                Speed[direction] = Helpers.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n                if (targetPosition[direction] > 0)\n                {\n                    targetPosition[direction] = 0;\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    targetPosition[direction] = min;\n                }\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) === 0\n                && (container[direction] > 0 || container[direction] < min))\n            {\n                const target = Position[direction] > 0 ? 0 : min;\n\n                Position[direction] = Helpers.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\n                stop = false;\n            }\n            else if (this.scrolling || Math.round(Speed[direction]) !== 0)\n            {\n                if (this.scrolling)\n                {\n                    Speed[direction] = Position[direction] - lastPosition[direction];\n                    lastPosition.copyFrom(Position);\n                }\n                if (targetPosition[direction] > 0)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n                }\n                else\n                {\n                    Position[direction] = targetPosition[direction];\n                }\n                stop = false;\n            }\n\n            container.position[direction] = Math.round(Position[direction]);\n            this.updateScrollBars();\n        };\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag = new DragEvent(this);\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    containerStart.copyFrom(container.position);\n                    Position.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n                    this.emit('dragStart', e);\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragMove = (e, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = containerStart.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = containerStart.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('dragEnd', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new MouseScrollEvent(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n}\n","import { Container } from './Container';\nimport { Tween } from './Tween';\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\n\nfunction SortableList(desc, tweenTime, tweenEase)\n{\n    Container.call(this);\n    this.desc = typeof desc !== 'undefined' ? desc : false;\n    this.tweenTime = tweenTime || 0;\n    this.tweenEase = tweenEase;\n    this.items = [];\n}\n\nSortableList.prototype = Object.create(Container.prototype);\nSortableList.prototype.constructor = SortableList;\nexport { SortableList };\n\nSortableList.prototype.addChild = function (UIObject, fnValue, fnThenBy)\n{\n    Container.prototype.addChild.call(this, UIObject);\n    if (this.items.indexOf(UIObject) == -1)\n    {\n        this.items.push(UIObject);\n    }\n\n    if (typeof fnValue === 'function')\n    { UIObject._sortListValue = fnValue; }\n\n    if (typeof fnThenBy === 'function')\n    { UIObject._sortListThenByValue = fnThenBy; }\n\n    if (!UIObject._sortListRnd)\n    { UIObject._sortListRnd = Math.random(); }\n\n    this.sort();\n};\n\nSortableList.prototype.removeChild = function (UIObject)\n{\n    if (arguments.length > 1)\n    {\n        for (let i = 0; i < arguments.length; i++)\n        {\n            this.removeChild(arguments[i]);\n        }\n    }\n    else\n    {\n        Container.prototype.removeChild.call(this, UIObject);\n        const index = this.items.indexOf(UIObject);\n\n        if (index != -1)\n        {\n            this.items.splice(index, 1);\n        }\n        this.sort();\n    }\n};\n\nSortableList.prototype.sort = function (instant)\n{\n    clearTimeout(this._sortTimeout);\n\n    if (instant)\n    {\n        this._sort();\n\n        return;\n    }\n\n    const _this = this;\n\n    this._sortTimeout = setTimeout(function () { _this._sort(); }, 0);\n};\n\nSortableList.prototype._sort = function ()\n{\n    const self = this;\n    const desc = this.desc;\n    let y = 0;\n    let alt = true;\n\n    this.items.sort(function (a, b)\n    {\n        let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n            : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n        if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n        {\n            res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n        }\n        if (res === 0)\n        {\n            res = a._sortListRnd > b._sortListRnd ? 1\n                : a._sortListRnd < b._sortListRnd ? -1 : 0;\n        }\n\n        return res;\n    });\n\n    for (let i = 0; i < this.items.length; i++)\n    {\n        const item = this.items[i];\n\n        alt = !alt;\n\n        if (this.tweenTime > 0)\n        {\n            Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n        }\n        else\n        {\n            item.x = 0;\n            item.y = y;\n        }\n        y += item.height;\n        if (typeof item.altering === 'function')\n        { item.altering(alt); }\n    }\n\n    // force it to update parents when sort animation is done (prevent scrolling container bug)\n    if (this.tweenTime > 0)\n    {\n        setTimeout(function ()\n        {\n            self.updatesettings(false, true);\n        }, this.tweenTime * 1000);\n    }\n};\n\n","import { UIBase } from './UIBase';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nfunction SliceSprite(texture, borderWidth, horizontalSlice, verticalSlice, tile)\n{\n    UIBase.call(this, texture.width, texture.height);\n\n    let ftl; let ftr; let fbl; let fbr; let ft; let fb; let fl; let fr; let ff; let stl; let str; let sbl; let sbr; let st; let sb; let sl; let sr; let sf;\n    const bw = borderWidth || 5;\n    const vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n    const hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n    const t = texture.baseTexture;\n    const f = texture.frame;\n\n    if (hs) this.setting.minWidth = borderWidth * 2;\n    if (vs) this.setting.minHeight = borderWidth * 2;\n\n    this.initialize = function ()\n    {\n        UIBase.prototype.initialize.apply(this);\n\n        // get frames\n        if (vs && hs)\n        {\n            ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (hs)\n        {\n            fl = new PIXI.Rectangle(f.x, f.y, bw, f.height);\n            fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        // make sprites\n        sf = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff)) : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.container.addChildAt(sf, 0);\n        if (vs && hs)\n        {\n            stl = new PIXI.Sprite(new PIXI.Texture(t, ftl));\n            str = new PIXI.Sprite(new PIXI.Texture(t, ftr));\n            sbl = new PIXI.Sprite(new PIXI.Texture(t, fbl));\n            sbr = new PIXI.Sprite(new PIXI.Texture(t, fbr));\n            this.container.addChildAt(stl, 0);\n            this.container.addChildAt(str, 0);\n            this.container.addChildAt(sbl, 0);\n            this.container.addChildAt(sbr, 0);\n        }\n        if (hs)\n        {\n            sl = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl)) : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            sr = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr)) : new PIXI.Sprite(new PIXI.Texture(t, fr));\n            this.container.addChildAt(sl, 0);\n            this.container.addChildAt(sr, 0);\n        }\n        if (vs)\n        {\n            st = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft)) : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            sb = tile ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb)) : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.container.addChildAt(st, 0);\n            this.container.addChildAt(sb, 0);\n        }\n\n        // set constant position and sizes\n        if (vs && hs) st.x = sb.x = sl.y = sr.y = stl.width = str.width = sbl.width = sbr.width = stl.height = str.height = sbl.height = sbr.height = bw;\n        if (hs) sf.x = sl.width = sr.width = bw;\n        if (vs) sf.y = st.height = sb.height = bw;\n    };\n\n    /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n    this.update = function ()\n    {\n        if (!this.initialized) return;\n        if (vs && hs)\n        {\n            str.x = sbr.x = sr.x = this._width - bw;\n            sbl.y = sbr.y = sb.y = this._height - bw;\n            sf.width = st.width = sb.width = this._width - bw * 2;\n            sf.height = sl.height = sr.height = this._height - bw * 2;\n        }\n        else if (hs)\n        {\n            sr.x = this._width - bw;\n            sl.height = sr.height = sf.height = this._height;\n            sf.width = this._width - bw * 2;\n        }\n        else\n        { // vs\n            sb.y = this._height - bw;\n            st.width = sb.width = sf.width = this._width;\n            sf.height = this._height - bw * 2;\n        }\n\n        if (this.tint !== null)\n        {\n            sf.tint = this.tint;\n            if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n            if (hs) sl.tint = sr.tint = this.tint;\n            if (vs) st.tint = sb.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            sf.blendMode = this.blendMode;\n            if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n            if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n            if (vs) st.blendMode = sb.blendMode = this.blendMode;\n        }\n    };\n}\n\nSliceSprite.prototype = Object.create(UIBase.prototype);\nSliceSprite.prototype.constructor = SliceSprite;\n\nexport { SliceSprite };\n\n","import { UIBase } from './UIBase';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n */\nexport class Sprite extends UIBase\n{\n    sprite: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        const sprite = new PIXI.Sprite(texture);\n\n        super(sprite.width, sprite.height);\n\n        this.sprite = sprite;\n        this.container.addChild(this.sprite);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.sprite.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.sprite.blendMode = this.blendMode;\n        }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { InputBase } from './InputBase';\nimport { Container } from './Container';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { ScrollingContainer } from './ScrollingContainer';\nimport * as PIXI from 'pixi.js';\nimport { Sprite } from './Sprite';\n\ninterface ITextInputOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: Sprite;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param options.value {String} Text content\n * @param [options.multiLine=false] {Boolean} Multiline input\n * @param options.style {PIXI.TextStyle} Style used for the Text\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n * @param [options.width=150] {Number} width of input\n * @param [options.height=20] {Number} height of input\n * @param [options.padding=3] {Number} input padding\n * @param [options.paddingTop=0] {Number} input padding\n * @param [options.paddingBottom=0] {Number} input padding\n * @param [options.paddingLeft=0] {Number} input padding\n * @param [options.paddingRight=0] {Number} input padding\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.maxLength=0] {Number} 0 = unlimited\n * @param [options.caretWidth=1] {Number} width of the caret\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\n */\nexport class TextInput extends InputBase\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollingContainer;\n\n    public background: Sprite;\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    constructor(options: ITextInputOptions)\n    {\n        super(\n            typeof options.width !== 'undefined' // eslint-disable-line no-nested-ternary\n                ? options.width\n                : (options.background ? options.background.width : 150),\n            typeof options.height !== 'undefined' // eslint-disable-line no-nested-ternary\n                ? options.height\n                : (options.background ? options.background.height : 150),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        // create temp input (for mobile keyboard)\n        if (typeof mockDOMInput === 'undefined')\n        {\n            mockDOMInput = document.createElement('INPUT');\n            mockDOMInput.setAttribute('type', 'text');\n            mockDOMInput.setAttribute('id', '_pui_tempInput');\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n            document.body.appendChild(mockDOMInput);\n        }\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // insert bg\n        if (options.background)\n        {\n            this.background = options.background;\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.addChild(this.background);\n        }\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding !== undefined ? options.padding : 3;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding !== undefined ? options.padding : 3;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding !== undefined ? options.padding : 3;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding !== undefined ? options.padding : 3;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollingContainer({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        });\n        this.textContainer.anchorTop = paddingTop;\n        this.textContainer.anchorBottom = paddingBottom;\n        this.textContainer.anchorLeft = paddingLeft;\n        this.textContainer.anchorRight = paddingRight;\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragEvent(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._focused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer;\n    }\n\n    update(): void\n    {\n        if (this._width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    keyDownEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        this.emit('keydown', e);\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._focused)\n        {\n            super.focus();\n\n            const l = `${this.container.worldTransform.tx}px`;\n            const t = `${this.container.worldTransform.ty}px`;\n            const h = `${this.container.height}px`;\n            const w = `${this.container.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.keyDownEvent, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._focused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.keyDownEvent);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { UIBase } from './UIBase';\n\n/**\n * A Stage for UIObjects\n *\n * @class\n * @extends PIXI.UI.Container\n * @memberof PIXI.UI\n * @param width {Number} Width of the Stage\n * @param height {Number} Height of the Stage\n */\nfunction Stage(width, height)\n{\n    PIXI.Container.call(this);\n    this.__width = width;\n    this.__height = height;\n    this.minWidth = 0;\n    this.minHeight = 0;\n\n    this.UIChildren = [];\n    this.stage = this;\n    this.interactive = true;\n    this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    this.initialized = true;\n    this.resize(width, height);\n}\n\nStage.prototype = Object.create(PIXI.Container.prototype);\nStage.prototype.constructor = Stage;\n\nexport { Stage };\n\nStage.prototype.addChild = function (UIObject)\n{\n    const argumentLenght = arguments.length;\n\n    if (argumentLenght > 1)\n    {\n        for (let i = 0; i < argumentLenght; i++)\n        {\n            this.addChild(arguments[i]);\n        }\n    }\n    else\n    {\n        if (UIObject.parent)\n        {\n            UIObject.parent.removeChild(UIObject);\n        }\n\n        UIObject.parent = this;\n        this.UIChildren.push(UIObject);\n        PIXI.Container.prototype.addChild.call(this, UIObject.container);\n        UIObject.updatesettings(true);\n    }\n};\n\nStage.prototype.removeChild = function (UIObject)\n{\n    const argumentLenght = arguments.length;\n\n    if (argumentLenght > 1)\n    {\n        for (let i = 0; i < argumentLenght; i++)\n        {\n            this.removeChild(arguments[i]);\n        }\n    }\n    else\n    {\n        PIXI.Container.prototype.removeChild.call(this, UIObject.container);\n        const index = this.UIChildren.indexOf(UIObject);\n\n        if (index != -1)\n        {\n            this.UIChildren.splice(index, 1);\n            UIObject.parent = null;\n        }\n    }\n};\n\nStage.prototype.resize = function (width, height)\n{\n    if (!isNaN(height)) this.__height = height;\n    if (!isNaN(width)) this.__width = width;\n\n    if (this.minWidth || this.minHeight)\n    {\n        let rx = 1;\n        let ry = 1;\n\n        if (width && width < this.minWidth)\n        {\n            rx = this.minWidth / width;\n        }\n\n        if (height && height < this.minHeight)\n        {\n            ry = this.minHeight / height;\n        }\n\n        if (rx > ry && rx > 1)\n        {\n            this.scale.set(1 / rx);\n            this.__height *= rx;\n            this.__width *= rx;\n        }\n        else if (ry > 1)\n        {\n            this.scale.set(1 / ry);\n            this.__width *= ry;\n            this.__height *= ry;\n        }\n        else if (this.scale.x !== 1)\n        {\n            this.scale.set(1);\n        }\n    }\n\n    this.hitArea.width = this.__width;\n    this.hitArea.height = this.__height;\n\n    for (let i = 0; i < this.UIChildren.length; i++)\n    { this.UIChildren[i].updatesettings(true, false); }\n};\n\nObject.defineProperties(Stage.prototype, {\n    _width: {\n        get()\n        {\n            return this.__width;\n        },\n        set(val)\n        {\n            if (!isNaN(val))\n            {\n                this.__width = val;\n                this.resize();\n            }\n        },\n    },\n    _height: {\n        get()\n        {\n            return this.__height;\n        },\n        set(val)\n        {\n            if (!isNaN(val))\n            {\n                this.__height = val;\n                this.resize();\n            }\n        },\n    },\n});\n","import { UIBase } from './UIBase';\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Text {String} Text content\n * @param TextStyle {PIXI.TextStyle} Style used for the Text\n */\nfunction Text(text, PIXITextStyle)\n{\n    this._text = new PIXI.Text(text, PIXITextStyle);\n    UIBase.call(this, this._text.width, this._text.height);\n    this.container.addChild(this._text);\n\n    this.baseupdate = function ()\n    {\n        // force original text width unless using anchors\n        if (this._anchorLeft === null || this._anchorRight === null)\n        {\n            this.setting.width = this._text.width;\n            this.setting.widthPct = null;\n        }\n        else\n        {\n            this._text.width = this._width;\n        }\n\n        // force original text height unless using anchors\n        if (this._anchorTop === null || this._anchorBottom === null)\n        {\n            this.setting.height = this._text.height;\n            this.setting.heightPct = null;\n        }\n        else\n        {\n            this._text.width = this._width;\n        }\n\n        UIBase.prototype.baseupdate.call(this);\n    };\n\n    this.update = function ()\n    {\n        // set tint\n        if (this.tint !== null)\n        { this._text.tint = this.tint; }\n\n        // set blendmode\n        if (this.blendMode !== null)\n        { this._text.blendMode = this.blendMode; }\n    };\n}\n\nText.prototype = Object.create(UIBase.prototype);\nText.prototype.constructor = Text;\nexport { Text };\n\nObject.defineProperties(Text.prototype, {\n    value: {\n        get()\n        {\n            return this._text.text;\n        },\n        set(val)\n        {\n            this._text.text = val;\n            this.updatesettings(true);\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n});\n","import * as PIXI from 'pixi.js';\nimport { UIBase } from './UIBase';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends UIBase\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.container.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n","import * as _UI from './UI';\n\nexport const UI = _UI;\n"],"names":["this","width","height","minWidth","minHeight","maxWidth","maxHeight","left","right","top","bottom","anchorLeft","anchorRight","anchorTop","anchorBottom","widthPct","heightPct","minWidthPct","minHeightPct","maxWidthPct","maxHeightPct","leftPct","rightPct","topPct","bottomPct","anchorLeftPct","anchorRightPct","anchorTopPct","anchorBottomPct","pivotX","pivotY","scaleX","scaleY","verticalAlign","horizontalAlign","rotation","blendMode","tint","alpha","draggable","dragRestricted","dragRestrictAxis","dragThreshold","dragGroup","dragContainer","droppable","droppableReparent","dropGroup","obj","e","_a","start","_onDragMove","_onDragEnd","_this","id","data","identifier","onPress","call","bound","copyFrom","global","stage","on","originalEvent","preventDefault","mouse","offset","set","x","y","dragging","movementX","Math","abs","movementY","max","cancel","onDragStart","onDragMove","removeListener","onDragEnd","PIXI.Point","container","interactive","startEvent","DragEvent","_onDragStart","isPressed","_items","DragDropController","add","item","event","_dragDropEventId","indexOf","push","[object Object]","object","index","i","length","splice","group","_currentItem","_super","PIXI.Container","setting","UISettings","children","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","isNaN","parseFloat","replace","_width","_height","_minWidth","_minHeight","_maxWidth","_maxHeight","_anchorLeft","_anchorRight","_anchorTop","_anchorBottom","_left","_right","_top","_bottom","_dragPosition","__extends","UIBase","updateChildren","updateParent","parent","initialize","baseupdate","update","updatesettings","parentHeight","parentWidth","actual_width","actual_height","actual_minWidth","actual_minHeight","actual_maxWidth","actual_maxHeight","actual_anchorLeft","actual_anchorRight","actual_anchorTop","actual_anchorBottom","actual_left","actual_right","actual_top","actual_bottom","_parentWidth","_parentHeight","pivotXOffset","pivotYOffset","round","useHorizontalAnchor","position","useVerticalAnchor","scale","pivot","UIObject","argumentsLength","arguments","addChild","removeChild","argumentLenght","oldUIParent_1","setTimeout","initDraggable","initDroppable","drag","stopEvent","containerStart_1","stageOffset_1","self_1","added","copy","c","worldTransform","tx","ty","emit","getItem","toLocal","onDrop","self_2","getEventItem","Object","val","clearDraggable","clearDroppable","renderable","visible","cacheAsBitmap","click","interactiveChildren","parentLayer","PIXI.utils","EventEmitter","includeHover","rightMouseButton","doubleClick","eventname_mouseup","_onMouseUp","eventname_mouseupoutside","_onMouseUpOutside","double","now","performance","time","onClick","_mouseUpAll","ishover","_onMouseMove","onHover","onMove","_onMouseDown","_onMouseOver","_onMouseOut","eventname_mousedown","hover","ClickEvent","over","tabGroups","checkGroups","checkGroupValues","InputController","registrer","tabIndex","tabGroup","groupName","items","_tabIndex","undefined","_tabGroup","sort","a","b","blur","clear","fireTab","focus","fireNext","firePrev","registrerCheckGroup","cb","name","checkGroup","value","checked","updateCheckGroupSelected","getCheckGroupSelectedValue","setCheckGroupSelectedValue","which","_useTab","_usePrev","_useNext","__down","documentMouseDown","document","addEventListener","keyDownEvent","off","removeEventListener","_focused","InputBase","_clearEvents","_bindEvents","options","background","isHover","uiText","text","buttonMode","Button","clickEvent","prototype","bounds","getLocalBounds","hitArea","PIXI.Rectangle","_checked","_value","checkgroup","checkmark","change","CheckBox","Container","DynamicTextStyle","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","atlas","ellipsis","getCharObject","letterSpacing","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","clone","merge","param","_dirty","ctxKey","char","fill","shadow","stroke","strokeFill","strokeShadow","join","ctxFont","fontSize","min","fontWeight","fontStyle","fontFamily","constructor","defineProperties","dirtyStyle","align","lineHeight","skew","wrap","breakWords","overflowX","overflowY","DynamicText","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","chars","renderChars","spriteCache","charContainer","PIXI","_inputText","lastWidth","lastHeight","dirtyText","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","lineWidth","maxLineWidth","texture","tex","sprite","Sprite","anchor","hexToInt","float","prepareForRender","pos","Point","lineFontSize","lineAlignment","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","lineFull","lastChar","size","ellipsisData","d","dot","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","charCodeAt","test","allowTags","tag","substring","slice","FoundTag","startsWith","regex","match","exec","emojiMatch","settings","defaultEmojiFont","lazyUpdate","self","dirtySize","create","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","AtlasNode","w","h","rect","Rectangle","insert","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","familyCache","key","metrics","generateCharData","minx","descent","Texture","addNewObjects","compareFunction","_resized","_newcanvas","resizeCanvas","dim","def","parseInt","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","str","trim","split","color","string","fillData","rgba","hexToRgba","getFillStyle","fills","filter","s","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","fillStyle","strokeStyle","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","result","hex","EaseBase","getPosition","p","ExponentialEase","power","easeIn","easeOut","pow","t","r","Ease","HALF_PI","PI","fn","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","onMouseScrollImpl","delta","MouseScrollEvent","deltaX","deltaY","axis","detail","onMouseScroll","onHoverImpl","onMouseOutImpl","Interaction","Helpers","Lerp","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","g","rgbToNumber","numberToRgb","floor","hexToRgb","m","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","tweens","active","onUpdate","_ready","callback","currentTime","CallbackItem","keys","_tweenObjectId","_currentCallbackID","remove","to","ease","isColor","TweenItem","surfix","getSurfix","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","TweenObject","getTweenItem","tween","getCallbackItem","Tween","params","fromTo","paramsFrom","paramsTo","_update","_amt","_disabled","track","handle","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","Slider","soft","handleSize","maxPosition","localMousePosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","stopPropagation","trackDrag","scrollingContainer","autohide","_hidden","ScrollBar","innerContainer","forcePctPosition","_scrollBars","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","autoStart","_now","DeltaTime","Time","Ms","disabled","Ticker","shared","requestAnimationFrame","once","mask","PIXI.Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","ScrollingContainer","initScrolling","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","_i","newChildren","getInnerBounds","alignToContainer","force","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","focusPosition","dif","updateScrollBars","speed","updateScrollPosition","updateDirection","target","exp","scrollSpeed","SortableList","desc","tweenTime","tweenEase","SliceSprite","borderWidth","horizontalSlice","verticalSlice","tile","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","stl","sbl","sbr","st","sb","sl","sr","sf","bw","vs","hs","f","apply","extras","TilingSprite","addChildAt","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","altering","mockDOMInput","PIXI.Sprite","imageUrl","PIXI.Texture","PIXI.BaseTexture","Stage","__width","__height","UIChildren","resize","Text","PIXITextStyle","_text","rx","ry","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","_atEnd","multiLine","vrdd","hasSelection","de","textHeightPX","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","selectIndex","clipboardData","window","setData","copyEvent","getData","l","setAttribute","inputBlurEvent","keyUpEvent","pasteEvent","cutEvent","inputEvent","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","scrollToPosition","showCaret","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","_dirtyText","maxLength","selectedColor","tempText","PIXI.Text","destroy","_startIndex","_endIndex","caretWidth","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","TextInput","mouseDown","timeSinceLast","selectWord","updateText","whitespace","lastWordIndex","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","clearInterval","caretInterval","setInterval","PIXI.extras","tilePosition","tileScale","UI"],"mappings":"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"}