{"version":3,"file":"puxi-tween.min.js","sources":["../lib/TweenContext.js","../lib/TweenManager.js"],"sourcesContent":["import * as PIXI from 'pixi.js';\n/**\n * Holds the information needed to perform a tweening operation. It is used internally\n * by `PUXI.tween.TweenManager`.\n *\n * @memberof PUXI.tween\n * @class\n * @template T\n */\nexport class TweenContext extends PIXI.utils.EventEmitter {\n    constructor(key, startValue, endValue, erp, observedValue, startTime, endTime) {\n        super();\n        /**\n         * Unique id for this tweening operation\n         * @member {string}\n         */\n        this.key = key;\n        /**\n         * Start value of interpolation\n         * @member {T}\n         */\n        this.startValue = startValue;\n        /**\n         * End value of interpolation\n         * @member {T}\n         */\n        this.endValue = endValue;\n        /**\n         * Interpolation function\n         * @member {Erp}\n         */\n        this.erp = erp;\n        /**\n         * Object that is observed and the interpolated value to be stored in.\n         * @member {T}\n         */\n        this.observedValue = observedValue;\n        /**\n         * @member {DOMHighResTimeStamp}\n         * @readonly\n         */\n        this.startTime = startTime;\n        /**\n         * @member {DOMHighResTimeStamp\n         * @readonly}\n         */\n        this.endTime = endTime;\n    }\n    /**\n     * Updates the observed value.\n     *\n     * @param {DOMHighResTimeStamp} t - current time\n     */\n    update(t = performance.now()) {\n        t = (t - this.startTime) / (this.endTime - this.startTime);\n        this.erp(this.startValue, this.endValue, Math.min(Math.max(t, 0), 1), this.observedValue);\n        this.emit('update', this.observedValue, this.key);\n        if (t >= 1) {\n            this.emit('complete', this);\n            this.removeAllListeners();\n        }\n    }\n}\n/**\n * Fired whenever the observed value is updated.\n * @event update\n * @param {T} observedValue\n * @param {number} key\n */\n/**\n * Fired when tween has finished. References to this tween should be removed.\n * @event complete\n * @param {TweenContext} cxt\n */\n/**\n * Used for pooling.\n * @member {Array<TweenContext>}\n * @static\n */\nTweenContext.pool = [];\n//# sourceMappingURL=TweenContext.js.map","import { TweenContext } from './TweenContext';\nimport { Ticker } from 'pixi.js';\nlet nextKey = 0;\n/**\n * @memberof PUXI.tween\n * @class\n */\nexport class TweenManager {\n    constructor(autoStart = true) {\n        this.tweenMap = new Map();\n        if (autoStart) {\n            this.start();\n        }\n    }\n    addTween(startValue, endValue, erp, startTime, endTime) {\n        const tweenCxt = (TweenContext.pool.pop() || new TweenContext());\n        tweenCxt.key = nextKey++;\n        tweenCxt.startValue = startValue;\n        tweenCxt.endValue = endValue;\n        tweenCxt.erp = erp;\n        tweenCxt.startTime = startTime;\n        tweenCxt.endTime = endTime;\n        this.tweenMap.set(tweenCxt.key, tweenCxt);\n        tweenCxt.on('complete', this.onTweenComplete);\n        return tweenCxt;\n    }\n    start() {\n        if (this.isRunning) {\n            return;\n        }\n        Ticker.shared.add(this.onUpdate);\n        this.isRunning = true;\n    }\n    stop() {\n        if (!this.isRunning) {\n            return;\n        }\n        Ticker.shared.remove(this.onUpdate);\n        this.isRunning = false;\n    }\n    onUpdate() {\n        for (const [, cxt] of this.tweenMap) {\n            cxt.update();\n        }\n    }\n    onTweenComplete(cxt) {\n        this.tweenMap.delete(cxt.key);\n        TweenContext.pool.push(cxt);\n    }\n}\n//# sourceMappingURL=TweenManager.js.map"],"names":["TweenContext","PIXI.utils","EventEmitter","[object Object]","key","startValue","endValue","erp","observedValue","startTime","endTime","super","this","t","performance","now","Math","min","max","emit","removeAllListeners","pool","nextKey","autoStart","tweenMap","Map","start","tweenCxt","pop","set","on","onTweenComplete","isRunning","Ticker","shared","add","onUpdate","remove","cxt","update","delete","push"],"mappings":"wOASO,MAAMA,UAAqBC,QAAWC,aACzCC,YAAYC,EAAKC,EAAYC,EAAUC,EAAKC,EAAeC,EAAWC,GAClEC,QAKAC,KAAKR,IAAMA,EAKXQ,KAAKP,WAAaA,EAKlBO,KAAKN,SAAWA,EAKhBM,KAAKL,IAAMA,EAKXK,KAAKJ,cAAgBA,EAKrBI,KAAKH,UAAYA,EAKjBG,KAAKF,QAAUA,EAOnBP,OAAOU,EAAIC,YAAYC,OACnBF,GAAKA,EAAID,KAAKH,YAAcG,KAAKF,QAAUE,KAAKH,WAChDG,KAAKL,IAAIK,KAAKP,WAAYO,KAAKN,SAAUU,KAAKC,IAAID,KAAKE,IAAIL,EAAG,GAAI,GAAID,KAAKJ,eAC3EI,KAAKO,KAAK,SAAUP,KAAKJ,cAAeI,KAAKR,KACzCS,GAAK,IACLD,KAAKO,KAAK,WAAYP,MACtBA,KAAKQ,uBAoBjBpB,EAAaqB,KAAO,GC7EpB,IAAIC,EAAU,iBAKP,MACHnB,YAAYoB,GAAY,GACpBX,KAAKY,SAAW,IAAIC,IAChBF,GACAX,KAAKc,QAGbvB,SAASE,EAAYC,EAAUC,EAAKE,EAAWC,GAC3C,MAAMiB,EAAY3B,EAAaqB,KAAKO,OAAS,IAAI5B,EASjD,OARA2B,EAASvB,IAAMkB,IACfK,EAAStB,WAAaA,EACtBsB,EAASrB,SAAWA,EACpBqB,EAASpB,IAAMA,EACfoB,EAASlB,UAAYA,EACrBkB,EAASjB,QAAUA,EACnBE,KAAKY,SAASK,IAAIF,EAASvB,IAAKuB,GAChCA,EAASG,GAAG,WAAYlB,KAAKmB,iBACtBJ,EAEXxB,QACQS,KAAKoB,YAGTC,SAAOC,OAAOC,IAAIvB,KAAKwB,UACvBxB,KAAKoB,WAAY,GAErB7B,OACSS,KAAKoB,YAGVC,SAAOC,OAAOG,OAAOzB,KAAKwB,UAC1BxB,KAAKoB,WAAY,GAErB7B,WACI,IAAK,OAASmC,KAAQ1B,KAAKY,SACvBc,EAAIC,SAGZpC,gBAAgBmC,GACZ1B,KAAKY,SAASgB,OAAOF,EAAIlC,KACzBJ,EAAaqB,KAAKoB,KAAKH"}