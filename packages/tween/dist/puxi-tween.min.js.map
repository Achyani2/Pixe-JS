{"version":3,"file":"puxi-tween.min.js","sources":["../src/TweenContext.ts","../src/TweenManager.ts"],"sourcesContent":["import { Erp } from './Interpolator';\nimport * as PIXI from 'pixi.js';\n\n/**\n * Holds the information needed to perform a tweening operation. It is used internally\n * by `PUXI.tween.TweenManager`.\n *\n * @memberof PUXI.tween\n * @class\n * @template T\n */\nexport class TweenContext<T> extends PIXI.utils.EventEmitter\n{\n    startValue: T;\n    endValue: T;\n    erp: Erp<T>;\n\n    startTime: DOMHighResTimeStamp;\n    endTime: DOMHighResTimeStamp;\n\n    key: number;\n    observedValue: T;\n\n    constructor(\n        key?: number,\n        startValue?: T,\n        endValue?: T,\n        erp?: Erp<T>,\n        observedValue?: T,\n        startTime?: DOMHighResTimeStamp,\n        endTime?: DOMHighResTimeStamp)\n    {\n        super();\n\n        /**\n         * Unique id for this tweening operation\n         * @member {string}\n         */\n        this.key = key;\n\n        /**\n         * Start value of interpolation\n         * @member {T}\n         */\n        this.startValue = startValue;\n\n        /**\n         * End value of interpolation\n         * @member {T}\n         */\n        this.endValue = endValue;\n\n        /**\n         * Interpolation function\n         * @member {Erp}\n         */\n        this.erp = erp;\n\n        /**\n         * Object that is observed and the interpolated value to be stored in.\n         * @member {T}\n         */\n        this.observedValue = observedValue;\n\n        /**\n         * @member {DOMHighResTimeStamp}\n         * @readonly\n         */\n        this.startTime = startTime;\n\n        /**\n         * @member {DOMHighResTimeStamp\n         * @readonly}\n         */\n        this.endTime = endTime;\n    }\n\n    /**\n     * Updates the observed value.\n     *\n     * @param {DOMHighResTimeStamp} t - current time\n     */\n    update(t: DOMHighResTimeStamp = performance.now()): void\n    {\n        t = (t - this.startTime) / (this.endTime - this.startTime);\n\n        this.erp(\n            this.startValue,\n            this.endValue,\n            Math.min(Math.max(t, 0), 1),\n            this.observedValue,\n        );\n\n        this.emit('update', this.observedValue, this.key);\n\n        if (t >= 1)\n        {\n            this.emit('complete', this);\n            this.removeAllListeners();\n        }\n    }\n\n    /**\n     * Fired whenever the observed value is updated.\n     * @event update\n     * @param {T} observedValue\n     * @param {number} key\n     */\n\n    /**\n     * Fired when tween has finished. References to this tween should be removed.\n     * @event complete\n     * @param {TweenContext} cxt\n     */\n\n    /**\n     * Used for pooling.\n     * @member {Array<TweenContext>}\n     * @static\n     */\n    static pool: Array<TweenContext<any>> = [];\n}\n","import { TweenContext } from './TweenContext';\nimport { Erp } from './Interpolator';\nimport { Ticker } from 'pixi.js';\n\nlet nextKey = 0;\n\n/**\n * @memberof PUXI.tween\n * @class\n */\nexport class TweenManager\n{\n    tweenMap: Map<number, TweenContext<any>>;\n\n    private isRunning: boolean;\n\n    constructor(autoStart = true)\n    {\n        this.tweenMap = new Map<number, TweenContext<any>>();\n\n        if (autoStart)\n        {\n            this.start();\n        }\n    }\n\n    addTween<T>(\n        startValue: T,\n        endValue: T,\n        erp: Erp<T>,\n        startTime: DOMHighResTimeStamp,\n        endTime: DOMHighResTimeStamp,\n    ): TweenContext<T>\n    {\n        const tweenCxt = (TweenContext.pool.pop() || new TweenContext()) as TweenContext<T>;\n\n        tweenCxt.key = nextKey++;\n        tweenCxt.startValue = startValue;\n        tweenCxt.endValue = endValue;\n        tweenCxt.erp = erp;\n        tweenCxt.startTime = startTime;\n        tweenCxt.endTime = endTime;\n\n        this.tweenMap.set(tweenCxt.key, tweenCxt);\n        tweenCxt.on('complete', this.onTweenComplete);\n\n        return tweenCxt;\n    }\n\n    start(): void\n    {\n        if (this.isRunning)\n        {\n            return;\n        }\n\n        Ticker.shared.add(this.onUpdate);\n        this.isRunning = true;\n    }\n\n    stop(): void\n    {\n        if (!this.isRunning)\n        {\n            return;\n        }\n\n        Ticker.shared.remove(this.onUpdate);\n        this.isRunning = false;\n    }\n\n    onUpdate(): void\n    {\n        for (const [, cxt] of this.tweenMap)\n        {\n            cxt.update();\n        }\n    }\n\n    protected onTweenComplete(cxt: TweenContext<any>): void\n    {\n        this.tweenMap.delete(cxt.key);\n        TweenContext.pool.push(cxt);\n    }\n}\n"],"names":["TweenContext","PIXI.utils","EventEmitter","[object Object]","key","startValue","endValue","erp","observedValue","startTime","endTime","super","this","t","performance","now","Math","min","max","emit","removeAllListeners","nextKey","autoStart","tweenMap","Map","start","tweenCxt","pool","pop","set","on","onTweenComplete","isRunning","Ticker","shared","add","onUpdate","remove","cxt","update","delete","push"],"mappings":";;;;;;;0CAWaA,UAAwBC,QAAWC,aAY5CC,YACIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAC,QAMAC,KAAKR,IAAMA,EAMXQ,KAAKP,WAAaA,EAMlBO,KAAKN,SAAWA,EAMhBM,KAAKL,IAAMA,EAMXK,KAAKJ,cAAgBA,EAMrBI,KAAKH,UAAYA,EAMjBG,KAAKF,QAAUA,EAQnBP,OAAOU,EAAyBC,YAAYC,OAExCF,GAAKA,EAAID,KAAKH,YAAcG,KAAKF,QAAUE,KAAKH,WAEhDG,KAAKL,IACDK,KAAKP,WACLO,KAAKN,SACLU,KAAKC,IAAID,KAAKE,IAAIL,EAAG,GAAI,GACzBD,KAAKJ,eAGTI,KAAKO,KAAK,SAAUP,KAAKJ,cAAeI,KAAKR,KAEzCS,GAAK,IAELD,KAAKO,KAAK,WAAYP,MACtBA,KAAKQ,uBAsBNpB,OAAiC,GCpH5C,IAAIqB,EAAU,8BAYVlB,YAAYmB,GAAY,GAEpBV,KAAKW,SAAW,IAAIC,IAEhBF,GAEAV,KAAKa,QAIbtB,SACIE,EACAC,EACAC,EACAE,EACAC,GAGA,MAAMgB,EAAY1B,EAAa2B,KAAKC,OAAS,IAAI5B,EAYjD,OAVA0B,EAAStB,IAAMiB,IACfK,EAASrB,WAAaA,EACtBqB,EAASpB,SAAWA,EACpBoB,EAASnB,IAAMA,EACfmB,EAASjB,UAAYA,EACrBiB,EAAShB,QAAUA,EAEnBE,KAAKW,SAASM,IAAIH,EAAStB,IAAKsB,GAChCA,EAASI,GAAG,WAAYlB,KAAKmB,iBAEtBL,EAGXvB,QAEQS,KAAKoB,YAKTC,SAAOC,OAAOC,IAAIvB,KAAKwB,UACvBxB,KAAKoB,WAAY,GAGrB7B,OAESS,KAAKoB,YAKVC,SAAOC,OAAOG,OAAOzB,KAAKwB,UAC1BxB,KAAKoB,WAAY,GAGrB7B,WAEI,IAAK,OAASmC,KAAQ1B,KAAKW,SAEvBe,EAAIC,SAIFpC,gBAAgBmC,GAEtB1B,KAAKW,SAASiB,OAAOF,EAAIlC,KACzBJ,EAAa2B,KAAKc,KAAKH"}