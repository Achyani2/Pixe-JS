{"version":3,"file":"puxi-core.min.js","sources":["../src/event/DragDropController.js","../src/layout-options/Insets.ts","../src/IMeasurable.ts","../src/layout-options/Align.ts","../src/event/EventManager.ts","../src/event/ClickManager.ts","../src/event/DragManager.ts","../src/event/EventBroker.ts","../src/event/ScrollManager.ts","../src/Widget.ts","../src/layout-options/LayoutOptions.ts","../src/layout-options/FastLayoutOptions.ts","../src/layout-manager/FastLayout.ts","../src/WidgetGroup.ts","../src/InteractiveGroup.ts","../src/FocusableWidget.ts","../src/TextWidget.ts","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/Ticker.ts","../src/ScrollWidget.ts","../src/Sprite.ts","../src/ctl/Controller.ts","../src/Stage.ts","../src/TextInput.ts","../src/ctl/CheckBoxGroupController.ts","../src/ctl/FocusController.ts","../src/layout-manager/AnchorLayout.ts","../src/layout-options/AnchorLayoutOptions.ts","../src/Button.ts","../src/CheckBox.ts","../src/ScrollBar.ts","../src/SliceSprite.ts","../src/SortableList.ts","../src/TilingSprite.ts"],"sourcesContent":["const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * @memberof PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","/**\n * These are the modes in which an entity can measures its dimension. They are\n * relevant when a layout needs to know the optimal sizes of its children.\n *\n * @memberof PUXI\n * @enum\n * @property {number} UNBOUNDED - no upper limit on bounds. This should calculate the optimal dimensions for the entity.\n * @property {number} EXACTLY - the entity should set its dimension to the one passed to it.\n * @property {number} AT_MOST - the entity should find an optimal dimension below the one passed to it.\n */\nexport enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\nexport interface IMeasurable\n{\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n    getMeasuredWidth(): number;\n    getMeasuredHeight(): number;\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n *\n * @memberof PUXI\n * @interface IMeasurable\n */\n\n/**\n * Measures its width & height based on the passed constraints.\n *\n * @memberof PUXI.IMeasurable#\n * @method onMeasure\n * @param {number} maxWidth\n * @param {number} maxHeight\n * @param {PUXI.MeasureMode} widthMode\n * @param {PUXI.MeasureMode} heightMode\n */\n\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredWidth\n * @returns {number} - the measured width of the entity after a `onMeasure` call\n */\n\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredHeight\n * @returns {number} - the measured height of the entity after a `onMeasure` call\n */\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @memberof PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","import { Widget } from '../Widget';\n\n/**\n * An event manager handles the states related to certain events and can augment\n * widget interaction. For example, the click manager will hide clicks when\n * the object is dragging.\n *\n * Event managers are lifecycle objects - they can start/stop. Their constructor\n * will always accept one argument - the widget. Other settings can be applied before\n * `startEvent`.\n *\n * Ideally, you should access event managers _after_ your widget has initialized. This is\n * because it may depend on the widget's stage being assigned.\n *\n * @memberof PUXI\n * @class\n * @abstract\n */\nexport abstract class EventManager\n{\n    protected target: Widget;\n    protected isEnabled: boolean;\n\n    /**\n     * @param {Widget} target\n     */\n    constructor(target: Widget)\n    {\n        this.target = target;\n        this.isEnabled = false;// use to track start/stopEvent\n    }\n\n    /**\n     * @returns {Widget}\n     */\n    getTarget(): Widget\n    {\n        return this.target;\n    }\n\n    /**\n     * Registers the interaction event listeners that will emit corresponding events\n     * on the target widget.\n     */\n    abstract startEvent(): any;\n\n    /**\n     * Unregisters any event listeners and releases any resources held. This should\n     * revert all changes made by `startEvent`.\n     */\n    abstract stopEvent(): any;\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from '../Widget';\nimport { EventManager } from './EventManager';\n\n/**\n * `ClickManager` handles hover and click events. It registers listeners\n * for `mousedown`, `mouseup`, `mousemove`, `mouseout`, `mouseover`, `touchstart`,\n * `touchend`, `touchendoutside`, `touchmove`, `rightup`, `rightdown`, `rightupoutside`\n * events.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ClickManager extends EventManager\n{\n    onHover: (event: PIXI.interaction.InteractionEvent, over: boolean) => void;\n    onPress: (event: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    onClick: (event: PIXI.interaction.InteractionMouseEvents) => void;\n    onMove: (event: PIXI.interaction.InteractionEvent) => void;\n\n    protected _rightMouseButton: boolean;\n    protected _includeHover: boolean;\n    protected _doubleClick: boolean;\n\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    protected target: Widget;\n\n    private movementX: number;\n    private movementY: number;\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private evMouseDown: string;\n    private evMouseUp: string;\n    private evMouseUpOutside: string;\n\n    time: number;\n\n    /**\n     * @param {PUXI.Widget | PUXI.Button} target\n     * @param {boolean}[includeHover=false] - enable hover (`mouseover`, `mouseout`) listeners\n     * @param {boolean}[rightMouseButton=false] - use right mouse clicks\n     * @param {boolean}[doubleClick=false] - fire double clicks\n     */\n    constructor(target: Widget, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        super(target);\n\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n\n        this._includeHover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.rightMouseButton = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this._doubleClick = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        target.interactive = true;\n\n        this.time = 0;\n        this.startEvent();\n\n        this.onHover = (): void => null;\n        this.onPress = (): void => null;\n        this.onClick = (): void => null;\n        this.onMove = (): void => null;\n    }\n\n    /**\n     * Whether right mice are used for clicks rather than left mice.\n     * @member boolean\n     */\n    get rightMouseButton(): boolean\n    {\n        return this._rightMouseButton;\n    }\n    set rightMouseButton(val: boolean)\n    {\n        this._rightMouseButton = val;\n\n        this.evMouseDown = this._rightMouseButton ? 'rightdown' : 'mousedown';\n        this.evMouseUp = this._rightMouseButton ? 'rightup' : 'mouseup';\n        this.evMouseUpOutside = this._rightMouseButton ? 'rightupoutside' : 'mouseupoutside';\n    }\n\n    /**\n     * @param {boolean}[includeHover]\n     * @param {boolean}[rightMouseButton]\n     * @param {boolean}[doubleClick]\n     * @override\n     */\n    startEvent = (\n        includeHover = this._includeHover,\n        rightMouseButton = this._rightMouseButton,\n        doubleClick = this._doubleClick,\n    ): void =>\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        this._includeHover = includeHover;\n        this.rightMouseButton = rightMouseButton;\n        this._doubleClick = doubleClick;\n\n        const { target } = this;\n\n        target.insetContainer.on(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.on('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.on('mouseover', this.onMouseOverImpl);\n            target.insetContainer.on('mouseout', this.onMouseOutImpl);\n        }\n\n        this.isEnabled = true;\n    };\n\n    /**\n     * @override\n     */\n    stopEvent = (): void =>\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.bound)\n        {\n            target.insetContainer.removeListener(this.evMouseUp, this.onMouseUpImpl);\n            target.insetContainer.removeListener(this.evMouseUpOutside, this.onMouseUpOutsideImpl);\n\n            if (!this._rightMouseButton)\n            {\n                target.insetContainer.removeListener('touchend', this.onMouseUpImpl);\n                target.insetContainer.removeListener('touchendoutside', this.onMouseUpOutsideImpl);\n            }\n\n            this.bound = false;\n        }\n\n        target.insetContainer.removeListener(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.removeListener('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.removeListener('mouseover', this.onMouseOverImpl);\n            target.insetContainer.removeListener('mouseout', this.onMouseOutImpl);\n            target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n        }\n\n        this.isEnabled = false;\n    };\n\n    protected onMouseDownImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n            _rightMouseButton: right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.target, event, true);\n\n        if (!this.bound)\n        {\n            obj.insetContainer.on(evMouseUp, _onMouseUp);\n            obj.insetContainer.on(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.insetContainer.on('touchend', _onMouseUp);\n                obj.insetContainer.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this._doubleClick)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    protected onMouseUpCommonImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.insetContainer.removeListener(evMouseUp, _onMouseUp);\n            obj.insetContainer.removeListener(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!this._rightMouseButton)\n            {\n                obj.insetContainer.removeListener('touchend', _onMouseUp);\n                obj.insetContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    protected onMouseUpImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.target.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.target.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this._doubleClick)\n        {\n            this.onClick.call(this.target, event);\n        }\n    };\n\n    protected onMouseUpOutsideImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n    };\n\n    protected onMouseOverImpl = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.target.insetContainer.on('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.on('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, true);\n        }\n    };\n\n    protected onMouseOutImpl = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, false);\n        }\n    };\n\n    protected onMouseMoveImpl = (event): void =>\n    {\n        this.onMove.call(this.target, event);\n    };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * `DragManager` handles drag & drop events. It registers listeners for `mousedown`,\n * `touchstart` on the target and `mousemove`, `touchmove`, `mouseup`, `mouseupoutside`,\n * `touchend`, `touchendoutside` on the stage.\n *\n * By default, `draggable` widgets will internally handle drag-n-drop and reassigning\n * the callbacks on their `DragManager` will break their behaviour. You can prevent\n * this by using `eventBroker.dnd` directly without setting `widget.draggable` to\n * `true` (or using `widget.makeDraggable()`).\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class DragManager extends EventManager\n{\n    protected isBound: boolean;\n    protected isDragging: boolean;\n    protected id: number;\n    protected dragStart: PIXI.Point;\n    protected dragOffset: PIXI.Point;\n    protected lastCursor: PIXI.Point;\n    protected movementX: number;\n    protected movementY: number;\n    protected cancel: boolean;\n\n    public onPress: (e: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    public onDragStart: (e: PIXI.interaction.InteractionEvent) => void;\n    public onDragMove: (e: PIXI.interaction.InteractionEvent, dragOffset: PIXI.Point) => void;\n    public onDragEnd: (e: PIXI.interaction.InteractionEvent) => void;\n\n    constructor(target: Widget)\n    {\n        super(target);\n\n        this.isBound = false;\n        this.isDragging = false;\n        this.id = 0;\n        this.dragStart = new PIXI.Point();\n        this.dragOffset = new PIXI.Point();\n        this.lastCursor = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n\n        this.target.interactive = true;\n\n        this.onPress = (): void => null;\n        this.onDragStart = (): void => null;\n        this.onDragMove = (): void => null;\n        this.onDragEnd = (): void => null;\n\n        this.startEvent();\n    }\n\n    startEvent(): void\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        target.insetContainer.on('mousedown', this.onDragStartImpl);\n        target.insetContainer.on('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = true;\n    }\n\n    stopEvent(): void\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n\n            this.isBound = false;\n        }\n\n        target.insetContainer.removeListener('mousedown', this.onDragStartImpl);\n        target.insetContainer.removeListener('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = false;\n    }\n\n    protected onDragStartImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        const { target } = this;\n\n        this.id = e.data.identifier;\n        this.onPress(e, true);\n\n        if (!this.isBound)\n        {\n            this.dragStart.copyFrom(e.data.global);\n\n            target.stage.on('mousemove', this.onDragMoveImpl);\n            target.stage.on('touchmove', this.onDragMoveImpl);\n            target.stage.on('mouseup', this.onDragEndImpl);\n            target.stage.on('mouseupoutside', this.onDragEndImpl);\n            target.stage.on('touchend', this.onDragEndImpl);\n            target.stage.on('touchendoutside', this.onDragEndImpl);\n            target.stage.on('touchcancel', this.onDragEndImpl);\n\n            this.isBound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    private onDragMoveImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            lastCursor,\n            dragOffset,\n            dragStart,\n            target,\n        } = this;\n\n        this.lastCursor.copyFrom(e.data.global);\n        this.dragOffset.set(lastCursor.x - dragStart.x, lastCursor.y - dragStart.y);\n\n        if (!this.isDragging)\n        {\n            this.movementX = Math.abs(dragOffset.x);\n            this.movementY = Math.abs(dragOffset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < target.dragThreshold)\n            {\n                return; // threshold\n            }\n\n            if (target.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (target.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (target.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this.onDragEndImpl(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart(e);\n            this.isDragging = true;\n        }\n\n        this.onDragMove(e, dragOffset);\n    };\n\n    private onDragEndImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchcancel', this.onDragEndImpl);\n\n            this.isDragging = false;\n            this.isBound = false;\n\n            this.onDragEnd(e);\n            this.onPress(e, false);\n        }\n    };\n}\n","import { ClickManager } from './ClickManager';\nimport { DragManager } from './DragManager';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * The event brokers allows you to access event managers without manually assigning\n * them to a widget. By default, the click (`PUXI.ClickManager`), dnd (`PUXI.DragManager`)\n * are defined. You can add event managers for all (new) widgets by adding an entry to\n * `EventBroker.MANAGER_MAP`.\n *\n * @memberof PUXI\n * @class\n */\nexport class EventBroker\n{\n    [key: string]: EventManager | Widget;\n\n    constructor(target: Widget)\n    {\n        this.target = target;\n\n        for (const mgr of Object.keys(EventBroker.MANAGER_MAP))\n        {\n            Object.defineProperty(\n                this,\n                mgr,\n                {\n                    get(): EventManager\n                    {\n                        if (!this[`_${mgr}`])\n                        {\n                            this[`_${mgr}`] = new EventBroker.MANAGER_MAP[mgr](this.target);\n                        }\n\n                        return this[`_${mgr}`];\n                    },\n                },\n            );\n        }\n    }\n\n  static MANAGER_MAP = {\n      click: ClickManager,\n      dnd: DragManager,\n  };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * Handles the `wheel` and `scroll` DOM events on widgets. It also registers\n * listeners for `mouseout` and `mouseover`.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ScrollManager extends EventManager\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    constructor(target: Widget, preventDefault = true)\n    {\n        super(target);\n\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    /**\n     * @override\n     */\n    startEvent(): void\n    {\n        const { target, onHoverImpl, onMouseOutImpl } = this;\n\n        target.contentContainer.on('mouseover', onHoverImpl);\n        target.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n\n    /**\n     * @override\n     */\n    stopEvent(): void\n    {\n        const { target, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        target.contentContainer.removeListener('mouseover', onHoverImpl);\n        target.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    private onMouseScrollImpl = (e: WheelEvent): void =>\n    {\n        const { target, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(target, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { DragManager } from './event/DragManager';\nimport { DragDropController } from './event/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\nimport { Stage } from './Stage';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { EventBroker } from './event';\n\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport abstract class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    insetContainer: PIXI.Container;\n    contentContainer: PIXI.Container;\n    widgetChildren: Widget[];\n    stage: Stage;\n\n    initialized: boolean;\n    protected dragInitialized: boolean;\n    protected dropInitialized: boolean;\n    protected isDragging: boolean;\n\n    private draggable: boolean;\n    private droppable: boolean;\n\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    parent: Widget;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    protected tint: number;\n    protected blendMode: PIXI.BLEND_MODES;\n    protected background: PIXI.Container;\n\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n\n    private _eventBroker: EventBroker;\n\n    private _paddingLeft: number;\n    private _paddingTop: number;\n    private _paddingRight: number;\n    private _paddingBottom: number;\n    private _width: number;\n    private _height: number;\n    private _elevation: number;\n    private _dropShadow: DropShadowFilter;\n\n    constructor()\n    {\n        super();\n\n        this.insetContainer = new PIXI.Container();\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n        this._elevation = 0;\n\n        this.tint = 0;\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n\n        this.draggable = false;\n        this.droppable = false;\n    }\n\n    /**\n     * Update method that is to be overriden. This is called before a `render()`\n     * pass on widgets that are dirty.\n     *\n     * @private\n     */\n    abstract update(): any;\n\n    /**\n     * The measured width that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    /**\n     * The measured height that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    /**\n     * Alias for `Widget.measuredWidth`.\n     *\n     * @returns {number} the measured width\n     */\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    /**\n     * Alias for `Widget.measuredHeight`.\n     *\n     * @returns {number} the measured height\n     */\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    /**\n     * Override this method to measure the dimensions for your widget. By default, it\n     * will use the natural width/height of this widget's content (`contentContainer`)\n     * plus any padding.\n     *\n     * @param {number} width - width of region provided by parent\n     * @param {number} height - height of region provided by parent\n     * @param {PUXI.MeasureMode} widthMode - mode in which provided width is to be used\n     * @param {PUXI.MeasureMode} heightMode - mode in which provided height is to be used\n     */\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    /**\n     * This method calls `Widget.onMeasure` and should not be overriden. It does internal\n     * bookkeeping.\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     */\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n    }\n\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    layout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n\n        if (this.background)\n        {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n        // this.container.width = r - l;\n        // this.container.height = b - t;\n    }\n\n    /**\n     * Use this to specify how you want to layout this widget w.r.t its parent.\n     * The specific layout options class depends on which layout you are\n     * using in the parent widget.\n     *\n     * @param {PUXI.LayoutOptions} lopt\n     * @returns {Widget} this\n     */\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    /**\n     * The event broker for this widget that holds all the event managers. This can\n     * be used to start/stop clicks, drags, scrolls and configure how those events\n     * are handled/interpreted.\n     * @member PUXI.EventBroker\n     */\n    get eventBroker(): EventBroker\n    {\n        if (!this._eventBroker)\n        {\n            this._eventBroker = new EventBroker(this);\n        }\n\n        return this._eventBroker;\n    }\n\n    /**\n     * Padding on left side.\n     * @member {number}\n     */\n    get paddingLeft(): number\n    {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val: number)\n    {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on top side.\n     * @member {number}\n     */\n    get paddingTop(): number\n    {\n        return this._paddingTop;\n    }\n    set paddingTop(val: number)\n    {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on right side.\n     * @member {number}\n     */\n    get paddingRight(): number\n    {\n        return this._paddingRight;\n    }\n    set paddingRight(val: number)\n    {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on bottom side.\n     * @member {number}\n     */\n    get paddingBottom(): number\n    {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val: number)\n    {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Sum of left & right padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingHorizontal(): number\n    {\n        return this._paddingLeft + this._paddingRight;\n    }\n\n    /**\n     * Sum of top & bottom padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingVertical(): number\n    {\n        return this._paddingTop + this._paddingBottom;\n    }\n\n    /**\n     * Whether this widget is interactive in the PixiJS scene graph.\n     * @member {boolean}\n     */\n    get interactive(): boolean\n    {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n\n    /**\n     * Layout width of this widget.\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this._width;\n    }\n\n    /**\n     * Layout height of this widget.\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this._height;\n    }\n\n    /**\n     * Alpha of this widget & its contents.\n     * @member {number}\n     */\n    get alpha(): number\n    {\n        return this.insetContainer.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.insetContainer.alpha = val;\n    }\n\n    /**\n     * Sets the padding values.\n     *\n     * To set all paddings to one value:\n     * ```\n     * widget.setPadding(8);\n     * ```\n     *\n     * To set horizontal & vertical padding separately:\n     * ```\n     * widget.setPadding(4, 12);\n     * ```\n     *\n     * @param {number}[l=0] - left padding\n     * @param {number}[t=l] - top padding (default is equal to left padding)\n     * @param {number}[r=l] - right padding (default is equal to right padding)\n     * @param {number}[b=t] - bottom padding (default is equal to top padding)\n     */\n    setPadding(l: number, t: number = l, r: number = l, b: number = t): Widget\n    {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * @returns {PIXI.Container} - the background display-object\n     */\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    /**\n     * The background of a widget is a `PIXI.DisplayObject` that is rendered before\n     * all of its children.\n     *\n     * @param {PIXI.Container | number | string} bg - the background display-object or\n     *     a color that will be used to generate a `PIXI.Graphics` as the background.\n     */\n    setBackground(bg: PIXI.Container | number | string): Widget\n    {\n        if (this.background)\n        {\n            this.insetContainer.removeChild(this.background);\n        }\n\n        if (typeof bg === 'string')\n        {\n            bg = PIXI.utils.string2hex(bg);\n        }\n        if (typeof bg === 'number')\n        {\n            bg = new PIXI.Graphics()\n                .beginFill(bg)\n                .drawRect(0, 0, 1, 1)\n                .endFill();\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            bg.width = this.width;\n            bg.height = this.height;\n            this.insetContainer.addChildAt(bg, 0);\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {number} the alpha on the background display-object.\n     */\n    getBackgroundAlpha(): number\n    {\n        return this.background ? this.background.alpha : 1;\n    }\n\n    /**\n     * This can be used to set the alpha on the _background_ of this widget. This\n     * does not affect the widget's contents nor individual components of the\n     * background display-object.\n     *\n     * @param {number} val - background alpha\n     */\n    setBackgroundAlpha(val: number): Widget\n    {\n        if (!this.background)\n        {\n            this.setBackground(0xffffff);\n        }\n\n        this.background.alpha = val;\n\n        return this;\n    }\n\n    /**\n     * @return {number} the elevation set on this widget\n     */\n    getElevation(): number\n    {\n        return this._elevation;\n    }\n\n    /**\n     * This can be used add a drop-shadow that will appear to raise this widget by\n     * the given elevation against its parent.\n     *\n     * @param {number} val - elevation to use. 2px is good for most widgets.\n     */\n    setElevation(val: number): Widget\n    {\n        this._elevation = val;\n\n        if (val === 0 && this._dropShadow)\n        {\n            const i = this.insetContainer.filters.indexOf(this._dropShadow);\n\n            if (i > 0)\n            {\n                this.insetContainer.filters.splice(i, 1);\n            }\n        }\n        else if (val > 0)\n        {\n            if (!this._dropShadow)\n            {\n                if (!this.insetContainer.filters)\n                {\n                    this.insetContainer.filters = [];\n                }\n\n                this._dropShadow = new DropShadowFilter({ distance: val });\n                this.insetContainer.filters.push(this._dropShadow);\n            }\n\n            this._dropShadow.distance = val;\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds the widgets as children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    addChild(...widgets: Widget[]): Widget\n    {\n        for (let i = 0; i < widgets.length; i++)\n        {\n            const widget = widgets[i];\n\n            if (widget.parent)\n            {\n                widget.parent.removeChild(widget);\n            }\n\n            widget.parent = this;\n            this.contentContainer.addChild(widget.insetContainer);\n            this.widgetChildren.push(widget);\n        }\n\n        return this;\n    }\n\n    /**\n     * Orphans the widgets that are children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    removeChild(...widgets: Widget[]): Widget\n    {\n        for (let i = 0; i < widgets.length; i++)\n        {\n            const widget = widgets[i];\n            const index = this.widgetChildren.indexOf(widget);\n\n            if (index !== -1)\n            {\n                widget.insetContainer.parent.removeChild(widget.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                widget.parent = null;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget `draggable`.\n     */\n    makeDraggable(): Widget\n    {\n        this.draggable = true;\n\n        if (this.initialized)\n        {\n            this.initDraggable();\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget not `draggable`.\n     */\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            (this.eventBroker.dnd as DragManager).stopEvent();\n        }\n    }\n\n    /**\n     * Widget initialization related to the stage. This method should always call\n     * `super.initialize()`.\n     *\n     * This method expects `stage` to be set before calling it. This is handled\n     * by the `Stage` itself.\n     *\n     * This will set `initialized` to true. If it was already set to true, it _should\n     * do nothing_.\n     *\n     * @protected\n     */\n    initialize(): void\n    {\n        if (this.initialized)\n        {\n            return;\n        }\n\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n\n        this.initialized = true;\n    }\n\n    private initDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            return;\n        }\n\n        this.dragInitialized = true;\n\n        const realPosition = new PIXI.Point();\n        const dragPosition = new PIXI.Point();\n\n        const dnd: DragManager = this.eventBroker.dnd as DragManager;\n        const { insetContainer } = this;\n\n        dnd.onDragStart = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            const added = DragDropController.add(this, e);\n\n            if (!this.isDragging && added)\n            {\n                this.isDragging = true;\n                insetContainer.interactive = false;\n                realPosition.copyFrom(insetContainer.position);\n\n                this.emit('draggablestart', e);\n            }\n        };\n\n        dnd.onDragMove = (e: PIXI.interaction.InteractionEvent, offset: PIXI.Point): void =>\n        {\n            if (this.isDragging)\n            {\n                dragPosition.set(realPosition.x + offset.x, realPosition.y + offset.y);\n\n                insetContainer.x = dragPosition.x;\n                insetContainer.y = dragPosition.y;\n\n                this.emit('draggablemove', e);\n            }\n        };\n\n        dnd.onDragEnd = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            if (this.isDragging)\n            {\n                this.isDragging = false;\n                DragDropController.getItem(this);\n\n                // Return to container after 0ms if not picked up by a droppable\n                setTimeout((): void =>\n                {\n                    this.insetContainer.interactive = true;\n                    this.insetContainer.position.copyFrom(realPosition);\n\n                    this.emit('draggableend', e);\n                }, 0);\n            }\n        };\n    }\n\n    /**\n     * Makes this widget `droppable`.\n     */\n    makeDroppable(): Widget\n    {\n        this.droppable = true;\n\n        if (this.initialized)\n        {\n            this.initDroppable();\n        }\n\n        return this;\n    }\n\n    protected onDrop: (e: PIXI.interaction.InteractionEvent) => void;\n\n    /**\n     * Makes this widget not `droppable`.\n     */\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    private initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n\n            this.contentContainer.interactive = true;\n\n            this.onDrop = (event): void =>\n            {\n                const item = DragDropController.getEventItem(event, this.dropGroup);\n\n                if (item && item.isDragging)\n                {\n                    item.isDragging = false;\n                    item.insetContainer.interactive = true;\n                    const parent = this.droppableReparent !== null ? this.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent) { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @memberof PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n    public static MAX_DIMEN = 0xfffffff0;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public markers: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT)\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n\n        this.markers = {};\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions\n{\n    static DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    static CENTER_ANCHOR = new PIXI.Point(0.5, 0.5);// fragile, shouldn't be modified\n\n    x: number;\n    y: number;\n    anchor: PIXI.Point;\n\n    constructor(width: number, height: number, x = 0, y = 0, anchor?: PIXI.Point)\n    {\n        super(width, height);\n\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         */\n        this.x = x;\n\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         */\n        this.y = y;\n\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         * @member {PIXI.Point}\n         * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n         */\n        this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\n","import { MeasureMode } from '../IMeasurable';\nimport { ILayoutManager } from './ILayoutManager';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.ILayoutManager\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout implements ILayoutManager\n{\n    private host: WidgetGroup;\n    private _measuredWidth: number;\n    private _measuredHeight: number;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        // TODO: Passthrough optimization pass, if there is only one child with FILL_PARENT width or height\n        // then don't measure twice.\n\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n\n        const children = this.host.widgetChildren;\n\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : maxWidth,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : maxHeight,\n                widthMeasureMode,\n                heightMeasureMode);\n        }\n\n        this._measuredWidth = this.measureWidthReach(maxWidth, widthMode);\n        this._measuredHeight = this.measureHeightReach(maxHeight, heightMode);\n\n        this.measureChildFillers();\n    }\n\n    private getChildMeasureMode(dimen: number, parentMeasureMode: MeasureMode): MeasureMode\n    {\n        if (parentMeasureMode === MeasureMode.UNBOUNDED)\n        {\n            return MeasureMode.UNBOUNDED;\n        }\n        if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT)\n        {\n            return MeasureMode.AT_MOST;\n        }\n\n        return MeasureMode.EXACTLY;\n    }\n\n    private measureWidthReach(parentWidthLimit: number, widthMode: MeasureMode): number\n    {\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            return parentWidthLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredWidth = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childWidth = widget.getMeasuredWidth();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const x = lopt.x ? lopt.x : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n            // as (1 - anchor.x)% child's width.\n            const minr = (Math.abs(x) < 1 ? (1 - anchor.x) * childWidth / (1 - x) : x);\n\n            measuredWidth = Math.max(measuredWidth, minr);\n        }\n\n        if (widthMode === MeasureMode.AT_MOST)\n        {\n            measuredWidth = Math.min(parentWidthLimit, measuredWidth);\n        }\n\n        return measuredWidth;\n    }\n\n    private measureHeightReach(parentHeightLimit: number, heightMode: MeasureMode): number\n    {\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            return parentHeightLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredHeight = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childHeight = widget.getMeasuredHeight();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const y = lopt.y ? lopt.y : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const minb = (Math.abs(y) < 1 ? (1 - anchor.y) * childHeight / (1 - y) : y);\n\n            measuredHeight = Math.max(measuredHeight, minb);\n        }\n\n        if (heightMode === MeasureMode.AT_MOST)\n        {\n            measuredHeight = Math.min(parentHeightLimit, measuredHeight);\n        }\n\n        return measuredHeight;\n    }\n\n    private measureChildFillers(): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            if (lopt.width === LayoutOptions.FILL_PARENT || lopt.height === LayoutOptions.FILL_PARENT)\n            {\n                const widthMode = lopt.width === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n                const heightMode = lopt.height === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n\n                widget.measure(\n                    this._measuredWidth,\n                    this._measuredHeight,\n                    widthMode,\n                    heightMode,\n                );\n            }\n        }\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { width, height, widgetChildren: children } = parent;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight());\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\nimport { FastLayout } from './layout-manager/FastLayout';\n\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @example\n * ```\n * const group = new PUXI.InteractiveGroup();\n *\n * group.useLayout(new PUXI.AnchorLayout());\n *\n * group.addChild(new PUXI.Button({ text: \"Hey\" })\n *  .setLayoutOptions(\n *      new PUXI.AnchorLayoutOptions(\n *             100,\n *             300,\n *             .4,\n *             500,\n *             PUXI.ALIGN.CENTER\n *      )\n *  )\n * )\n * ```\n */\nexport abstract class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;// lazily initialized (via useLayout(), useDefaultLayout())\n\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {PUXI.ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr: ILayoutManager): void\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach();\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout(): void\n    {\n        this.useLayout(new FastLayout());\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.measure(width, height, widthMode, heightMode);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onLayout();// layoutMgr is attached to this\n    }\n}\n","import { WidgetGroup } from './WidgetGroup';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An interactive container.\n *\n * @class\n * @extends PUXI.WidgetGroup\n * @memberof PUXI\n */\nexport class InteractiveGroup extends WidgetGroup\n{\n    private hitArea: PIXI.Rectangle;\n\n    constructor()\n    {\n        super();\n        this.hitArea = new PIXI.Rectangle();\n        this.insetContainer.hitArea = this.hitArea;\n    }\n\n    update(): void\n    {\n        // YO\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty: boolean): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    }\n}\n\n","import * as PIXI from 'pixi.js';\nimport { TabGroup } from './ctl/FocusController';\nimport { InteractiveGroup } from './InteractiveGroup';\n\n/**\n * @namespace PUXI\n * @interface\n * @property {PIXI.Container}[background]\n * @property {number}[tabIndex]\n * @property {PUXI.TabGroup}[tabGroup]\n */\nexport interface IFocusableOptions\n{\n    background?: PIXI.Container;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Represents a view that can gain or loose focus. It is primarily subclassed by\n * input/form widgets.\n *\n * Generally, it is a good idea not use layouts on these types of widgets.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport abstract class FocusableWidget extends InteractiveGroup\n{\n    _isFocused: boolean;\n    _isMousePressed: boolean;\n\n    tabIndex: number;\n    tabGroup: TabGroup;\n\n    /**\n     * @param {PUXI.IInputBaseOptions} options\n     * @param {PIXI.Container}[options.background]\n     * @param {number}[options.tabIndex]\n     * @param {any}[options.tabGroup]\n     */\n    constructor(options: IFocusableOptions = {})\n    {\n        super();\n\n        if (options.background)\n        {\n            super.setBackground(options.background);\n        }\n\n        // Prevents double focusing/blurring.\n        this._isFocused = false;\n\n        // Used to lose focus when mouse-down outside widget.\n        this._isMousePressed = false;\n\n        this.interactive = true;\n\n        /**\n         * @member {number}\n         * @readonly\n         */\n        this.tabIndex = options.tabIndex;\n\n        /**\n         * The name of the tab group in which this widget's focus will move on\n         * pressing tab.\n         * @member {PUXI.TabGroup}\n         * @readonly\n         */\n        this.tabGroup = options.tabGroup;\n\n        this.insetContainer.on('pointerdown', () =>\n        {\n            this.focus();\n            this._isMousePressed = true;\n        });\n\n        this.insetContainer.on('pointerup', () => { this._isMousePressed = false; });\n        this.insetContainer.on('pointerupoutside', () => { this._isMousePressed = false; });\n    }\n\n    /**\n     * Brings this widget into focus.\n     */\n    focus(): void\n    {\n        if (this.isFocused)\n        {\n            return;\n        }\n\n        this.stage.focusController.notifyFocus(this);\n\n        this._isFocused = true;\n        this.bindEvents();\n\n        this.emit('focusChanged', true);\n        this.emit('focus');\n    }\n\n    /**\n     * Brings this widget out of focus.\n     */\n    blur(): void\n    {\n        if (!this._isFocused)\n        {\n            return;\n        }\n\n        this.stage.focusController.notifyBlur();\n\n        this._isFocused = false;\n        this.clearEvents();\n\n        this.emit('focusChanged', false);\n        this.emit('blur');\n    }\n\n    /**\n     * Whether this widget is in focus.\n     * @member {boolean}\n     * @readonly\n     */\n    get isFocused(): boolean\n    {\n        return this._isFocused;\n    }\n\n    private bindEvents = (): void =>\n    {\n        this.stage.on('pointerdown', this.onDocumentPointerDownImpl);\n        document.addEventListener('keydown', this.onKeyDownImpl);\n    };\n\n    private clearEvents = (): void =>\n    {\n        this.stage.off('pointerdown', this.onDocumentPointerDownImpl);\n        document.removeEventListener('keydown', this.onKeyDownImpl);\n    };\n\n    protected onKeyDownImpl = (e: any): void =>\n    {\n        const focusCtl = this.stage.focusController;\n\n        if (e.which === 9 && focusCtl.useTab)\n        {\n            focusCtl.onTab();\n            e.preventDefault();\n        }\n        else if (e.which === 38 && focusCtl.useBack)\n        {\n            focusCtl.onBack();\n            e.preventDefault();\n        }\n        else if (e.which === 40 && focusCtl.useForward)\n        {\n            focusCtl.onForward();\n            e.preventDefault();\n        }\n\n        this.emit('keydown');\n    };\n\n    private onDocumentPointerDownImpl = (): void =>\n    {\n        if (!this._isMousePressed)\n        {\n            this.blur();\n        }\n    };\n\n    initialize(): void\n    {\n        super.initialize();\n        this.stage.focusController.in(this, this.tabIndex, this.tabGroup);\n    }\n\n    /**\n     * Fired when the widget comes into focus.\n     * @event focus\n     */\n\n    /**\n     * Fired when the widget goes out of focus.\n     * @event blur\n     */\n\n    /**\n     * Fired when the widgets comes into or goes out of focus.\n     * @event focusChanged\n     * @param {boolean} isFocused - whether the widget is in focus.\n     */\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A static text widget. It cannot retain children.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class TextWidget extends Widget\n{\n    private textDisplay: PIXI.Text;\n\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        super();\n\n        this.textDisplay = new PIXI.Text(text, textStyle);\n        this.contentContainer.addChild(this.textDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.textDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.textDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this.textDisplay.text;\n    }\n    set value(val: string)\n    {\n        this.textDisplay.text = val;\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","class EaseBase\n{\n    getPosition(p)\n    {\n        return p;\n    }\n}\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","import { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst Ease = {};\n\nconst HALF_PI = Math.PI * 0.5;\n\nexport function create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\nconst Linear = new EaseBase();\n\n// Liear\nEase.Linear = Linear;\n\n// Exponetial Eases\nexport function wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\nexport { Ease };\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Widget } from './Widget';\nimport { DragManager } from './event/DragManager';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n * These options are used to configure a `PUXI.Slider`.\n *\n * @memberof PUXI\n * @interface ISliderOptions\n * @property {PIXI.Container}[track]\n * @property {PIXI.Container}[fill]\n * @property {boolean}[vertical]\n * @property {number}[value]\n * @property {number}[minValue]\n * @property {number}[maxValue]\n * @property {number}[decimals]\n * @property {Function}[onValueChange]\n * @property {Function}[onValueChanging]\n */\n\n/**\n * An UI Slider, the default width/height is 90%\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Slider extends Widget\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    /**\n     * @param options {Object} Slider settings\n     * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n     * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n     * @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n     * @param [options.vertical=false] {boolean} Direction of the slider\n     * @param [options.value=0] {number} value of the slider\n     * @param [options.minValue=0] {number} minimum value\n     * @param [options.maxValue=100] {number} max value\n     * @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n     * @param [options.onValueChange=null] {callback} Callback when the value has changed\n     * @param [options.onValueChanging=null] {callback} Callback while the value is changing\n     */\n    constructor(options: ISliderOptions)\n    {\n        super();\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.contentContainer.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.contentContainer.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.contentContainer.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragManager(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragManager(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n}\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\n/**\n * This ticker is an event-emitter that can be used for running periodic tasks\n * in the rendering loop. It emits the `update` event every animation frame.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n */\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    /**\n     * The update event is fired periodically and it can be used to for a rendering\n     * loop.\n     * @event update\n     * @param {DOMHighResTimeStamp} deltaTime - milliseconds since last update\n     */\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragManager } from './event/DragManager';\nimport { ScrollManager } from './event/ScrollManager';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\nimport { WidgetGroup } from './WidgetGroup';\n\n/**\n * @namespace PUXI\n * @interface\n */\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * `ScrollWidget` masks its contents to its layout bounds and translates\n * its children when scrolling.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.InteractiveGroup\n */\nexport class ScrollWidget extends InteractiveGroup\n{\n    private mask: PIXI.Graphics;\n    private innerContainer: WidgetGroup;\n    private innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private lastWidth: number;\n    private lastHeight: number;\n\n    protected scrollPosition: PIXI.Point;\n    protected scrollVelocity: PIXI.Point;\n    protected targetPosition: PIXI.Point;\n    protected lastPosition: PIXI.Point;\n    protected stop: boolean;\n\n    /**\n     * @param {PUXI.IScrollingContainerOptions} options\n     * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n     * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n     * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n     * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n     * @param [options.width=0] {Number|String} container width\n     * @param [options.height=0] {Number} container height\n     * @param [options.radius=0] {Number} corner radius of clipping mask\n     * @param [options.expandMask=0] {Number} mask expand (px)\n     * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n     * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n     */\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super();\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new InteractiveGroup();\n        this.innerBounds = new PIXI.Rectangle();\n        super.addChild(this.innerContainer);\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.scrollVelocity = new PIXI.Point();\n\n        /**\n         * Widget's position in a scroll.\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.scrollPosition = new PIXI.Point();\n\n        /**\n         * Position that the cursor is at, i.e. our scroll \"target\".\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.targetPosition = new PIXI.Point();\n        this.lastPosition = new PIXI.Point();\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n        this.initScrolling();\n    }\n\n    /**\n     * Updates the mask and scroll position before rendering.\n     *\n     * @override\n     */\n    update(): void\n    {\n        super.update();\n\n        if (this.lastWidth !== this.width || this.lastHeight !== this.height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n                this.mask.drawRect(-of, -of, this.width + of, this.height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this.width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n\n            this.lastWidth = this.width;\n            this.lastHeight = this.height;\n        }\n\n        this.setScrollPosition();\n    }\n\n    /**\n     * @param {PUXI.Widget[]} newChildren\n     * @returns {ScrollWidget} this widget\n     */\n    addChild(...newChildren: Widget[]): Widget\n    {\n        for (let i = 0; i < newChildren.length; i++)\n        {\n            this.innerContainer.addChild(newChildren[i]);\n        }\n\n        this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n\n        return this;\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    /**\n     * @override\n     */\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    private initScrolling(): void\n    {\n        const container = this.innerContainer.insetContainer;\n        const realPosition = new PIXI.Point();\n        const {\n            scrollPosition,\n            targetPosition,\n        } = this;\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag: DragManager = this.eventBroker.dnd as DragManager;\n\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    realPosition.copyFrom(container.position);\n                    scrollPosition.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n\n                    this.emit('scrollstart', e);\n                }\n            };\n\n            drag.onDragMove = (_, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = realPosition.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = realPosition.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('scrollend', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new ScrollManager(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n\n    forcePctPosition = (direction: string, pct: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        if (this.scrollX && direction === 'x')\n        {\n            container.position[direction] = -((bounds.width - this.width) * pct);\n        }\n        if (this.scrollY && direction === 'y')\n        {\n            container.position[direction] = -((bounds.height - this.height) * pct);\n        }\n\n        this.scrollPosition[direction] = this.targetPosition[direction] = container.position[direction];\n    };\n\n    focusPosition = (pos: PIXI.Point): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        let dif;\n\n        if (this.scrollX)\n        {\n            const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n            if (x + container.x > this.width)\n            {\n                dif = x - this.width;\n                container.x = -dif;\n            }\n            else if (x + container.x < 0)\n            {\n                dif = x + container.x;\n                container.x -= dif;\n            }\n        }\n        if (this.scrollY)\n        {\n            const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n            if (y + container.y > this.height)\n            {\n                dif = y - this.height;\n                container.y = -dif;\n            }\n            else if (y + container.y < 0)\n            {\n                dif = y + container.y;\n                container.y -= dif;\n            }\n        }\n\n        this.lastPosition.copyFrom(container.position);\n        this.targetPosition.copyFrom(container.position);\n        this.scrollPosition.copyFrom(container.position);\n\n        this.updateScrollBars();\n    };\n\n    /**\n     * @param {PIXI.Point}[velocity]\n     */\n    setScrollPosition = (velocity?: PIXI.Point): void =>\n    {\n        if (velocity)\n        {\n            this.scrollVelocity.copyFrom(velocity);\n        }\n\n        const container = this.innerContainer.insetContainer;\n\n        if (!this.animating)\n        {\n            this.animating = true;\n\n            this.lastPosition.copyFrom(container.position);\n            this.targetPosition.copyFrom(container.position);\n\n            Ticker.on('update', this.updateScrollPosition, this);\n        }\n    };\n\n    /**\n     * @param {number} delta\n     * @protected\n     */\n    protected updateScrollPosition = (delta: number): void =>\n    {\n        this.stop = true;\n\n        if (this.scrollX)\n        {\n            this.updateDirection('x', delta);\n        }\n        if (this.scrollY)\n        {\n            this.updateDirection('y', delta);\n        }\n\n        if (stop)\n        {\n            Ticker.removeListener('update', this.updateScrollPosition);\n            this.animating = false;\n        }\n    };\n\n    /**\n     * @param {'x' | 'y'} direction\n     * @param {number} delta\n     * @protected\n     */\n    protected updateDirection = (direction: string, delta: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const {\n            scrollPosition,\n            scrollVelocity,\n            targetPosition,\n            lastPosition,\n        } = this;\n        const container = this.innerContainer.insetContainer;\n\n        let min;\n\n        if (direction === 'y')\n        {\n            min = Math.round(Math.min(0, this.height - bounds.height));\n        }\n        else\n        {\n            min = Math.round(Math.min(0, this.width - bounds.width));\n        }\n\n        if (!this.scrolling && Math.round(scrollVelocity[direction]) !== 0)\n        {\n            targetPosition[direction] += scrollVelocity[direction];\n            scrollVelocity[direction] = Helpers.Lerp(\n                scrollVelocity[direction],\n                0,\n                (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n            if (targetPosition[direction] > 0)\n            {\n                targetPosition[direction] = 0;\n            }\n            else if (targetPosition[direction] < min)\n            {\n                targetPosition[direction] = min;\n            }\n        }\n\n        if (!this.scrolling\n            && Math.round(scrollVelocity[direction]) === 0\n            && (container[direction] > 0\n            || container[direction] < min))\n        {\n            const target = this.scrollPosition[direction] > 0 ? 0 : min;\n\n            scrollPosition[direction] = Helpers.Lerp(\n                scrollPosition[direction],\n                target,\n                (40 - (30 * this.softness)) * delta);\n            this.stop = false;\n        }\n        else if (this.scrolling || Math.round(scrollVelocity[direction]) !== 0)\n        {\n            if (this.scrolling)\n            {\n                scrollVelocity[direction] = this.scrollPosition[direction] - lastPosition[direction];\n                lastPosition.copyFrom(scrollPosition);\n            }\n            if (targetPosition[direction] > 0)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n            }\n            else if (targetPosition[direction] < min)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n            }\n            else\n            {\n                scrollPosition[direction] = targetPosition[direction];\n            }\n\n            this.stop = false;\n        }\n\n        container.position[direction] = Math.round(scrollPosition[direction]);\n        this.updateScrollBars();\n    };\n\n    /**\n     * This is fired when the user starts scrolling.\n     * @event scrollstart\n     */\n\n    /**\n     * This is fired when the user stops scrolling.\n     * @event scrollend\n     */\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Sprite extends Widget\n{\n    private spriteDisplay: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        super();\n\n        this.spriteDisplay = new PIXI.Sprite(texture);\n        this.contentContainer.addChild(this.spriteDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.spriteDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.spriteDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Stage } from '../Stage';\nimport { Widget } from '../Widget';\nimport * as PIXI from 'pixi.js';\n\nexport abstract class Controller<T> extends PIXI.utils.EventEmitter\n{\n    stage: Stage;\n\n    constructor(stage: Stage)\n    {\n        super();\n        this.stage = stage;\n    }\n\n    abstract in(widget: T): any;\n\n    abstract out(widget: T): any;\n}\n\n/**\n * A controller handles a stage-level state that can be held by wigets. For example,\n * `PUXI.FocusController` handles which widget is focused.\n *\n * @memberof PUXI\n * @class Controller\n */\n\n/**\n * Enables the widget to enter the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method in\n * @param {PUXI.Widget} widget\n */\n\n/**\n * Disables the widget from the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method out\n * @param {PUXI.Widget} widget\n */\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { FocusController, Controller, CheckBoxGroupController } from './ctl';\n\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.Container\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    widgetChildren: Widget[];\n\n    stage: any;\n\n    private _checkBoxGroupCtl: CheckBoxGroupController;\n    private _focusCtl: FocusController;\n\n    protected background: PIXI.Container;\n\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n\n        this._checkBoxGroupCtl = new Stage.CHECK_BOX_GROUP_CONTROLLER(this);\n        this._focusCtl = new Stage.FOCUS_CONTROLLER(this);\n    }\n\n    protected measureAndLayout(): void\n    {\n        if (this.background)\n        {\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++)\n        {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this.width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this.height : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this.width,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this.height,\n                widthMeasureMode,\n                heightMeasureMode);\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= this.width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= this.height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight(),\n                true);\n        }\n    }\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): void\n    {\n        if (this.background)\n        {\n            super.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            super.addChildAt(bg, 0);\n\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n    }\n\n    private update(widgets: Widget[]): void\n    {\n        for (let i = 0, j = widgets.length; i < j; i++)\n        {\n            const widget = widgets[i];\n\n            widget.stage = this;\n\n            if (!widget.initialized)\n            {\n                widget.initialize();\n            }\n\n            this.update(widget.widgetChildren);\n            widget.update();\n        }\n    }\n\n    render(renderer: PIXI.Renderer): void\n    {\n        this.update(this.widgetChildren);\n        super.render(renderer);\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n\n        this.measureAndLayout();\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.insetContainer);\n\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n\n        this.measureAndLayout();\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n\n        this.measureAndLayout();\n    }\n\n    get width(): number\n    {\n        return this.__width;\n    }\n    set width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get height(): number\n    {\n        return this.__height;\n    }\n    set height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n\n    /**\n     * The check box group controller for check boxes in this stage.\n     *\n     * @member {PUXI.CheckBoxGroupController}\n     */\n    get checkBoxGroupController(): CheckBoxGroupController\n    {\n        return this._checkBoxGroupCtl;\n    }\n\n    /**\n     * The focus controller for widgets in this stage. You can use this to bring a\n     * widget into focus.\n     *\n     * @member {PUXI.FocusController}\n     */\n    get focusController(): FocusController\n    {\n        return this._focusCtl;\n    }\n\n    /**\n     * Use this to override which class is used for the check box group controller. It\n     * should extend from `PUXI.CheckBoxGroupController`.\n     *\n     * @static\n     */\n    static CHECK_BOX_GROUP_CONTROLLER: typeof CheckBoxGroupController = CheckBoxGroupController;\n\n    /**\n     * Use this to override which class is used for the focus controller. It should\n     * extend from `PUXI.FocusController`.\n     *\n     * @static\n     */\n    static FOCUS_CONTROLLER: typeof FocusController = FocusController;\n}\n","import { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { ScrollWidget } from './ScrollWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions } from './layout-options';\nimport { DragManager } from './event/DragManager';\n\n/**\n * @memberof PUXI\n * @interface\n */\ninterface ITextInputOptions extends IFocusableOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: PIXI.Container;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\nfunction initMockDOMInput(): void\n{\n    // create temp input (for mobile keyboard)\n    if (typeof mockDOMInput === 'undefined')\n    {\n        mockDOMInput = document.createElement('INPUT');\n        mockDOMInput.setAttribute('type', 'text');\n        mockDOMInput.setAttribute('id', '_pui_tempInput');\n        mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n        document.body.appendChild(mockDOMInput);\n    }\n}\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n */\nexport class TextInput extends FocusableWidget\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollWidget;\n\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    /**\n     * @param {PUXI.ITextInputOptions} options\n     * @param {string} options.value Text content\n     * @param {boolean} [options.multiLine=false] Multiline input\n     * @param options.style {PIXI.TextStyle} Style used for the Text\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n     * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n     * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n     * @param [options.width=150] {Number} width of input\n     * @param [options.height=20] {Number} height of input\n     * @param [options.padding=3] {Number} input padding\n     * @param [options.paddingTop=0] {Number} input padding\n     * @param [options.paddingBottom=0] {Number} input padding\n     * @param [options.paddingLeft=0] {Number} input padding\n     * @param [options.paddingRight=0] {Number} input padding\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.maxLength=0] {Number} 0 = unlimited\n     * @param [options.caretWidth=1] {Number} width of the caret\n     * @param [options.lineHeight=0] {Number} 0 = inherit from text\n     */\n    constructor(options: ITextInputOptions)\n    {\n        super(options);\n        initMockDOMInput();\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollWidget({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        }).setPadding(\n            paddingLeft || 3,\n            paddingTop || 3,\n            paddingRight || 3,\n            paddingBottom || 3,\n        ).setLayoutOptions(\n            new LayoutOptions(\n                LayoutOptions.FILL_PARENT,\n                LayoutOptions.FILL_PARENT,\n            ),\n        ) as ScrollWidget;\n\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragManager(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._isFocused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer.insetContainer;\n    }\n\n    update(): void\n    {\n        if (this.width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    onKeyDown = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        // FocusableWidget.onKeyDownImpl should've been called before this.\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._isFocused)\n        {\n            super.focus();\n\n            const l = `${this.contentContainer.worldTransform.tx}px`;\n            const t = `${this.contentContainer.worldTransform.ty}px`;\n            const h = `${this.contentContainer.height}px`;\n            const w = `${this.contentContainer.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.onKeyDown, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._isFocused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.onKeyDown);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { Controller } from './Controller';\nimport { CheckBox } from '../CheckBox';\nimport { Stage } from '../Stage';\n\nexport type CheckGroup = string;\n\n/**\n * @memberof PUXI\n * @typedef {string} CheckGroup\n */\n\ninterface CBGroup\n{\n    checks: Array<CheckBox>;\n    selected: CheckBox;\n}\n\n/**\n * Check boxes use this controller to deselect other checkboxes in the group when\n * they are selected.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class CheckBoxGroupController extends Controller<CheckBox>\n{\n    protected checkGroups: Map<CheckGroup, CBGroup>;\n\n    constructor(stage: Stage)\n    {\n        super(stage);\n        this.checkGroups = new Map<CheckGroup, CBGroup>();\n    }\n\n    /**\n     * @param {PUXI.CheckBox} widget\n     * @param {PUXI.CheckGroup} checkGroup\n     * @override\n     */\n    in(widget: CheckBox, checkGroup?: CheckGroup): void\n    {\n        if (!checkGroup)\n        {\n            throw new Error('Default check groups don\\'t exist!');\n        }\n\n        const group = this.checkGroups.get(checkGroup) || this.initGroup(checkGroup);\n\n        group.checks.push(widget);\n        widget.checkGroup = checkGroup;\n    }\n\n    /**\n     * @override\n     */\n    out(widget: CheckBox): void\n    {\n        const group = this.checkGroups.get(widget.checkGroup);\n        const i = group.checks.indexOf(widget);\n\n        if (i > 0)\n        {\n            group.checks.splice(i, 1);\n        }\n\n        widget.checkGroup = null;\n    }\n\n    /**\n     * Called when a checkbox is selected. Do not call from outside.\n     *\n     * @param {CheckBox} widget\n     */\n    notifyCheck(widget: CheckBox): void\n    {\n        const group = this.checkGroups.get(widget.checkGroup);\n\n        if (!group)\n        {\n            return;\n        }\n\n        const { checks } = group;\n\n        for (let i = 0, j = checks.length; i < j; i++)\n        {\n            if (checks[i] !== widget)\n            {\n                checks[i].checked = false;\n            }\n        }\n\n        group.selected = widget;\n    }\n\n    /**\n     * @param {PUXI.CheckGroup} group\n     * @returns {CheckBox} the selected checkbox in the group\n     */\n    getSelected(group: CheckGroup): CheckBox\n    {\n        return this.checkGroups.get(group)?.selected;\n    }\n\n    /**\n     * Ensures that the check group exists in `this.checkGroups`.\n     *\n     * @param {PUXI.CheckGroup} id\n     * @protected\n     */\n    protected initGroup(id: CheckGroup): CBGroup\n    {\n        const cgroup: CBGroup = {\n            checks: [],\n            selected: null,\n        };\n\n        this.checkGroups.set(id, cgroup);\n\n        return cgroup;\n    }\n}\n","import { Controller } from './Controller';\nimport { Stage } from '../Stage';\nimport { FocusableWidget } from '../FocusableWidget';\n\nexport type TabGroup = string;\n\n/**\n * Pressing tab on a focused widget will make the next widget its tab group\n * focused. If no tab group is specified for a focusable widget, then it\n * has the `'default'` tab group.\n *\n * @memberof PUXI\n * @typedef {string} TabGroup\n */\n\n/**\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class FocusController extends Controller<FocusableWidget>\n{\n    stage: Stage;\n\n    protected tabGroups: Map<TabGroup, FocusableWidget[]>;\n    protected currentItem: FocusableWidget;\n\n    useTab: boolean;\n    useForward: boolean;\n    useBack: boolean;\n\n    constructor(stage: Stage)\n    {\n        super(stage);\n\n        /**\n         * Map of tab-group names to the widgets in those groups.\n         * @member {Map<PUXI.TabGroup, PUXI.FocusableWidget[]>}\n         * @protected\n         */\n        this.tabGroups = new Map<TabGroup, FocusableWidget[]>();\n\n        /**\n         * Whether to enable tab-based focus movement.\n         * @member {boolean}\n         */\n        this.useTab = true;\n\n        /**\n         * Whether to enable forward arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useForward = true;\n\n        /**\n         * Whether to enable back arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useBack = true;\n    }\n\n    /**\n     * Adds the (focusable) widget to the tab group so that pressing tab repeatedly\n     * will eventually bring it into focus.\n     *\n     * @param {PUXI.FocusableWidget} widget - the widget to add\n     * @param {number}[tabIndex=0] - unique index for the widget in tab group used for ordering\n     * @param {PUXI.TabGroup}[tabGroup='default'] - tab group name\n     */\n    in(widget: FocusableWidget, tabIndex = 0, tabGroup = 'default'): void\n    {\n        let widgets = this.tabGroups.get(tabGroup);\n\n        if (!widgets)\n        {\n            widgets = [];\n            this.tabGroups.set(tabGroup, widgets);\n        }\n\n        const i = widgets.indexOf(widget);\n\n        // Push widget into tab group list if not present already.\n        if (i === -1)\n        {\n            widget.tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            widget.tabGroup = tabGroup;\n\n            widgets.push(widget);\n            widgets.sort((a, b) => a.tabIndex - b.tabIndex);\n        }\n    }\n\n    /**\n     * @param {PUXI.FocusableWidget} widget\n     * @override\n     */\n    out(widget: FocusableWidget): void\n    {\n        const widgets = this.tabGroups.get(widget.tabGroup);\n\n        if (!widgets)\n        {\n            return;\n        }\n\n        const i = widgets.indexOf(widget);\n\n        if (i !== -1)\n        {\n            // Widgets should already be sorted & so deleting should not unsort it.\n            widgets.splice(i, 1);\n        }\n    }\n\n    /**\n     * Called when a widget comes into focus. Do not call this yourself.\n     *\n     * @param {FocusableWidget} widget\n     */\n    notifyFocus(widget: FocusableWidget): void\n    {\n        const lastItem = this.currentItem;\n\n        if (lastItem)\n        {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n\n        this.currentItem = widget;\n\n        this.emit('focus', widget);\n        this.emit('focusChanged', widget, lastItem);\n    }\n\n    /**\n     * Clears the currently focused item without blurring it. It is called\n     * when a widget goes out of focus.\n     */\n    notifyBlur(): void\n    {\n        this.emit('blur', this.currentItem);\n        this.emit('focusChanged', null, this.currentItem);\n\n        this.currentItem = null;\n    }\n\n    /**\n     * Brings the widget into focus.\n     *\n     * @param {FocusableWidget} item\n     */\n    focus(item: FocusableWidget): void\n    {\n        const lastItem = this.currentItem;\n\n        if (lastItem)\n        {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n\n        item.focus();\n\n        this.emit('focus', item);\n        this.emit('focusChanged', item, lastItem);\n    }\n\n    /**\n     * Blurs the currently focused widget out of focus.\n     */\n    blur(): void\n    {\n        if (this.currentItem)\n        {\n            this.currentItem.blur();\n\n            this.emit('blur', this.currentItem);\n            this.emit('focusChanged', null, this.currentItem);\n\n            this.currentItem = null;\n        }\n    }\n\n    /**\n     * Called when tab is pressed on a focusable widget.\n     */\n    onTab(): void\n    {\n        const { tabGroups, currentItem } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n\n            let i = tabGroup.indexOf(currentItem) + 1;\n\n            if (i >= tabGroup.length)\n            {\n                i = 0;\n            }\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Focuses the next item without wrapping, i.e. it does not go to the first\n     * item if the current one is the last item. This is called when the user\n     * presses the forward arrow key.\n     */\n    onForward(): void\n    {\n        if (!this.useForward)\n        {\n            return;\n        }\n\n        const { currentItem, tabGroups } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n\n            let i = tabGroup.indexOf(currentItem) + 1;\n\n            if (i >= tabGroup.length)\n            {\n                i = tabGroup.length - 1;\n            }\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Focuses the last item without wrapping, i.e. it does not go to the last\n     * item if the current item is the first one. This is called when the user\n     * presses the back arrow button.\n     */\n    onBack(): void\n    {\n        const { currentItem, tabGroups } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n            let i = tabGroup.indexOf(currentItem) - 1;\n\n            if (i < 0) i = 0;\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Fired when a widget gains focus.\n     * @event focus\n     * @param {PUXI.FocusableWidget} widget - the widget that gained focus.\n     */\n\n    /**\n     * Fired when a widget looses focus.\n     * @event blur\n     * @param {PUXI.FocusableWidget} widget - the widget that lost focus.\n     */\n\n    /**\n     * Fired when a new widget comes into focus or one looses focus.\n     * @event focusChanged\n     * @param {PUXI.FocusableWidget}[newFocus] - the widget that came into focus. It may\n     *      be null if only a blur occured.\n     * @param {PUXI.FocusableWidget}[oldFocus] - the widget that lost focus. It may be\n     *      null if a widget gained focused for the first time.\n     */\n}\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @memberof PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n    protected noPercents: boolean;\n\n    constructor()\n    {\n        this.noPercents = false;\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    private measureChild(child: Widget,\n        maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode: number;\n        let widgetHeightMode: number;\n\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1))\n        {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1)\n        {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1)\n        {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1))\n        {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1)\n        {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1)\n        {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        child.measure(\n            maxWidgetWidth,\n            maxWidgetHeight,\n            widgetWidthMode,\n            widgetHeightMode,\n        );\n    }\n\n    measureStretch(lowerAnchor: number,\n        upperAnchor: number,\n        childDimen: number): number\n    {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1))\n        {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1)\n        {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1)\n        {\n            return upperAnchor;\n        }\n\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n\n    measureChildren(maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight,\n                MeasureMode.EXACTLY,\n                MeasureMode.EXACTLY);\n        }\n\n        let maxX = 0;\n        let maxY = 0;\n\n        const children = this.host.widgetChildren;\n\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = maxX;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = maxY;\n        }\n\n        this.measureChildren(this.measuredWidth, this.measuredHeight,\n            MeasureMode.EXACTLY,\n            MeasureMode.EXACTLY);\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n\n            if (anchorLeft > -1 && anchorLeft <= 1)\n            {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1)\n            {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1)\n            {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1)\n            {\n                anchorBottom *= parent.height;\n            }\n\n            let x = 0;\n            let y = 0;\n\n            if (childWidth !== 0)\n            {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n\n            if (childHeight !== 0)\n            {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(\n        anchorLeft: number,\n        anchorTop: number,\n        anchorRight: number,\n        anchorBottom: number,\n        horizontalAlign = ALIGN.NONE,\n        verticalAlign = ALIGN.NONE)\n    {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n","import { ClickManager } from './event/ClickManager';\nimport { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { TextWidget } from './TextWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * @memberof PUXI\n * @interface\n * @extends PUXI.IFocusableOptions\n * @property {PUXI.TextWidget | string} text\n */\ninterface IButtonOptions extends IFocusableOptions\n{\n    background?: PIXI.Container;\n    text?: TextWidget | string;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Button that can be clicked.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class Button extends FocusableWidget\n{\n    isHover: boolean;\n\n    protected textWidget: TextWidget;\n\n    click: () => void;\n    /**\n     * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n     * @param [options.text=null] {PIXI.UI.Text} optional text\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.width=options.background.width] {Number|String} width\n     * @param [options.height=options.background.height] {Number|String} height\n     */\n    constructor(options: IButtonOptions)\n    {\n        super(options);\n\n        this.isHover = false;\n\n        if (typeof options.text === 'string')\n        {\n            options.text = new TextWidget(options.text, new PIXI.TextStyle());\n        }\n\n        this.textWidget = options.text.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5, 0.5,\n                FastLayoutOptions.CENTER_ANCHOR,\n            ),\n        ) as TextWidget;\n\n        if (this.textWidget)\n        {\n            this.addChild(this.textWidget);\n        }\n\n        this.contentContainer.buttonMode = true;\n\n        this.setupClick();\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent: ClickManager = this.eventBroker.click as ClickManager;\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.setupClick();\n\n        this.insetContainer.interactiveChildren = false;\n        // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n    }\n\n    /**\n     * Label for this button.\n     * @member {string}\n     */\n    get value(): string\n    {\n        if (this.textWidget)\n        {\n            return this.textWidget.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.textWidget)\n        {\n            this.textWidget.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.textWidget;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { ClickManager } from './event/ClickManager';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { CheckGroup } from './ctl';\nimport { TextWidget } from './TextWidget';\n\ninterface ICheckBoxOptions extends IFocusableOptions\n{\n    checked?: boolean;\n    background: PIXI.Container;\n    checkmark?: PIXI.Container;\n    checkGroup?: CheckGroup;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * @memberof PUXI\n * @extends PUXI.IFocusableOptions\n * @member {boolean} checked\n * @member {PIXI.Container}[checkmark]\n * @member {PUXI.CheckGroup}[checkGroup]\n * @member {string}[value]\n */\n\n/**\n * A checkbox is a button can be selected (checked). It has a on/off state that\n * can be controlled by the user.\n *\n * When used in a checkbox group, the group will control whether the checkbox can\n * be selected or not.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class CheckBox extends FocusableWidget\n{\n    private _checked: boolean;\n    private _value: string;\n\n    private label: TextWidget;\n    private checkmark: InteractiveGroup;\n\n    checkGroup: CheckGroup;\n\n    /**\n     * @param {PUXI.ICheckBoxOptions} options\n     * @param [options.checked=false] {bool} is checked\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n     * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n     * @param {PUXI.CheckGroup}[options.checkGroup=null] CheckGroup name\n     * @param options.value {String} mostly used along with checkgroup\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     */\n    constructor(options: ICheckBoxOptions)\n    {\n        super(options);\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkGroup || null;\n\n        this.checkmark = new InteractiveGroup();\n        this.checkmark.contentContainer.addChild(options.checkmark);\n        this.checkmark.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5,\n                0.5,\n                FastLayoutOptions.CENTER_ANCHOR),\n        );\n        this.checkmark.alpha = this._checked ? 1 : 0;\n        this.addChild(this.checkmark);\n\n        this.contentContainer.buttonMode = true;\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                this.stage.checkBoxGroupController.notifyCheck(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            this.stage.checkBoxGroupController.notifyCheck(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return this.stage\n            ?.checkBoxGroupController\n            .getSelected(this.checkGroup)\n            .value;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        const clickMgr = (this.eventBroker.click as ClickManager);\n\n        clickMgr.onHover = (_, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        clickMgr.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickMgr.onClick = (): void =>\n        {\n            this.click();\n        };\n\n        if (this.checkGroup !== null)\n        {\n            this.stage.checkBoxGroupController.in(this, this.checkGroup);\n        }\n    }\n\n    protected change = (val: boolean): void =>\n    {\n        if (this.checkmark)\n        {\n            this.checkmark.alpha = val ? 1 : 0;\n        }\n    };\n\n    protected click = (): void =>\n    {\n        this.emit('click');\n\n        if (this.checkGroup !== null && this.checked)\n        {\n            return;\n        }\n\n        this.checked = !this.checked;\n        this.emit('changed', this.checked);\n    };\n\n    /**\n     * This event is fired when the user's cursor hovers over this checkbox.\n     * @event hover\n     */\n\n    /**\n     * This event is fired when the user clicks on the checkbox, regardless of whether\n     * the checkbox was selected or deselected.\n     * @event click\n     */\n\n    /**\n     * This event is fired when the user selects/deselects the checkbox, i.e. the \"value\"\n     * of the checkbox changes. This is also fired when setting the `checked` property\n     * directly.\n     * @event changed\n     * @param {boolean} checked - whether the checkbox is checked\n     */\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollWidget } from './ScrollWidget';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollWidget;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * @memberof PUXI\n * @interface IScrollBarOptions\n * @property {PUXI.Sprite} track\n * @property {PUXI.Sprite} handle\n */\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PUXI.Slider\n * @memberof PUXI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollWidget;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PUXI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends InteractiveGroup\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n"],"names":["_items","DragDropController","add","item","event","_dragDropEventId","data","identifier","indexOf","push","[object Object]","object","index","i","length","splice","group","id","dragGroup","Insets","this","reset","dirtyId","left","top","right","bottom","MeasureMode","ALIGN","EventManager","target","isEnabled","ClickManager","includeHover","rightMouseButton","doubleClick","super","_includeHover","_rightMouseButton","_doubleClick","insetContainer","on","evMouseDown","onMouseDownImpl","onMouseOverImpl","onMouseOutImpl","bound","removeListener","evMouseUp","onMouseUpImpl","evMouseUpOutside","onMouseUpOutsideImpl","onMouseMoveImpl","obj","_onMouseUp","_onMouseUpOutside","mouse","copyFrom","global","onPress","call","now","performance","time","onClick","originalEvent","preventDefault","offset","set","x","y","onMouseUpCommonImpl","dragThreshold","movementX","Math","abs","movementY","max","ishover","onHover","onMove","PIXI.Point","interactive","startEvent","val","DragManager","e","isBound","dragStart","stage","onDragMoveImpl","onDragEndImpl","lastCursor","dragOffset","isDragging","dragRestrictAxis","cancel","onDragStart","onDragMove","onDragEnd","onDragStartImpl","EventBroker","mgr","Object","keys","MANAGER_MAP","defineProperty","click","dnd","ScrollManager","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","document","addEventListener","removeEventListener","onHoverImpl","contentContainer","Widget","PIXI.utils","EventEmitter","PIXI.Container","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_elevation","tint","blendMode","PIXI.BLEND_MODES","NORMAL","draggable","droppable","measuredWidth","_measuredWidth","measuredHeight","_measuredHeight","width","height","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","l","t","r","b","_width","_height","background","lopt","layoutOptions","eventBroker","_eventBroker","paddingLeft","paddingTop","paddingRight","paddingBottom","alpha","bg","removeChild","string2hex","PIXI.Graphics","beginFill","drawRect","endFill","addChildAt","setBackground","_dropShadow","filters","DropShadowFilter","distance","widgets","widget","parent","initDraggable","stopEvent","initDroppable","realPosition","dragPosition","added","position","emit","getItem","setTimeout","onDrop","container","getEventItem","dropGroup","droppableReparent","self","toLocal","LayoutOptions","WRAP_CONTENT","markers","marginLeft","_marginLeft","marginTop","_marginTop","marginRight","_marginRight","marginBottom","_marginBottom","FastLayoutOptions","anchor","DEFAULT_ANCHOR","clone","FastLayout","host","maxWidth","maxHeight","children","j","DEFAULT","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","measure","measureWidthReach","measureHeightReach","measureChildFillers","dimen","parentMeasureMode","FILL_PARENT","parentWidthLimit","childWidth","getMeasuredWidth","minr","parentHeightLimit","childHeight","getMeasuredHeight","minb","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","InteractiveGroup","hitArea","PIXI.Rectangle","FocusableWidget","options","onDocumentPointerDownImpl","onKeyDownImpl","off","focusCtl","focusController","which","useTab","onTab","useBack","onBack","useForward","onForward","_isMousePressed","blur","_isFocused","tabIndex","tabGroup","focus","isFocused","notifyFocus","bindEvents","notifyBlur","clearEvents","initialize","in","TextWidget","text","textStyle","textDisplay","PIXI.Text","value","EaseBase","p","ExponentialEase","power","easeIn","easeOut","pow","getPosition","prototype","create","constructor","Ease","HALF_PI","PI","fn","Linear","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","Helpers","Lerp","start","stop","amt","number","decimals","round","c","hex","toString","g","componentToHex","rgbToNumber","numberToRgb","floor","isNaN","replace","m","result","exec","parseInt","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","TweenObject","tweens","active","onUpdate","CallbackItem","_ready","key","callback","currentTime","_tweenObjectId","_currentCallbackID","remove","TweenItem","from","to","ease","isColor","surfix","getSurfix","hexToRgb","currentColor","parseFloat","getToValue","widthKeys","heightKeys","getFromValue","getObject","getTweenItem","tween","getCallbackItem","cb","Tween","params","match","paramsFrom","paramsTo","update","Slider","_amt","_disabled","track","handle","fill","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","pivot","buttonMode","horizontalAlign","verticalAlign","soft","handleSize","localMousePosition","maxPosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","isPressed","stopPropagation","trackDrag","Round","disabled","Ticker","autoStart","_now","DeltaTime","Time","Ms","shared","_update","requestAnimationFrame","context","once","ScrollWidget","direction","pct","bounds","getInnerBounds","innerContainer","scrollX","scrollY","scrollPosition","targetPosition","pos","dif","lastPosition","updateScrollBars","velocity","scrollVelocity","animating","updateScrollPosition","updateDirection","scrolling","softness","exp","mask","innerBounds","undefined","dragScrolling","radius","expandMask","overflowY","overflowX","_scrollBars","boundCached","initScrolling","lastWidth","lastHeight","of","clear","lineStyle","drawRoundedRect","setScrollPosition","newChildren","alignToContainer","force","getLocalBounds","drag","_","scrollSpeed","Sprite","texture","spriteDisplay","PIXI.Sprite","imageUrl","PIXI.Texture","PIXI.BaseTexture","Controller","Stage","__width","__height","minWidth","minHeight","resize","_checkBoxGroupCtl","CHECK_BOX_GROUP_CONTROLLER","_focusCtl","FOCUS_CONTROLLER","MAX_DIMEN","renderer","render","UIObject","argumentLenght","arguments","measureAndLayout","rx","ry","scale","updatesettings","checkBoxGroupController","mockDOMInput","checkGroups","Map","checkGroup","Error","get","initGroup","checks","checked","selected","cgroup","tabGroups","sort","a","lastItem","currentItem","noPercents","child","maxParentWidth","maxParentHeight","anchorLeft","anchorTop","anchorRight","anchorBottom","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","ceil","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","NONE","LEFT","MIDDLE","RIGHT","TOP","isHover","PIXI.TextStyle","textWidget","setLayoutOptions","CENTER_ANCHOR","setupClick","clickEvent","over","interactiveChildren","checkmark","_checked","_value","notifyCheck","change","selectedValue","getSelected","clickMgr","scrollingContainer","autohide","_hidden","forcePctPosition","size","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","baseTexture","f","frame","setting","str","sbr","sr","sbl","sb","sf","st","sl","stl","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","PIXI.extras","TilingSprite","desc","tweenTime","tweenEase","items","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","fromTo","altering","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","chars","_atEnd","slice","multiLine","vrdd","hasSelection","de","textHeightPX","lineHeight","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","_i","selectIndex","clipboardData","window","setData","copyEvent","getData","worldTransform","tx","ty","h","w","setAttribute","cacheAsBitmap","inputBlurEvent","onKeyDown","keyUpEvent","pasteEvent","cutEvent","inputEvent","visible","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","lineIndex","textHeight","scrollToPosition","showCaret","wordIndex","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","createElement","body","appendChild","_dirtyText","maxLength","color","style","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","padding","textContainer","setPadding","_useNext","_usePrev","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","mouseDown","timeSinceLast","selectWord","_lastWidth","updateText","whitespace","newline","lastWordIndex","wrap","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","char","distX","focusPosition","clearInterval","caretInterval","setInterval","sprite","tilePosition","tilingPosition","tileScale"],"mappings":"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"}