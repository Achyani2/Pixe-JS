{"version":3,"file":"pixi-ui.min.js","sources":["../src/UISettings.ts","../src/Interaction/DragEvent.ts","../src/Interaction/DragDropController.js","../src/layout-options/Align.ts","../src/layout-options/Insets.ts","../src/IMeasurable.ts","../src/layout-options/LayoutOptions.ts","../src/layout-options/AnchorLayoutOptions.ts","../src/layout-options/FastLayoutOptions.ts","../src/Interaction/InputController.ts","../src/Widget.ts","../src/Interaction/ClickEvent.ts","../src/layout-manager/FastLayout.ts","../src/WidgetGroup.ts","../src/InputBase.ts","../src/Button.ts","../src/CheckBox.ts","../src/Container.ts","../src/DynamicText/DynamicTextStyle.js","../src/DynamicText/DynamicChar.js","../src/DynamicText/DynamicText.js","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/Interaction/MouseScrollEvent.ts","../src/Interaction/Interaction.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/ScrollBar.ts","../src/Ticker.ts","../src/TextInput.ts","../src/ScrollingContainer.ts","../src/SortableList.ts","../src/SliceSprite.ts","../src/Sprite.ts","../src/Stage.ts","../src/Text.ts","../src/TilingSprite.ts","../src/layout-manager/AnchorLayout.ts"],"sourcesContent":["/**\n * Layout and rendering configuration for a `PIXI.UI.UIBase`.\n *\n * @class\n * @memberof PIXI.UI\n */\nexport class UISettings\n{\n    public width: number;\n    public height: number;\n    public minWidth: number;\n    public minHeight: number;\n    public maxWidth: number;\n    public maxHeight: number;\n\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public widthPct: number;\n    public heightPct: number;\n    public minWidthPct: number;\n    public minHeightPct: number;\n    public maxWidthPct: number;\n    public maxHeightPct: number;\n\n    public leftPct: number;\n    public topPct: number;\n    public rightPct: number;\n    public bottomPct: number;\n\n    public anchorLeftPct: number;\n    public anchorTopPct: number;\n    public anchorBottomPct: number;\n    public anchorRightPct: number;\n\n    public pivotX: number;\n    public pivotY: number;\n    public scaleX: number;\n    public scaleY: number;\n\n    public horizontalAlign: boolean;\n    public verticalAlign: boolean;\n\n    public rotation: number;\n    public blendMode: number;\n    public tint: number;\n    public alpha: number;\n\n    public draggable: boolean;\n    public dragRestricted: boolean;\n    public dragRestrictAxis: PIXI.Point;\n    public dragGroup: any;\n    public dragThreshold: number;\n    public dragContainer: PIXI.Container;\n    public droppable: boolean;\n    public droppableParent: boolean;\n    public droppableReparent: boolean;\n    public dropGroup: any;\n\n    constructor()\n    {\n        this.width = 0;\n        this.height = 0;\n        this.minWidth = 0;\n        this.minHeight = 0;\n        this.maxWidth = null;\n        this.maxHeight = null;\n\n        this.left = null;\n        this.right = null;\n        this.top = null;\n        this.bottom = null;\n\n        this.anchorLeft = null;\n        this.anchorRight = null;\n        this.anchorTop = null;\n        this.anchorBottom = null;\n\n        this.widthPct = null;\n        this.heightPct = null;\n        this.minWidthPct = null;\n        this.minHeightPct = null;\n        this.maxWidthPct = null;\n        this.maxHeightPct = null;\n        this.leftPct = null;\n        this.rightPct = null;\n        this.topPct = null;\n        this.bottomPct = null;\n        this.anchorLeftPct = null;\n        this.anchorRightPct = null;\n        this.anchorTopPct = null;\n        this.anchorBottomPct = null;\n\n        this.pivotX = 0;\n        this.pivotY = 0;\n        this.scaleX = 1;\n        this.scaleY = 1;\n        this.verticalAlign = null;\n        this.horizontalAlign = null;\n        this.rotation = null;\n        this.blendMode = null;\n        this.tint = null;\n        this.alpha = 1;\n\n        this.draggable = null;\n        this.dragRestricted = false;\n        this.dragRestrictAxis = null; // x, y\n        this.dragThreshold = 0;\n        this.dragGroup = null;\n        this.dragContainer = null;\n        this.droppable = null;\n        this.droppableReparent = null;\n        this.dropGroup = null;\n    }\n}\n\nexport default UISettings;\n","import * as PIXI from 'pixi.js';\n\nexport class DragEvent\n{\n    private bound: boolean;\n    private start: PIXI.Point;\n    private offset: PIXI.Point;\n    private mouse: PIXI.Point;\n\n    movementX: number;\n    movementY: number;\n\n    cancel: boolean;\n    dragging: boolean;\n\n    id: number;\n    obj: any;\n\n    constructor(obj: any)\n    {\n        this.bound = false;\n        this.start = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.mouse = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n        this.dragging = false;\n        this.id = 0;\n\n        this.obj = obj;\n        this.obj.interactive = true;\n\n        this.startEvent();\n    }\n\n    _onDragStart = (e): void =>\n    {\n        const {\n            obj,\n            start,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        this.id = e.data.identifier;\n        this.onPress.call(obj, e, true);\n\n        if (!this.bound)\n        {\n            start.copyFrom(e.data.global);\n\n            obj.stage.on('mousemove', _onDragMove);\n            obj.stage.on('touchmove', _onDragMove);\n            obj.stage.on('mouseup', _onDragEnd);\n            obj.stage.on('mouseupoutside', _onDragEnd);\n            obj.stage.on('touchend', _onDragEnd);\n            obj.stage.on('touchendoutside', _onDragEnd);\n            obj.stage.on('touchcancel', _onDragEnd);\n\n            this.bound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    _onDragMove = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            mouse,\n            offset,\n            start,\n            obj,\n        } = this;\n\n        mouse.copyFrom(e.data.global);\n        offset.set(mouse.x - start.x, mouse.y - start.y);\n\n        if (!this.dragging)\n        {\n            this.movementX = Math.abs(offset.x);\n            this.movementY = Math.abs(offset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < obj.dragThreshold)\n            {\n                return; // thresshold\n            }\n\n            if (obj.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (obj.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (obj.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this._onDragEnd(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart.call(obj, e);\n            this.dragging = true;\n        }\n\n        this.onDragMove.call(obj, e, offset);\n    };\n\n    _onDragEnd = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            obj,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n            obj.stage.removeListener('touchcancel', _onDragEnd);\n\n            this.dragging = false;\n            this.bound = false;\n\n            this.onDragEnd.call(obj, e);\n            this.onPress.call(obj, e, false);\n        }\n    };\n\n    stopEvent(): void\n    {\n        const {\n            obj,\n            _onDragStart,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener('mousedown', _onDragStart);\n        obj.contentContainer.removeListener('touchstart', _onDragStart);\n    }\n\n    startEvent(): void\n    {\n        const { obj, _onDragStart } = this;\n\n        obj.contentContainer.on('mousedown', _onDragStart);\n        obj.contentContainer.on('touchstart', _onDragStart);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onPress(e, isPressed: boolean): void\n    {\n        // Default onPress\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragStart(e): void\n    {\n        // Default onDragStart\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragMove(e, offset: PIXI.Point): void\n    {\n        // Default onDragMove\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragEnd(e): void\n    {\n        // Default onDragEnd\n    }\n}\n","const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @namespace PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","/**\n * @namespace PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","/**\n * @namespace PUXI\n * @enum\n */\nexport enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n */\nexport interface IMeasurable\n{\n    /**\n     * Measures its width & height based on the passed constraints.\n     *\n     * @param maxWidth\n     * @param maxHeight\n     * @param widthMode\n     * @param heightMode\n     */\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n\n    getMeasuredWidth(): number;\n\n    getMeasuredHeight(): number;\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @namespace PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n    public static MAX_DIMEN = 0xfffffff0;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public markers: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT)\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n\n        this.markers = {};\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(\n        anchorLeft: number,\n        anchorTop: number,\n        anchorRight: number,\n        anchorBottom: number,\n        horizontalAlign = ALIGN.NONE,\n        verticalAlign = ALIGN.NONE)\n    {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @namespace PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions\n{\n    static DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    static CENTER_ANCHOR = new PIXI.Point(0.5, 0.5);// fragile, shouldn't be modified\n\n    x: number;\n    y: number;\n    anchor: PIXI.Point;\n\n    constructor(width: number, height: number, x = 0, y = 0, anchor?: PIXI.Point)\n    {\n        super(width, height);\n\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         */\n        this.x = x;\n\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         */\n        this.y = y;\n\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         */\n        this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\n","let _currentItem;\nconst tabGroups = {};\nconst checkGroups = {};\nconst checkGroupValues = {};\n\n/**\n * Handles focus-management in the scene graph.\n */\nexport const InputController = {\n    registrer(item, tabIndex, tabGroup): void\n    {\n        const groupName = tabGroup || 'default';\n\n        let items = tabGroups[groupName];\n\n        if (!items)\n        { items = tabGroups[groupName] = []; }\n\n        const i = items.indexOf(item);\n\n        if (i === -1)\n        {\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            item._tabGroup = items;\n            items.push(item);\n            items.sort(function sorter(a, b)\n            {\n                if (a._tabIndex < b._tabIndex)\n                { return -1; }\n                if (a._tabIndex > b._tabIndex)\n                { return 1; }\n\n                return 0;\n            });\n        }\n    },\n    set(item): void\n    {\n        this.blur();\n        _currentItem = item;\n    },\n    clear(): void\n    {\n        _currentItem = undefined;\n    },\n    blur(): void\n    {\n        if (_currentItem && typeof _currentItem.blur === 'function')\n        {\n            _currentItem.blur();\n        }\n    },\n    fireTab(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    fireNext(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    firePrev(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\n\n            if (i < 0) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    registrerCheckGroup(cb): void\n    {\n        const name = cb.checkGroup;\n        let group = checkGroups[name];\n\n        if (!group) group = checkGroups[name] = {};\n        group[cb.value] = cb;\n\n        if (cb.checked)\n        { checkGroupValues[name] = cb.value; }\n    },\n    updateCheckGroupSelected(cb): void\n    {\n        const group = checkGroups[cb.checkGroup];\n\n        for (const val in group)\n        {\n            const b = group[val];\n\n            if (b !== cb)\n            { b.checked = false; }\n        }\n        checkGroupValues[cb.checkGroup] = cb.value;\n    },\n    getCheckGroupSelectedValue(name): string\n    {\n        if (checkGroupValues[name])\n        { return checkGroupValues[name]; }\n\n        return '';\n    },\n    setCheckGroupSelectedValue(name, val): void\n    {\n        const group = checkGroups[name];\n\n        if (group)\n        {\n            const cb = group[val];\n\n            if (cb)\n            {\n                cb.checked = true;\n            }\n        }\n    },\n};\n\n","import { UISettings } from './UISettings';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { DragDropController } from './Interaction/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\n\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @namespace PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport abstract class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    insetContainer: PIXI.Container;\n    contentContainer: PIXI.Container;\n    setting: UISettings;\n    widgetChildren: Widget[];\n    stage: any;\n\n    initialized: boolean;\n    dragInitialized: boolean;\n    dropInitialized: boolean;\n    dragging: boolean;\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    _width: number;\n    _height: number;\n    _minWidth: number;\n    _minHeight: number;\n    _maxWidth: number;\n    _maxHeight: number;\n    _anchorLeft: number;\n    _anchorRight: number;\n    _anchorTop: number;\n    _anchorBottom: number;\n    _left: number;\n    _right: number;\n    _top: number;\n    _bottom: number;\n\n    _dragPosition: any;\n    parent: Widget;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    private background: PIXI.Container;\n    private _paddingLeft: number;\n    private _paddingTop: number;\n    private _paddingRight: number;\n    private _paddingBottom: number;\n\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.insetContainer = new PIXI.Container();\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n        this.setting = new UISettings();\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        if (width && isNaN(width) && width.indexOf('%') != -1)\n        {\n            this.setting.widthPct = parseFloat(width.replace('%', '')) * 0.01;\n        }\n        else\n        {\n            this.setting.widthPct = null;\n        }\n\n        if (height && isNaN(height) && height.indexOf('%') != -1)\n        { this.setting.heightPct = parseFloat(height.replace('%', '')) * 0.01; }\n        else\n        {\n            this.setting.heightPct = null;\n        }\n\n        this.setting.width = width || 0;\n        this.setting.height = height || 0;\n\n        // actual values\n        this._width = 0;\n        this._height = 0;\n        this._minWidth = null;\n        this._minHeight = null;\n        this._maxWidth = null;\n        this._maxHeight = null;\n        this._anchorLeft = null;\n        this._anchorRight = null;\n        this._anchorTop = null;\n        this._anchorBottom = null;\n        this._left = null;\n        this._right = null;\n        this._top = null;\n        this._bottom = null;\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n\n        this._dragPosition = null; // used for overriding positions if tweens is playing\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     */\n    protected updatesettings(updateChildren: boolean, updateParent?: boolean): void\n    {\n        if (!this.initialized)\n        {\n            if (this.parent && this.parent.stage && this.parent.initialized)\n            {\n                this.initialize();\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (updateParent)\n        {\n            this.updateParent();\n        }\n\n        this.baseupdate();\n        this.update();\n\n        if (updateChildren)\n        {\n            this.updateChildren();\n        }\n    }\n\n    /**\n     * Update method (override from other UIObjects)\n     *\n     * @private\n     */\n    abstract update ();\n\n    /**\n     * Updates the parent\n     *\n     * @private\n     */\n    updateParent(): void\n    {\n        if (this.parent)\n        {\n            if (this.parent.updatesettings)\n            {\n                this.parent.updatesettings(false, true);\n            }\n        }\n    }\n\n    /**\n     * Updates the UIObject with all base settings\n     *\n     * @private\n     */\n    protected baseupdate(): void\n    {\n    // return if parent size didnt change\n        if (this.parent)\n        {\n            let parentHeight; let\n                parentWidth;\n\n            // transform convertion (% etc)\n            this.dirty = true;\n            this._width = this.actual_width;\n            this._height = this.actual_height;\n            this._minWidth = this.actual_minWidth;\n            this._minHeight = this.actual_minHeight;\n            this._maxWidth = this.actual_maxWidth;\n            this._maxHeight = this.actual_maxHeight;\n            this._anchorLeft = this.actual_anchorLeft;\n            this._anchorRight = this.actual_anchorRight;\n            this._anchorTop = this.actual_anchorTop;\n            this._anchorBottom = this.actual_anchorBottom;\n            this._left = this.actual_left;\n            this._right = this.actual_right;\n            this._top = this.actual_top;\n            this._bottom = this.actual_bottom;\n            this._parentWidth = parentWidth = this.parent._width;\n            this._parentHeight = parentHeight = this.parent._height;\n            this.dirty = false;\n\n            let pivotXOffset = this.pivotX * this._width;\n            let pivotYOffset = this.pivotY * this._height;\n\n            if (this.pixelPerfect)\n            {\n                pivotXOffset = Math.round(pivotXOffset);\n                pivotYOffset = Math.round(pivotYOffset);\n            }\n\n            if (this.horizontalAlign === null)\n            {\n            // get anchors (use left right if conflict)\n                if (this._anchorLeft !== null && this._anchorRight === null && this._right !== null)\n                { this._anchorRight = this._right; }\n                else if (this._anchorLeft === null && this._anchorRight !== null && this._left !== null)\n                { this._anchorLeft = this._left; }\n                else if (this._anchorLeft === null && this._anchorRight === null && this._left !== null && this._right !== null)\n                {\n                    this._anchorLeft = this._left;\n                    this._anchorRight = this._right;\n                }\n\n                const useHorizontalAnchor = this._anchorLeft !== null || this._anchorRight !== null;\n                const useLeftRight = !useHorizontalAnchor && (this._left !== null || this._right !== null);\n\n                if (useLeftRight)\n                {\n                    if (this._left !== null)\n                    { this.contentContainer.position.x = this._left; }\n                    else if (this._right !== null)\n                    { this.contentContainer.position.x = parentWidth - this._right; }\n                }\n                else if (useHorizontalAnchor)\n                {\n                    if (this._anchorLeft !== null && this._anchorRight === null)\n                    { this.contentContainer.position.x = this._anchorLeft; }\n                    else if (this._anchorLeft === null && this._anchorRight !== null)\n                    { this.contentContainer.position.x = parentWidth - this._width - this._anchorRight; }\n                    else if (this._anchorLeft !== null && this._anchorRight !== null)\n                    {\n                        this.contentContainer.position.x = this._anchorLeft;\n                        this._width = parentWidth - this._anchorLeft - this._anchorRight;\n                    }\n                    this.contentContainer.position.x += pivotXOffset;\n                }\n                else\n                {\n                    this.contentContainer.position.x = 0;\n                }\n            }\n\n            if (this.verticalAlign === null)\n            {\n            // get anchors (use top bottom if conflict)\n                if (this._anchorTop !== null && this._anchorBottom === null && this._bottom !== null)\n                { this._anchorBottom = this._bottom; }\n                if (this._anchorTop === null && this._anchorBottom !== null && this._top !== null)\n                { this._anchorTop = this._top; }\n\n                const useVerticalAnchor = this._anchorTop !== null || this._anchorBottom !== null;\n                const useTopBottom = !useVerticalAnchor && (this._top !== null || this._bottom !== null);\n\n                if (useTopBottom)\n                {\n                    if (this._top !== null)\n                    { this.contentContainer.position.y = this._top; }\n                    else if (this._bottom !== null)\n                    { this.contentContainer.position.y = parentHeight - this._bottom; }\n                }\n                else if (useVerticalAnchor)\n                {\n                    if (this._anchorTop !== null && this._anchorBottom === null)\n                    { this.contentContainer.position.y = this._anchorTop; }\n                    else if (this._anchorTop === null && this._anchorBottom !== null)\n                    { this.contentContainer.position.y = parentHeight - this._height - this._anchorBottom; }\n                    else if (this._anchorTop !== null && this._anchorBottom !== null)\n                    {\n                        this.contentContainer.position.y = this._anchorTop;\n                        this._height = parentHeight - this._anchorTop - this._anchorBottom;\n                    }\n                    this.contentContainer.position.y += pivotYOffset;\n                }\n                else\n                {\n                    this.contentContainer.position.y = 0;\n                }\n            }\n\n            // min/max sizes\n            if (this._maxWidth !== null && this._width > this._maxWidth) this._width = this._maxWidth;\n            if (this._width < this._minWidth) this._width = this._minWidth;\n\n            if (this._maxHeight !== null && this._height > this._maxHeight) this._height = this._maxHeight;\n            if (this._height < this._minHeight) this._height = this._minHeight;\n\n            // pure vertical/horizontal align\n            if (this.horizontalAlign !== null)\n            {\n                if (this.horizontalAlign == 'center')\n                {\n                    this.contentContainer.position.x = parentWidth * 0.5 - this._width * 0.5;\n                }\n                else if (this.horizontalAlign == 'right')\n                {\n                    this.contentContainer.position.x = parentWidth - this._width;\n                }\n                else\n                {\n                    this.contentContainer.position.x = 0;\n                }\n\n                this.contentContainer.position.x += pivotXOffset;\n            }\n            if (this.verticalAlign !== null)\n            {\n                if (this.verticalAlign == 'middle')\n                {\n                    this.contentContainer.position.y = parentHeight * 0.5 - this._height * 0.5;\n                }\n                else if (this.verticalAlign == 'bottom')\n                {\n                    this.contentContainer.position.y = parentHeight - this._height;\n                }\n                else\n                {\n                    this.contentContainer.position.y = 0;\n                }\n\n                this.contentContainer.position.y += pivotYOffset;\n            }\n\n            // Unrestricted dragging\n            if (this.dragging && !this.setting.dragRestricted)\n            {\n                this.contentContainer.position.x = this._dragPosition.x;\n                this.contentContainer.position.y = this._dragPosition.y;\n            }\n\n            // scale\n            if (this.setting.scaleX !== null) this.contentContainer.scale.x = this.setting.scaleX;\n            if (this.setting.scaleY !== null) this.contentContainer.scale.y = this.setting.scaleY;\n\n            // pivot\n            if (this.setting.pivotX !== null) this.contentContainer.pivot.x = pivotXOffset;\n            if (this.setting.pivotY !== null) this.contentContainer.pivot.y = pivotYOffset;\n\n            if (this.setting.alpha !== null) this.contentContainer.alpha = this.setting.alpha;\n            if (this.setting.rotation !== null) this.contentContainer.rotation = this.setting.rotation;\n\n            // make pixel perfect\n            if (this.pixelPerfect)\n            {\n                this._width = Math.round(this._width);\n                this._height = Math.round(this._height);\n                this.contentContainer.position.x = Math.round(this.contentContainer.position.x);\n                this.contentContainer.position.y = Math.round(this.contentContainer.position.y);\n            }\n        }\n    }\n\n    /**\n     * Updates all UI Children\n     *\n     * @private\n     */\n    updateChildren(): void\n    {\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true);\n        }\n    }\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): Widget\n    {\n        if (!this.background)\n        {\n            this.insetContainer.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            this.insetContainer.addChildAt(bg, 0);\n        }\n\n        return this;\n    }\n\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            const child = this.widgetChildren[i];\n            const childOptions = child.layoutOptions || LayoutOptions.DEFAULT;\n\n            const maxWidth = (childOptions.width === LayoutOptions.FILL_PARENT || childOptions.width === LayoutOptions.WRAP_CONTENT)\n                ? this.measuredWidth : 0;\n            const maxHeight = (childOptions.height === LayoutOptions.FILL_PARENT || childOptions.height === LayoutOptions.WRAP_CONTENT)\n                ? this.measuredHeight : 0;\n\n            child.measure(\n                maxWidth,\n                maxHeight,\n                maxWidth ? MeasureMode.AT_MOST : MeasureMode.UNBOUNDED,\n                maxHeight ? MeasureMode.AT_MOST : MeasureMode.UNBOUNDED,\n            );\n        }\n    }\n\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    layout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n\n        if (this.background)\n        {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n        // this.container.width = r - l;\n        // this.container.height = b - t;\n    }\n\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    get paddingLeft(): number\n    {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val: number)\n    {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n\n    get paddingTop(): number\n    {\n        return this._paddingTop;\n    }\n    set paddingTop(val: number)\n    {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n\n    get paddingRight(): number\n    {\n        return this._paddingRight;\n    }\n    set paddingRight(val: number)\n    {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n\n    get paddingBottom(): number\n    {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val: number)\n    {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n\n    get paddingHorizontal(): number\n    {\n        return this._paddingLeft + this._paddingRight;\n    }\n\n    get paddingVertical(): number\n    {\n        return this._paddingTop + this._paddingBottom;\n    }\n\n    get interactive(): boolean\n    {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n\n    setPadding(l: number, t: number, r: number, b: number): Widget\n    {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n\n        return this;\n    }\n\n    addChild(UIObject): any\n    {\n        const argumentsLength = arguments.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.contentContainer.addChild(UIObject.insetContainer);\n            this.widgetChildren.push(UIObject);\n            this.updatesettings(true, true);\n        }\n\n        return UIObject;\n    }\n\n    removeChild(UIObject): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                const oldUIParent = UIObject.parent;\n                const oldParent = UIObject.container.parent;\n\n                UIObject.container.parent.removeChild(UIObject.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                UIObject.parent = null;\n\n                // oldParent._recursivePostUpdateTransform();\n                setTimeout(function ()\n                { // hack but cant get the transforms to update propertly otherwice?\n                    if (oldUIParent.updatesettings)\n                    { oldUIParent.updatesettings(true, true); }\n                }, 0);\n            }\n        }\n    }\n\n    /**\n     * Initializes the object when its added to an UIStage\n     *\n     * @private\n     */\n    initialize(): void\n    {\n        this.initialized = true;\n        this.stage = this.parent.stage;\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n    }\n\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            this.drag.stopEvent();\n        }\n    }\n\n    initDraggable(): void\n    {\n        if (!this.dragInitialized)\n        {\n            this.dragInitialized = true;\n            const containerStart = new PIXI.Point();\n            const stageOffset = new PIXI.Point();\n            const self = this;\n\n            this._dragPosition = new PIXI.Point();\n            this.drag = new DragEvent(this);\n            this.drag.onDragStart = function (e)\n            {\n                const added = DragDropController.add(this, e);\n\n                if (!this.dragging && added)\n                {\n                    this.dragging = true;\n                    this.container.interactive = false;\n                    containerStart.copy(this.container.position);\n                    if (this.dragContainer)\n                    {\n                        const c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\n\n                        if (c)\n                        {\n                        // _this.container._recursivePostUpdateTransform();\n                            stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\n                            c.addChild(this.container);\n                        }\n                    }\n                    else\n                    {\n                        stageOffset.set(0);\n                    }\n                    this.emit('draggablestart', e);\n                }\n            };\n\n            this.drag.onDragMove = function (e, offset)\n            {\n                if (this.dragging)\n                {\n                    this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\n                    this.x = this._dragPosition.x;\n                    this.y = this._dragPosition.y;\n                    this.emit('draggablemove', e);\n                }\n            };\n\n            this.drag.onDragEnd = function (e)\n            {\n                if (this.dragging)\n                {\n                    this.dragging = false;\n                    // Return to container after 0ms if not picked up by a droppable\n                    setTimeout(function ()\n                    {\n                        self.contentContainer.interactive = true;\n                        const item = DragDropController.getItem(self);\n\n                        if (item)\n                        {\n                            const container = self.parent === self.stage ? self.stage : self.parent.contentContainer;\n\n                            container.toLocal(self.contentContainer.position, self.contentContainer.parent, self);\n                            if (container != self.contentContainer)\n                            {\n                                self.parent.addChild(self);\n                            }\n                        }\n                        self.emit('draggableend', e);\n                    }, 0);\n                }\n            };\n        }\n    }\n\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n            const self = this;\n\n            this.contentContainer.interactive = true;\n            this.onDrop = function (event)\n            {\n                const item = DragDropController.getEventItem(event, self.dropGroup);\n\n                if (item && item.dragging)\n                {\n                    item.dragging = false;\n                    item.container.interactive = true;\n                    const parent = self.droppableReparent !== null ? self.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent)\n                    { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n\n    get x(): number\n    {\n        return this.setting.left;\n    }\n    set x(val: number)\n    {\n        this.left = val;\n    }\n\n    get y(): number\n    {\n        return this.setting.top;\n    }\n    set y(val: number)\n    {\n        this.top = val;\n    }\n\n    get width(): number\n    {\n        return this._width;\n    }\n    set width(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.widthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.widthPct = null; }\n\n        this.setting.width = val;\n        this.updatesettings(true);\n    }\n\n    get actual_width(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.widthPct !== null)\n            {\n                this._width = this.parent._width * this.setting.widthPct;\n            }\n            else\n            {\n                this._width = this.setting.width;\n            }\n        }\n\n        return this._width;\n    }\n\n    get height(): number\n    {\n        return this._height;\n    }\n    set height(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.heightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.heightPct = null; }\n\n        this.setting.height = val;\n        this.updatesettings(true);\n    }\n\n    get actual_height(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.heightPct !== null)\n            {\n                this._height = this.parent._height * this.setting.heightPct;\n            }\n            else\n            {\n                this._height = this.setting.height;\n            }\n        }\n\n        return this._height;\n    }\n\n    get minWidth(): number\n    {\n        return this.setting.minWidth;\n    }\n    set minWidth(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.minWidthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.minWidthPct = null; }\n\n        this.setting.minWidth = val;\n        this.updatesettings(true);\n    }\n\n    get actual_minWidth(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.minWidthPct !== null)\n            {\n                this._minWidth = this.parent._width * this.setting.minWidthPct;\n            }\n            else\n            {\n                this._minWidth = this.setting.minWidth;\n            }\n        }\n\n        return this._minWidth;\n    }\n\n    get minHeight(): number\n    {\n        return this.setting.minHeight;\n    }\n    set minHeight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.minHeightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.minHeightPct = null; }\n\n        this.setting.minHeight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_minHeight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.minHeightPct !== null)\n            {\n                this._minHeight = this.parent._height * this.setting.minHeightPct;\n            }\n            else\n            {\n                this._minHeight = this.setting.minHeight;\n            }\n        }\n\n        return this._minHeight;\n    }\n\n    get maxWidth(): number\n    {\n        return this.setting.maxWidth;\n    }\n    set maxWidth(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.maxWidthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.maxWidthPct = null; }\n\n        this.setting.maxWidth = val;\n        this.updatesettings(true);\n    }\n\n    get actual_maxWidth(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.maxWidthPct !== null)\n            {\n                this._maxWidth = this.parent._width * this.setting.maxWidthPct;\n            }\n            else\n            {\n                this._maxWidth = this.setting.maxWidth;\n            }\n        }\n\n        return this._maxWidth;\n    }\n\n    get maxHeight(): number\n    {\n        return this.setting.maxHeight;\n    }\n    set maxHeight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.maxHeightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.maxHeightPct = null; }\n\n        this.setting.maxHeight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_maxHeight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.maxHeightPct !== null)\n            {\n                this._maxHeight = this.parent._height * this.setting.maxHeightPct;\n            }\n            else\n            {\n                this._maxHeight = this.setting.maxHeight;\n            }\n        }\n\n        return this._maxHeight;\n    }\n\n    get anchorLeft(): number\n    {\n        return this.setting.anchorLeft;\n    }\n    set anchorLeft(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorLeftPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorLeftPct = null; }\n\n        this.setting.anchorLeft = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorLeft(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorLeftPct !== null)\n            {\n                this._anchorLeft = this.parent._width * this.setting.anchorLeftPct;\n            }\n            else\n            {\n                this._anchorLeft = this.setting.anchorLeft;\n            }\n        }\n\n        return this._anchorLeft;\n    }\n\n    get anchorRight(): number\n    {\n        return this.setting.anchorRight;\n    }\n    set anchorRight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorRightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorRightPct = null; }\n\n        this.setting.anchorRight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorRight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorRightPct !== null)\n            {\n                this._anchorRight = this.parent._width * this.setting.anchorRightPct;\n            }\n            else\n            {\n                this._anchorRight = this.setting.anchorRight;\n            }\n        }\n\n        return this._anchorRight;\n    }\n\n    get anchorTop(): number\n    {\n        return this.setting.anchorTop;\n    }\n    set anchorTop(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorTopPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorTopPct = null; }\n\n        this.setting.anchorTop = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorTop(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorTopPct !== null)\n            {\n                this._anchorTop = this.parent._height * this.setting.anchorTopPct;\n            }\n            else\n            {\n                this._anchorTop = this.setting.anchorTop;\n            }\n        }\n\n        return this._anchorTop;\n    }\n\n    get anchorBottom(): number\n    {\n        return this.setting.anchorBottom;\n    }\n    set anchorBottom(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorBottomPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorBottomPct = null; }\n\n        this.setting.anchorBottom = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorBottom(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorBottomPct !== null)\n            {\n                this._anchorBottom = this.parent._height * this.setting.anchorBottomPct;\n            }\n            else\n            {\n                this._anchorBottom = this.setting.anchorBottom;\n            }\n        }\n\n        return this._anchorBottom;\n    }\n\n    get left(): number\n    {\n        return this.setting.left;\n    }\n    set left(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.leftPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.leftPct = null; }\n\n        this.setting.left = val;\n        this.updatesettings(true);\n    }\n\n    get actual_left(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.leftPct !== null)\n            {\n                this._left = this.parent._width * this.setting.leftPct;\n            }\n            else\n            {\n                this._left = this.setting.left;\n            }\n        }\n\n        return this._left;\n    }\n\n    get right(): number\n    {\n        return this.setting.right;\n    }\n    set right(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.rightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.rightPct = null; }\n\n        this.setting.right = val;\n        this.updatesettings(true);\n    }\n\n    get actual_right(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.rightPct !== null)\n            {\n                this._right = this.parent._width * this.setting.rightPct;\n            }\n            else\n            {\n                this._right = this.setting.right;\n            }\n        }\n\n        return this._right;\n    }\n\n    get top(): number\n    {\n        return this.setting.top;\n    }\n    set top(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.topPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.topPct = null; }\n\n        this.setting.top = val;\n        this.updatesettings(true);\n    }\n\n    get actual_top(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.topPct !== null)\n            {\n                this._top = this.parent._height * this.setting.topPct;\n            }\n            else\n            {\n                this._top = this.setting.top;\n            }\n        }\n\n        return this._top;\n    }\n\n    get bottom(): number\n    {\n        return this.setting.bottom;\n    }\n    set bottom(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.bottomPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.bottomPct = null; }\n\n        this.setting.bottom = val;\n        this.updatesettings(true);\n    }\n\n    get actual_bottom()\n    {\n        if (this.dirty)\n        {\n            if (this.setting.bottomPct !== null)\n            {\n                this._bottom = this.parent._height * this.setting.bottomPct;\n            }\n            else\n            {\n                this._bottom = this.setting.bottom;\n            }\n        }\n\n        return this._bottom;\n    }\n\n    get verticalAlign(): number\n    {\n        return this.setting.verticalAlign;\n    }\n    set verticalAlign(val: number)\n    {\n        this.setting.verticalAlign = val;\n        this.baseupdate();\n    }\n\n    get valign(): number\n    {\n        return this.setting.verticalAlign;\n    }\n    set valign(val: number)\n    {\n        this.setting.verticalAlign = val;\n        this.baseupdate();\n    }\n\n    get horizontalAlign(): boolean\n    {\n        return this.setting.horizontalAlign;\n    }\n    set horizontalAlign(val: boolean)\n    {\n        this.setting.horizontalAlign = val;\n        this.baseupdate();\n    }\n\n    get align(): boolean\n    {\n        return this.setting.horizontalAlign;\n    }\n    set align(val: boolean)\n    {\n        this.setting.horizontalAlign = val;\n        this.baseupdate();\n    }\n\n    get tint(): number\n    {\n        return this.setting.tint;\n    }\n    set tint(val: number)\n    {\n        this.setting.tint = val;\n        this.update();\n    }\n\n    get alpha(): number\n    {\n        return this.setting.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.setting.alpha = val;\n        this.contentContainer.alpha = val;\n    }\n\n    get rotation(): number\n    {\n        return this.setting.rotation;\n    }\n    set rotation(val: number)\n    {\n        this.setting.rotation = val;\n        this.contentContainer.rotation = val;\n    }\n\n    get blendMode(): number\n    {\n        return this.setting.blendMode;\n    }\n    set blendMode(val: number)\n    {\n        this.setting.blendMode = val;\n        this.update();\n    }\n\n    get pivotX(): number\n    {\n        return this.setting.pivotX;\n    }\n    set pivotX(val: number)\n    {\n        this.setting.pivotX = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    get pivotY(): number\n    {\n        return this.setting.pivotY;\n    }\n    set pivotY(val: number)\n    {\n        this.setting.pivotY = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    set pivot(val: number)\n    {\n        this.setting.pivotX = val;\n        this.setting.pivotY = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    get scaleX(): number\n    {\n        return this.setting.scaleX;\n    }\n    set scaleX(val: number)\n    {\n        this.setting.scaleX = val;\n        this.contentContainer.scale.x = val;\n    }\n\n    get scaleY(): number\n    {\n        return this.setting.scaleY;\n    }\n    set scaleY(val: number)\n    {\n        this.setting.scaleY = val;\n        this.contentContainer.scale.y = val;\n    }\n\n    get scale(): number\n    {\n        return this.setting.scaleX;\n    }\n    set scale(val: number)\n    {\n        this.setting.scaleX = val;\n        this.setting.scaleY = val;\n        this.contentContainer.scale.x = val;\n        this.contentContainer.scale.y = val;\n    }\n\n    get draggable(): boolean\n    {\n        return this.setting.draggable;\n    }\n    set draggable(val: boolean)\n    {\n        this.setting.draggable = val;\n        if (this.initialized)\n        {\n            if (val)\n            { this.initDraggable(); }\n            else\n            { this.clearDraggable(); }\n        }\n    }\n\n    get dragRestricted(): boolean\n    {\n        return this.setting.dragRestricted;\n    }\n    set dragRestricted(val: boolean)\n    {\n        this.setting.dragRestricted = val;\n    }\n\n    get dragRestrictAxis(): any\n    {\n        return this.setting.dragRestrictAxis;\n    }\n    set dragRestrictAxis(val: any)\n    {\n        this.setting.dragRestrictAxis = val;\n    }\n\n    get dragThreshold(): number\n    {\n        return this.setting.dragThreshold;\n    }\n    set dragThreshold(val: number)\n    {\n        this.setting.dragThreshold = val;\n    }\n\n    get dragGroup(): number\n    {\n        return this.setting.dragGroup;\n    }\n    set dragGroup(val: number)\n    {\n        this.setting.dragGroup = val;\n    }\n\n    get dragContainer(): number\n    {\n        return this.setting.dragContainer;\n    }\n    set dragContainer(val: number)\n    {\n        this.setting.dragContainer = val;\n    }\n\n    get droppable(): boolean\n    {\n        return this.setting.droppable;\n    }\n    set droppable(val: boolean)\n    {\n        this.setting.droppable = true;\n        if (this.initialized)\n        {\n            if (val)\n            { this.initDroppable(); }\n            else\n            { this.clearDroppable(); }\n        }\n    }\n\n    get droppableReparent(): boolean\n    {\n        return this.setting.droppableReparent;\n    }\n    set droppableReparent(val: boolean)\n    {\n        this.setting.droppableReparent = val;\n    }\n\n    get dropGroup(): any\n    {\n        return this.setting.dropGroup;\n    }\n    set dropGroup(val: any)\n    {\n        this.setting.dropGroup = val;\n    }\n\n    get renderable(): boolean\n    {\n        return this.contentContainer.renderable;\n    }\n    set renderable(val: boolean)\n    {\n        this.contentContainer.renderable = val;\n    }\n\n    get visible(): boolean\n    {\n        return this.contentContainer.visible;\n    }\n    set visible(val: boolean)\n    {\n        this.contentContainer.visible = val;\n    }\n\n    get cacheAsBitmap(): boolean\n    {\n        return this.contentContainer.cacheAsBitmap;\n    }\n    set cacheAsBitmap(val: boolean)\n    {\n        this.contentContainer.cacheAsBitmap = val;\n    }\n\n    get onClick(): any\n    {\n        return this.contentContainer.click;\n    }\n    set onClick(val: any)\n    {\n        this.contentContainer.click = val;\n    }\n\n    get interactiveChildren(): boolean\n    {\n        return this.contentContainer.interactiveChildren;\n    }\n    set interactiveChildren(val: boolean)\n    {\n        this.contentContainer.interactiveChildren = val;\n    }\n\n    get parentLayer(): any\n    {\n        return this.contentContainer.parentLayer;\n    }\n    set parentLayer(val: any)\n    {\n        this.contentContainer.parentLayer = val;\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from '../Widget';\n\nexport class ClickEvent\n{\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    private obj: Widget;\n\n    private movementX: number;\n    private movementY: number;\n\n    right: boolean;\n    hover: boolean;\n    double: boolean;\n\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private eventname_mousedown: string;\n    private eventname_mouseup: string;\n    private eventname_mouseupoutside: string;\n\n    time: number;\n\n    constructor(obj, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        this.obj = obj;\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.right = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this.hover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.double = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        this.eventname_mousedown = this.right ? 'rightdown' : 'mousedown';\n        this.eventname_mouseup = this.right ? 'rightup' : 'mouseup';\n        this.eventname_mouseupoutside = this.right ? 'rightupoutside' : 'mouseupoutside';\n\n        obj.interactive = true;\n        this.time = 0;\n\n        this.startEvent();\n    }\n\n    _onMouseDown = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.obj, event, true);\n\n        if (!this.bound)\n        {\n            obj.contentContainer.on(eventname_mouseup, _onMouseUp);\n            obj.contentContainer.on(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.contentContainer.on('touchend', _onMouseUp);\n                obj.contentContainer.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this.double)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    _mouseUpAll = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.contentContainer.removeListener(eventname_mouseup, _onMouseUp);\n            obj.contentContainer.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.contentContainer.removeListener('touchend', _onMouseUp);\n                obj.contentContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    _onMouseUp = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.obj.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.obj.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this.double)\n        {\n            this.onClick.call(this.obj, event);\n        }\n    };\n\n    _onMouseUpOutside = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n    };\n\n    _onMouseOver = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.obj.contentContainer.on('mousemove', this._onMouseMove);\n            this.obj.contentContainer.on('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, true);\n        }\n    };\n\n    _onMouseOut = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.obj.contentContainer.removeListener('mousemove', this._onMouseMove);\n            this.obj.contentContainer.removeListener('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, false);\n        }\n    };\n\n    _onMouseMove = (event): void =>\n    {\n        this.onMove.call(this.obj, event);\n    };\n\n    stopEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n            _onMouseMove,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.contentContainer.removeListener(eventname_mouseup, _onMouseUp);\n            obj.contentContainer.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.contentContainer.removeListener('touchend', _onMouseUp);\n                obj.contentContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.contentContainer.removeListener('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.contentContainer.removeListener('mouseover', _onMouseOver);\n            obj.contentContainer.removeListener('mouseout', _onMouseOut);\n            obj.contentContainer.removeListener('mousemove', _onMouseMove);\n            obj.contentContainer.removeListener('touchmove', _onMouseMove);\n        }\n    };\n\n    startEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mousedown,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n        } = this;\n\n        obj.contentContainer.on(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.contentContainer.on('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.contentContainer.on('mouseover', _onMouseOver);\n            obj.contentContainer.on('mouseout', _onMouseOut);\n        }\n    };\n\n    onHover(event, over): void\n    {\n\n    }\n\n    onPress(event, isPressed): void\n    {\n\n    }\n\n    onClick(event): void\n    {\n\n    }\n\n    onMove(event): void\n    {\n\n    }\n}\n","import { MeasureMode } from '../IMeasurable';\nimport { ILayoutManager } from './ILayoutManager';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @namespace PUXI\n * @extends PUXI.ILayoutManager\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout implements ILayoutManager\n{\n    private host: WidgetGroup;\n    private _measuredWidth: number;\n    private _measuredHeight: number;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n\n        const children = this.host.widgetChildren;\n\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : maxWidth,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : maxHeight,\n                widthMeasureMode,\n                heightMeasureMode);\n        }\n\n        if (widthMode === MeasureMode.UNBOUNDED || widthMode === MeasureMode.AT_MOST)\n        {\n            this._measuredWidth = 0;\n\n            for (let i = 0, j = children.length; i < j; i++)\n            {\n                const widget = children[i];\n                const childWidth = widget.getMeasuredWidth();\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n                const x = lopt.x ? lopt.x : 0;\n\n                // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n                // as child's width.\n                const minr = childWidth + (Math.abs(x) < 1 ? childWidth / (1 - x) : x);\n\n                this._measuredWidth = Math.max(this._measuredWidth, minr);\n            }\n\n            if (widthMode === MeasureMode.AT_MOST)\n            {\n                this._measuredWidth = Math.min(maxWidth, this._measuredWidth);\n            }\n        }\n        if (heightMode === MeasureMode.UNBOUNDED || heightMode === MeasureMode.AT_MOST)\n        {\n            this._measuredHeight = 0;\n\n            for (let i = 0, j = children.length; i < j; i++)\n            {\n                const widget = children[i];\n                const childHeight = widget.getMeasuredHeight();\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n                const y = lopt.y ? lopt.y : 0;\n\n                const minb = childHeight + (Math.abs(y) < 1 ? childHeight / (1 - y) : y);\n\n                this._measuredHeight = Math.max(this._measuredHeight, minb);\n            }\n\n            if (heightMode === MeasureMode.AT_MOST)\n            {\n                this._measuredHeight = Math.min(maxHeight, this._measuredHeight);\n            }\n        }\n    }\n\n    private getChildMeasureMode(dimen: number, parentMeasureMode: MeasureMode): MeasureMode\n    {\n        if (parentMeasureMode === MeasureMode.UNBOUNDED)\n        {\n            return MeasureMode.UNBOUNDED;\n        }\n        if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT)\n        {\n            return MeasureMode.AT_MOST;\n        }\n\n        return MeasureMode.EXACTLY;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { width, height, widgetChildren: children } = parent;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight());\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\nimport { FastLayout } from './layout-manager/FastLayout';\n\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @namespace PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport abstract class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;// lazily initialized (via useLayout(), useDefaultLayout())\n\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr: ILayoutManager): void\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach();\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout(): void\n    {\n        this.useLayout(new FastLayout());\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.measure(width, height, widthMode, heightMode);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onLayout();// layoutMgr is attached to this\n    }\n}\n","import { InputController } from './Interaction/InputController';\nimport { WidgetGroup } from './WidgetGroup';\n\n/**\n * Represents a view that can accept any form of input. It can gain and loose focus.\n *\n * @class\n * @extends PUXI.WidgetGroup\n * @memberof PUXI\n * @param width {number} passed to uibase\n * @param height {number} passed to uibase\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n */\nexport abstract class InputBase extends WidgetGroup\n{\n    _focused: boolean;\n    _useTab: boolean;\n    _usePrev: boolean;\n    _useNext: boolean;\n\n    __down: boolean;\n\n    constructor(width: number, height: number, tabIndex: number, tabGroup: any)\n    {\n        super(width, height);\n\n        this._focused = false;\n        this._useTab = this._usePrev = this._useNext = true;\n        this.contentContainer.interactive = true;\n        InputController.registrer(this, tabIndex, tabGroup);\n\n        this.contentContainer.on('pointerdown', (e) =>\n        {\n            this.focus();\n            this.__down = true;\n        });\n\n        this.contentContainer.on('pointerup', (e) =>\n        {\n            this.__down = false;\n        });\n\n        this.contentContainer.on('pointerupoutside', (e) =>\n        {\n            this.__down = false;\n        });\n    }\n\n    blur(): void\n    {\n        if (this._focused)\n        {\n            InputController.clear();\n            this._focused = false;\n            this._clearEvents();\n            this.emit('focusChanged', false);\n            this.emit('blur');\n        }\n    }\n\n    focus(): void\n    {\n        if (!this._focused)\n        {\n            this._focused = true;\n            this._bindEvents();\n            InputController.set(this);\n            this.emit('focusChanged', true);\n            this.emit('focus');\n        }\n    }\n\n    protected keyDownEvent = (e: any): void =>\n    {\n        if (e.which === 9)\n        {\n            if (this._useTab)\n            {\n                InputController.fireTab();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 38)\n        {\n            if (this._usePrev)\n            {\n                InputController.firePrev();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 40)\n        {\n            if (this._useNext)\n            {\n                InputController.fireNext();\n                e.preventDefault();\n            }\n        }\n    };\n\n    private documentMouseDown = (): void =>\n    {\n        if (!this.__down)\n        {\n            this.blur();\n        }\n    };\n\n    private _bindEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.on('pointerdown', this.documentMouseDown);\n            document.addEventListener('keydown', this.keyDownEvent);\n        }\n    };\n\n    private _clearEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.off('pointerdown', this.documentMouseDown);\n            document.removeEventListener('keydown', this.keyDownEvent);\n        }\n    };\n}\n","import { ClickEvent } from './Interaction/ClickEvent';\nimport { InputBase } from './InputBase';\nimport { Sprite } from './Sprite';\nimport { Text } from './Text';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\ninterface IButtonOptions\n{\n    background?: Sprite;\n    text?: Text;\n    tabIndex?: number;\n    tabGroup?: any;\n    width?: number;\n    height?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PUXI.InputBase\n * @memberof PUXI\n * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n * @param [options.text=null] {PIXI.UI.Text} optional text\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.width=options.background.width] {Number|String} width\n * @param [options.height=options.background.height] {Number|String} height\n */\nexport class Button extends InputBase\n{\n    background: Sprite;\n    isHover: boolean;\n\n    protected textWidget: Text;\n\n    click: () => void;\n    initialize: () => void;\n\n    constructor(options: IButtonOptions)\n    {\n        super(\n            options.width || (options.background ? options.background.width : 100),\n            options.height || (options.background ? options.background.height : 100),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this.background = options.background;\n\n        if (this.background)\n        {\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.background.pivot = 0.5;\n            this.background.verticalAlign = 'middle';\n            this.background.horizontalAlign = 'center';\n            this.addChild(this.background);\n        }\n\n        this.isHover = false;\n        this.textWidget = options.text.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5, 0.5,\n                FastLayoutOptions.CENTER_ANCHOR,\n            ),\n        ) as Text;\n\n        if (this.textWidget)\n        {\n            this.addChild(this.textWidget);\n        }\n\n        this.contentContainer.buttonMode = true;\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent = new ClickEvent(this);\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                InputBase.prototype.focus.call(this);\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                InputBase.prototype.blur.call(this);\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n\n        this.initialize = (): void =>\n        {\n            super.initialize();\n            this.contentContainer.interactiveChildren = false;\n            // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n\n            setTimeout(() =>\n            {\n                const bounds = this.contentContainer.getLocalBounds();\n\n                this.contentContainer.hitArea = new PIXI.Rectangle(\n                    bounds.x < 0 ? bounds.x : 0,\n                    bounds.y < 0 ? bounds.y : 0,\n                    Math.max(bounds.x + bounds.width + (bounds.x < 0 ? -bounds.x : 0), this._width),\n                    Math.max(bounds.y + bounds.height + (bounds.y < 0 ? -bounds.y : 0), this._height),\n                );\n            }, 20);\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    get value(): string\n    {\n        if (this.textWidget)\n        {\n            return this.textWidget.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.textWidget)\n        {\n            this.textWidget.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.textWidget;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { InputBase } from './InputBase';\nimport { ClickEvent } from './Interaction/ClickEvent';\nimport { InputController } from './Interaction/InputController';\nimport { Sprite } from './Sprite';\n\ninterface ICheckBoxOptions\n{\n    checked?: boolean;\n    background: Sprite;\n    checkmark?: Sprite;\n    checkgroup?: any;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param [options.checked=false] {bool} is checked\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n * @param [options.checkgroup=null] {String} CheckGroup name\n * @param options.value {String} mostly used along with checkgroup\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n */\nexport class CheckBox extends InputBase\n{\n    private _checked: boolean;\n    private _value: string;\n    private checkGroup: any;\n\n    background: Sprite;\n    checkmark: Sprite;\n\n    change: (val: boolean) => void;\n    click: () => void;\n\n    constructor(options: ICheckBoxOptions)\n    {\n        super(\n            options.background.width,\n            options.background.height,\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkgroup || null;\n\n        this.background = options.background;\n        this.background.width = '100%';\n        this.background.height = '100%';\n        this.addChild(this.background);\n\n        this.checkmark = options.checkmark;\n\n        if (this.checkmark)\n        {\n            this.checkmark.verticalAlign = 'middle';\n            this.checkmark.horizontalAlign = 'center';\n\n            if (!this._checked)\n            {\n                this.checkmark.alpha = 0;\n            }\n\n            this.addChild(this.checkmark);\n        }\n\n        this.contentContainer.buttonMode = true;\n\n        if (this.checkGroup !== null)\n        {\n            InputController.registrerCheckGroup(this);\n        }\n\n        // var keyDownEvent = function (e) {\n        //    if (e.which === 32) { //space\n        //        self.click();\n        //    }\n        // };\n\n        const clickEvent = new ClickEvent(this);\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.change = (val): void =>\n        {\n            if (this.checkmark)\n            {\n                this.checkmark.alpha = val ? 1 : 0;\n            }\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n\n            if (this.checkGroup !== null && this.checked)\n            {\n                return;\n            }\n\n            this.checked = !this.checked;\n            this.emit('change', this.checked);\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                super.focus();\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                super.blur();\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                InputController.updateCheckGroupSelected(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            InputController.updateCheckGroupSelected(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return InputController.getCheckGroupSelectedValue(this.checkGroup);\n    }\n    set selectedValue(val: string)\n    {\n        InputController.setCheckGroupSelectedValue(this.checkGroup, val);\n    }\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param width {Number} Width of the Container\n * @param height {Number} Height of the Container\n */\nexport class Container extends Widget\n{\n    constructor(width: number, height: number)\n    {\n        super(width, height);\n        this.contentContainer.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    }\n\n    update()\n    {\n        // if (this.container.interactive) {\n        this.contentContainer.hitArea.width = this._width;\n        this.contentContainer.hitArea.height = this._height;\n        // }\n    }\n}\n\n","function DynamicTextStyle(parent)\n{\n    this.respectDirty = true;\n    this._parent = parent || null;\n    this._scale = 1;\n    this._align = 'left';\n    this._fontFamily = 'Arial';\n    this._fontSize = 26;\n    this._fontWeight = 'normal';\n    this._fontStyle = 'normal';\n    this._letterSpacing = 0;\n    this._lineHeight = 0;\n    this._verticalAlign = 0;\n    this._rotation = 0;\n    this._skew = 0;\n    this._tint = '#FFFFFF';\n    this._fill = '#FFFFFF';\n    this._shadow = '';\n    this._stroke = 0;\n    this._strokeFill = '';\n    this._strokeShadow = '';\n    this._wrap = true;\n    this._breakWords = false;\n    this._overflowX = 'visible'; // visible|hidden\n    this._overflowY = 'visible'; // visible|hidden\n    this._ellipsis = false;\n\n    let _cachedEllipsisSize = null;\n\n    this.ellipsisSize = function (atlas)\n    {\n        if (!this.ellipsis) return 0;\n        if (_cachedEllipsisSize === null)\n        { _cachedEllipsisSize = (atlas.getCharObject('.', this).width + this.letterSpacing) * 3; }\n\n        return _cachedEllipsisSize;\n    };\n}\n\nDynamicTextStyle.prototype.clone = function ()\n{\n    const style = new DynamicTextStyle();\n\n    style.merge(this);\n\n    return style;\n};\n\nDynamicTextStyle.prototype.merge = function (style)\n{\n    if (typeof style === 'object')\n    {\n        this.respectDirty = false;\n        for (const param in style)\n        {\n            const val = style[param];\n\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\n            this[param] = style[param];\n        }\n        this.respectDirty = true;\n        this._dirty = true;\n    }\n};\n\nDynamicTextStyle.prototype.ctxKey = function (char)\n{\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\n};\n\nDynamicTextStyle.prototype.ctxFont = function ()\n{\n    const fontSize = `${Math.min(200, Math.max(1, this.fontSize || 26))}px `;\n    const fontWeight = this.fontWeight === 'bold' ? `${this.fontWeight} ` : '';\n    const fontStyle = this.fontStyle === 'italic' || this.fontStyle === 'oblique' ? `${this.fontStyle} ` : '';\n\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\n};\n\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\n\nexport { DynamicTextStyle };\n\nObject.defineProperties(DynamicTextStyle.prototype, {\n    _dirty: {\n        set(val)\n        {\n            if (this.respectDirty)\n            {\n                if (this._parent !== null)\n                {\n                    this._parent.dirtyStyle = val;\n                    this._parent.update();\n                }\n            }\n        },\n    },\n    scale: {\n        get()\n        {\n            return this._scale;\n        },\n        set(val)\n        {\n            if (val !== this._scale)\n            {\n                this._scale = val;\n                this._dirty = true;\n            }\n        },\n    },\n    align: {\n        get()\n        {\n            return this._align;\n        },\n        set(val)\n        {\n            if (val !== this._align)\n            {\n                this._align = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontFamily: {\n        get()\n        {\n            return this._fontFamily;\n        },\n        set(val)\n        {\n            if (val !== this._fontFamily)\n            {\n                this._fontFamily = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontSize: {\n        get()\n        {\n            return this._fontSize;\n        },\n        set(val)\n        {\n            if (val !== this._fontSize)\n            {\n                this._fontSize = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontWeight: {\n        get()\n        {\n            return this._fontWeight;\n        },\n        set(val)\n        {\n            if (val !== this._fontWeight)\n            {\n                this._fontWeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontStyle: {\n        get()\n        {\n            return this._fontStyle;\n        },\n        set(val)\n        {\n            if (val !== this._fontStyle)\n            {\n                this._fontStyle = val;\n                this._dirty = true;\n            }\n        },\n    },\n    letterSpacing: {\n        get()\n        {\n            return this._letterSpacing;\n        },\n        set(val)\n        {\n            if (val !== this._letterSpacing)\n            {\n                this._letterSpacing = val;\n                this._dirty = true;\n            }\n        },\n    },\n    lineHeight: {\n        get()\n        {\n            return this._lineHeight;\n        },\n        set(val)\n        {\n            if (val !== this._lineHeight)\n            {\n                this._lineHeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    verticalAlign: {\n        get()\n        {\n            return this._verticalAlign;\n        },\n        set(val)\n        {\n            if (val !== this._verticalAlign)\n            {\n                this._verticalAlign = val;\n                this._dirty = true;\n            }\n        },\n    },\n    rotation: {\n        get()\n        {\n            return this._rotation;\n        },\n        set(val)\n        {\n            if (val !== this._rotation)\n            {\n                this._rotation = val;\n                this._dirty = true;\n            }\n        },\n    },\n    skew: {\n        get()\n        {\n            return this._skew;\n        },\n        set(val)\n        {\n            if (val !== this._skew)\n            {\n                this._skew = val;\n                this._dirty = true;\n            }\n        },\n    },\n    tint: {\n        get()\n        {\n            return this._tint;\n        },\n        set(val)\n        {\n            if (val !== this._tint)\n            {\n                this._tint = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fill: {\n        get()\n        {\n            return this._fill;\n        },\n        set(val)\n        {\n            if (val !== this._fill)\n            {\n                this._fill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    shadow: {\n        get()\n        {\n            return this._shadow;\n        },\n        set(val)\n        {\n            if (val !== this._shadow)\n            {\n                this._shadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    stroke: {\n        get()\n        {\n            return this._stroke;\n        },\n        set(val)\n        {\n            if (val !== this._stroke)\n            {\n                this._stroke = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeFill: {\n        get()\n        {\n            return this._strokeFill;\n        },\n        set(val)\n        {\n            if (val !== this._strokeFill)\n            {\n                this._strokeFill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeShadow: {\n        get()\n        {\n            return this._strokeShadow;\n        },\n        set(val)\n        {\n            if (val !== this._strokeShadow)\n            {\n                this._strokeShadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    wrap: {\n        get()\n        {\n            return this._wrap;\n        },\n        set(val)\n        {\n            if (val !== this._wrap)\n            {\n                this._wrap = val;\n                this._dirty = true;\n            }\n        },\n    },\n    breakWords: {\n        get()\n        {\n            return this._breakWords;\n        },\n        set(val)\n        {\n            if (val !== this._breakWords)\n            {\n                this._breakWords = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowX: {\n        get()\n        {\n            return this._overflowX;\n        },\n        set(val)\n        {\n            if (val !== this._overflowX)\n            {\n                this._overflowX = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowY: {\n        get()\n        {\n            return this._overflowY;\n        },\n        set(val)\n        {\n            if (val !== this._overflowY)\n            {\n                this._overflowY = val;\n                this._dirty = true;\n            }\n        },\n    },\n    ellipsis: {\n        get()\n        {\n            return this._ellipsis;\n        },\n        set(val)\n        {\n            if (val !== this._ellipsis)\n            {\n                this._ellipsis = val;\n                this._dirty = true;\n            }\n        },\n    },\n});\n","function DynamicChar()\n{\n    // styledata (texture, orig width, orig height)\n    this.style = null;\n\n    // char data\n    this.data = null;\n\n    // is this char space?\n    this.space = false;\n\n    // is this char newline?\n    this.newline = false;\n\n    this.emoji = false;\n\n    // charcode\n    this.charcode = 0;\n\n    // char string value\n    this.value = '';\n\n    // word index\n    this.wordIndex = -1;\n\n    // line index of char\n    this.lineIndex = -1;\n}\n\nDynamicChar.prototype.constructor = DynamicChar;\n\nexport { DynamicChar };\n","import { Widget } from '../Widget';\nimport { DynamicTextStyle } from './DynamicTextStyle';\nimport { DynamicChar }  from './DynamicChar';\nimport emojiRegex  from 'emoji-regex';\nlet atlas = null;\n\n/**\n* An dynamic text object with auto generated atlas\n*\n* @class\n* @extends PIXI.UI.UIBase\n* @memberof PIXI.UI\n* @param text {String} Text content\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\n* @param [allowTags=true] {boolean} Allow inline styling\n* @param [options=null] {DynamicTextStyle} Additional text settings\n*/\nfunction DynamicText(text, options)\n{\n    options = options || {};\n\n    Widget.call(this, options.width || 0, options.height || 0);\n\n    // create atlas\n    if (atlas === null)\n    { atlas = new DynamicAtlas(1); }\n\n    const autoWidth = !options.width;\n    const autoHeight = !options.height;\n\n    // defaultstyle for this textobject\n    const defaultStyle = this._style = new DynamicTextStyle(this);\n\n    defaultStyle.merge(options.style);\n\n    // collection of all processed char\n    const chars = this.chars = [];\n    const renderChars = [];\n    const spriteCache = []; // (temp)\n    const charContainer = new PIXI.Container();\n\n    this.container.addChild(charContainer);\n\n    // the input text\n    this._inputText = text;\n\n    // list of rendered sprites (temp)\n    const sprites = [];\n\n    // states\n    let lastWidth = 0;\n    let lastHeight = 0;\n\n    this.dirtyText = true;\n    this.dirtyStyle = true;\n    this.dirtyRender = true;\n\n    // dictionary for line data\n    const lineWidthData = [];\n    const lineHeightData = [];\n    const lineFontSizeData = [];\n    const lineAlignmentData = [];\n    let renderCount = 0;\n    let charCount = 0;\n\n    // ellipsis caches (not nessesary when no sprites)\n    const lineEllipsisData = [];\n    const lineHasEllipsis = [];\n\n    // ROUGH TEMP RENDER (with sprites)\n    this.render = function ()\n    {\n        let yOffset = 0;\n        let xOffset = 0;\n        let currentLine = -1;\n        let i;\n\n        if (spriteCache.length > renderCount)\n        {\n            for (i = renderCount; i < spriteCache.length; i++)\n            {\n                const removeSprite = spriteCache[i];\n\n                if (removeSprite)\n                { removeSprite.visible = false; }\n            }\n        }\n\n        let char; let lineWidth = 0; let lineHeight = 0; let\n            maxLineWidth = 0;\n\n        for (i = 0; i < renderCount; i++)\n        {\n            char = renderChars[i];\n\n            // get line data\n            if (currentLine !== char.lineIndex)\n            {\n                currentLine = char.lineIndex;\n                lineWidth = lineWidthData[currentLine];\n                lineHeight = lineHeightData[currentLine];\n                yOffset += lineHeight;\n\n                switch (lineAlignmentData[currentLine])\n                {\n                    case 'right': xOffset = this._width - lineWidth; break;\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\n                    default: xOffset = 0;\n                }\n\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\n            }\n\n            // no reason to render a blank space or 0x0 letters (no texture created)\n            if (!char.data.texture || char.space || char.newline)\n            {\n                if (spriteCache[i])\n                { spriteCache[i].visible = false; }\n                continue;\n            }\n\n            // add new sprite\n            const tex = char.data.texture; let\n                sprite = spriteCache[i];\n\n            if (!sprite)\n            {\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\n                sprite.anchor.set(0.5);\n            }\n            else\n            { sprite.texture = tex; }\n\n            sprite.visible = true;\n            sprite.x = char.x + xOffset + tex.width * 0.5;\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\n\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\n            sprite.rotation = float(char.style.rotation, 0);\n            sprite.skew.x = float(char.style.skew, 0);\n\n            if (!sprite.parent)\n            { charContainer.addChild(sprite); }\n        }\n\n        if (autoWidth) this.width = maxLineWidth;\n        if (autoHeight) this.height = yOffset;\n    };\n\n    // updates the renderChar array and position chars for render\n    this.prepareForRender = function ()\n    {\n        const pos = new PIXI.Point();\n        let wordIndex = 0;\n        let lineHeight = 0;\n        let lineFontSize = 0;\n        let lineIndex = 0;\n        let lineAlignment = defaultStyle.align;\n        let lastSpaceIndex = -1;\n        let lastSpaceLineWidth = 0;\n        let textHeight = 0;\n        let forceNewline = false;\n        let style;\n        let renderIndex = 0;\n        let ellipsis = false;\n        let lineFull = false;\n        let i;\n\n        for (i = 0; i < charCount; i++)\n        {\n            const char = chars[i]; const\n                lastChar = chars[i - 1];\n\n            style = char.style;\n\n            // lineheight\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\n\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height)\n            {\n                if (style.overflowY === 'hidden')\n                { break; }\n            }\n\n            if (char.newline)\n            { lineFull = false; }\n\n            // set word index\n            if (char.space || char.newline) wordIndex++;\n            else char.wordIndex = wordIndex;\n\n            // textheight\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\n\n            // lineindex\n            char.lineIndex = lineIndex;\n\n            // lineAlignment\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\n\n            if (char.space)\n            {\n                lastSpaceIndex = i;\n                lastSpaceLineWidth = pos.x;\n            }\n\n            const size = Math.round(char.data.width) + float(style.letterSpacing, 0);\n\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width)\n            {\n                if (style.wrap)\n                {\n                    if (char.space)\n                    {\n                        forceNewline = true;\n                    }\n                    else if (lastSpaceIndex !== -1)\n                    {\n                        renderIndex -= i - lastSpaceIndex;\n                        i = lastSpaceIndex - 1;\n                        lastSpaceIndex = -1;\n                        pos.x = lastSpaceLineWidth;\n                        forceNewline = true;\n                        continue;\n                    }\n                    else if (style.breakWords)\n                    {\n                        if (lastChar)\n                        {\n                            pos.x -= lastChar.style.letterSpacing;\n                            pos.x -= lastChar.data.width;\n                        }\n                        i -= 2;\n                        renderIndex--;\n                        forceNewline = true;\n                        continue;\n                    }\n                }\n\n                if (style.overflowX == 'hidden' && !forceNewline)\n                {\n                    lineFull = true;\n                    if (style.ellipsis && !ellipsis)\n                    {\n                        ellipsis = true;\n                        let ellipsisData = lineEllipsisData[lineIndex];\n\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\n                        for (let d = 0; d < 3; d++)\n                        {\n                            const dot = ellipsisData[d];\n\n                            dot.value = '.';\n                            dot.data = atlas.getCharObject(dot.value, style);\n                            dot.style = style;\n                            dot.x = pos.x + char.data.xOffset;\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\n                            dot.lineIndex = lineIndex;\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\n                            renderChars[renderIndex] = dot;\n                            renderIndex++;\n                        }\n                    }\n                }\n            }\n\n            // Update position and add to renderchars\n            if (!lineFull)\n            {\n                // position\n                char.x = pos.x + char.data.xOffset;\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\n                pos.x += size;\n                renderChars[renderIndex] = char;\n                renderIndex++;\n            }\n\n            // new line\n            if (forceNewline || char.newline || i === charCount - 1)\n            {\n                if (lastChar)\n                {\n                    pos.x -= lastChar.style.letterSpacing;\n                }\n\n                if (char.space)\n                {\n                    pos.x -= char.data.width;\n                    pos.x -= float(style.letterSpacing, 0);\n                }\n\n                textHeight += lineHeight;\n                lineHasEllipsis[lineIndex] = ellipsis;\n                lineWidthData[lineIndex] = pos.x;\n                lineHeightData[lineIndex] = lineHeight;\n                lineFontSizeData[lineIndex] = lineFontSize;\n                lineAlignmentData[lineIndex] = lineAlignment;\n\n                // reset line vaules\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\n                lineAlignment = defaultStyle.align;\n                lastSpaceIndex = -1;\n                lineIndex++;\n                forceNewline = lineFull = ellipsis = false;\n            }\n        }\n\n        renderCount = renderIndex;\n    };\n\n    // phrases the input text and prepares the char array\n    const closeTags = ['</i>', '</b>', '</font>', '</center>'];\n\n    this.processInputText = function ()\n    {\n        const styleTree = [defaultStyle];\n        let charIndex = 0;\n        let inputTextIndex = 0;\n        const inputArray = Array.from(this._inputText);\n\n        for (let i = 0; i < inputArray.length; i++)\n        {\n            style = styleTree[styleTree.length - 1];\n            let c = inputArray[i];\n            const charcode = c.charCodeAt(0);\n            let newline = false;\n            let space = false;\n            let emoji = false;\n\n            // Extract Tags\n            if ((/(?:\\r\\n|\\r|\\n)/).test(c))\n            { newline = true; }\n            else if ((/(\\s)/).test(c))\n            { space = true; }\n            else if (options.allowTags && c === '<')\n            {\n                let tag = this._inputText.substring(inputTextIndex);\n\n                tag = tag.slice(0, tag.indexOf('>') + 1);\n                let FoundTag = true;\n\n                if (tag.length)\n                {\n                    if (tag === '<i>')\n                    {\n                        style = style.clone();\n                        style.fontStyle = 'italic';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<b>')\n                    {\n                        style = style.clone();\n                        style.fontWeight = 'bold';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<center>')\n                    {\n                        style = style.clone();\n                        style.align = 'center';\n                        styleTree.push(style);\n                    }\n                    else if (closeTags.indexOf(tag) !== -1)\n                    {\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\n                    }\n                    else if (tag.startsWith('<font '))\n                    {\n                        const regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g;\n                        let match = regex.exec(tag);\n\n                        if (match !== null)\n                        {\n                            style = style.clone();\n                            while (match !== null)\n                            {\n                                switch (match[1])\n                                {\n                                    case 'family': match[1] = 'fontFamily'; break;\n                                    case 'size': match[1] = 'fontSize'; break;\n                                    case 'weight': match[1] = 'fontWeight'; break;\n                                    case 'style': match[1] = 'fontStyle'; break;\n                                    case 'valign': match[1] = 'verticalAlign'; break;\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\n                                    case 'color': match[1] = 'tint'; break;\n                                }\n                                style[match[1]] = match[4];\n                                match = regex.exec(tag);\n                            }\n                            styleTree.push(style);\n                        }\n                    }\n                    else\n                    {\n                        FoundTag = false;\n                    }\n\n                    if (FoundTag)\n                    {\n                        inputTextIndex += tag.length;\n                        i += tag.length - 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                // detect emoji\n                let emojiMatch = emojiRegex().exec(c);\n\n                if (emojiMatch !== null)\n                {\n                    i--; c = '';\n                    while (emojiMatch !== null && c !== emojiMatch[0])\n                    {\n                        i++;\n                        c = emojiMatch[0];\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\n                    }\n                    emoji = true;\n                }\n            }\n\n            // Prepare DynamicChar object\n            let char = chars[charIndex];\n\n            if (!char)\n            {\n                char = new DynamicChar();\n                chars[charIndex] = char;\n            }\n            char.style = style;\n\n            if (emoji)\n            {\n                char.style = char.style.clone();\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\n            }\n\n            char.data = atlas.getCharObject(c, char.style);\n            char.value = c;\n            char.space = space;\n            char.newline = newline;\n            char.emoji = emoji;\n\n            charIndex++;\n            inputTextIndex += c.length;\n        }\n        charCount = charIndex;\n    };\n\n    // PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\n    this.lazyUpdate = null;\n    const self = this;\n\n    this.update = function ()\n    {\n        if (self.lazyUpdate !== null) return;\n        self.lazyUpdate = setTimeout(function ()\n        {\n            // console.log(\"UPDATING TEXT\");\n            const dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\n\n            if (self.dirtyText || self.dirtyStyle)\n            {\n                self.dirtyText = self.dirtyStyle = false;\n                self.dirtyRender = true; // force render after textchange\n                self.processInputText();\n            }\n\n            if (dirtySize || self.dirtyRender)\n            {\n                self.dirtyRender = false;\n                lastWidth = self._width;\n                lastHeight = self.height;\n                self.prepareForRender();\n                self.render();\n            }\n            self.lazyUpdate = null;\n        }, 0);\n    };\n}\n\nDynamicText.prototype = Object.create(Widget.prototype);\nDynamicText.prototype.constructor = DynamicText;\n\nexport { DynamicText };\n\nDynamicText.settings = {\n    debugSpriteSheet: false,\n    defaultEmojiFont: 'Segoe UI Emoji', // force one font family for emojis so we dont rerender them multiple times\n};\n\nObject.defineProperties(DynamicText.prototype, {\n    value: {\n        get()\n        {\n            return this._inputText;\n        },\n        set(val)\n        {\n            if (val !== this._inputText)\n            {\n                this._inputText = val;\n                this.dirtyText = true;\n                this.update();\n                // console.log(\"Updating Text to: \" + val);\n            }\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n    style: {\n        get()\n        {\n            return this._style;\n        },\n        set(val)\n        {\n            // get a clean default style\n            const style = new DynamicTextStyle(this);\n\n            // merge it with new style\n            style.merge(val);\n\n            // merge it onto this default style\n            this._style.merge(style);\n\n            this.dirtyStyle = true;\n            this.update();\n        },\n    },\n});\n\n// Atlas\nconst metricsCanvas = document.createElement('canvas');\nconst metricsContext = metricsCanvas.getContext('2d');\n\nmetricsCanvas.width = 100;\nmetricsCanvas.height = 100;\n\nvar DynamicAtlas = function (padding)\n{\n    const res = devicePixelRatio || 1;\n    let canvas;\n    let context;\n    let objects;\n    let newObjects = [];\n    let baseTexture;\n    let lazyTimeout;\n    let rootNode;\n    const canvasList = [];\n    let atlasdim;\n    const startdim = 256;\n    const maxdim = 2048;\n\n    var AtlasNode = function (w, h)\n    {\n        const children = this.children = [];\n\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\n        this.data = null;\n\n        this.insert = function (width, height, obj)\n        {\n            if (children.length > 0)\n            {\n                const newNode = children[0].insert(width, height, obj);\n\n                if (newNode !== null) return newNode;\n\n                return children[1].insert(width, height, obj);\n            }\n            if (this.data !== null) return null;\n            if (width > this.rect.width || height > this.rect.height) return null;\n            if (width == this.rect.width && height == this.rect.height)\n            {\n                this.data = obj;\n                obj.frame.x = this.rect.x;\n                obj.frame.y = this.rect.y;\n\n                return this;\n            }\n\n            children.push(new AtlasNode());\n            children.push(new AtlasNode());\n\n            const dw = this.rect.width - width;\n            const dh = this.rect.height - height;\n\n            if (dw > dh)\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\n            }\n            else\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\n            }\n\n            return children[0].insert(width, height, obj);\n        };\n    };\n\n    const addCanvas = function ()\n    {\n        // create new canvas\n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvasList.push(canvas);\n\n        // reset dimentions\n        atlasdim = startdim;\n        canvas.width = canvas.height = atlasdim;\n        rootNode = new AtlasNode(atlasdim, atlasdim);\n\n        // reset array with canvas objects and create new atlas\n        objects = [];\n\n        // set new basetexture\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\n        baseTexture.mipmap = false; // if not, pixi bug resizing POW2\n        baseTexture.resolution = 1; // todo: support all resolutions\n        baseTexture.update();\n\n        // Debug Spritesheet\n        if (DynamicText.settings.debugSpriteSheet)\n        {\n            canvas.className = 'DynamicText_SpriteSheet';\n            document.body.appendChild(canvas);\n        }\n    };\n\n    this.fontFamilyCache = {};\n\n    const drawObjects = function (arr, resized)\n    {\n        if (resized) baseTexture.update();\n        for (let i = 0; i < arr.length; i++)\n        { drawObject(arr[i]); }\n    };\n\n    var drawObject = function (obj)\n    {\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\n        obj.texture.frame = obj.frame;\n        obj.texture.update();\n    };\n\n    this.getCharObject = function (char, style)\n    {\n        const font = style.ctxFont();\n\n        // create new cache for fontFamily\n        let familyCache = this.fontFamilyCache[font];\n\n        if (!familyCache)\n        {\n            familyCache = {};\n            this.fontFamilyCache[font] = familyCache;\n        }\n\n        // get char data\n        const key = style.ctxKey(char);\n        let obj = familyCache[key];\n\n        if (!obj)\n        {\n            // create char object\n            const metrics = generateCharData(char, style);\n\n            // temp resize if doesnt fit (not nesseary when we dont need to generate textures)\n            if (metrics.rect)\n            {\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height)\n                {\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\n                    baseTexture.update();\n                }\n            }\n\n            // todo: cleanup when we know whats needed\n            obj = {\n                metrics,\n                font,\n                value: char,\n                frame: metrics.rect,\n                baseTexture: metrics.rect ? baseTexture : null,\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\n                yOffset: metrics.descent || 0,\n                width: metrics.width || 0,\n                lineHeight: metrics.lineHeight || 0,\n                _cache: metrics.canvas,\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null, // temp texture\n            };\n\n            // add to collections\n            familyCache[key] = obj;\n\n            // add to atlas if visible char\n            if (metrics.rect)\n            {\n                newObjects.push(obj);\n\n                if (lazyTimeout === undefined)\n                {\n                    lazyTimeout = setTimeout(function ()\n                    {\n                        addNewObjects();\n                        lazyTimeout = undefined;\n                    }, 0);\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    const compareFunction = function (a, b)\n    {\n        if (a.frame.height < b.frame.height)\n        { return 1; }\n\n        if (a.frame.height > b.frame.height)\n        { return -1; }\n\n        if (a.frame.width < b.frame.width)\n        { return 1; }\n\n        if (a.frame.width > b.frame.width)\n        { return -1; }\n\n        return 0;\n    };\n\n    var addNewObjects = function ()\n    {\n        newObjects.sort(compareFunction);\n        let _resized = false;\n        let _newcanvas = false;\n\n        for (let i = 0; i < newObjects.length; i++)\n        {\n            const obj = newObjects[i];\n            const node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n\n            if (node !== null)\n            {\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; // update basetexture if new canvas was created (temp)\n                objects.push(obj);\n                continue;\n            }\n\n            // step one back (so it will be added after resize/new canvas)\n            i--;\n\n            if (atlasdim < maxdim)\n            {\n                _resized = true;\n                resizeCanvas(atlasdim * 2);\n                continue;\n            }\n\n            // close current spritesheet and make a new one\n            drawObjects(objects, _resized);\n            addCanvas();\n            _newcanvas = true;\n            _resized = false;\n        }\n\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\n        newObjects = [];\n    };\n\n    var resizeCanvas = function (dim)\n    {\n        canvas.width = canvas.height = atlasdim = dim;\n\n        rootNode = new AtlasNode(dim, dim);\n        objects.sort(compareFunction);\n\n        for (let i = 0; i < objects.length; i++)\n        {\n            const obj = objects[i];\n\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n        }\n    };\n\n    var generateCharData = function (char, style)\n    {\n        const fontSize = Math.max(1, int(style.fontSize, 26));\n        const lineHeight = fontSize * 1.25;\n\n        // Start our returnobject\n        const data = {\n            fontSize,\n            lineHeight,\n            width: 0,\n        };\n\n        // Return if newline\n        if (!char || (/(?:\\r\\n|\\r|\\n)/).test(char))\n        { return data; }\n\n        // Ctx font string\n        const font = style.ctxFont();\n\n        metricsContext.font = font;\n\n        // Get char width\n        data.width = Math.round(metricsContext.measureText(char).width);\n\n        // Return if char = space\n        if ((/(\\s)/).test(char)) return data;\n\n        // set canvas size (with padding so we can messure)\n        const paddingY = Math.round(fontSize * 0.7); const\n            paddingX = Math.max(5, Math.round(fontSize * 0.7));\n\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\n        metricsCanvas.height = 1.5 * fontSize;\n        const w = metricsCanvas.width; const h = metricsCanvas.height; const\n            baseline = (h / 2) + (paddingY * 0.5);\n\n        // set font again after resize\n        metricsContext.font = font;\n\n        // make sure canvas is clean\n        metricsContext.clearRect(0, 0, w, h);\n\n        // save clean state with font\n        metricsContext.save();\n\n        // convert shadow string to shadow data\n        const shadowData = function (str)\n        {\n            const data = str.trim().split(' ');\n\n            return {\n                color: string(data[0], '#000000'),\n                alpha: float(data[1], 0.5),\n                xOffset: float(data[2], 3),\n                yOffset: float(data[3], 3),\n                blur: float(data[4], 5),\n            };\n        };\n\n        // convert fill string to fill data\n        const fillData = function (str)\n        {\n            const data = str.trim().split(' ');\n            const c = string(data[0], '#FFFFFF');\n            const a = float(data[1], 1);\n\n            return {\n                color: c,\n                alpha: a,\n                position: float(data[2], -1),\n                rgba: hexToRgba(c, a),\n            };\n        };\n\n        // create fill style from fill string\n        const getFillStyle = function (str)\n        {\n            const fills = str.split(',').filter(function (s) { return s !== ''; }); let\n                i;\n\n            // convert to fill data\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\n\n            switch (fills.length)\n            {\n                case 0: return 'white';\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || '#FFFFFF';\n                default:\n                    // make gradient\n                    try\n                    {\n                        const gradEnd = baseline + lineHeight - fontSize;\n                        const gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\n\n                        for (i = 0; i < fills.length; i++)\n                        { gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color); }\n\n                        return gradient;\n                    }\n                    catch (e)\n                    {\n                        return '#FFFFFF';\n                    }\n            }\n        };\n\n        // function to draw shadows\n        const drawShadows = function (shadowString, stroke)\n        {\n            const shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\n\n            if (shadows.length)\n            {\n                for (let i = 0; i < shadows.length; i++)\n                {\n                    const s = shadowData(shadows[i]);\n\n                    metricsContext.globalAlpha = s.alpha;\n                    metricsContext.shadowColor = s.color;\n                    metricsContext.shadowOffsetX = s.xOffset + w;\n                    metricsContext.shadowOffsetY = s.yOffset;\n                    metricsContext.shadowBlur = s.blur;\n\n                    if (stroke)\n                    {\n                        metricsContext.lineWidth = style.stroke;\n                        metricsContext.strokeText(char, paddingX - w, baseline);\n                    }\n                    else metricsContext.fillText(char, paddingX - w, baseline);\n                }\n                metricsContext.restore();\n            }\n        };\n\n        // draw text shadows\n        if (style.shadow.length)\n        { drawShadows(style.shadow, false); }\n\n        // draw stroke shadows\n        if (style.stroke && style.strokeShadow.length)\n        {\n            drawShadows(style.strokeShadow, true);\n        }\n\n        // draw text\n        metricsContext.fillStyle = getFillStyle(string(style.fill, '#000000'));\n        metricsContext.fillText(char, paddingX, baseline);\n        metricsContext.restore();\n\n        // draw stroke\n        if (style.stroke)\n        {\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, '#000000'));\n            metricsContext.lineWidth = style.stroke;\n            metricsContext.strokeText(char, paddingX, baseline);\n            metricsContext.restore();\n        }\n\n        // begin messuring\n        const pixelData = metricsContext.getImageData(0, 0, w, h).data;\n\n        let i = 3;\n        const line = w * 4;\n        const len = pixelData.length;\n\n        // scanline on alpha\n        while (i < len && !pixelData[i]) { i += 4; }\n        const ascent = (i / line) | 0;\n\n        if (i < len)\n        {\n            // rev scanline on alpha\n            i = len - 1;\n            while (i > 0 && !pixelData[i]) { i -= 4; }\n            const descent = (i / line) | 0;\n\n            // left to right scanline on alpha\n            for (i = 3; i < len && !pixelData[i];)\n            {\n                i += line;\n                if (i >= len) { i = (i - len) + 4; }\n            }\n            const minx = ((i % line) / 4) | 0;\n\n            // right to left scanline on alpha\n            let step = 1;\n\n            for (i = len - 1; i >= 0 && !pixelData[i];)\n            {\n                i -= line;\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\n            }\n            const maxx = ((i % line) / 4) + 1 | 0;\n\n            // set font metrics\n            data.ascent = Math.round(baseline - ascent);\n            data.descent = Math.round(descent - baseline);\n            data.height = 1 + Math.round(descent - ascent);\n            data.bounds = {\n                minx: minx - paddingX,\n                maxx: maxx - paddingX,\n                miny: 0,\n                maxy: descent - ascent,\n            };\n            data.rect = {\n                x: data.bounds.minx,\n                y: -data.ascent - 2,\n                width: data.bounds.maxx - data.bounds.minx + 2,\n                height: data.ascent + data.descent + 4,\n            };\n\n            // cache (for fast rearrange later)\n            data.canvas = document.createElement('canvas');\n            data.canvas.width = data.rect.width;\n            data.canvas.height = data.rect.height;\n            const c = data.canvas.getContext('2d');\n\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\n\n            // reset rect position\n            data.rect.x = data.rect.y = 0;\n        }\n\n        return data;\n    };\n\n    addCanvas();\n};\n\n// helper function for float or default\nfunction float(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseFloat(val);\n}\n\n// helper function for int or default\nfunction int(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseInt(val);\n}\n\n// helper function for string or default\nfunction string(val, def)\n{\n    if (typeof val === 'string' && val.length) return val;\n\n    return def;\n}\n\n// helper function to convert string hex to int or default\nfunction hexToInt(str, def)\n{\n    if (typeof str === 'number')\n    { return str; }\n\n    const result = parseInt(str.replace('#', '0x'));\n\n    if (isNaN(result)) return def;\n\n    return result;\n}\n\n// helper function to convert hex to rgba\nfunction hexToRgba(hex, alpha)\n{\n    const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n    alpha = float(alpha, 1);\n\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},${alpha})` : false;\n}\n\n","function EaseBase()\n{\n    this.getPosition = function (p)\n    {\n        return p;\n    };\n}\n\nEaseBase.prototype.constructor = EaseBase;\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","export const Ease = {};\nimport { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst HALF_PI = Math.PI * 0.5;\n\nfunction create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\n// Liear\nEase.Linear = new EaseBase();\n\n// Exponetial Eases\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Ease.Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\n","import * as PIXI from 'pixi.js';\n\nexport class MouseScrollEvent\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    private obj: any;\n\n    constructor(obj: any, preventDefault: boolean)\n    {\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.obj = obj;\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseScrollImpl = (e): void =>\n    {\n        const { obj, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(obj, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n\n    stopEvent(): void\n    {\n        const { obj, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener('mouseover', onHoverImpl);\n        obj.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    startEvent(): void\n    {\n        const { obj, onHoverImpl, onMouseOutImpl } = this;\n\n        obj.contentContainer.on('mouseover', onHoverImpl);\n        obj.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { ClickEvent } from './ClickEvent';\nimport { DragEvent } from './DragEvent';\nimport { InputController } from './InputController';\nimport { MouseScrollEvent } from './MouseScrollEvent';\n\nexport const Interaction = {\n    ClickEvent,\n    DragEvent,\n    InputController,\n    MouseScrollEvent,\n};\n\nexport default Interaction;\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Widget } from './Widget';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n* An UI Slider, the default width/height is 90%\n*\n* @class\n* @extends Widget\n* @memberof PIXI.UI\n* @param options {Object} Slider settings\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n* @param [options.vertical=false] {boolean} Direction of the slider\n* @param [options.value=0] {number} value of the slider\n* @param [options.minValue=0] {number} minimum value\n* @param [options.maxValue=100] {number} max value\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\n*/\nexport class Slider extends Widget\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    constructor(options: ISliderOptions)\n    {\n        super(0, 0);\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.contentContainer.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.contentContainer.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.contentContainer.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragEvent(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragEvent(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n}\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollingContainer } from './ScrollingContainer';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollingContainer;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PIXI.UI.Slider\n * @memberof PIXI.UI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollingContainer;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { InputBase } from './InputBase';\nimport { Container } from './Container';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { ScrollingContainer } from './ScrollingContainer';\nimport * as PIXI from 'pixi.js';\nimport { Sprite } from './Sprite';\n\ninterface ITextInputOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: Sprite;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param options.value {String} Text content\n * @param [options.multiLine=false] {Boolean} Multiline input\n * @param options.style {PIXI.TextStyle} Style used for the Text\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n * @param [options.width=150] {Number} width of input\n * @param [options.height=20] {Number} height of input\n * @param [options.padding=3] {Number} input padding\n * @param [options.paddingTop=0] {Number} input padding\n * @param [options.paddingBottom=0] {Number} input padding\n * @param [options.paddingLeft=0] {Number} input padding\n * @param [options.paddingRight=0] {Number} input padding\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.maxLength=0] {Number} 0 = unlimited\n * @param [options.caretWidth=1] {Number} width of the caret\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\n */\nexport class TextInput extends InputBase\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollingContainer;\n\n    public background: Sprite;\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    constructor(options: ITextInputOptions)\n    {\n        super(\n            typeof options.width !== 'undefined' // eslint-disable-line no-nested-ternary\n                ? options.width\n                : (options.background ? options.background.width : 150),\n            typeof options.height !== 'undefined' // eslint-disable-line no-nested-ternary\n                ? options.height\n                : (options.background ? options.background.height : 150),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        // create temp input (for mobile keyboard)\n        if (typeof mockDOMInput === 'undefined')\n        {\n            mockDOMInput = document.createElement('INPUT');\n            mockDOMInput.setAttribute('type', 'text');\n            mockDOMInput.setAttribute('id', '_pui_tempInput');\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n            document.body.appendChild(mockDOMInput);\n        }\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // insert bg\n        if (options.background)\n        {\n            this.background = options.background;\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.addChild(this.background);\n        }\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding !== undefined ? options.padding : 3;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding !== undefined ? options.padding : 3;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding !== undefined ? options.padding : 3;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding !== undefined ? options.padding : 3;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollingContainer({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        });\n        this.textContainer.anchorTop = paddingTop;\n        this.textContainer.anchorBottom = paddingBottom;\n        this.textContainer.anchorLeft = paddingLeft;\n        this.textContainer.anchorRight = paddingRight;\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragEvent(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._focused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer;\n    }\n\n    update(): void\n    {\n        if (this._width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    keyDownEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        this.emit('keydown', e);\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._focused)\n        {\n            super.focus();\n\n            const l = `${this.contentContainer.worldTransform.tx}px`;\n            const t = `${this.contentContainer.worldTransform.ty}px`;\n            const h = `${this.contentContainer.height}px`;\n            const w = `${this.contentContainer.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.keyDownEvent, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._focused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.keyDownEvent);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { Container } from './Container';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { MouseScrollEvent } from './Interaction/MouseScrollEvent';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    width?: number;\n    height?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * An UI Container object with expandMask hidden and possibility to enable scrolling\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n * @param [options.width=0] {Number|String} container width\n * @param [options.height=0] {Number} container height\n * @param [options.radius=0] {Number} corner radius of clipping mask\n * @param [options.expandMask=0] {Number} mask expand (px)\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n */\nexport class ScrollingContainer extends Container\n{\n    mask: PIXI.Graphics;\n    innerContainer: PIXI.Container;\n    innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    forcePctPosition: (direction: string, pct: number) => void;\n    focusPosition: (pos: PIXI.Point) => void;\n    setScrollPosition: (speed?: PIXI.Point) => void;\n    updateScrollPosition: (delta: number) => void;\n    updateDirection: (direction: string, delta: number) => void;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super(options.width, options.height);\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new PIXI.Container();\n        this.innerBounds = new PIXI.Rectangle();\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.addChild(this.innerContainer);\n        this.contentContainer.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    update(): void\n    {\n        super.update();\n\n        if (this._lastWidth !== this._width || this._lastHeight !== this._height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n            // this.mask.drawRect(0, 0, this._width, this._height);\n            // this.mask.drawRect(-of, -of, this._width + of, this.height + of);\n            // this.mask.moveTo(-of, -of);\n            // this.mask.lineTo(this._width + of, -of);\n            // this.mask.lineTo(this._width + of, this._height + of);\n            // this.mask.lineTo(-of, this._height + of);\n                this.mask.drawRect(-of, -of, this._width + of, this._height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n            this._lastWidth = this._width;\n            this._lastHeight = this._height;\n        }\n\n        if (this.setScrollPosition)\n        {\n            this.setScrollPosition();\n        }\n    }\n\n    addChild(...newChildren: Widget[]): Widget\n    {\n        const argumentsLength = newChildren.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < newChildren.length; i++)\n            {\n                this.addChild(newChildren[i]);\n            }\n        }\n        else\n        {\n            super.addChild(newChildren[0]);\n            this.innerContainer.addChild(newChildren[0].contentContainer);\n            this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n        }\n\n        return newChildren[0];\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    initScrolling(): void\n    {\n        const container = this.innerContainer;\n        const containerStart = new PIXI.Point();\n        const targetPosition = new PIXI.Point();\n        const lastPosition = new PIXI.Point();\n        const Position = new PIXI.Point();\n        let Speed = new PIXI.Point();\n        let stop;\n\n        this.forcePctPosition = (direction: string, pct: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            if (this.scrollX && direction === 'x')\n            {\n                container.position[direction] = -((bounds.width - this._width) * pct);\n            }\n            if (this.scrollY && direction === 'y')\n            {\n                container.position[direction] = -((bounds.height - this._height) * pct);\n            }\n\n            Position[direction] = targetPosition[direction] = container.position[direction];\n        };\n\n        this.focusPosition = (pos: PIXI.Point): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let dif;\n\n            if (this.scrollX)\n            {\n                const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n                if (x + container.x > this._width)\n                {\n                    dif = x - this._width;\n                    container.x = -dif;\n                }\n                else if (x + container.x < 0)\n                {\n                    dif = x + container.x;\n                    container.x -= dif;\n                }\n            }\n\n            if (this.scrollY)\n            {\n                const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n                if (y + container.y > this._height)\n                {\n                    dif = y - this._height;\n                    container.y = -dif;\n                }\n                else if (y + container.y < 0)\n                {\n                    dif = y + container.y;\n                    container.y -= dif;\n                }\n            }\n\n            lastPosition.copyFrom(container.position);\n            targetPosition.copyFrom(container.position);\n            Position.copyFrom(container.position);\n            this.updateScrollBars();\n        };\n\n        this.setScrollPosition = (speed: PIXI.Point): void =>\n        {\n            if (speed)\n            {\n                Speed = speed;\n            }\n\n            if (!this.animating)\n            {\n                this.animating = true;\n                lastPosition.copyFrom(container.position);\n                targetPosition.copyFrom(container.position);\n\n                Ticker.on('update', this.updateScrollPosition, this);\n            }\n        };\n\n        this.updateScrollPosition = (delta: number): void =>\n        {\n            stop = true;\n            if (this.scrollX) this.updateDirection('x', delta);\n            if (this.scrollY) this.updateDirection('y', delta);\n            if (stop)\n            {\n                Ticker.removeListener('update', this.updateScrollPosition);\n                this.animating = false;\n            }\n        };\n\n        this.updateDirection = (direction: string, delta: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let min;\n\n            if (direction === 'y')\n            {\n                min = Math.round(Math.min(0, this._height - bounds.height));\n            }\n            else\n            {\n                min = Math.round(Math.min(0, this._width - bounds.width));\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) !== 0)\n            {\n                targetPosition[direction] += Speed[direction];\n                Speed[direction] = Helpers.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n                if (targetPosition[direction] > 0)\n                {\n                    targetPosition[direction] = 0;\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    targetPosition[direction] = min;\n                }\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) === 0\n                && (container[direction] > 0 || container[direction] < min))\n            {\n                const target = Position[direction] > 0 ? 0 : min;\n\n                Position[direction] = Helpers.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\n                stop = false;\n            }\n            else if (this.scrolling || Math.round(Speed[direction]) !== 0)\n            {\n                if (this.scrolling)\n                {\n                    Speed[direction] = Position[direction] - lastPosition[direction];\n                    lastPosition.copyFrom(Position);\n                }\n                if (targetPosition[direction] > 0)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n                }\n                else\n                {\n                    Position[direction] = targetPosition[direction];\n                }\n                stop = false;\n            }\n\n            container.position[direction] = Math.round(Position[direction]);\n            this.updateScrollBars();\n        };\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag = new DragEvent(this);\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    containerStart.copyFrom(container.position);\n                    Position.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n                    this.emit('dragStart', e);\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragMove = (e, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = containerStart.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = containerStart.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('dragEnd', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new MouseScrollEvent(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n}\n","import { Container } from './Container';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends Container\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n */\nexport class Sprite extends Widget\n{\n    sprite: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        const sprite = new PIXI.Sprite(texture);\n\n        super(sprite.width, sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.sprite.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.sprite.blendMode = this.blendMode;\n        }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @class\n * @memberof PUXI\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    widgetChildren: Widget[];\n\n    stage: any;\n\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n    }\n\n    protected measureAndLayout(): void\n    {\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++)\n        {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this._width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this._height : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this._width,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this._height,\n                widthMeasureMode,\n                heightMeasureMode);\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= this._width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= this._height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight(),\n                true);\n        }\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n\n        this.measureAndLayout();\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.insetContainer);\n\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n\n        this.measureAndLayout();\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n\n        this.measureAndLayout();\n    }\n\n    get _width(): number\n    {\n        return this.__width;\n    }\n    set _width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get _height(): number\n    {\n        return this.__height;\n    }\n    set _height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A static text widget. It cannot retain children.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport class Text extends Widget\n{\n    private _text: PIXI.Text;\n\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        const textDisplay = new PIXI.Text(text, textStyle);\n\n        super(textDisplay.width, textDisplay.height);\n        this._text = textDisplay;\n        this.contentContainer.addChild(this._text);\n    }\n\n    baseupdate(): void\n    {\n        // force original text width unless using anchors\n        if (this._anchorLeft === null || this._anchorRight === null)\n        {\n            this.setting.width = this._text.width;\n            this.setting.widthPct = null;\n        }\n        else\n        {\n            this._text.width = this._width;\n        }\n\n        // force original text height unless using anchors\n        if (this._anchorTop === null || this._anchorBottom === null)\n        {\n            this.setting.height = this._text.height;\n            this.setting.heightPct = null;\n        }\n        else\n        {\n            this._text.width = this._width;\n        }\n\n        super.baseupdate();\n    }\n\n    update()\n    {\n        // set tint\n        if (this.tint !== null)\n        {\n            this._text.tint = this.tint;\n        }\n\n        // set blendmode\n        if (this.blendMode !== null)\n        {\n            this._text.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this._text.text;\n    }\n    set value(val: string)\n    {\n        this._text.text = val;\n        this.updatesettings(true);\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @namespace PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n    protected noPercents: boolean;\n\n    constructor()\n    {\n        this.noPercents = false;\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    private measureChild(child: Widget,\n        maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode: number;\n        let widgetHeightMode: number;\n\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1))\n        {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1)\n        {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1)\n        {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1))\n        {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1)\n        {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1)\n        {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        child.measure(\n            maxWidgetWidth,\n            maxWidgetHeight,\n            widgetWidthMode,\n            widgetHeightMode,\n        );\n    }\n\n    measureStretch(lowerAnchor: number,\n        upperAnchor: number,\n        childDimen: number): number\n    {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1))\n        {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1)\n        {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1)\n        {\n            return upperAnchor;\n        }\n\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n\n    measureChildren(maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight,\n                MeasureMode.EXACTLY,\n                MeasureMode.EXACTLY);\n        }\n\n        let maxX = 0;\n        let maxY = 0;\n\n        const children = this.host.widgetChildren;\n\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = maxX;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = maxY;\n        }\n\n        this.measureChildren(this.measuredWidth, this.measuredHeight,\n            MeasureMode.EXACTLY,\n            MeasureMode.EXACTLY);\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n\n            if (anchorLeft > -1 && anchorLeft <= 1)\n            {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1)\n            {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1)\n            {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1)\n            {\n                anchorBottom *= parent.height;\n            }\n\n            let x = 0;\n            let y = 0;\n\n            if (childWidth !== 0)\n            {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n\n            if (childHeight !== 0)\n            {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n"],"names":["this","width","height","minWidth","minHeight","maxWidth","maxHeight","left","right","top","bottom","anchorLeft","anchorRight","anchorTop","anchorBottom","widthPct","heightPct","minWidthPct","minHeightPct","maxWidthPct","maxHeightPct","leftPct","rightPct","topPct","bottomPct","anchorLeftPct","anchorRightPct","anchorTopPct","anchorBottomPct","pivotX","pivotY","scaleX","scaleY","verticalAlign","horizontalAlign","rotation","blendMode","tint","alpha","draggable","dragRestricted","dragRestrictAxis","dragThreshold","dragGroup","dragContainer","droppable","droppableReparent","dropGroup","obj","e","_a","start","_onDragMove","_onDragEnd","_this","id","data","identifier","onPress","call","bound","copyFrom","global","stage","on","originalEvent","preventDefault","mouse","offset","set","x","y","dragging","movementX","Math","abs","movementY","max","cancel","onDragStart","onDragMove","removeListener","onDragEnd","PIXI.Point","interactive","startEvent","DragEvent","_onDragStart","contentContainer","isPressed","_items","DragDropController","add","item","event","_dragDropEventId","indexOf","push","[object Object]","object","index","i","length","splice","group","ALIGN","reset","dirtyId","Insets","MeasureMode","LayoutOptions","WRAP_CONTENT","markers","Object","_marginLeft","val","_marginTop","_marginRight","_marginBottom","NONE","_super","__extends","anchor","FastLayoutOptions","DEFAULT_ANCHOR","clone","_currentItem","insetContainer","PIXI.Container","addChild","setting","UISettings","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","isNaN","parseFloat","replace","_width","_height","_minWidth","_minHeight","_maxWidth","_maxHeight","_anchorLeft","_anchorRight","_anchorTop","_anchorBottom","_left","_right","_top","_bottom","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_dragPosition","Widget","updateChildren","updateParent","parent","initialize","baseupdate","update","updatesettings","parentHeight","parentWidth","actual_width","actual_height","actual_minWidth","actual_minHeight","actual_maxWidth","actual_maxHeight","actual_anchorLeft","actual_anchorRight","actual_anchorTop","actual_anchorBottom","actual_left","actual_right","actual_top","actual_bottom","_parentWidth","_parentHeight","pivotXOffset","pivotYOffset","round","useHorizontalAnchor","position","useVerticalAnchor","scale","pivot","background","bg","removeChild","addChildAt","_measuredWidth","_measuredHeight","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","child","childOptions","layoutOptions","DEFAULT","FILL_PARENT","measuredWidth","measuredHeight","measure","l","t","r","b","lopt","UIObject","argumentsLength","arguments","argumentLenght","oldUIParent_1","container","setTimeout","initDraggable","initDroppable","drag","stopEvent","containerStart_1","stageOffset_1","self_1","added","copy","c","worldTransform","tx","ty","emit","getItem","toLocal","onDrop","self_2","getEventItem","clearDraggable","clearDroppable","renderable","visible","cacheAsBitmap","click","interactiveChildren","parentLayer","PIXI.utils","EventEmitter","includeHover","rightMouseButton","doubleClick","eventname_mouseup","_onMouseUp","eventname_mouseupoutside","_onMouseUpOutside","double","now","performance","time","onClick","_mouseUpAll","ishover","_onMouseMove","onHover","onMove","_onMouseDown","_onMouseOver","_onMouseOut","eventname_mousedown","hover","ClickEvent","over","tabGroups","checkGroups","checkGroupValues","InputController","registrer","tabIndex","tabGroup","groupName","items","_tabIndex","undefined","_tabGroup","sort","a","blur","clear","fireTab","focus","fireNext","firePrev","registrerCheckGroup","cb","name","checkGroup","value","checked","updateCheckGroupSelected","getCheckGroupSelectedValue","setCheckGroupSelectedValue","FastLayout","host","children","j","widget","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","childWidth","getMeasuredWidth","minr","childHeight","getMeasuredHeight","minb","dimen","parentMeasureMode","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","which","_useTab","_usePrev","_useNext","__down","documentMouseDown","document","addEventListener","keyDownEvent","off","removeEventListener","_focused","InputBase","_clearEvents","_bindEvents","options","isHover","textWidget","text","setLayoutOptions","CENTER_ANCHOR","buttonMode","Button","clickEvent","prototype","bounds","getLocalBounds","hitArea","PIXI.Rectangle","_checked","_value","checkgroup","checkmark","change","CheckBox","Container","DynamicTextStyle","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","atlas","ellipsis","getCharObject","letterSpacing","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","merge","param","_dirty","ctxKey","char","fill","shadow","stroke","strokeFill","strokeShadow","join","ctxFont","fontSize","fontWeight","fontStyle","fontFamily","constructor","defineProperties","dirtyStyle","align","lineHeight","skew","wrap","breakWords","overflowX","overflowY","DynamicText","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","chars","renderChars","spriteCache","charContainer","PIXI","_inputText","lastWidth","lastHeight","dirtyText","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","lineWidth","maxLineWidth","texture","tex","sprite","Sprite","hexToInt","float","prepareForRender","pos","Point","lineFontSize","lineAlignment","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","lineFull","lastChar","size","ellipsisData","d","dot","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","charCodeAt","test","allowTags","tag","substring","slice","FoundTag","startsWith","regex","match","exec","emojiMatch","emojiRegex","settings","defaultEmojiFont","lazyUpdate","self","dirtySize","create","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","AtlasNode","w","h","rect","Rectangle","insert","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","familyCache","key","metrics","generateCharData","minx","descent","Texture","addNewObjects","compareFunction","_resized","_newcanvas","resizeCanvas","dim","def","parseInt","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","str","trim","split","color","string","fillData","rgba","hexToRgba","getFillStyle","fills","filter","s","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","fillStyle","strokeStyle","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","result","hex","EaseBase","getPosition","p","ExponentialEase","power","easeIn","easeOut","pow","Ease","HALF_PI","PI","fn","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","MouseScrollEvent","onHoverImpl","onMouseOutImpl","Interaction","Helpers","Lerp","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","g","rgbToNumber","numberToRgb","floor","hexToRgb","m","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","tweens","active","onUpdate","_ready","callback","currentTime","CallbackItem","keys","_tweenObjectId","_currentCallbackID","remove","to","ease","isColor","TweenItem","surfix","getSurfix","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","TweenObject","getTweenItem","tween","getCallbackItem","Tween","params","fromTo","paramsFrom","paramsTo","_update","_amt","_disabled","track","handle","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","Slider","soft","handleSize","maxPosition","localMousePosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","stopPropagation","trackDrag","scrollingContainer","autohide","_hidden","ScrollBar","innerContainer","forcePctPosition","_scrollBars","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","autoStart","_now","DeltaTime","Time","Ms","disabled","Ticker","shared","requestAnimationFrame","once","mockDOMInput","mask","PIXI.Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","ScrollingContainer","initScrolling","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","_i","newChildren","getInnerBounds","alignToContainer","force","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","focusPosition","dif","updateScrollBars","speed","updateScrollPosition","updateDirection","target","exp","scrollSpeed","desc","tweenTime","tweenEase","SortableList","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","altering","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","f","sbr","sr","sbl","sb","sf","st","sl","stl","SliceSprite","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","_b","PIXI.extras","TilingSprite","PIXI.Texture","PIXI.Sprite","imageUrl","PIXI.BaseTexture","__width","__height","resize","Stage","MAX_DIMEN","measureAndLayout","rx","ry","textStyle","textDisplay","PIXI.Text","_text","Text","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","_atEnd","multiLine","vrdd","hasSelection","de","textHeightPX","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","selectIndex","clipboardData","window","setData","copyEvent","getData","setAttribute","inputBlurEvent","keyUpEvent","pasteEvent","cutEvent","inputEvent","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","scrollToPosition","showCaret","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","_dirtyText","maxLength","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","TextInput","mouseDown","timeSinceLast","selectWord","updateText","whitespace","lastWordIndex","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","clearInterval","caretInterval","setInterval","tilePosition","tileScale","noPercents","AnchorLayout","maxParentWidth","maxParentHeight","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","LEFT","MIDDLE","RIGHT","TOP"],"mappings":"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"}