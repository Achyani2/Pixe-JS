{"version":3,"file":"pixi-ui.min.js","sources":["../src/event/DragDropController.js","../src/IMeasurable.ts","../src/layout-options/Insets.ts","../src/layout-options/Align.ts","../src/event/EventManager.ts","../src/event/ClickManager.ts","../src/event/DragManager.ts","../src/event/EventBroker.ts","../src/event/ScrollManager.ts","../src/Widget.ts","../src/layout-options/LayoutOptions.ts","../src/layout-options/AnchorLayoutOptions.ts","../src/layout-options/FastLayoutOptions.ts","../src/layout-manager/FastLayout.ts","../src/WidgetGroup.ts","../src/InteractiveGroup.ts","../src/FocusableWidget.ts","../src/TextWidget.ts","../src/Button.ts","../src/CheckBox.ts","../src/DynamicText/DynamicTextStyle.js","../src/DynamicText/DynamicChar.js","../src/DynamicText/DynamicText.js","../node_modules/emoji-regex/index.js","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/ScrollBar.ts","../src/Ticker.ts","../src/TextInput.ts","../src/ScrollWidget.ts","../src/SortableList.ts","../src/SliceSprite.ts","../src/Sprite.ts","../src/ctl/Controller.ts","../src/ctl/CheckBoxGroupController.ts","../src/ctl/FocusController.ts","../src/Stage.ts","../src/TilingSprite.ts","../src/layout-manager/AnchorLayout.ts"],"sourcesContent":["const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * These are the modes in which an entity can measures its dimension. They are\n * relevant when a layout needs to know the optimal sizes of its children.\n *\n * @memberof PUXI\n * @enum\n * @property {number} UNBOUNDED - no upper limit on bounds. This should calculate the optimal dimensions for the entity.\n * @property {number} EXACTLY - the entity should set its dimension to the one passed to it.\n * @property {number} AT_MOST - the entity should find an optimal dimension below the one passed to it.\n */\nexport enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\nexport interface IMeasurable\n{\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n    getMeasuredWidth(): number;\n    getMeasuredHeight(): number;\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n *\n * @memberof PUXI\n * @interface IMeasurable\n */\n\n/**\n * Measures its width & height based on the passed constraints.\n *\n * @memberof PUXI.IMeasurable#\n * @method onMeasure\n * @param {number} maxWidth\n * @param {number} maxHeight\n * @param {PUXI.MeasureMode} widthMode\n * @param {PUXI.MeasureMode} heightMode\n */\n\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredWidth\n * @returns {number} - the measured width of the entity after a `onMeasure` call\n */\n\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredHeight\n * @returns {number} - the measured height of the entity after a `onMeasure` call\n */\n","/**\n * @memberof PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @memberof PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","import { Widget } from '../Widget';\n\n/**\n * An event manager handles the states related to certain events and can augment\n * widget interaction. For example, the click manager will hide clicks when\n * the object is dragging.\n *\n * Event managers are lifecycle objects - they can start/stop. Their constructor\n * will always accept one argument - the widget. Other settings can be applied before\n * `startEvent`.\n *\n * Ideally, you should access event managers _after_ your widget has initialized. This is\n * because it may depend on the widget's stage being assigned.\n *\n * @memberof PUXI\n * @class\n * @abstract\n */\nexport abstract class EventManager\n{\n    protected target: Widget;\n    protected isEnabled: boolean;\n\n    /**\n     * @param {Widget} target\n     */\n    constructor(target: Widget)\n    {\n        this.target = target;\n        this.isEnabled = false;// use to track start/stopEvent\n    }\n\n    /**\n     * @returns {Widget}\n     */\n    getTarget(): Widget\n    {\n        return this.target;\n    }\n\n    /**\n     * Registers the interaction event listeners that will emit corresponding events\n     * on the target widget.\n     */\n    abstract startEvent(): any;\n\n    /**\n     * Unregisters any event listeners and releases any resources held. This should\n     * revert all changes made by `startEvent`.\n     */\n    abstract stopEvent(): any;\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from '../Widget';\nimport { EventManager } from './EventManager';\n\n/**\n * `ClickManager` handles hover and click events. It registers listeners\n * for `mousedown`, `mouseup`, `mousemove`, `mouseout`, `mouseover`, `touchstart`,\n * `touchend`, `touchendoutside`, `touchmove`, `rightup`, `rightdown`, `rightupoutside`\n * events.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ClickManager extends EventManager\n{\n    onHover: (event: PIXI.interaction.InteractionEvent, over: boolean) => void;\n    onPress: (event: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    onClick: (event: PIXI.interaction.InteractionMouseEvents) => void;\n    onMove: (event: PIXI.interaction.InteractionEvent) => void;\n\n    protected _rightMouseButton: boolean;\n    protected _includeHover: boolean;\n    protected _doubleClick: boolean;\n\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    protected target: Widget;\n\n    private movementX: number;\n    private movementY: number;\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private evMouseDown: string;\n    private evMouseUp: string;\n    private evMouseUpOutside: string;\n\n    time: number;\n\n    /**\n     * @param {PUXI.Widget | PUXI.Button} target\n     * @param {boolean}[includeHover=false] - enable hover (`mouseover`, `mouseout`) listeners\n     * @param {boolean}[rightMouseButton=false] - use right mouse clicks\n     * @param {boolean}[doubleClick=false] - fire double clicks\n     */\n    constructor(target: Widget, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        super(target);\n\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n\n        this._includeHover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.rightMouseButton = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this._doubleClick = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        target.interactive = true;\n\n        this.time = 0;\n        this.startEvent();\n\n        this.onHover = (): void => null;\n        this.onPress = (): void => null;\n        this.onClick = (): void => null;\n        this.onMove = (): void => null;\n    }\n\n    /**\n     * Whether right mice are used for clicks rather than left mice.\n     * @member boolean\n     */\n    get rightMouseButton(): boolean\n    {\n        return this._rightMouseButton;\n    }\n    set rightMouseButton(val: boolean)\n    {\n        this._rightMouseButton = val;\n\n        this.evMouseDown = this._rightMouseButton ? 'rightdown' : 'mousedown';\n        this.evMouseUp = this._rightMouseButton ? 'rightup' : 'mouseup';\n        this.evMouseUpOutside = this._rightMouseButton ? 'rightupoutside' : 'mouseupoutside';\n    }\n\n    /**\n     * @param {boolean}[includeHover]\n     * @param {boolean}[rightMouseButton]\n     * @param {boolean}[doubleClick]\n     * @override\n     */\n    startEvent = (\n        includeHover = this._includeHover,\n        rightMouseButton = this._rightMouseButton,\n        doubleClick = this._doubleClick,\n    ): void =>\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        this._includeHover = includeHover;\n        this.rightMouseButton = rightMouseButton;\n        this._doubleClick = doubleClick;\n\n        const { target } = this;\n\n        target.insetContainer.on(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.on('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.on('mouseover', this.onMouseOverImpl);\n            target.insetContainer.on('mouseout', this.onMouseOutImpl);\n        }\n\n        this.isEnabled = true;\n    };\n\n    /**\n     * @override\n     */\n    stopEvent = (): void =>\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.bound)\n        {\n            target.insetContainer.removeListener(this.evMouseUp, this.onMouseUpImpl);\n            target.insetContainer.removeListener(this.evMouseUpOutside, this.onMouseUpOutsideImpl);\n\n            if (!this._rightMouseButton)\n            {\n                target.insetContainer.removeListener('touchend', this.onMouseUpImpl);\n                target.insetContainer.removeListener('touchendoutside', this.onMouseUpOutsideImpl);\n            }\n\n            this.bound = false;\n        }\n\n        target.insetContainer.removeListener(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.removeListener('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.removeListener('mouseover', this.onMouseOverImpl);\n            target.insetContainer.removeListener('mouseout', this.onMouseOutImpl);\n            target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n        }\n\n        this.isEnabled = false;\n    };\n\n    protected onMouseDownImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n            _rightMouseButton: right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.target, event, true);\n\n        if (!this.bound)\n        {\n            obj.insetContainer.on(evMouseUp, _onMouseUp);\n            obj.insetContainer.on(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.insetContainer.on('touchend', _onMouseUp);\n                obj.insetContainer.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this._doubleClick)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    protected onMouseUpCommonImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.insetContainer.removeListener(evMouseUp, _onMouseUp);\n            obj.insetContainer.removeListener(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!this._rightMouseButton)\n            {\n                obj.insetContainer.removeListener('touchend', _onMouseUp);\n                obj.insetContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    protected onMouseUpImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.target.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.target.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this._doubleClick)\n        {\n            this.onClick.call(this.target, event);\n        }\n    };\n\n    protected onMouseUpOutsideImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n    };\n\n    protected onMouseOverImpl = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.target.insetContainer.on('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.on('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, true);\n        }\n    };\n\n    protected onMouseOutImpl = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, false);\n        }\n    };\n\n    protected onMouseMoveImpl = (event): void =>\n    {\n        this.onMove.call(this.target, event);\n    };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * `DragManager` handles drag & drop events. It registers listeners for `mousedown`,\n * `touchstart` on the target and `mousemove`, `touchmove`, `mouseup`, `mouseupoutside`,\n * `touchend`, `touchendoutside` on the stage.\n *\n * By default, `draggable` widgets will internally handle drag-n-drop and reassigning\n * the callbacks on their `DragManager` will break their behaviour. You can prevent\n * this by using `eventBroker.dnd` directly without setting `widget.draggable` to\n * `true` (or using `widget.makeDraggable()`).\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class DragManager extends EventManager\n{\n    protected isBound: boolean;\n    protected isDragging: boolean;\n    protected id: number;\n    protected dragStart: PIXI.Point;\n    protected dragOffset: PIXI.Point;\n    protected lastCursor: PIXI.Point;\n    protected movementX: number;\n    protected movementY: number;\n    protected cancel: boolean;\n\n    public onPress: (e: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    public onDragStart: (e: PIXI.interaction.InteractionEvent) => void;\n    public onDragMove: (e: PIXI.interaction.InteractionEvent, dragOffset: PIXI.Point) => void;\n    public onDragEnd: (e: PIXI.interaction.InteractionEvent) => void;\n\n    constructor(target: Widget)\n    {\n        super(target);\n\n        this.isBound = false;\n        this.isDragging = false;\n        this.id = 0;\n        this.dragStart = new PIXI.Point();\n        this.dragOffset = new PIXI.Point();\n        this.lastCursor = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n\n        this.target.interactive = true;\n\n        this.onPress = (): void => null;\n        this.onDragStart = (): void => null;\n        this.onDragMove = (): void => null;\n        this.onDragEnd = (): void => null;\n\n        this.startEvent();\n    }\n\n    startEvent(): void\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        target.insetContainer.on('mousedown', this.onDragStartImpl);\n        target.insetContainer.on('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = true;\n    }\n\n    stopEvent(): void\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n\n            this.isBound = false;\n        }\n\n        target.insetContainer.removeListener('mousedown', this.onDragStartImpl);\n        target.insetContainer.removeListener('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = false;\n    }\n\n    protected onDragStartImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        const { target } = this;\n\n        this.id = e.data.identifier;\n        this.onPress(e, true);\n\n        if (!this.isBound)\n        {\n            this.dragStart.copyFrom(e.data.global);\n\n            target.stage.on('mousemove', this.onDragMoveImpl);\n            target.stage.on('touchmove', this.onDragMoveImpl);\n            target.stage.on('mouseup', this.onDragEndImpl);\n            target.stage.on('mouseupoutside', this.onDragEndImpl);\n            target.stage.on('touchend', this.onDragEndImpl);\n            target.stage.on('touchendoutside', this.onDragEndImpl);\n            target.stage.on('touchcancel', this.onDragEndImpl);\n\n            this.isBound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    private onDragMoveImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            lastCursor,\n            dragOffset,\n            dragStart,\n            target,\n        } = this;\n\n        this.lastCursor.copyFrom(e.data.global);\n        this.dragOffset.set(lastCursor.x - dragStart.x, lastCursor.y - dragStart.y);\n\n        if (!this.isDragging)\n        {\n            this.movementX = Math.abs(dragOffset.x);\n            this.movementY = Math.abs(dragOffset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < target.dragThreshold)\n            {\n                return; // threshold\n            }\n\n            if (target.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (target.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (target.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this.onDragEndImpl(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart(e);\n            this.isDragging = true;\n        }\n\n        this.onDragMove(e, dragOffset);\n    };\n\n    private onDragEndImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchcancel', this.onDragEndImpl);\n\n            this.isDragging = false;\n            this.isBound = false;\n\n            this.onDragEnd(e);\n            this.onPress(e, false);\n        }\n    };\n}\n","import { ClickManager } from './ClickManager';\nimport { DragManager } from './DragManager';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * The event brokers allows you to access event managers without manually assigning\n * them to a widget. By default, the click (`PUXI.ClickManager`), dnd (`PUXI.DragManager`)\n * are defined. You can add event managers for all (new) widgets by adding an entry to\n * `EventBroker.MANAGER_MAP`.\n *\n * @memberof PUXI\n * @class\n */\nexport class EventBroker\n{\n    [key: string]: EventManager | Widget;\n\n    constructor(target: Widget)\n    {\n        this.target = target;\n\n        for (const mgr of Object.keys(EventBroker.MANAGER_MAP))\n        {\n            Object.defineProperty(\n                this,\n                mgr,\n                {\n                    get(): EventManager\n                    {\n                        if (!this[`_${mgr}`])\n                        {\n                            this[`_${mgr}`] = new EventBroker.MANAGER_MAP[mgr](this.target);\n                        }\n\n                        return this[`_${mgr}`];\n                    },\n                },\n            );\n        }\n    }\n\n  static MANAGER_MAP = {\n      click: ClickManager,\n      dnd: DragManager,\n  };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * Handles the `wheel` and `scroll` DOM events on widgets. It also registers\n * listeners for `mouseout` and `mouseover`.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ScrollManager extends EventManager\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    constructor(target: Widget, preventDefault = true)\n    {\n        super(target);\n\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    /**\n     * @override\n     */\n    startEvent(): void\n    {\n        const { target, onHoverImpl, onMouseOutImpl } = this;\n\n        target.contentContainer.on('mouseover', onHoverImpl);\n        target.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n\n    /**\n     * @override\n     */\n    stopEvent(): void\n    {\n        const { target, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        target.contentContainer.removeListener('mouseover', onHoverImpl);\n        target.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    private onMouseScrollImpl = (e: WheelEvent): void =>\n    {\n        const { target, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(target, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { DragManager } from './event/DragManager';\nimport { DragDropController } from './event/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\nimport { Stage } from './Stage';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { EventBroker } from './event';\n\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport abstract class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    insetContainer: PIXI.Container;\n    contentContainer: PIXI.Container;\n    widgetChildren: Widget[];\n    stage: Stage;\n\n    initialized: boolean;\n    protected dragInitialized: boolean;\n    protected dropInitialized: boolean;\n    protected isDragging: boolean;\n\n    private draggable: boolean;\n    private droppable: boolean;\n\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    parent: Widget;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    protected tint: number;\n    protected blendMode: PIXI.BLEND_MODES;\n    protected background: PIXI.Container;\n\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n\n    private _eventBroker: EventBroker;\n\n    private _paddingLeft: number;\n    private _paddingTop: number;\n    private _paddingRight: number;\n    private _paddingBottom: number;\n    private _width: number;\n    private _height: number;\n    private _elevation: number;\n    private _dropShadow: DropShadowFilter;\n\n    constructor()\n    {\n        super();\n\n        this.insetContainer = new PIXI.Container();\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n        this._elevation = 0;\n\n        this.tint = 0;\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n\n        this.draggable = false;\n        this.droppable = false;\n    }\n\n    /**\n     * Update method that is to be overriden. This is called before a `render()`\n     * pass on widgets that are dirty.\n     *\n     * @private\n     */\n    abstract update(): any;\n\n    /**\n     * The measured width that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    /**\n     * The measured height that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    /**\n     * Alias for `Widget.measuredWidth`.\n     *\n     * @returns {number} the measured width\n     */\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    /**\n     * Alias for `Widget.measuredHeight`.\n     *\n     * @returns {number} the measured height\n     */\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    /**\n     * Override this method to measure the dimensions for your widget. By default, it\n     * will use the natural width/height of this widget's content (`contentContainer`)\n     * plus any padding.\n     *\n     * @param {number} width - width of region provided by parent\n     * @param {number} height - height of region provided by parent\n     * @param {PUXI.MeasureMode} widthMode - mode in which provided width is to be used\n     * @param {PUXI.MeasureMode} heightMode - mode in which provided height is to be used\n     */\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    /**\n     * This method calls `Widget.onMeasure` and should not be overriden. It does internal\n     * bookkeeping.\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     */\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n    }\n\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    layout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n\n        if (this.background)\n        {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n        // this.container.width = r - l;\n        // this.container.height = b - t;\n    }\n\n    /**\n     * Use this to specify how you want to layout this widget w.r.t its parent.\n     * The specific layout options class depends on which layout you are\n     * using in the parent widget.\n     *\n     * @param {PUXI.LayoutOptions} lopt\n     * @returns {Widget} this\n     */\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    /**\n     * The event broker for this widget that holds all the event managers. This can\n     * be used to start/stop clicks, drags, scrolls and configure how those events\n     * are handled/interpreted.\n     * @member PUXI.EventBroker\n     */\n    get eventBroker(): EventBroker\n    {\n        if (!this._eventBroker)\n        {\n            this._eventBroker = new EventBroker(this);\n        }\n\n        return this._eventBroker;\n    }\n\n    /**\n     * Padding on left side.\n     * @member {number}\n     */\n    get paddingLeft(): number\n    {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val: number)\n    {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on top side.\n     * @member {number}\n     */\n    get paddingTop(): number\n    {\n        return this._paddingTop;\n    }\n    set paddingTop(val: number)\n    {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on right side.\n     * @member {number}\n     */\n    get paddingRight(): number\n    {\n        return this._paddingRight;\n    }\n    set paddingRight(val: number)\n    {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on bottom side.\n     * @member {number}\n     */\n    get paddingBottom(): number\n    {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val: number)\n    {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Sum of left & right padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingHorizontal(): number\n    {\n        return this._paddingLeft + this._paddingRight;\n    }\n\n    /**\n     * Sum of top & bottom padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingVertical(): number\n    {\n        return this._paddingTop + this._paddingBottom;\n    }\n\n    /**\n     * Whether this widget is interactive in the PixiJS scene graph.\n     * @member {boolean}\n     */\n    get interactive(): boolean\n    {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n\n    /**\n     * Layout width of this widget.\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this._width;\n    }\n\n    /**\n     * Layout height of this widget.\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this._height;\n    }\n\n    /**\n     * Alpha of this widget & its contents.\n     * @member {number}\n     */\n    get alpha(): number\n    {\n        return this.insetContainer.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.insetContainer.alpha = val;\n    }\n\n    /**\n     * Sets the padding values.\n     *\n     * To set all paddings to one value:\n     * ```\n     * widget.setPadding(8);\n     * ```\n     *\n     * To set horizontal & vertical padding separately:\n     * ```\n     * widget.setPadding(4, 12);\n     * ```\n     *\n     * @param {number}[l=0] - left padding\n     * @param {number}[t=l] - top padding (default is equal to left padding)\n     * @param {number}[r=l] - right padding (default is equal to right padding)\n     * @param {number}[b=t] - bottom padding (default is equal to top padding)\n     */\n    setPadding(l: number, t: number = l, r: number = l, b: number = t): Widget\n    {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * @returns {PIXI.Container} - the background display-object\n     */\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    /**\n     * The background of a widget is a `PIXI.DisplayObject` that is rendered before\n     * all of its children.\n     *\n     * @param {PIXI.Container | number | string} bg - the background display-object or\n     *     a color that will be used to generate a `PIXI.Graphics` as the background.\n     */\n    setBackground(bg: PIXI.Container | number | string): Widget\n    {\n        if (this.background)\n        {\n            this.insetContainer.removeChild(this.background);\n        }\n\n        if (typeof bg === 'string')\n        {\n            bg = PIXI.utils.string2hex(bg);\n        }\n        if (typeof bg === 'number')\n        {\n            bg = new PIXI.Graphics()\n                .beginFill(bg)\n                .drawRect(0, 0, 1, 1)\n                .endFill();\n            bg.width = this.width;\n            bg.height = this.height;\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            this.insetContainer.addChildAt(bg, 0);\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {number} the alpha on the background display-object.\n     */\n    getBackgroundAlpha(): number\n    {\n        return this.background ? this.background.alpha : 1;\n    }\n\n    /**\n     * This can be used to set the alpha on the _background_ of this widget. This\n     * does not affect the widget's contents nor individual components of the\n     * background display-object.\n     *\n     * @param {number} val - background alpha\n     */\n    setBackgroundAlpha(val: number): Widget\n    {\n        if (!this.background)\n        {\n            this.setBackground(0xffffff);\n        }\n\n        this.background.alpha = val;\n\n        return this;\n    }\n\n    /**\n     * @return {number} the elevation set on this widget\n     */\n    getElevation(): number\n    {\n        return this._elevation;\n    }\n\n    /**\n     * This can be used add a drop-shadow that will appear to raise this widget by\n     * the given elevation against its parent.\n     *\n     * @param {number} val - elevation to use. 2px is good for most widgets.\n     */\n    setElevation(val: number): Widget\n    {\n        this._elevation = val;\n\n        if (val === 0 && this._dropShadow)\n        {\n            const i = this.insetContainer.filters.indexOf(this._dropShadow);\n\n            if (i > 0)\n            {\n                this.insetContainer.filters.splice(i, 1);\n            }\n        }\n        else if (val > 0)\n        {\n            if (!this._dropShadow)\n            {\n                if (!this.insetContainer.filters)\n                {\n                    this.insetContainer.filters = [];\n                }\n\n                this._dropShadow = new DropShadowFilter({ distance: val });\n                this.insetContainer.filters.push(this._dropShadow);\n            }\n\n            this._dropShadow.distance = val;\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds the widgets as children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    addChild(...widgets: Widget[]): Widget\n    {\n        for (let i = 0; i < widgets.length; i++)\n        {\n            const widget = widgets[i];\n\n            if (widget.parent)\n            {\n                widget.parent.removeChild(widget);\n            }\n\n            widget.parent = this;\n            this.contentContainer.addChild(widget.insetContainer);\n            this.widgetChildren.push(widget);\n        }\n\n        return this;\n    }\n\n    /**\n     * Orphans the widgets that are children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    removeChild(...widgets: Widget[]): Widget\n    {\n        for (let i = 0; i < widgets.length; i++)\n        {\n            const widget = widgets[i];\n            const index = this.widgetChildren.indexOf(widget);\n\n            if (index !== -1)\n            {\n                widget.insetContainer.parent.removeChild(widget.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                widget.parent = null;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget `draggable`.\n     */\n    makeDraggable(): Widget\n    {\n        this.draggable = true;\n\n        if (this.initialized)\n        {\n            this.initDraggable();\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget not `draggable`.\n     */\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            (this.eventBroker.dnd as DragManager).stopEvent();\n        }\n    }\n\n    /**\n     * Widget initialization related to the stage. This method should always call\n     * `super.initialize()`.\n     *\n     * This method expects `stage` to be set before calling it. This is handled\n     * by the `Stage` itself.\n     *\n     * This will set `initialized` to true. If it was already set to true, it _should\n     * do nothing_.\n     *\n     * @protected\n     */\n    initialize(): void\n    {\n        if (this.initialized)\n        {\n            return;\n        }\n\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n\n        this.initialized = true;\n    }\n\n    private initDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            return;\n        }\n\n        this.dragInitialized = true;\n\n        const realPosition = new PIXI.Point();\n        const dragPosition = new PIXI.Point();\n\n        const dnd: DragManager = this.eventBroker.dnd as DragManager;\n        const { insetContainer } = this;\n\n        dnd.onDragStart = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            const added = DragDropController.add(this, e);\n\n            if (!this.isDragging && added)\n            {\n                this.isDragging = true;\n                insetContainer.interactive = false;\n                realPosition.copyFrom(insetContainer.position);\n\n                this.emit('draggablestart', e);\n            }\n        };\n\n        dnd.onDragMove = (e: PIXI.interaction.InteractionEvent, offset: PIXI.Point): void =>\n        {\n            if (this.isDragging)\n            {\n                dragPosition.set(realPosition.x + offset.x, realPosition.y + offset.y);\n\n                insetContainer.x = dragPosition.x;\n                insetContainer.y = dragPosition.y;\n\n                this.emit('draggablemove', e);\n            }\n        };\n\n        dnd.onDragEnd = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            if (this.isDragging)\n            {\n                this.isDragging = false;\n                DragDropController.getItem(this);\n\n                // Return to container after 0ms if not picked up by a droppable\n                setTimeout((): void =>\n                {\n                    this.insetContainer.interactive = true;\n                    this.insetContainer.position.copyFrom(realPosition);\n\n                    this.emit('draggableend', e);\n                }, 0);\n            }\n        };\n    }\n\n    /**\n     * Makes this widget `droppable`.\n     */\n    makeDroppable(): Widget\n    {\n        this.droppable = true;\n\n        if (this.initialized)\n        {\n            this.initDroppable();\n        }\n\n        return this;\n    }\n\n    protected onDrop: (e: PIXI.interaction.InteractionEvent) => void;\n\n    /**\n     * Makes this widget not `droppable`.\n     */\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    private initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n\n            this.contentContainer.interactive = true;\n\n            this.onDrop = (event): void =>\n            {\n                const item = DragDropController.getEventItem(event, this.dropGroup);\n\n                if (item && item.isDragging)\n                {\n                    item.isDragging = false;\n                    item.insetContainer.interactive = true;\n                    const parent = this.droppableReparent !== null ? this.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent) { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @memberof PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n    public static MAX_DIMEN = 0xfffffff0;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public markers: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT)\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n\n        this.markers = {};\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(\n        anchorLeft: number,\n        anchorTop: number,\n        anchorRight: number,\n        anchorBottom: number,\n        horizontalAlign = ALIGN.NONE,\n        verticalAlign = ALIGN.NONE)\n    {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions\n{\n    static DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    static CENTER_ANCHOR = new PIXI.Point(0.5, 0.5);// fragile, shouldn't be modified\n\n    x: number;\n    y: number;\n    anchor: PIXI.Point;\n\n    constructor(width: number, height: number, x = 0, y = 0, anchor?: PIXI.Point)\n    {\n        super(width, height);\n\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         */\n        this.x = x;\n\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         */\n        this.y = y;\n\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         * @member {PIXI.Point}\n         * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n         */\n        this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\n","import { MeasureMode } from '../IMeasurable';\nimport { ILayoutManager } from './ILayoutManager';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.ILayoutManager\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout implements ILayoutManager\n{\n    private host: WidgetGroup;\n    private _measuredWidth: number;\n    private _measuredHeight: number;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        // TODO: Passthrough optimization pass, if there is only one child with FILL_PARENT width or height\n        // then don't measure twice.\n\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n\n        const children = this.host.widgetChildren;\n\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : maxWidth,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : maxHeight,\n                widthMeasureMode,\n                heightMeasureMode);\n        }\n\n        this._measuredWidth = this.measureWidthReach(maxWidth, widthMode);\n        this._measuredHeight = this.measureHeightReach(maxHeight, heightMode);\n\n        this.measureChildFillers();\n    }\n\n    private getChildMeasureMode(dimen: number, parentMeasureMode: MeasureMode): MeasureMode\n    {\n        if (parentMeasureMode === MeasureMode.UNBOUNDED)\n        {\n            return MeasureMode.UNBOUNDED;\n        }\n        if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT)\n        {\n            return MeasureMode.AT_MOST;\n        }\n\n        return MeasureMode.EXACTLY;\n    }\n\n    private measureWidthReach(parentWidthLimit: number, widthMode: MeasureMode): number\n    {\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            return parentWidthLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredWidth = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childWidth = widget.getMeasuredWidth();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const x = lopt.x ? lopt.x : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n            // as (1 - anchor.x)% child's width.\n            const minr = (Math.abs(x) < 1 ? (1 - anchor.x) * childWidth / (1 - x) : x);\n\n            measuredWidth = Math.max(measuredWidth, minr);\n        }\n\n        if (widthMode === MeasureMode.AT_MOST)\n        {\n            measuredWidth = Math.min(parentWidthLimit, measuredWidth);\n        }\n\n        return measuredWidth;\n    }\n\n    private measureHeightReach(parentHeightLimit: number, heightMode: MeasureMode): number\n    {\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            return parentHeightLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredHeight = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childHeight = widget.getMeasuredHeight();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const y = lopt.y ? lopt.y : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const minb = (Math.abs(y) < 1 ? (1 - anchor.y) * childHeight / (1 - y) : y);\n\n            measuredHeight = Math.max(measuredHeight, minb);\n        }\n\n        if (heightMode === MeasureMode.AT_MOST)\n        {\n            measuredHeight = Math.min(parentHeightLimit, measuredHeight);\n        }\n\n        return measuredHeight;\n    }\n\n    private measureChildFillers(): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            if (lopt.width === LayoutOptions.FILL_PARENT || lopt.height === LayoutOptions.FILL_PARENT)\n            {\n                const widthMode = lopt.width === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n                const heightMode = lopt.height === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n\n                widget.measure(\n                    this._measuredWidth,\n                    this._measuredHeight,\n                    widthMode,\n                    heightMode,\n                );\n            }\n        }\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { width, height, widgetChildren: children } = parent;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight());\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\nimport { FastLayout } from './layout-manager/FastLayout';\n\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @example\n * ```\n * const group = new PUXI.InteractiveGroup();\n *\n * group.useLayout(new PUXI.AnchorLayout());\n *\n * group.addChild(new PUXI.Button({ text: \"Hey\" })\n *  .setLayoutOptions(\n *      new PUXI.AnchorLayoutOptions(\n *             100,\n *             300,\n *             .4,\n *             500,\n *             PUXI.ALIGN.CENTER\n *      )\n *  )\n * )\n * ```\n */\nexport abstract class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;// lazily initialized (via useLayout(), useDefaultLayout())\n\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {PUXI.ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr: ILayoutManager): void\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach();\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout(): void\n    {\n        this.useLayout(new FastLayout());\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.measure(width, height, widthMode, heightMode);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onLayout();// layoutMgr is attached to this\n    }\n}\n","import { WidgetGroup } from './WidgetGroup';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An interactive container.\n *\n * @class\n * @extends PUXI.WidgetGroup\n * @memberof PUXI\n */\nexport class InteractiveGroup extends WidgetGroup\n{\n    private hitArea: PIXI.Rectangle;\n\n    constructor()\n    {\n        super();\n        this.hitArea = new PIXI.Rectangle();\n        this.insetContainer.hitArea = this.hitArea;\n    }\n\n    update(): void\n    {\n        // YO\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty: boolean): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    }\n}\n\n","import * as PIXI from 'pixi.js';\nimport { TabGroup } from './ctl/FocusController';\nimport { InteractiveGroup } from './InteractiveGroup';\n\n/**\n * @namespace PUXI\n * @interface\n * @property {PIXI.Container}[background]\n * @property {number}[tabIndex]\n * @property {PUXI.TabGroup}[tabGroup]\n */\nexport interface IFocusableOptions\n{\n    background?: PIXI.Container;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Represents a view that can gain or loose focus. It is primarily subclassed by\n * input/form widgets.\n *\n * Generally, it is a good idea not use layouts on these types of widgets.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport abstract class FocusableWidget extends InteractiveGroup\n{\n    _isFocused: boolean;\n    _isMousePressed: boolean;\n\n    tabIndex: number;\n    tabGroup: TabGroup;\n\n    /**\n     * @param {PUXI.IInputBaseOptions} options\n     * @param {PIXI.Container}[options.background]\n     * @param {number}[options.tabIndex]\n     * @param {any}[options.tabGroup]\n     */\n    constructor(options: IFocusableOptions = {})\n    {\n        super();\n\n        if (options.background)\n        {\n            super.setBackground(options.background);\n        }\n\n        // Prevents double focusing/blurring.\n        this._isFocused = false;\n\n        // Used to lose focus when mouse-down outside widget.\n        this._isMousePressed = false;\n\n        this.interactive = true;\n\n        /**\n         * @member {number}\n         * @readonly\n         */\n        this.tabIndex = options.tabIndex;\n\n        /**\n         * The name of the tab group in which this widget's focus will move on\n         * pressing tab.\n         * @member {PUXI.TabGroup}\n         * @readonly\n         */\n        this.tabGroup = options.tabGroup;\n\n        this.insetContainer.on('pointerdown', () =>\n        {\n            this.focus();\n            this._isMousePressed = true;\n        });\n\n        this.insetContainer.on('pointerup', () => { this._isMousePressed = false; });\n        this.insetContainer.on('pointerupoutside', () => { this._isMousePressed = false; });\n    }\n\n    /**\n     * Brings this widget into focus.\n     */\n    focus(): void\n    {\n        if (this.isFocused)\n        {\n            return;\n        }\n\n        this.stage.focusController.notifyFocus(this);\n\n        this._isFocused = true;\n        this.bindEvents();\n\n        this.emit('focusChanged', true);\n        this.emit('focus');\n    }\n\n    /**\n     * Brings this widget out of focus.\n     */\n    blur(): void\n    {\n        if (!this._isFocused)\n        {\n            return;\n        }\n\n        this.stage.focusController.notifyBlur();\n\n        this._isFocused = false;\n        this.clearEvents();\n\n        this.emit('focusChanged', false);\n        this.emit('blur');\n    }\n\n    /**\n     * Whether this widget is in focus.\n     * @member {boolean}\n     * @readonly\n     */\n    get isFocused(): boolean\n    {\n        return this._isFocused;\n    }\n\n    private bindEvents = (): void =>\n    {\n        this.stage.on('pointerdown', this.onDocumentPointerDownImpl);\n        document.addEventListener('keydown', this.onKeyDownImpl);\n    };\n\n    private clearEvents = (): void =>\n    {\n        this.stage.off('pointerdown', this.onDocumentPointerDownImpl);\n        document.removeEventListener('keydown', this.onKeyDownImpl);\n    };\n\n    protected onKeyDownImpl = (e: any): void =>\n    {\n        const focusCtl = this.stage.focusController;\n\n        if (e.which === 9 && focusCtl.useTab)\n        {\n            focusCtl.onTab();\n            e.preventDefault();\n        }\n        else if (e.which === 38 && focusCtl.useBack)\n        {\n            focusCtl.onBack();\n            e.preventDefault();\n        }\n        else if (e.which === 40 && focusCtl.useForward)\n        {\n            focusCtl.onForward();\n            e.preventDefault();\n        }\n\n        this.emit('keydown');\n    };\n\n    private onDocumentPointerDownImpl = (): void =>\n    {\n        if (!this._isMousePressed)\n        {\n            this.blur();\n        }\n    };\n\n    initialize(): void\n    {\n        super.initialize();\n        this.stage.focusController.in(this, this.tabIndex, this.tabGroup);\n    }\n\n    /**\n     * Fired when the widget comes into focus.\n     * @event focus\n     */\n\n    /**\n     * Fired when the widget goes out of focus.\n     * @event blur\n     */\n\n    /**\n     * Fired when the widgets comes into or goes out of focus.\n     * @event focusChanged\n     * @param {boolean} isFocused - whether the widget is in focus.\n     */\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A static text widget. It cannot retain children.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class TextWidget extends Widget\n{\n    private textDisplay: PIXI.Text;\n\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        super();\n\n        this.textDisplay = new PIXI.Text(text, textStyle);\n        this.contentContainer.addChild(this.textDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.textDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.textDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this.textDisplay.text;\n    }\n    set value(val: string)\n    {\n        this.textDisplay.text = val;\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","import { ClickManager } from './event/ClickManager';\nimport { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { TextWidget } from './TextWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * @memberof PUXI\n * @interface\n * @extends PUXI.IFocusableOptions\n * @property {PUXI.TextWidget | string} text\n */\ninterface IButtonOptions extends IFocusableOptions\n{\n    background?: PIXI.Container;\n    text?: TextWidget | string;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Button that can be clicked.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class Button extends FocusableWidget\n{\n    isHover: boolean;\n\n    protected textWidget: TextWidget;\n\n    click: () => void;\n    /**\n     * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n     * @param [options.text=null] {PIXI.UI.Text} optional text\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.width=options.background.width] {Number|String} width\n     * @param [options.height=options.background.height] {Number|String} height\n     */\n    constructor(options: IButtonOptions)\n    {\n        super(options);\n\n        this.isHover = false;\n\n        if (typeof options.text === 'string')\n        {\n            options.text = new TextWidget(options.text, new PIXI.TextStyle());\n        }\n\n        this.textWidget = options.text.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5, 0.5,\n                FastLayoutOptions.CENTER_ANCHOR,\n            ),\n        ) as TextWidget;\n\n        if (this.textWidget)\n        {\n            this.addChild(this.textWidget);\n        }\n\n        this.contentContainer.buttonMode = true;\n\n        this.setupClick();\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent: ClickManager = this.eventBroker.click as ClickManager;\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.setupClick();\n\n        this.insetContainer.interactiveChildren = false;\n        // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n    }\n\n    /**\n     * Label for this button.\n     * @member {string}\n     */\n    get value(): string\n    {\n        if (this.textWidget)\n        {\n            return this.textWidget.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.textWidget)\n        {\n            this.textWidget.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.textWidget;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { ClickManager } from './event/ClickManager';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { CheckGroup } from './ctl';\n\ninterface ICheckBoxOptions extends IFocusableOptions\n{\n    checked?: boolean;\n    background: PIXI.Container;\n    checkmark?: PIXI.Container;\n    checkGroup?: CheckGroup;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * @memberof PUXI\n * @extends PUXI.IFocusableOptions\n * @member {boolean} checked\n * @member {PIXI.Container}[checkmark]\n * @member {PUXI.CheckGroup}[checkGroup]\n * @member {string}[value]\n */\n\n/**\n * A checkbox is a button can be selected (checked). It has a on/off state that\n * can be controlled by the user.\n *\n * When used in a checkbox group, the group will control whether the checkbox can\n * be selected or not.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class CheckBox extends FocusableWidget\n{\n    private _checked: boolean;\n    private _value: string;\n    private checkmark: InteractiveGroup;\n\n    checkGroup: CheckGroup;\n\n    /**\n     * @param {PUXI.ICheckBoxOptions} options\n     * @param [options.checked=false] {bool} is checked\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n     * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n     * @param {PUXI.CheckGroup}[options.checkGroup=null] CheckGroup name\n     * @param options.value {String} mostly used along with checkgroup\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     */\n    constructor(options: ICheckBoxOptions)\n    {\n        super(options);\n\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkGroup || null;\n\n        this.checkmark = new InteractiveGroup();\n        this.checkmark.contentContainer.addChild(options.checkmark);\n        this.checkmark.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5,\n                0.5,\n                FastLayoutOptions.CENTER_ANCHOR),\n        );\n        this.checkmark.alpha = this._checked ? 1 : 0;\n        this.addChild(this.checkmark);\n\n        this.contentContainer.buttonMode = true;\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                this.stage.checkBoxGroupController.notifyCheck(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            this.stage.checkBoxGroupController.notifyCheck(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return this.stage\n            ?.checkBoxGroupController\n            .getSelected(this.checkGroup)\n            .value;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        const clickMgr = (this.eventBroker.click as ClickManager);\n\n        clickMgr.onHover = (_, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        clickMgr.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickMgr.onClick = (): void =>\n        {\n            this.click();\n        };\n\n        if (this.checkGroup !== null)\n        {\n            this.stage.checkBoxGroupController.in(this, this.checkGroup);\n        }\n    }\n\n    protected change = (val: boolean): void =>\n    {\n        if (this.checkmark)\n        {\n            this.checkmark.alpha = val ? 1 : 0;\n        }\n    };\n\n    protected click = (): void =>\n    {\n        this.emit('click');\n\n        if (this.checkGroup !== null && this.checked)\n        {\n            return;\n        }\n\n        this.checked = !this.checked;\n        this.emit('changed', this.checked);\n    };\n\n    /**\n     * This event is fired when the user's cursor hovers over this checkbox.\n     * @event hover\n     */\n\n    /**\n     * This event is fired when the user clicks on the checkbox, regardless of whether\n     * the checkbox was selected or deselected.\n     * @event click\n     */\n\n    /**\n     * This event is fired when the user selects/deselects the checkbox, i.e. the \"value\"\n     * of the checkbox changes. This is also fired when setting the `checked` property\n     * directly.\n     * @event changed\n     * @param {boolean} checked - whether the checkbox is checked\n     */\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","function DynamicTextStyle(parent)\n{\n    this.respectDirty = true;\n    this._parent = parent || null;\n    this._scale = 1;\n    this._align = 'left';\n    this._fontFamily = 'Arial';\n    this._fontSize = 26;\n    this._fontWeight = 'normal';\n    this._fontStyle = 'normal';\n    this._letterSpacing = 0;\n    this._lineHeight = 0;\n    this._verticalAlign = 0;\n    this._rotation = 0;\n    this._skew = 0;\n    this._tint = '#FFFFFF';\n    this._fill = '#FFFFFF';\n    this._shadow = '';\n    this._stroke = 0;\n    this._strokeFill = '';\n    this._strokeShadow = '';\n    this._wrap = true;\n    this._breakWords = false;\n    this._overflowX = 'visible'; // visible|hidden\n    this._overflowY = 'visible'; // visible|hidden\n    this._ellipsis = false;\n\n    let _cachedEllipsisSize = null;\n\n    this.ellipsisSize = function (atlas)\n    {\n        if (!this.ellipsis) return 0;\n        if (_cachedEllipsisSize === null)\n        { _cachedEllipsisSize = (atlas.getCharObject('.', this).width + this.letterSpacing) * 3; }\n\n        return _cachedEllipsisSize;\n    };\n}\n\nDynamicTextStyle.prototype.clone = function ()\n{\n    const style = new DynamicTextStyle();\n\n    style.merge(this);\n\n    return style;\n};\n\nDynamicTextStyle.prototype.merge = function (style)\n{\n    if (typeof style === 'object')\n    {\n        this.respectDirty = false;\n        for (const param in style)\n        {\n            const val = style[param];\n\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\n            this[param] = style[param];\n        }\n        this.respectDirty = true;\n        this._dirty = true;\n    }\n};\n\nDynamicTextStyle.prototype.ctxKey = function (char)\n{\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\n};\n\nDynamicTextStyle.prototype.ctxFont = function ()\n{\n    const fontSize = `${Math.min(200, Math.max(1, this.fontSize || 26))}px `;\n    const fontWeight = this.fontWeight === 'bold' ? `${this.fontWeight} ` : '';\n    const fontStyle = this.fontStyle === 'italic' || this.fontStyle === 'oblique' ? `${this.fontStyle} ` : '';\n\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\n};\n\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\n\nexport { DynamicTextStyle };\n\nObject.defineProperties(DynamicTextStyle.prototype, {\n    _dirty: {\n        set(val)\n        {\n            if (this.respectDirty)\n            {\n                if (this._parent !== null)\n                {\n                    this._parent.dirtyStyle = val;\n                    this._parent.update();\n                }\n            }\n        },\n    },\n    scale: {\n        get()\n        {\n            return this._scale;\n        },\n        set(val)\n        {\n            if (val !== this._scale)\n            {\n                this._scale = val;\n                this._dirty = true;\n            }\n        },\n    },\n    align: {\n        get()\n        {\n            return this._align;\n        },\n        set(val)\n        {\n            if (val !== this._align)\n            {\n                this._align = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontFamily: {\n        get()\n        {\n            return this._fontFamily;\n        },\n        set(val)\n        {\n            if (val !== this._fontFamily)\n            {\n                this._fontFamily = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontSize: {\n        get()\n        {\n            return this._fontSize;\n        },\n        set(val)\n        {\n            if (val !== this._fontSize)\n            {\n                this._fontSize = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontWeight: {\n        get()\n        {\n            return this._fontWeight;\n        },\n        set(val)\n        {\n            if (val !== this._fontWeight)\n            {\n                this._fontWeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontStyle: {\n        get()\n        {\n            return this._fontStyle;\n        },\n        set(val)\n        {\n            if (val !== this._fontStyle)\n            {\n                this._fontStyle = val;\n                this._dirty = true;\n            }\n        },\n    },\n    letterSpacing: {\n        get()\n        {\n            return this._letterSpacing;\n        },\n        set(val)\n        {\n            if (val !== this._letterSpacing)\n            {\n                this._letterSpacing = val;\n                this._dirty = true;\n            }\n        },\n    },\n    lineHeight: {\n        get()\n        {\n            return this._lineHeight;\n        },\n        set(val)\n        {\n            if (val !== this._lineHeight)\n            {\n                this._lineHeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    verticalAlign: {\n        get()\n        {\n            return this._verticalAlign;\n        },\n        set(val)\n        {\n            if (val !== this._verticalAlign)\n            {\n                this._verticalAlign = val;\n                this._dirty = true;\n            }\n        },\n    },\n    rotation: {\n        get()\n        {\n            return this._rotation;\n        },\n        set(val)\n        {\n            if (val !== this._rotation)\n            {\n                this._rotation = val;\n                this._dirty = true;\n            }\n        },\n    },\n    skew: {\n        get()\n        {\n            return this._skew;\n        },\n        set(val)\n        {\n            if (val !== this._skew)\n            {\n                this._skew = val;\n                this._dirty = true;\n            }\n        },\n    },\n    tint: {\n        get()\n        {\n            return this._tint;\n        },\n        set(val)\n        {\n            if (val !== this._tint)\n            {\n                this._tint = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fill: {\n        get()\n        {\n            return this._fill;\n        },\n        set(val)\n        {\n            if (val !== this._fill)\n            {\n                this._fill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    shadow: {\n        get()\n        {\n            return this._shadow;\n        },\n        set(val)\n        {\n            if (val !== this._shadow)\n            {\n                this._shadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    stroke: {\n        get()\n        {\n            return this._stroke;\n        },\n        set(val)\n        {\n            if (val !== this._stroke)\n            {\n                this._stroke = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeFill: {\n        get()\n        {\n            return this._strokeFill;\n        },\n        set(val)\n        {\n            if (val !== this._strokeFill)\n            {\n                this._strokeFill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeShadow: {\n        get()\n        {\n            return this._strokeShadow;\n        },\n        set(val)\n        {\n            if (val !== this._strokeShadow)\n            {\n                this._strokeShadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    wrap: {\n        get()\n        {\n            return this._wrap;\n        },\n        set(val)\n        {\n            if (val !== this._wrap)\n            {\n                this._wrap = val;\n                this._dirty = true;\n            }\n        },\n    },\n    breakWords: {\n        get()\n        {\n            return this._breakWords;\n        },\n        set(val)\n        {\n            if (val !== this._breakWords)\n            {\n                this._breakWords = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowX: {\n        get()\n        {\n            return this._overflowX;\n        },\n        set(val)\n        {\n            if (val !== this._overflowX)\n            {\n                this._overflowX = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowY: {\n        get()\n        {\n            return this._overflowY;\n        },\n        set(val)\n        {\n            if (val !== this._overflowY)\n            {\n                this._overflowY = val;\n                this._dirty = true;\n            }\n        },\n    },\n    ellipsis: {\n        get()\n        {\n            return this._ellipsis;\n        },\n        set(val)\n        {\n            if (val !== this._ellipsis)\n            {\n                this._ellipsis = val;\n                this._dirty = true;\n            }\n        },\n    },\n});\n","function DynamicChar()\n{\n    // styledata (texture, orig width, orig height)\n    this.style = null;\n\n    // char data\n    this.data = null;\n\n    // is this char space?\n    this.space = false;\n\n    // is this char newline?\n    this.newline = false;\n\n    this.emoji = false;\n\n    // charcode\n    this.charcode = 0;\n\n    // char string value\n    this.value = '';\n\n    // word index\n    this.wordIndex = -1;\n\n    // line index of char\n    this.lineIndex = -1;\n}\n\nDynamicChar.prototype.constructor = DynamicChar;\n\nexport { DynamicChar };\n","import { Widget } from '../Widget';\nimport { DynamicTextStyle } from './DynamicTextStyle';\nimport { DynamicChar }  from './DynamicChar';\nimport emojiRegex  from 'emoji-regex';\nlet atlas = null;\n\n/**\n* An dynamic text object with auto generated atlas\n*\n* @class\n* @extends PIXI.UI.UIBase\n* @memberof PIXI.UI\n* @param text {String} Text content\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\n* @param [allowTags=true] {boolean} Allow inline styling\n* @param [options=null] {DynamicTextStyle} Additional text settings\n*/\nfunction DynamicText(text, options)\n{\n    options = options || {};\n\n    Widget.call(this, options.width || 0, options.height || 0);\n\n    // create atlas\n    if (atlas === null)\n    { atlas = new DynamicAtlas(1); }\n\n    const autoWidth = !options.width;\n    const autoHeight = !options.height;\n\n    // defaultstyle for this textobject\n    const defaultStyle = this._style = new DynamicTextStyle(this);\n\n    defaultStyle.merge(options.style);\n\n    // collection of all processed char\n    const chars = this.chars = [];\n    const renderChars = [];\n    const spriteCache = []; // (temp)\n    const charContainer = new PIXI.Container();\n\n    this.container.addChild(charContainer);\n\n    // the input text\n    this._inputText = text;\n\n    // list of rendered sprites (temp)\n    const sprites = [];\n\n    // states\n    let lastWidth = 0;\n    let lastHeight = 0;\n\n    this.dirtyText = true;\n    this.dirtyStyle = true;\n    this.dirtyRender = true;\n\n    // dictionary for line data\n    const lineWidthData = [];\n    const lineHeightData = [];\n    const lineFontSizeData = [];\n    const lineAlignmentData = [];\n    let renderCount = 0;\n    let charCount = 0;\n\n    // ellipsis caches (not nessesary when no sprites)\n    const lineEllipsisData = [];\n    const lineHasEllipsis = [];\n\n    // ROUGH TEMP RENDER (with sprites)\n    this.render = function ()\n    {\n        let yOffset = 0;\n        let xOffset = 0;\n        let currentLine = -1;\n        let i;\n\n        if (spriteCache.length > renderCount)\n        {\n            for (i = renderCount; i < spriteCache.length; i++)\n            {\n                const removeSprite = spriteCache[i];\n\n                if (removeSprite)\n                { removeSprite.visible = false; }\n            }\n        }\n\n        let char; let lineWidth = 0; let lineHeight = 0; let\n            maxLineWidth = 0;\n\n        for (i = 0; i < renderCount; i++)\n        {\n            char = renderChars[i];\n\n            // get line data\n            if (currentLine !== char.lineIndex)\n            {\n                currentLine = char.lineIndex;\n                lineWidth = lineWidthData[currentLine];\n                lineHeight = lineHeightData[currentLine];\n                yOffset += lineHeight;\n\n                switch (lineAlignmentData[currentLine])\n                {\n                    case 'right': xOffset = this._width - lineWidth; break;\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\n                    default: xOffset = 0;\n                }\n\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\n            }\n\n            // no reason to render a blank space or 0x0 letters (no texture created)\n            if (!char.data.texture || char.space || char.newline)\n            {\n                if (spriteCache[i])\n                { spriteCache[i].visible = false; }\n                continue;\n            }\n\n            // add new sprite\n            const tex = char.data.texture; let\n                sprite = spriteCache[i];\n\n            if (!sprite)\n            {\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\n                sprite.anchor.set(0.5);\n            }\n            else\n            { sprite.texture = tex; }\n\n            sprite.visible = true;\n            sprite.x = char.x + xOffset + tex.width * 0.5;\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\n\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\n            sprite.rotation = float(char.style.rotation, 0);\n            sprite.skew.x = float(char.style.skew, 0);\n\n            if (!sprite.parent)\n            { charContainer.addChild(sprite); }\n        }\n\n        if (autoWidth) this.width = maxLineWidth;\n        if (autoHeight) this.height = yOffset;\n    };\n\n    // updates the renderChar array and position chars for render\n    this.prepareForRender = function ()\n    {\n        const pos = new PIXI.Point();\n        let wordIndex = 0;\n        let lineHeight = 0;\n        let lineFontSize = 0;\n        let lineIndex = 0;\n        let lineAlignment = defaultStyle.align;\n        let lastSpaceIndex = -1;\n        let lastSpaceLineWidth = 0;\n        let textHeight = 0;\n        let forceNewline = false;\n        let style;\n        let renderIndex = 0;\n        let ellipsis = false;\n        let lineFull = false;\n        let i;\n\n        for (i = 0; i < charCount; i++)\n        {\n            const char = chars[i]; const\n                lastChar = chars[i - 1];\n\n            style = char.style;\n\n            // lineheight\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\n\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height)\n            {\n                if (style.overflowY === 'hidden')\n                { break; }\n            }\n\n            if (char.newline)\n            { lineFull = false; }\n\n            // set word index\n            if (char.space || char.newline) wordIndex++;\n            else char.wordIndex = wordIndex;\n\n            // textheight\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\n\n            // lineindex\n            char.lineIndex = lineIndex;\n\n            // lineAlignment\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\n\n            if (char.space)\n            {\n                lastSpaceIndex = i;\n                lastSpaceLineWidth = pos.x;\n            }\n\n            const size = Math.round(char.data.width) + float(style.letterSpacing, 0);\n\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width)\n            {\n                if (style.wrap)\n                {\n                    if (char.space)\n                    {\n                        forceNewline = true;\n                    }\n                    else if (lastSpaceIndex !== -1)\n                    {\n                        renderIndex -= i - lastSpaceIndex;\n                        i = lastSpaceIndex - 1;\n                        lastSpaceIndex = -1;\n                        pos.x = lastSpaceLineWidth;\n                        forceNewline = true;\n                        continue;\n                    }\n                    else if (style.breakWords)\n                    {\n                        if (lastChar)\n                        {\n                            pos.x -= lastChar.style.letterSpacing;\n                            pos.x -= lastChar.data.width;\n                        }\n                        i -= 2;\n                        renderIndex--;\n                        forceNewline = true;\n                        continue;\n                    }\n                }\n\n                if (style.overflowX == 'hidden' && !forceNewline)\n                {\n                    lineFull = true;\n                    if (style.ellipsis && !ellipsis)\n                    {\n                        ellipsis = true;\n                        let ellipsisData = lineEllipsisData[lineIndex];\n\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\n                        for (let d = 0; d < 3; d++)\n                        {\n                            const dot = ellipsisData[d];\n\n                            dot.value = '.';\n                            dot.data = atlas.getCharObject(dot.value, style);\n                            dot.style = style;\n                            dot.x = pos.x + char.data.xOffset;\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\n                            dot.lineIndex = lineIndex;\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\n                            renderChars[renderIndex] = dot;\n                            renderIndex++;\n                        }\n                    }\n                }\n            }\n\n            // Update position and add to renderchars\n            if (!lineFull)\n            {\n                // position\n                char.x = pos.x + char.data.xOffset;\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\n                pos.x += size;\n                renderChars[renderIndex] = char;\n                renderIndex++;\n            }\n\n            // new line\n            if (forceNewline || char.newline || i === charCount - 1)\n            {\n                if (lastChar)\n                {\n                    pos.x -= lastChar.style.letterSpacing;\n                }\n\n                if (char.space)\n                {\n                    pos.x -= char.data.width;\n                    pos.x -= float(style.letterSpacing, 0);\n                }\n\n                textHeight += lineHeight;\n                lineHasEllipsis[lineIndex] = ellipsis;\n                lineWidthData[lineIndex] = pos.x;\n                lineHeightData[lineIndex] = lineHeight;\n                lineFontSizeData[lineIndex] = lineFontSize;\n                lineAlignmentData[lineIndex] = lineAlignment;\n\n                // reset line vaules\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\n                lineAlignment = defaultStyle.align;\n                lastSpaceIndex = -1;\n                lineIndex++;\n                forceNewline = lineFull = ellipsis = false;\n            }\n        }\n\n        renderCount = renderIndex;\n    };\n\n    // phrases the input text and prepares the char array\n    const closeTags = ['</i>', '</b>', '</font>', '</center>'];\n\n    this.processInputText = function ()\n    {\n        const styleTree = [defaultStyle];\n        let charIndex = 0;\n        let inputTextIndex = 0;\n        const inputArray = Array.from(this._inputText);\n\n        for (let i = 0; i < inputArray.length; i++)\n        {\n            style = styleTree[styleTree.length - 1];\n            let c = inputArray[i];\n            const charcode = c.charCodeAt(0);\n            let newline = false;\n            let space = false;\n            let emoji = false;\n\n            // Extract Tags\n            if ((/(?:\\r\\n|\\r|\\n)/).test(c))\n            { newline = true; }\n            else if ((/(\\s)/).test(c))\n            { space = true; }\n            else if (options.allowTags && c === '<')\n            {\n                let tag = this._inputText.substring(inputTextIndex);\n\n                tag = tag.slice(0, tag.indexOf('>') + 1);\n                let FoundTag = true;\n\n                if (tag.length)\n                {\n                    if (tag === '<i>')\n                    {\n                        style = style.clone();\n                        style.fontStyle = 'italic';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<b>')\n                    {\n                        style = style.clone();\n                        style.fontWeight = 'bold';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<center>')\n                    {\n                        style = style.clone();\n                        style.align = 'center';\n                        styleTree.push(style);\n                    }\n                    else if (closeTags.indexOf(tag) !== -1)\n                    {\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\n                    }\n                    else if (tag.startsWith('<font '))\n                    {\n                        const regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g;\n                        let match = regex.exec(tag);\n\n                        if (match !== null)\n                        {\n                            style = style.clone();\n                            while (match !== null)\n                            {\n                                switch (match[1])\n                                {\n                                    case 'family': match[1] = 'fontFamily'; break;\n                                    case 'size': match[1] = 'fontSize'; break;\n                                    case 'weight': match[1] = 'fontWeight'; break;\n                                    case 'style': match[1] = 'fontStyle'; break;\n                                    case 'valign': match[1] = 'verticalAlign'; break;\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\n                                    case 'color': match[1] = 'tint'; break;\n                                }\n                                style[match[1]] = match[4];\n                                match = regex.exec(tag);\n                            }\n                            styleTree.push(style);\n                        }\n                    }\n                    else\n                    {\n                        FoundTag = false;\n                    }\n\n                    if (FoundTag)\n                    {\n                        inputTextIndex += tag.length;\n                        i += tag.length - 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                // detect emoji\n                let emojiMatch = emojiRegex().exec(c);\n\n                if (emojiMatch !== null)\n                {\n                    i--; c = '';\n                    while (emojiMatch !== null && c !== emojiMatch[0])\n                    {\n                        i++;\n                        c = emojiMatch[0];\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\n                    }\n                    emoji = true;\n                }\n            }\n\n            // Prepare DynamicChar object\n            let char = chars[charIndex];\n\n            if (!char)\n            {\n                char = new DynamicChar();\n                chars[charIndex] = char;\n            }\n            char.style = style;\n\n            if (emoji)\n            {\n                char.style = char.style.clone();\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\n            }\n\n            char.data = atlas.getCharObject(c, char.style);\n            char.value = c;\n            char.space = space;\n            char.newline = newline;\n            char.emoji = emoji;\n\n            charIndex++;\n            inputTextIndex += c.length;\n        }\n        charCount = charIndex;\n    };\n\n    // PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\n    this.lazyUpdate = null;\n    const self = this;\n\n    this.update = function ()\n    {\n        if (self.lazyUpdate !== null) return;\n        self.lazyUpdate = setTimeout(function ()\n        {\n            // console.log(\"UPDATING TEXT\");\n            const dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\n\n            if (self.dirtyText || self.dirtyStyle)\n            {\n                self.dirtyText = self.dirtyStyle = false;\n                self.dirtyRender = true; // force render after textchange\n                self.processInputText();\n            }\n\n            if (dirtySize || self.dirtyRender)\n            {\n                self.dirtyRender = false;\n                lastWidth = self._width;\n                lastHeight = self.height;\n                self.prepareForRender();\n                self.render();\n            }\n            self.lazyUpdate = null;\n        }, 0);\n    };\n}\n\nDynamicText.prototype = Object.create(Widget.prototype);\nDynamicText.prototype.constructor = DynamicText;\n\nexport { DynamicText };\n\nDynamicText.settings = {\n    debugSpriteSheet: false,\n    defaultEmojiFont: 'Segoe UI Emoji', // force one font family for emojis so we dont rerender them multiple times\n};\n\nObject.defineProperties(DynamicText.prototype, {\n    value: {\n        get()\n        {\n            return this._inputText;\n        },\n        set(val)\n        {\n            if (val !== this._inputText)\n            {\n                this._inputText = val;\n                this.dirtyText = true;\n                this.update();\n                // console.log(\"Updating Text to: \" + val);\n            }\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n    style: {\n        get()\n        {\n            return this._style;\n        },\n        set(val)\n        {\n            // get a clean default style\n            const style = new DynamicTextStyle(this);\n\n            // merge it with new style\n            style.merge(val);\n\n            // merge it onto this default style\n            this._style.merge(style);\n\n            this.dirtyStyle = true;\n            this.update();\n        },\n    },\n});\n\n// Atlas\nconst metricsCanvas = document.createElement('canvas');\nconst metricsContext = metricsCanvas.getContext('2d');\n\nmetricsCanvas.width = 100;\nmetricsCanvas.height = 100;\n\nvar DynamicAtlas = function (padding)\n{\n    const res = devicePixelRatio || 1;\n    let canvas;\n    let context;\n    let objects;\n    let newObjects = [];\n    let baseTexture;\n    let lazyTimeout;\n    let rootNode;\n    const canvasList = [];\n    let atlasdim;\n    const startdim = 256;\n    const maxdim = 2048;\n\n    var AtlasNode = function (w, h)\n    {\n        const children = this.children = [];\n\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\n        this.data = null;\n\n        this.insert = function (width, height, obj)\n        {\n            if (children.length > 0)\n            {\n                const newNode = children[0].insert(width, height, obj);\n\n                if (newNode !== null) return newNode;\n\n                return children[1].insert(width, height, obj);\n            }\n            if (this.data !== null) return null;\n            if (width > this.rect.width || height > this.rect.height) return null;\n            if (width == this.rect.width && height == this.rect.height)\n            {\n                this.data = obj;\n                obj.frame.x = this.rect.x;\n                obj.frame.y = this.rect.y;\n\n                return this;\n            }\n\n            children.push(new AtlasNode());\n            children.push(new AtlasNode());\n\n            const dw = this.rect.width - width;\n            const dh = this.rect.height - height;\n\n            if (dw > dh)\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\n            }\n            else\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\n            }\n\n            return children[0].insert(width, height, obj);\n        };\n    };\n\n    const addCanvas = function ()\n    {\n        // create new canvas\n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvasList.push(canvas);\n\n        // reset dimentions\n        atlasdim = startdim;\n        canvas.width = canvas.height = atlasdim;\n        rootNode = new AtlasNode(atlasdim, atlasdim);\n\n        // reset array with canvas objects and create new atlas\n        objects = [];\n\n        // set new basetexture\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\n        baseTexture.mipmap = false; // if not, pixi bug resizing POW2\n        baseTexture.resolution = 1; // todo: support all resolutions\n        baseTexture.update();\n\n        // Debug Spritesheet\n        if (DynamicText.settings.debugSpriteSheet)\n        {\n            canvas.className = 'DynamicText_SpriteSheet';\n            document.body.appendChild(canvas);\n        }\n    };\n\n    this.fontFamilyCache = {};\n\n    const drawObjects = function (arr, resized)\n    {\n        if (resized) baseTexture.update();\n        for (let i = 0; i < arr.length; i++)\n        { drawObject(arr[i]); }\n    };\n\n    var drawObject = function (obj)\n    {\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\n        obj.texture.frame = obj.frame;\n        obj.texture.update();\n    };\n\n    this.getCharObject = function (char, style)\n    {\n        const font = style.ctxFont();\n\n        // create new cache for fontFamily\n        let familyCache = this.fontFamilyCache[font];\n\n        if (!familyCache)\n        {\n            familyCache = {};\n            this.fontFamilyCache[font] = familyCache;\n        }\n\n        // get char data\n        const key = style.ctxKey(char);\n        let obj = familyCache[key];\n\n        if (!obj)\n        {\n            // create char object\n            const metrics = generateCharData(char, style);\n\n            // temp resize if doesnt fit (not nesseary when we dont need to generate textures)\n            if (metrics.rect)\n            {\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height)\n                {\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\n                    baseTexture.update();\n                }\n            }\n\n            // todo: cleanup when we know whats needed\n            obj = {\n                metrics,\n                font,\n                value: char,\n                frame: metrics.rect,\n                baseTexture: metrics.rect ? baseTexture : null,\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\n                yOffset: metrics.descent || 0,\n                width: metrics.width || 0,\n                lineHeight: metrics.lineHeight || 0,\n                _cache: metrics.canvas,\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null, // temp texture\n            };\n\n            // add to collections\n            familyCache[key] = obj;\n\n            // add to atlas if visible char\n            if (metrics.rect)\n            {\n                newObjects.push(obj);\n\n                if (lazyTimeout === undefined)\n                {\n                    lazyTimeout = setTimeout(function ()\n                    {\n                        addNewObjects();\n                        lazyTimeout = undefined;\n                    }, 0);\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    const compareFunction = function (a, b)\n    {\n        if (a.frame.height < b.frame.height)\n        { return 1; }\n\n        if (a.frame.height > b.frame.height)\n        { return -1; }\n\n        if (a.frame.width < b.frame.width)\n        { return 1; }\n\n        if (a.frame.width > b.frame.width)\n        { return -1; }\n\n        return 0;\n    };\n\n    var addNewObjects = function ()\n    {\n        newObjects.sort(compareFunction);\n        let _resized = false;\n        let _newcanvas = false;\n\n        for (let i = 0; i < newObjects.length; i++)\n        {\n            const obj = newObjects[i];\n            const node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n\n            if (node !== null)\n            {\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; // update basetexture if new canvas was created (temp)\n                objects.push(obj);\n                continue;\n            }\n\n            // step one back (so it will be added after resize/new canvas)\n            i--;\n\n            if (atlasdim < maxdim)\n            {\n                _resized = true;\n                resizeCanvas(atlasdim * 2);\n                continue;\n            }\n\n            // close current spritesheet and make a new one\n            drawObjects(objects, _resized);\n            addCanvas();\n            _newcanvas = true;\n            _resized = false;\n        }\n\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\n        newObjects = [];\n    };\n\n    var resizeCanvas = function (dim)\n    {\n        canvas.width = canvas.height = atlasdim = dim;\n\n        rootNode = new AtlasNode(dim, dim);\n        objects.sort(compareFunction);\n\n        for (let i = 0; i < objects.length; i++)\n        {\n            const obj = objects[i];\n\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n        }\n    };\n\n    var generateCharData = function (char, style)\n    {\n        const fontSize = Math.max(1, int(style.fontSize, 26));\n        const lineHeight = fontSize * 1.25;\n\n        // Start our returnobject\n        const data = {\n            fontSize,\n            lineHeight,\n            width: 0,\n        };\n\n        // Return if newline\n        if (!char || (/(?:\\r\\n|\\r|\\n)/).test(char))\n        { return data; }\n\n        // Ctx font string\n        const font = style.ctxFont();\n\n        metricsContext.font = font;\n\n        // Get char width\n        data.width = Math.round(metricsContext.measureText(char).width);\n\n        // Return if char = space\n        if ((/(\\s)/).test(char)) return data;\n\n        // set canvas size (with padding so we can messure)\n        const paddingY = Math.round(fontSize * 0.7); const\n            paddingX = Math.max(5, Math.round(fontSize * 0.7));\n\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\n        metricsCanvas.height = 1.5 * fontSize;\n        const w = metricsCanvas.width; const h = metricsCanvas.height; const\n            baseline = (h / 2) + (paddingY * 0.5);\n\n        // set font again after resize\n        metricsContext.font = font;\n\n        // make sure canvas is clean\n        metricsContext.clearRect(0, 0, w, h);\n\n        // save clean state with font\n        metricsContext.save();\n\n        // convert shadow string to shadow data\n        const shadowData = function (str)\n        {\n            const data = str.trim().split(' ');\n\n            return {\n                color: string(data[0], '#000000'),\n                alpha: float(data[1], 0.5),\n                xOffset: float(data[2], 3),\n                yOffset: float(data[3], 3),\n                blur: float(data[4], 5),\n            };\n        };\n\n        // convert fill string to fill data\n        const fillData = function (str)\n        {\n            const data = str.trim().split(' ');\n            const c = string(data[0], '#FFFFFF');\n            const a = float(data[1], 1);\n\n            return {\n                color: c,\n                alpha: a,\n                position: float(data[2], -1),\n                rgba: hexToRgba(c, a),\n            };\n        };\n\n        // create fill style from fill string\n        const getFillStyle = function (str)\n        {\n            const fills = str.split(',').filter(function (s) { return s !== ''; }); let\n                i;\n\n            // convert to fill data\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\n\n            switch (fills.length)\n            {\n                case 0: return 'white';\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || '#FFFFFF';\n                default:\n                    // make gradient\n                    try\n                    {\n                        const gradEnd = baseline + lineHeight - fontSize;\n                        const gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\n\n                        for (i = 0; i < fills.length; i++)\n                        { gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color); }\n\n                        return gradient;\n                    }\n                    catch (e)\n                    {\n                        return '#FFFFFF';\n                    }\n            }\n        };\n\n        // function to draw shadows\n        const drawShadows = function (shadowString, stroke)\n        {\n            const shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\n\n            if (shadows.length)\n            {\n                for (let i = 0; i < shadows.length; i++)\n                {\n                    const s = shadowData(shadows[i]);\n\n                    metricsContext.globalAlpha = s.alpha;\n                    metricsContext.shadowColor = s.color;\n                    metricsContext.shadowOffsetX = s.xOffset + w;\n                    metricsContext.shadowOffsetY = s.yOffset;\n                    metricsContext.shadowBlur = s.blur;\n\n                    if (stroke)\n                    {\n                        metricsContext.lineWidth = style.stroke;\n                        metricsContext.strokeText(char, paddingX - w, baseline);\n                    }\n                    else metricsContext.fillText(char, paddingX - w, baseline);\n                }\n                metricsContext.restore();\n            }\n        };\n\n        // draw text shadows\n        if (style.shadow.length)\n        { drawShadows(style.shadow, false); }\n\n        // draw stroke shadows\n        if (style.stroke && style.strokeShadow.length)\n        {\n            drawShadows(style.strokeShadow, true);\n        }\n\n        // draw text\n        metricsContext.fillStyle = getFillStyle(string(style.fill, '#000000'));\n        metricsContext.fillText(char, paddingX, baseline);\n        metricsContext.restore();\n\n        // draw stroke\n        if (style.stroke)\n        {\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, '#000000'));\n            metricsContext.lineWidth = style.stroke;\n            metricsContext.strokeText(char, paddingX, baseline);\n            metricsContext.restore();\n        }\n\n        // begin messuring\n        const pixelData = metricsContext.getImageData(0, 0, w, h).data;\n\n        let i = 3;\n        const line = w * 4;\n        const len = pixelData.length;\n\n        // scanline on alpha\n        while (i < len && !pixelData[i]) { i += 4; }\n        const ascent = (i / line) | 0;\n\n        if (i < len)\n        {\n            // rev scanline on alpha\n            i = len - 1;\n            while (i > 0 && !pixelData[i]) { i -= 4; }\n            const descent = (i / line) | 0;\n\n            // left to right scanline on alpha\n            for (i = 3; i < len && !pixelData[i];)\n            {\n                i += line;\n                if (i >= len) { i = (i - len) + 4; }\n            }\n            const minx = ((i % line) / 4) | 0;\n\n            // right to left scanline on alpha\n            let step = 1;\n\n            for (i = len - 1; i >= 0 && !pixelData[i];)\n            {\n                i -= line;\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\n            }\n            const maxx = ((i % line) / 4) + 1 | 0;\n\n            // set font metrics\n            data.ascent = Math.round(baseline - ascent);\n            data.descent = Math.round(descent - baseline);\n            data.height = 1 + Math.round(descent - ascent);\n            data.bounds = {\n                minx: minx - paddingX,\n                maxx: maxx - paddingX,\n                miny: 0,\n                maxy: descent - ascent,\n            };\n            data.rect = {\n                x: data.bounds.minx,\n                y: -data.ascent - 2,\n                width: data.bounds.maxx - data.bounds.minx + 2,\n                height: data.ascent + data.descent + 4,\n            };\n\n            // cache (for fast rearrange later)\n            data.canvas = document.createElement('canvas');\n            data.canvas.width = data.rect.width;\n            data.canvas.height = data.rect.height;\n            const c = data.canvas.getContext('2d');\n\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\n\n            // reset rect position\n            data.rect.x = data.rect.y = 0;\n        }\n\n        return data;\n    };\n\n    addCanvas();\n};\n\n// helper function for float or default\nfunction float(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseFloat(val);\n}\n\n// helper function for int or default\nfunction int(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseInt(val);\n}\n\n// helper function for string or default\nfunction string(val, def)\n{\n    if (typeof val === 'string' && val.length) return val;\n\n    return def;\n}\n\n// helper function to convert string hex to int or default\nfunction hexToInt(str, def)\n{\n    if (typeof str === 'number')\n    { return str; }\n\n    const result = parseInt(str.replace('#', '0x'));\n\n    if (isNaN(result)) return def;\n\n    return result;\n}\n\n// helper function to convert hex to rgba\nfunction hexToRgba(hex, alpha)\n{\n    const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n    alpha = float(alpha, 1);\n\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},${alpha})` : false;\n}\n\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","function EaseBase()\n{\n    this.getPosition = function (p)\n    {\n        return p;\n    };\n}\n\nEaseBase.prototype.constructor = EaseBase;\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","export const Ease = {};\nimport { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst HALF_PI = Math.PI * 0.5;\n\nfunction create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\n// Liear\nEase.Linear = new EaseBase();\n\n// Exponetial Eases\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Ease.Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Widget } from './Widget';\nimport { DragManager } from './event/DragManager';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n* An UI Slider, the default width/height is 90%\n*\n* @memberof PUXI\n* @class\n* @extends Widget\n* @param options {Object} Slider settings\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n* @param [options.vertical=false] {boolean} Direction of the slider\n* @param [options.value=0] {number} value of the slider\n* @param [options.minValue=0] {number} minimum value\n* @param [options.maxValue=100] {number} max value\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\n*/\nexport class Slider extends Widget\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    constructor(options: ISliderOptions)\n    {\n        super(0, 0);\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.contentContainer.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.contentContainer.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.contentContainer.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragManager(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragManager(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n}\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollWidget } from './ScrollWidget';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollWidget;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * @memberof PUXI\n * @interface IScrollBarOptions\n * @property {PUXI.Sprite} track\n * @property {PUXI.Sprite} handle\n */\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PUXI.Slider\n * @memberof PUXI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollWidget;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { ScrollWidget } from './ScrollWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions } from './layout-options';\nimport { DragManager } from './event/DragManager';\n\n/**\n * @memberof PUXI\n * @interface\n */\ninterface ITextInputOptions extends IFocusableOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: PIXI.Container;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\nfunction initMockDOMInput(): void\n{\n    // create temp input (for mobile keyboard)\n    if (typeof mockDOMInput === 'undefined')\n    {\n        mockDOMInput = document.createElement('INPUT');\n        mockDOMInput.setAttribute('type', 'text');\n        mockDOMInput.setAttribute('id', '_pui_tempInput');\n        mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n        document.body.appendChild(mockDOMInput);\n    }\n}\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n */\nexport class TextInput extends FocusableWidget\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollWidget;\n\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    /**\n     * @param {PUXI.ITextInputOptions} options\n     * @param {string} options.value Text content\n     * @param {boolean} [options.multiLine=false] Multiline input\n     * @param options.style {PIXI.TextStyle} Style used for the Text\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n     * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n     * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n     * @param [options.width=150] {Number} width of input\n     * @param [options.height=20] {Number} height of input\n     * @param [options.padding=3] {Number} input padding\n     * @param [options.paddingTop=0] {Number} input padding\n     * @param [options.paddingBottom=0] {Number} input padding\n     * @param [options.paddingLeft=0] {Number} input padding\n     * @param [options.paddingRight=0] {Number} input padding\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.maxLength=0] {Number} 0 = unlimited\n     * @param [options.caretWidth=1] {Number} width of the caret\n     * @param [options.lineHeight=0] {Number} 0 = inherit from text\n     */\n    constructor(options: ITextInputOptions)\n    {\n        super(options);\n        initMockDOMInput();\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollWidget({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        }).setPadding(\n            paddingLeft || 3,\n            paddingTop || 3,\n            paddingRight || 3,\n            paddingBottom || 3,\n        ).setLayoutOptions(\n            new LayoutOptions(\n                LayoutOptions.FILL_PARENT,\n                LayoutOptions.FILL_PARENT,\n            ),\n        ) as ScrollWidget;\n\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragManager(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._isFocused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer.insetContainer;\n    }\n\n    update(): void\n    {\n        if (this.width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    onKeyDown = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        // FocusableWidget.onKeyDownImpl should've been called before this.\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._isFocused)\n        {\n            super.focus();\n\n            const l = `${this.contentContainer.worldTransform.tx}px`;\n            const t = `${this.contentContainer.worldTransform.ty}px`;\n            const h = `${this.contentContainer.height}px`;\n            const w = `${this.contentContainer.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.onKeyDown, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._isFocused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.onKeyDown);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragManager } from './event/DragManager';\nimport { ScrollManager } from './event/ScrollManager';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\nimport { WidgetGroup } from './WidgetGroup';\n\n/**\n * @namespace PUXI\n * @interface\n */\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * `ScrollWidget` masks its contents to its layout bounds and translates\n * its children when scrolling.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.InteractiveGroup\n */\nexport class ScrollWidget extends InteractiveGroup\n{\n    private mask: PIXI.Graphics;\n    private innerContainer: WidgetGroup;\n    private innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private lastWidth: number;\n    private lastHeight: number;\n\n    protected scrollPosition: PIXI.Point;\n    protected scrollVelocity: PIXI.Point;\n    protected targetPosition: PIXI.Point;\n    protected lastPosition: PIXI.Point;\n    protected stop: boolean;\n\n    /**\n     * @param {PUXI.IScrollingContainerOptions} options\n     * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n     * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n     * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n     * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n     * @param [options.width=0] {Number|String} container width\n     * @param [options.height=0] {Number} container height\n     * @param [options.radius=0] {Number} corner radius of clipping mask\n     * @param [options.expandMask=0] {Number} mask expand (px)\n     * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n     * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n     */\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super();\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new InteractiveGroup();\n        this.innerBounds = new PIXI.Rectangle();\n        super.addChild(this.innerContainer);\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.scrollVelocity = new PIXI.Point();\n\n        /**\n         * Widget's position in a scroll.\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.scrollPosition = new PIXI.Point();\n\n        /**\n         * Position that the cursor is at, i.e. our scroll \"target\".\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.targetPosition = new PIXI.Point();\n        this.lastPosition = new PIXI.Point();\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n        this.initScrolling();\n    }\n\n    /**\n     * Updates the mask and scroll position before rendering.\n     *\n     * @override\n     */\n    update(): void\n    {\n        super.update();\n\n        if (this.lastWidth !== this.width || this.lastHeight !== this.height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n                this.mask.drawRect(-of, -of, this.width + of, this.height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this.width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n\n            this.lastWidth = this.width;\n            this.lastHeight = this.height;\n        }\n\n        this.setScrollPosition();\n    }\n\n    /**\n     * @param {PUXI.Widget[]} newChildren\n     * @returns {ScrollWidget} this widget\n     */\n    addChild(...newChildren: Widget[]): Widget\n    {\n        for (let i = 0; i < newChildren.length; i++)\n        {\n            this.innerContainer.addChild(newChildren[i]);\n        }\n\n        this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n\n        return this;\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    /**\n     * @override\n     */\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    private initScrolling(): void\n    {\n        const container = this.innerContainer.insetContainer;\n        const realPosition = new PIXI.Point();\n        const {\n            scrollPosition,\n            targetPosition,\n        } = this;\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag: DragManager = this.eventBroker.dnd as DragManager;\n\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    realPosition.copyFrom(container.position);\n                    scrollPosition.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n\n                    this.emit('scrollstart', e);\n                }\n            };\n\n            drag.onDragMove = (_, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = realPosition.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = realPosition.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('scrollend', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new ScrollManager(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n\n    forcePctPosition = (direction: string, pct: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        if (this.scrollX && direction === 'x')\n        {\n            container.position[direction] = -((bounds.width - this.width) * pct);\n        }\n        if (this.scrollY && direction === 'y')\n        {\n            container.position[direction] = -((bounds.height - this.height) * pct);\n        }\n\n        this.scrollPosition[direction] = this.targetPosition[direction] = container.position[direction];\n    };\n\n    focusPosition = (pos: PIXI.Point): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        let dif;\n\n        if (this.scrollX)\n        {\n            const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n            if (x + container.x > this.width)\n            {\n                dif = x - this.width;\n                container.x = -dif;\n            }\n            else if (x + container.x < 0)\n            {\n                dif = x + container.x;\n                container.x -= dif;\n            }\n        }\n        if (this.scrollY)\n        {\n            const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n            if (y + container.y > this.height)\n            {\n                dif = y - this.height;\n                container.y = -dif;\n            }\n            else if (y + container.y < 0)\n            {\n                dif = y + container.y;\n                container.y -= dif;\n            }\n        }\n\n        this.lastPosition.copyFrom(container.position);\n        this.targetPosition.copyFrom(container.position);\n        this.scrollPosition.copyFrom(container.position);\n\n        this.updateScrollBars();\n    };\n\n    /**\n     * @param {PIXI.Point}[velocity]\n     */\n    setScrollPosition = (velocity?: PIXI.Point): void =>\n    {\n        if (velocity)\n        {\n            this.scrollVelocity.copyFrom(velocity);\n        }\n\n        const container = this.innerContainer.insetContainer;\n\n        if (!this.animating)\n        {\n            this.animating = true;\n\n            this.lastPosition.copyFrom(container.position);\n            this.targetPosition.copyFrom(container.position);\n\n            Ticker.on('update', this.updateScrollPosition, this);\n        }\n    };\n\n    /**\n     * @param {number} delta\n     * @protected\n     */\n    protected updateScrollPosition = (delta: number): void =>\n    {\n        this.stop = true;\n\n        if (this.scrollX)\n        {\n            this.updateDirection('x', delta);\n        }\n        if (this.scrollY)\n        {\n            this.updateDirection('y', delta);\n        }\n\n        if (stop)\n        {\n            Ticker.removeListener('update', this.updateScrollPosition);\n            this.animating = false;\n        }\n    };\n\n    /**\n     * @param {'x' | 'y'} direction\n     * @param {number} delta\n     * @protected\n     */\n    protected updateDirection = (direction: string, delta: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const {\n            scrollPosition,\n            scrollVelocity,\n            targetPosition,\n            lastPosition,\n        } = this;\n        const container = this.innerContainer.insetContainer;\n\n        let min;\n\n        if (direction === 'y')\n        {\n            min = Math.round(Math.min(0, this.height - bounds.height));\n        }\n        else\n        {\n            min = Math.round(Math.min(0, this.width - bounds.width));\n        }\n\n        if (!this.scrolling && Math.round(scrollVelocity[direction]) !== 0)\n        {\n            targetPosition[direction] += scrollVelocity[direction];\n            scrollVelocity[direction] = Helpers.Lerp(\n                scrollVelocity[direction],\n                0,\n                (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n            if (targetPosition[direction] > 0)\n            {\n                targetPosition[direction] = 0;\n            }\n            else if (targetPosition[direction] < min)\n            {\n                targetPosition[direction] = min;\n            }\n        }\n\n        if (!this.scrolling\n            && Math.round(scrollVelocity[direction]) === 0\n            && (container[direction] > 0\n            || container[direction] < min))\n        {\n            const target = this.scrollPosition[direction] > 0 ? 0 : min;\n\n            scrollPosition[direction] = Helpers.Lerp(\n                scrollPosition[direction],\n                target,\n                (40 - (30 * this.softness)) * delta);\n            this.stop = false;\n        }\n        else if (this.scrolling || Math.round(scrollVelocity[direction]) !== 0)\n        {\n            if (this.scrolling)\n            {\n                scrollVelocity[direction] = this.scrollPosition[direction] - lastPosition[direction];\n                lastPosition.copyFrom(scrollPosition);\n            }\n            if (targetPosition[direction] > 0)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n            }\n            else if (targetPosition[direction] < min)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n            }\n            else\n            {\n                scrollPosition[direction] = targetPosition[direction];\n            }\n\n            this.stop = false;\n        }\n\n        container.position[direction] = Math.round(scrollPosition[direction]);\n        this.updateScrollBars();\n    };\n\n    /**\n     * This is fired when the user starts scrolling.\n     * @event scrollstart\n     */\n\n    /**\n     * This is fired when the user stops scrolling.\n     * @event scrollend\n     */\n}\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends InteractiveGroup\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PUXI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Sprite extends Widget\n{\n    private spriteDisplay: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        super();\n\n        this.spriteDisplay = new PIXI.Sprite(texture);\n        this.contentContainer.addChild(this.spriteDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.spriteDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.spriteDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Stage } from '../Stage';\nimport { Widget } from '../Widget';\nimport * as PIXI from 'pixi.js';\n\nexport abstract class Controller<T> extends PIXI.utils.EventEmitter\n{\n    stage: Stage;\n\n    constructor(stage: Stage)\n    {\n        super();\n        this.stage = stage;\n    }\n\n    abstract in(widget: T): any;\n\n    abstract out(widget: T): any;\n}\n\n/**\n * A controller handles a stage-level state that can be held by wigets. For example,\n * `PUXI.FocusController` handles which widget is focused.\n *\n * @memberof PUXI\n * @class Controller\n */\n\n/**\n * Enables the widget to enter the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method in\n * @param {PUXI.Widget} widget\n */\n\n/**\n * Disables the widget from the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method out\n * @param {PUXI.Widget} widget\n */\n","import { Controller } from './Controller';\nimport { CheckBox } from '../CheckBox';\nimport { Stage } from '../Stage';\n\nexport type CheckGroup = string;\n\n/**\n * @memberof PUXI\n * @typedef {string} CheckGroup\n */\n\ninterface CBGroup\n{\n    checks: Array<CheckBox>;\n    selected: CheckBox;\n}\n\n/**\n * Check boxes use this controller to deselect other checkboxes in the group when\n * they are selected.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class CheckBoxGroupController extends Controller<CheckBox>\n{\n    protected checkGroups: Map<CheckGroup, CBGroup>;\n\n    constructor(stage: Stage)\n    {\n        super(stage);\n        this.checkGroups = new Map<CheckGroup, CBGroup>();\n    }\n\n    /**\n     * @param {PUXI.CheckBox} widget\n     * @param {PUXI.CheckGroup} checkGroup\n     * @override\n     */\n    in(widget: CheckBox, checkGroup?: CheckGroup): void\n    {\n        if (!checkGroup)\n        {\n            throw new Error('Default check groups don\\'t exist!');\n        }\n\n        const group = this.checkGroups.get(checkGroup) || this.initGroup(checkGroup);\n\n        group.checks.push(widget);\n        widget.checkGroup = checkGroup;\n    }\n\n    /**\n     * @override\n     */\n    out(widget: CheckBox): void\n    {\n        const group = this.checkGroups.get(widget.checkGroup);\n        const i = group.checks.indexOf(widget);\n\n        if (i > 0)\n        {\n            group.checks.splice(i, 1);\n        }\n\n        widget.checkGroup = null;\n    }\n\n    /**\n     * Called when a checkbox is selected. Do not call from outside.\n     *\n     * @param {CheckBox} widget\n     */\n    notifyCheck(widget: CheckBox): void\n    {\n        const group = this.checkGroups.get(widget.checkGroup);\n\n        if (!group)\n        {\n            return;\n        }\n\n        const { checks } = group;\n\n        for (let i = 0, j = checks.length; i < j; i++)\n        {\n            if (checks[i] !== widget)\n            {\n                checks[i].checked = false;\n            }\n        }\n\n        group.selected = widget;\n    }\n\n    /**\n     * @param {PUXI.CheckGroup} group\n     * @returns {CheckBox} the selected checkbox in the group\n     */\n    getSelected(group: CheckGroup): CheckBox\n    {\n        return this.checkGroups.get(group)?.selected;\n    }\n\n    /**\n     * Ensures that the check group exists in `this.checkGroups`.\n     *\n     * @param {PUXI.CheckGroup} id\n     * @protected\n     */\n    protected initGroup(id: CheckGroup): CBGroup\n    {\n        const cgroup: CBGroup = {\n            checks: [],\n            selected: null,\n        };\n\n        this.checkGroups.set(id, cgroup);\n\n        return cgroup;\n    }\n}\n","import { Controller } from './Controller';\nimport { Stage } from '../Stage';\nimport { FocusableWidget } from '../FocusableWidget';\n\nexport type TabGroup = string;\n\n/**\n * Pressing tab on a focused widget will make the next widget its tab group\n * focused. If no tab group is specified for a focusable widget, then it\n * has the `'default'` tab group.\n *\n * @memberof PUXI\n * @typedef {string} TabGroup\n */\n\n/**\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class FocusController extends Controller<FocusableWidget>\n{\n    stage: Stage;\n\n    protected tabGroups: Map<TabGroup, FocusableWidget[]>;\n    protected currentItem: FocusableWidget;\n\n    useTab: boolean;\n    useForward: boolean;\n    useBack: boolean;\n\n    constructor(stage: Stage)\n    {\n        super(stage);\n\n        /**\n         * Map of tab-group names to the widgets in those groups.\n         * @member {Map<PUXI.TabGroup, PUXI.FocusableWidget[]>}\n         * @protected\n         */\n        this.tabGroups = new Map<TabGroup, FocusableWidget[]>();\n\n        /**\n         * Whether to enable tab-based focus movement.\n         * @member {boolean}\n         */\n        this.useTab = true;\n\n        /**\n         * Whether to enable forward arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useForward = true;\n\n        /**\n         * Whether to enable back arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useBack = true;\n    }\n\n    /**\n     * Adds the (focusable) widget to the tab group so that pressing tab repeatedly\n     * will eventually bring it into focus.\n     *\n     * @param {PUXI.FocusableWidget} widget - the widget to add\n     * @param {number}[tabIndex=0] - unique index for the widget in tab group used for ordering\n     * @param {PUXI.TabGroup}[tabGroup='default'] - tab group name\n     */\n    in(widget: FocusableWidget, tabIndex = 0, tabGroup = 'default'): void\n    {\n        let widgets = this.tabGroups.get(tabGroup);\n\n        if (!widgets)\n        {\n            widgets = [];\n            this.tabGroups.set(tabGroup, widgets);\n        }\n\n        const i = widgets.indexOf(widget);\n\n        // Push widget into tab group list if not present already.\n        if (i === -1)\n        {\n            widget.tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            widget.tabGroup = tabGroup;\n\n            widgets.push(widget);\n            widgets.sort((a, b) => a.tabIndex - b.tabIndex);\n        }\n    }\n\n    /**\n     * @param {PUXI.FocusableWidget} widget\n     * @override\n     */\n    out(widget: FocusableWidget): void\n    {\n        const widgets = this.tabGroups.get(widget.tabGroup);\n\n        if (!widgets)\n        {\n            return;\n        }\n\n        const i = widgets.indexOf(widget);\n\n        if (i !== -1)\n        {\n            // Widgets should already be sorted & so deleting should not unsort it.\n            widgets.splice(i, 1);\n        }\n    }\n\n    /**\n     * Called when a widget comes into focus. Do not call this yourself.\n     *\n     * @param {FocusableWidget} widget\n     */\n    notifyFocus(widget: FocusableWidget): void\n    {\n        const lastItem = this.currentItem;\n\n        if (lastItem)\n        {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n\n        this.currentItem = widget;\n\n        this.emit('focus', widget);\n        this.emit('focusChanged', widget, lastItem);\n    }\n\n    /**\n     * Clears the currently focused item without blurring it. It is called\n     * when a widget goes out of focus.\n     */\n    notifyBlur(): void\n    {\n        this.emit('blur', this.currentItem);\n        this.emit('focusChanged', null, this.currentItem);\n\n        this.currentItem = null;\n    }\n\n    /**\n     * Brings the widget into focus.\n     *\n     * @param {FocusableWidget} item\n     */\n    focus(item: FocusableWidget): void\n    {\n        const lastItem = this.currentItem;\n\n        if (lastItem)\n        {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n\n        item.focus();\n\n        this.emit('focus', item);\n        this.emit('focusChanged', item, lastItem);\n    }\n\n    /**\n     * Blurs the currently focused widget out of focus.\n     */\n    blur(): void\n    {\n        if (this.currentItem)\n        {\n            this.currentItem.blur();\n\n            this.emit('blur', this.currentItem);\n            this.emit('focusChanged', null, this.currentItem);\n\n            this.currentItem = null;\n        }\n    }\n\n    /**\n     * Called when tab is pressed on a focusable widget.\n     */\n    onTab(): void\n    {\n        const { tabGroups, currentItem } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n\n            let i = tabGroup.indexOf(currentItem) + 1;\n\n            if (i >= tabGroup.length)\n            {\n                i = 0;\n            }\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Focuses the next item without wrapping, i.e. it does not go to the first\n     * item if the current one is the last item. This is called when the user\n     * presses the forward arrow key.\n     */\n    onForward(): void\n    {\n        if (!this.useForward)\n        {\n            return;\n        }\n\n        const { currentItem, tabGroups } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n\n            let i = tabGroup.indexOf(currentItem) + 1;\n\n            if (i >= tabGroup.length)\n            {\n                i = tabGroup.length - 1;\n            }\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Focuses the last item without wrapping, i.e. it does not go to the last\n     * item if the current item is the first one. This is called when the user\n     * presses the back arrow button.\n     */\n    onBack(): void\n    {\n        const { currentItem, tabGroups } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n            let i = tabGroup.indexOf(currentItem) - 1;\n\n            if (i < 0) i = 0;\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Fired when a widget gains focus.\n     * @event focus\n     * @param {PUXI.FocusableWidget} widget - the widget that gained focus.\n     */\n\n    /**\n     * Fired when a widget looses focus.\n     * @event blur\n     * @param {PUXI.FocusableWidget} widget - the widget that lost focus.\n     */\n\n    /**\n     * Fired when a new widget comes into focus or one looses focus.\n     * @event focusChanged\n     * @param {PUXI.FocusableWidget}[newFocus] - the widget that came into focus. It may\n     *      be null if only a blur occured.\n     * @param {PUXI.FocusableWidget}[oldFocus] - the widget that lost focus. It may be\n     *      null if a widget gained focused for the first time.\n     */\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { FocusController, Controller, CheckBoxGroupController } from './ctl';\n\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.Container\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    widgetChildren: Widget[];\n\n    stage: any;\n\n    private _checkBoxGroupCtl: CheckBoxGroupController;\n    private _focusCtl: FocusController;\n\n    protected background: PIXI.Container;\n\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n\n        this._checkBoxGroupCtl = new Stage.CHECK_BOX_GROUP_CONTROLLER(this);\n        this._focusCtl = new Stage.FOCUS_CONTROLLER(this);\n    }\n\n    protected measureAndLayout(): void\n    {\n        if (this.background)\n        {\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++)\n        {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this.width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this.height : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this.width,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this.height,\n                widthMeasureMode,\n                heightMeasureMode);\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= this.width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= this.height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight(),\n                true);\n        }\n    }\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): void\n    {\n        if (this.background)\n        {\n            super.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            super.addChildAt(bg, 0);\n\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n    }\n\n    private update(widgets: Widget[]): void\n    {\n        for (let i = 0, j = widgets.length; i < j; i++)\n        {\n            const widget = widgets[i];\n\n            widget.stage = this;\n\n            if (!widget.initialized)\n            {\n                widget.initialize();\n            }\n\n            this.update(widget.widgetChildren);\n            widget.update();\n        }\n    }\n\n    render(renderer: PIXI.Renderer): void\n    {\n        this.update(this.widgetChildren);\n        super.render(renderer);\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n\n        this.measureAndLayout();\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.insetContainer);\n\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n\n        this.measureAndLayout();\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n\n        this.measureAndLayout();\n    }\n\n    get width(): number\n    {\n        return this.__width;\n    }\n    set width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get height(): number\n    {\n        return this.__height;\n    }\n    set height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n\n    /**\n     * The check box group controller for check boxes in this stage.\n     *\n     * @member {PUXI.CheckBoxGroupController}\n     */\n    get checkBoxGroupController(): CheckBoxGroupController\n    {\n        return this._checkBoxGroupCtl;\n    }\n\n    /**\n     * The focus controller for widgets in this stage. You can use this to bring a\n     * widget into focus.\n     *\n     * @member {PUXI.FocusController}\n     */\n    get focusController(): FocusController\n    {\n        return this._focusCtl;\n    }\n\n    /**\n     * Use this to override which class is used for the check box group controller. It\n     * should extend from `PUXI.CheckBoxGroupController`.\n     *\n     * @static\n     */\n    static CHECK_BOX_GROUP_CONTROLLER: typeof CheckBoxGroupController = CheckBoxGroupController;\n\n    /**\n     * Use this to override which class is used for the focus controller. It should\n     * extend from `PUXI.FocusController`.\n     *\n     * @static\n     */\n    static FOCUS_CONTROLLER: typeof FocusController = FocusController;\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @memberof PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n    protected noPercents: boolean;\n\n    constructor()\n    {\n        this.noPercents = false;\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    private measureChild(child: Widget,\n        maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode: number;\n        let widgetHeightMode: number;\n\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1))\n        {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1)\n        {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1)\n        {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1))\n        {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1)\n        {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1)\n        {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        child.measure(\n            maxWidgetWidth,\n            maxWidgetHeight,\n            widgetWidthMode,\n            widgetHeightMode,\n        );\n    }\n\n    measureStretch(lowerAnchor: number,\n        upperAnchor: number,\n        childDimen: number): number\n    {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1))\n        {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1)\n        {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1)\n        {\n            return upperAnchor;\n        }\n\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n\n    measureChildren(maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight,\n                MeasureMode.EXACTLY,\n                MeasureMode.EXACTLY);\n        }\n\n        let maxX = 0;\n        let maxY = 0;\n\n        const children = this.host.widgetChildren;\n\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = maxX;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = maxY;\n        }\n\n        this.measureChildren(this.measuredWidth, this.measuredHeight,\n            MeasureMode.EXACTLY,\n            MeasureMode.EXACTLY);\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n\n            if (anchorLeft > -1 && anchorLeft <= 1)\n            {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1)\n            {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1)\n            {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1)\n            {\n                anchorBottom *= parent.height;\n            }\n\n            let x = 0;\n            let y = 0;\n\n            if (childWidth !== 0)\n            {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n\n            if (childHeight !== 0)\n            {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n"],"names":["_items","DragDropController","add","item","event","_dragDropEventId","data","identifier","indexOf","push","[object Object]","object","index","i","length","splice","group","id","dragGroup","MeasureMode","this","reset","dirtyId","Insets","left","top","right","bottom","ALIGN","target","isEnabled","EventManager","includeHover","rightMouseButton","doubleClick","_super","_this","_includeHover","_rightMouseButton","_doubleClick","insetContainer","on","evMouseDown","onMouseDownImpl","onMouseOverImpl","onMouseOutImpl","bound","removeListener","evMouseUp","onMouseUpImpl","evMouseUpOutside","onMouseUpOutsideImpl","onMouseMoveImpl","_a","obj","_onMouseUp","_onMouseUpOutside","mouse","copyFrom","global","onPress","call","now","performance","time","onClick","originalEvent","preventDefault","offset","set","x","y","onMouseUpCommonImpl","dragThreshold","movementX","Math","abs","movementY","max","ishover","onHover","onMove","PIXI.Point","interactive","startEvent","__extends","Object","ClickManager","val","e","isBound","dragStart","stage","onDragMoveImpl","onDragEndImpl","lastCursor","dragOffset","isDragging","dragRestrictAxis","cancel","onDragStart","onDragMove","onDragEnd","DragManager","onDragStartImpl","mgr","defineProperty","get","EventBroker","MANAGER_MAP","keys","_i","click","dnd","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","document","addEventListener","removeEventListener","ScrollManager","onHoverImpl","contentContainer","PIXI.Container","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_elevation","tint","blendMode","PIXI.BLEND_MODES","NORMAL","draggable","droppable","Widget","_measuredWidth","_measuredHeight","width","height","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","l","t","r","b","_width","_height","background","lopt","layoutOptions","_eventBroker","alpha","bg","removeChild","PIXI.utils","string2hex","PIXI.Graphics","beginFill","drawRect","endFill","addChildAt","setBackground","_dropShadow","filters","DropShadowFilter","distance","widgets","widget","parent","initDraggable","eventBroker","stopEvent","initDroppable","realPosition","dragPosition","added","position","emit","getItem","setTimeout","onDrop","container","getEventItem","dropGroup","droppableReparent","self","toLocal","EventEmitter","LayoutOptions","WRAP_CONTENT","markers","_marginLeft","_marginTop","_marginRight","_marginBottom","anchorLeft","anchorTop","anchorRight","anchorBottom","horizontalAlign","verticalAlign","NONE","anchor","FastLayoutOptions","DEFAULT_ANCHOR","clone","FastLayout","host","maxWidth","maxHeight","children","j","DEFAULT","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","measure","measureWidthReach","measureHeightReach","measureChildFillers","dimen","parentMeasureMode","FILL_PARENT","parentWidthLimit","measuredWidth","childWidth","getMeasuredWidth","minr","parentHeightLimit","measuredHeight","childHeight","getMeasuredHeight","minb","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","hitArea","PIXI.Rectangle","InteractiveGroup","options","onDocumentPointerDownImpl","onKeyDownImpl","off","focusCtl","focusController","which","useTab","onTab","useBack","onBack","useForward","onForward","_isMousePressed","blur","_isFocused","tabIndex","tabGroup","focus","FocusableWidget","isFocused","notifyFocus","bindEvents","notifyBlur","clearEvents","initialize","in","text","textStyle","textDisplay","PIXI.Text","TextWidget","value","isHover","PIXI.TextStyle","textWidget","setLayoutOptions","CENTER_ANCHOR","buttonMode","setupClick","Button","clickEvent","over","isPressed","interactiveChildren","checkmark","checkGroup","checked","_checked","undefined","_value","CheckBox","checkBoxGroupController","notifyCheck","change","getSelected","clickMgr","_","DynamicTextStyle","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","atlas","ellipsis","getCharObject","letterSpacing","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","prototype","merge","param","_dirty","ctxKey","char","fill","shadow","stroke","strokeFill","strokeShadow","join","ctxFont","fontSize","fontWeight","fontStyle","fontFamily","constructor","defineProperties","dirtyStyle","update","scale","align","lineHeight","rotation","skew","wrap","breakWords","overflowX","overflowY","DynamicText","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","chars","renderChars","spriteCache","charContainer","PIXI","Container","_inputText","lastWidth","lastHeight","dirtyText","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","visible","lineWidth","maxLineWidth","texture","tex","sprite","Sprite","hexToInt","float","prepareForRender","pos","Point","lineFontSize","lineAlignment","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","lineFull","lastChar","size","round","ellipsisData","d","dot","parseFloat","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","c","charCodeAt","test","allowTags","tag","substring","slice","FoundTag","startsWith","regex","match","exec","emojiMatch","settings","defaultEmojiFont","lazyUpdate","dirtySize","create","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","AtlasNode","w","h","rect","Rectangle","insert","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","familyCache","key","metrics","generateCharData","bounds","minx","descent","Texture","addNewObjects","compareFunction","a","sort","_resized","_newcanvas","resizeCanvas","dim","def","isNaN","parseInt","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","str","trim","split","color","string","fillData","rgba","hexToRgba","getFillStyle","fills","filter","s","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","fillStyle","strokeStyle","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","result","replace","hex","EaseBase","getPosition","p","ExponentialEase","power","easeIn","easeOut","pow","Ease","HALF_PI","PI","fn","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","Helpers","Lerp","start","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","g","rgbToNumber","numberToRgb","floor","hexToRgb","m","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","tweens","active","onUpdate","_ready","callback","currentTime","CallbackItem","_tweenObjectId","_currentCallbackID","remove","to","ease","isColor","TweenItem","surfix","getSurfix","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","TweenObject","getTweenItem","tween","getCallbackItem","cb","Tween","params","fromTo","paramsFrom","paramsTo","_update","_amt","_disabled","track","handle","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","pivot","Slider","soft","handleSize","maxPosition","localMousePosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","stopPropagation","trackDrag","scrollingContainer","autohide","_hidden","ScrollBar","innerContainer","forcePctPosition","_scrollBars","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","autoStart","_now","DeltaTime","Time","Ms","disabled","Ticker","shared","requestAnimationFrame","once","mockDOMInput","direction","pct","getInnerBounds","scrollX","scrollY","scrollPosition","targetPosition","dif","lastPosition","updateScrollBars","velocity","scrollVelocity","animating","updateScrollPosition","updateDirection","scrolling","softness","exp","mask","innerBounds","dragScrolling","radius","expandMask","boundCached","initScrolling","ScrollWidget","of","clear","lineStyle","drawRoundedRect","setScrollPosition","newChildren","alignToContainer","force","getLocalBounds","drag","scrollSpeed","desc","tweenTime","tweenEase","items","SortableList","UIObject","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","arguments","instant","clearTimeout","_sortTimeout","_sort","alt","res","altering","updatesettings","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","f","setting","minWidth","minHeight","sbr","sr","sbl","sb","sf","st","sl","stl","SliceSprite","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","_b","PIXI.extras","TilingSprite","PIXI.Texture","PIXI.Sprite","spriteDisplay","imageUrl","PIXI.BaseTexture","checkGroups","Map","CheckBoxGroupController","Error","initGroup","checks","selected","cgroup","Controller","tabGroups","FocusController","lastItem","currentItem","__width","__height","resize","_checkBoxGroupCtl","Stage","CHECK_BOX_GROUP_CONTROLLER","_focusCtl","FOCUS_CONTROLLER","MAX_DIMEN","renderer","argumentLenght","measureAndLayout","rx","ry","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","_atEnd","multiLine","vrdd","hasSelection","de","textHeightPX","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","selectIndex","clipboardData","window","setData","copyEvent","getData","worldTransform","tx","ty","setAttribute","cacheAsBitmap","inputBlurEvent","onKeyDown","keyUpEvent","pasteEvent","cutEvent","inputEvent","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","scrollToPosition","showCaret","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","_dirtyText","maxLength","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","setPadding","_useNext","_usePrev","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","TextInput","mouseDown","timeSinceLast","selectWord","_lastWidth","updateText","whitespace","lastWordIndex","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","focusPosition","clearInterval","caretInterval","setInterval","tilePosition","tileScale","noPercents","AnchorLayout","child","maxParentWidth","maxParentHeight","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","LEFT","MIDDLE","RIGHT","TOP"],"mappings":"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"}