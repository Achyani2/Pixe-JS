{"version":3,"file":"pixi-ui.min.js","sources":["../src/event/DragDropController.js","../src/IMeasurable.ts","../src/layout-options/Insets.ts","../src/event/EventManager.ts","../src/event/InputController.ts","../src/layout-options/Align.ts","../src/event/ClickManager.ts","../src/event/DragManager.ts","../src/event/EventBroker.ts","../src/Widget.ts","../src/layout-options/LayoutOptions.ts","../src/layout-options/AnchorLayoutOptions.ts","../src/layout-options/FastLayoutOptions.ts","../src/layout-manager/FastLayout.ts","../src/WidgetGroup.ts","../src/FocusableWidget.ts","../src/TextWidget.ts","../src/Button.ts","../src/InteractiveGroup.ts","../src/CheckBox.ts","../src/DynamicText/DynamicTextStyle.js","../src/DynamicText/DynamicChar.js","../src/DynamicText/DynamicText.js","../node_modules/emoji-regex/index.js","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/event/MouseScrollEvent.ts","../src/event/Interaction.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/ScrollBar.ts","../src/Ticker.ts","../src/TextInput.ts","../src/ScrollWidget.ts","../src/SortableList.ts","../src/SliceSprite.ts","../src/Sprite.ts","../src/Stage.ts","../src/TilingSprite.ts","../src/layout-manager/AnchorLayout.ts"],"sourcesContent":["const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * @namespace PUXI\n * @enum\n */\nexport enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n */\nexport interface IMeasurable\n{\n    /**\n     * Measures its width & height based on the passed constraints.\n     *\n     * @param maxWidth\n     * @param maxHeight\n     * @param widthMode\n     * @param heightMode\n     */\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n\n    getMeasuredWidth(): number;\n\n    getMeasuredHeight(): number;\n}\n","/**\n * @namespace PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","import { Widget } from '../Widget';\n\n/**\n * An event manager handles the states related to certain events and can augment\n * widget interaction. For example, the click manager will hide clicks when\n * the object is dragging.\n *\n * Event managers are lifecycle objects - they can start/stop. Their constructor\n * will always accept one argument - the widget. Other settings can be applied before\n * `startEvent`.\n *\n * @memberof PUXI\n * @class\n * @abstract\n */\nexport abstract class EventManager\n{\n    protected target: Widget;\n    protected isEnabled: boolean;\n\n    /**\n     * @param {Widget} target\n     */\n    constructor(target: Widget)\n    {\n        this.target = target;\n        this.isEnabled = false;// use to track start/stopEvent\n    }\n\n    /**\n     * @returns {Widget}\n     */\n    getTarget(): Widget\n    {\n        return this.target;\n    }\n\n    /**\n     * Registers the interaction event listeners that will emit corresponding events\n     * on the target widget.\n     */\n    abstract startEvent(): any;\n\n    /**\n     * Unregisters any event listeners and releases any resources held. This should\n     * revert all changes made by `startEvent`.\n     */\n    abstract stopEvent(): any;\n}\n","let _currentItem;\nconst tabGroups = {};\nconst checkGroups = {};\nconst checkGroupValues = {};\n\n/**\n * Handles focus-management in the scene graph.\n */\nexport const InputController = {\n    registrer(item, tabIndex, tabGroup): void\n    {\n        const groupName = tabGroup || 'default';\n\n        let items = tabGroups[groupName];\n\n        if (!items)\n        { items = tabGroups[groupName] = []; }\n\n        const i = items.indexOf(item);\n\n        if (i === -1)\n        {\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            item._tabGroup = items;\n            items.push(item);\n            items.sort(function sorter(a, b)\n            {\n                if (a._tabIndex < b._tabIndex)\n                { return -1; }\n                if (a._tabIndex > b._tabIndex)\n                { return 1; }\n\n                return 0;\n            });\n        }\n    },\n    set(item): void\n    {\n        this.blur();\n        _currentItem = item;\n    },\n    clear(): void\n    {\n        _currentItem = undefined;\n    },\n    blur(): void\n    {\n        if (_currentItem && typeof _currentItem.blur === 'function')\n        {\n            _currentItem.blur();\n        }\n    },\n    fireTab(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    fireNext(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    firePrev(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\n\n            if (i < 0) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    registrerCheckGroup(cb): void\n    {\n        const name = cb.checkGroup;\n        let group = checkGroups[name];\n\n        if (!group) group = checkGroups[name] = {};\n        group[cb.value] = cb;\n\n        if (cb.checked)\n        { checkGroupValues[name] = cb.value; }\n    },\n    updateCheckGroupSelected(cb): void\n    {\n        const group = checkGroups[cb.checkGroup];\n\n        for (const val in group)\n        {\n            const b = group[val];\n\n            if (b !== cb)\n            { b.checked = false; }\n        }\n        checkGroupValues[cb.checkGroup] = cb.value;\n    },\n    getCheckGroupSelectedValue(name): string\n    {\n        if (checkGroupValues[name])\n        { return checkGroupValues[name]; }\n\n        return '';\n    },\n    setCheckGroupSelectedValue(name, val): void\n    {\n        const group = checkGroups[name];\n\n        if (group)\n        {\n            const cb = group[val];\n\n            if (cb)\n            {\n                cb.checked = true;\n            }\n        }\n    },\n};\n\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @namespace PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from '../Widget';\nimport { EventManager } from './EventManager';\n\n/**\n * `ClickManager` handles hover and click events. It registers listeners\n * for `mousedown`, `mouseup`, `mousemove`, `mouseout`, `mouseover`, `touchstart`,\n * `touchend`, `touchendoutside`, `touchmove`, `rightup`, `rightdown`, `rightupoutside`\n * events.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ClickManager extends EventManager\n{\n    onHover: (event: PIXI.interaction.InteractionEvent, over: boolean) => void;\n    onPress: (event: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    onClick: (event: PIXI.interaction.InteractionMouseEvents) => void;\n    onMove: (event: PIXI.interaction.InteractionEvent) => void;\n\n    protected _rightMouseButton: boolean;\n    protected _includeHover: boolean;\n    protected _doubleClick: boolean;\n\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    protected target: Widget;\n\n    private movementX: number;\n    private movementY: number;\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private evMouseDown: string;\n    private evMouseUp: string;\n    private evMouseUpOutside: string;\n\n    time: number;\n\n    /**\n     * @param {PUXI.Widget | PUXI.Button} target\n     * @param {boolean}[includeHover=false] - enable hover (`mouseover`, `mouseout`) listeners\n     * @param {boolean}[rightMouseButton=false] - use right mouse clicks\n     * @param {boolean}[doubleClick=false] - fire double clicks\n     */\n    constructor(target: Widget, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        super(target);\n\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n\n        this._includeHover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.rightMouseButton = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this._doubleClick = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        target.interactive = true;\n\n        this.time = 0;\n        this.startEvent();\n\n        this.onHover = (): void => null;\n        this.onPress = (): void => null;\n        this.onClick = (): void => null;\n        this.onMove = (): void => null;\n    }\n\n    /**\n     * Whether right mice are used for clicks rather than left mice.\n     * @member boolean\n     */\n    get rightMouseButton(): boolean\n    {\n        return this._rightMouseButton;\n    }\n    set rightMouseButton(val: boolean)\n    {\n        this._rightMouseButton = val;\n\n        this.evMouseDown = this._rightMouseButton ? 'rightdown' : 'mousedown';\n        this.evMouseUp = this._rightMouseButton ? 'rightup' : 'mouseup';\n        this.evMouseUpOutside = this._rightMouseButton ? 'rightupoutside' : 'mouseupoutside';\n    }\n\n    /**\n     * @param {boolean}[includeHover]\n     * @param {boolean}[rightMouseButton]\n     * @param {boolean}[doubleClick]\n     * @override\n     */\n    startEvent = (\n        includeHover = this._includeHover,\n        rightMouseButton = this._rightMouseButton,\n        doubleClick = this._doubleClick,\n    ): void =>\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        this._includeHover = includeHover;\n        this.rightMouseButton = rightMouseButton;\n        this._doubleClick = doubleClick;\n\n        const { target } = this;\n\n        target.insetContainer.on(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.on('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.on('mouseover', this.onMouseOverImpl);\n            target.insetContainer.on('mouseout', this.onMouseOutImpl);\n        }\n\n        this.isEnabled = true;\n    };\n\n    /**\n     * @override\n     */\n    stopEvent = (): void =>\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.bound)\n        {\n            target.insetContainer.removeListener(this.evMouseUp, this.onMouseUpImpl);\n            target.insetContainer.removeListener(this.evMouseUpOutside, this.onMouseUpOutsideImpl);\n\n            if (!this._rightMouseButton)\n            {\n                target.insetContainer.removeListener('touchend', this.onMouseUpImpl);\n                target.insetContainer.removeListener('touchendoutside', this.onMouseUpOutsideImpl);\n            }\n\n            this.bound = false;\n        }\n\n        target.insetContainer.removeListener(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.removeListener('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.removeListener('mouseover', this.onMouseOverImpl);\n            target.insetContainer.removeListener('mouseout', this.onMouseOutImpl);\n            target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n        }\n\n        this.isEnabled = false;\n    };\n\n    protected onMouseDownImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n            _rightMouseButton: right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.target, event, true);\n\n        if (!this.bound)\n        {\n            obj.insetContainer.on(evMouseUp, _onMouseUp);\n            obj.insetContainer.on(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.insetContainer.on('touchend', _onMouseUp);\n                obj.insetContainer.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this._doubleClick)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    protected onMouseUpCommonImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.insetContainer.removeListener(evMouseUp, _onMouseUp);\n            obj.insetContainer.removeListener(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!this._rightMouseButton)\n            {\n                obj.insetContainer.removeListener('touchend', _onMouseUp);\n                obj.insetContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    protected onMouseUpImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.target.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.target.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this._doubleClick)\n        {\n            this.onClick.call(this.target, event);\n        }\n    };\n\n    protected onMouseUpOutsideImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n    };\n\n    protected onMouseOverImpl = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.target.insetContainer.on('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.on('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, true);\n        }\n    };\n\n    protected onMouseOutImpl = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, false);\n        }\n    };\n\n    protected onMouseMoveImpl = (event): void =>\n    {\n        this.onMove.call(this.target, event);\n    };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * `DragManager` handles drag & drop events. It registers listeners for `mousedown`,\n * `touchstart` on the target and `mousemove`, `touchmove`, `mouseup`, `mouseupoutside`,\n * `touchend`, `touchendoutside` on the stage.\n *\n * By default, `draggable` widgets will internally handle drag-n-drop and reassigning\n * the callbacks on their `DragManager` will break their behaviour. You can prevent\n * this by using `eventBroker.dnd` directly without setting `widget.draggable` to\n * `true` (or using `widget.makeDraggable()`).\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class DragManager extends EventManager\n{\n    protected isBound: boolean;\n    protected isDragging: boolean;\n    protected id: number;\n    protected dragStart: PIXI.Point;\n    protected dragOffset: PIXI.Point;\n    protected lastCursor: PIXI.Point;\n    protected movementX: number;\n    protected movementY: number;\n    protected cancel: boolean;\n\n    public onPress: (e: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    public onDragStart: (e: PIXI.interaction.InteractionEvent) => void;\n    public onDragMove: (e: PIXI.interaction.InteractionEvent, dragOffset: PIXI.Point) => void;\n    public onDragEnd: (e: PIXI.interaction.InteractionEvent) => void;\n\n    constructor(target: Widget)\n    {\n        super(target);\n\n        this.isBound = false;\n        this.isDragging = false;\n        this.id = 0;\n        this.dragStart = new PIXI.Point();\n        this.dragOffset = new PIXI.Point();\n        this.lastCursor = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n\n        this.target.interactive = true;\n\n        this.onPress = (): void => null;\n        this.onDragStart = (): void => null;\n        this.onDragMove = (): void => null;\n        this.onDragEnd = (): void => null;\n\n        this.startEvent();\n    }\n\n    startEvent(): void\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        target.insetContainer.on('mousedown', this.onDragStartImpl);\n        target.insetContainer.on('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = true;\n    }\n\n    stopEvent(): void\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n\n            this.isBound = false;\n        }\n\n        target.insetContainer.removeListener('mousedown', this.onDragStartImpl);\n        target.insetContainer.removeListener('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = false;\n    }\n\n    protected onDragStartImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        const { target } = this;\n\n        this.id = e.data.identifier;\n        this.onPress(e, true);\n\n        if (!this.isBound)\n        {\n            this.dragStart.copyFrom(e.data.global);\n\n            target.stage.on('mousemove', this.onDragMoveImpl);\n            target.stage.on('touchmove', this.onDragMoveImpl);\n            target.stage.on('mouseup', this.onDragEndImpl);\n            target.stage.on('mouseupoutside', this.onDragEndImpl);\n            target.stage.on('touchend', this.onDragEndImpl);\n            target.stage.on('touchendoutside', this.onDragEndImpl);\n            target.stage.on('touchcancel', this.onDragEndImpl);\n\n            this.isBound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    private onDragMoveImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            lastCursor,\n            dragOffset,\n            dragStart,\n            target,\n        } = this;\n\n        this.lastCursor.copyFrom(e.data.global);\n        this.dragOffset.set(lastCursor.x - dragStart.x, lastCursor.y - dragStart.y);\n\n        if (!this.isDragging)\n        {\n            this.movementX = Math.abs(dragOffset.x);\n            this.movementY = Math.abs(dragOffset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < target.dragThreshold)\n            {\n                return; // threshold\n            }\n\n            if (target.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (target.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (target.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this.onDragEndImpl(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart(e);\n            this.isDragging = true;\n        }\n\n        this.onDragMove(e, dragOffset);\n    };\n\n    private onDragEndImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchcancel', this.onDragEndImpl);\n\n            this.isDragging = false;\n            this.isBound = false;\n\n            this.onDragEnd(e);\n            this.onPress(e, false);\n        }\n    };\n}\n","import { ClickManager } from './ClickManager';\nimport { DragManager } from './DragManager';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * The event brokers allows you to access event managers without manually assigning\n * them to a widget. By default, the click (`PUXI.ClickManager`), dnd (`PUXI.DragManager`)\n * are defined. You can add event managers for all (new) widgets by adding an entry to\n * `EventBroker.MANAGER_MAP`.\n *\n * @memberof PUXI\n * @class\n */\nexport class EventBroker\n{\n    [key: string]: EventManager | Widget;\n\n    constructor(target: Widget)\n    {\n        this.target = target;\n\n        for (const mgr of Object.keys(EventBroker.MANAGER_MAP))\n        {\n            Object.defineProperty(\n                this,\n                mgr,\n                {\n                    get(): EventManager\n                    {\n                        if (!this[`_${mgr}`])\n                        {\n                            this[`_${mgr}`] = new EventBroker.MANAGER_MAP[mgr](this.target);\n                        }\n\n                        return this[`_${mgr}`];\n                    },\n                },\n            );\n        }\n    }\n\n  static MANAGER_MAP = {\n      click: ClickManager,\n      dnd: DragManager,\n  };\n}\n","import { DragManager } from './event/DragManager';\nimport { DragDropController } from './event/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\nimport { Stage } from './Stage';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { EventBroker } from './event';\n\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @namespace PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport abstract class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    insetContainer: PIXI.Container;\n    contentContainer: PIXI.Container;\n    widgetChildren: Widget[];\n    stage: Stage;\n\n    initialized: boolean;\n    protected dragInitialized: boolean;\n    protected dropInitialized: boolean;\n    protected isDragging: boolean;\n\n    private draggable: boolean;\n    private droppable: boolean;\n\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    parent: Widget;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    protected tint: number;\n    protected blendMode: PIXI.BLEND_MODES;\n    protected background: PIXI.Container;\n\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n\n    private _eventBroker: EventBroker;\n\n    private _paddingLeft: number;\n    private _paddingTop: number;\n    private _paddingRight: number;\n    private _paddingBottom: number;\n    private _width: number;\n    private _height: number;\n    private _elevation: number;\n    private _dropShadow: DropShadowFilter;\n\n    constructor()\n    {\n        super();\n\n        this.insetContainer = new PIXI.Container();\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n        this._elevation = 0;\n\n        this.tint = 0;\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n\n        this.draggable = false;\n        this.droppable = false;\n    }\n\n    /**\n     * Update method (override from other UIObjects)\n     *\n     * @private\n     */\n    abstract update();\n\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n    }\n\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    layout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n\n        if (this.background)\n        {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n        // this.container.width = r - l;\n        // this.container.height = b - t;\n    }\n\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    /**\n     * The event broker for this widget that holds all the event managers. This can\n     * be used to start/stop clicks, drags, scrolls and configure how those events\n     * are handled/interpreted.\n     * @member PUXI.EventBroker\n     */\n    get eventBroker(): EventBroker\n    {\n        if (!this._eventBroker)\n        {\n            this._eventBroker = new EventBroker(this);\n        }\n\n        return this._eventBroker;\n    }\n\n    get paddingLeft(): number\n    {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val: number)\n    {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n\n    get paddingTop(): number\n    {\n        return this._paddingTop;\n    }\n    set paddingTop(val: number)\n    {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n\n    get paddingRight(): number\n    {\n        return this._paddingRight;\n    }\n    set paddingRight(val: number)\n    {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n\n    get paddingBottom(): number\n    {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val: number)\n    {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Sum of left & right padding.\n     * @member {number}\n     */\n    get paddingHorizontal(): number\n    {\n        return this._paddingLeft + this._paddingRight;\n    }\n\n    /**\n     * Sum of top & bottom padding.\n     * @member {number}\n     */\n    get paddingVertical(): number\n    {\n        return this._paddingTop + this._paddingBottom;\n    }\n\n    /**\n     * Whether this widget is interactive in the PixiJS scene graph.\n     * @member {boolean}\n     */\n    get interactive(): boolean\n    {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n\n    /**\n     * Layout width of this widget.\n     * @member {number}\n     */\n    get width(): number\n    {\n        return this._width;\n    }\n\n    /**\n     * Layout height of this widget.\n     * @member {number}\n     */\n    get height(): number\n    {\n        return this._height;\n    }\n\n    /**\n     * Alpha of this widget & its contents.\n     * @member {number}\n     */\n    get alpha(): number\n    {\n        return this.insetContainer.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.insetContainer.alpha = val;\n    }\n\n    /**\n     * Sets the padding values.\n     *\n     * To set all paddings to one value:\n     * ```\n     * widget.setPadding(8);\n     * ```\n     *\n     * To set horizontal & vertical padding separately:\n     * ```\n     * widget.setPadding(4, 12);\n     * ```\n     *\n     * @param {number}[l=0] - left padding\n     * @param {number}[t=l] - top padding (default is equal to left padding)\n     * @param {number}[r=l] - right padding (default is equal to right padding)\n     * @param {number}[b=t] - bottom padding (default is equal to top padding)\n     */\n    setPadding(l: number, t: number = l, r: number = l, b: number = t): Widget\n    {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * @returns {PIXI.Container} - the background display-object\n     */\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    /**\n     * The background of a widget is a `PIXI.DisplayObject` that is rendered before\n     * all of its children.\n     *\n     * @param {PIXI.Container | number | string} bg - the background display-object or\n     *     a color that will be used to generate a `PIXI.Graphics` as the background.\n     */\n    setBackground(bg: PIXI.Container | number | string): Widget\n    {\n        if (!this.background)\n        {\n            this.insetContainer.removeChild(this.background);\n        }\n\n        if (typeof bg === 'string')\n        {\n            bg = PIXI.utils.string2hex(bg);\n        }\n        if (typeof bg === 'number')\n        {\n            bg = new PIXI.Graphics()\n                .beginFill(bg)\n                .drawRect(0, 0, 1, 1)\n                .endFill();\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            this.insetContainer.addChildAt(bg, 0);\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {number} the alpha on the background display-object.\n     */\n    getBackgroundAlpha(): number\n    {\n        return this.background ? this.background.alpha : 1;\n    }\n\n    /**\n     * This can be used to set the alpha on the _background_ of this widget. This\n     * does not affect the widget's contents nor individual components of the\n     * background display-object.\n     *\n     * @param {number} val - background alpha\n     */\n    setBackgroundAlpha(val: number): Widget\n    {\n        if (!this.background)\n        {\n            this.setBackground(0xffffff);\n        }\n\n        this.background.alpha = val;\n\n        return this;\n    }\n\n    /**\n     * @return {number} the elevation set on this widget\n     */\n    getElevation(): number\n    {\n        return this._elevation;\n    }\n\n    /**\n     * This can be used add a drop-shadow that will appear to raise this widget by\n     * the given elevation against its parent.\n     *\n     * @param {number} val - elevation to use. 2px is good for most widgets.\n     */\n    setElevation(val: number): Widget\n    {\n        this._elevation = val;\n\n        if (val === 0 && this._dropShadow)\n        {\n            const i = this.insetContainer.filters.indexOf(this._dropShadow);\n\n            if (i > 0)\n            {\n                this.insetContainer.filters.splice(i, 1);\n            }\n        }\n        else if (val > 0)\n        {\n            if (!this._dropShadow)\n            {\n                if (!this.insetContainer.filters)\n                {\n                    this.insetContainer.filters = [];\n                }\n\n                this._dropShadow = new DropShadowFilter({ distance: val });\n                this.insetContainer.filters.push(this._dropShadow);\n            }\n\n            this._dropShadow.distance = val;\n        }\n\n        return this;\n    }\n\n    addChild(UIObject): Widget\n    {\n        const argumentsLength = arguments.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.contentContainer.addChild(UIObject.insetContainer);\n            this.widgetChildren.push(UIObject);\n        }\n\n        return this;\n    }\n\n    removeChild(UIObject): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                const oldUIParent = UIObject.parent;\n                const oldParent = UIObject.container.parent;\n\n                UIObject.insetContainer.parent.removeChild(UIObject.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                UIObject.parent = null;\n\n                // oldParent._recursivePostUpdateTransform();\n            }\n        }\n    }\n\n    /**\n     * Makes this widget `draggable`.\n     */\n    makeDraggable(): Widget\n    {\n        this.draggable = true;\n\n        if (this.initialized)\n        {\n            this.initDraggable();\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget not `draggable`.\n     */\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            (this.eventBroker.dnd as DragManager).stopEvent();\n        }\n    }\n\n    /**\n     * Widget initialization related to the stage. This method should always call\n     * `super.initialize()`.\n     *\n     * This method expects `stage` to be set before calling it. This is handled\n     * by the `Stage` itself.\n     *\n     * This will set `initialized` to true. If it was already set to true, it _should\n     * do nothing_.\n     *\n     * @protected\n     */\n    initialize(): void\n    {\n        if (this.initialized)\n        {\n            return;\n        }\n\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n\n        this.initialized = true;\n    }\n\n    private initDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            return;\n        }\n\n        this.dragInitialized = true;\n\n        const realPosition = new PIXI.Point();\n        const dragPosition = new PIXI.Point();\n\n        const dnd: DragManager = this.eventBroker.dnd as DragManager;\n        const { insetContainer } = this;\n\n        dnd.onDragStart = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            const added = DragDropController.add(this, e);\n\n            if (!this.isDragging && added)\n            {\n                this.isDragging = true;\n                insetContainer.interactive = false;\n                realPosition.copyFrom(insetContainer.position);\n\n                this.emit('draggablestart', e);\n            }\n        };\n\n        dnd.onDragMove = (e: PIXI.interaction.InteractionEvent, offset: PIXI.Point): void =>\n        {\n            if (this.isDragging)\n            {\n                dragPosition.set(realPosition.x + offset.x, realPosition.y + offset.y);\n\n                insetContainer.x = dragPosition.x;\n                insetContainer.y = dragPosition.y;\n\n                this.emit('draggablemove', e);\n            }\n        };\n\n        dnd.onDragEnd = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            if (this.isDragging)\n            {\n                this.isDragging = false;\n                DragDropController.getItem(this);\n\n                // Return to container after 0ms if not picked up by a droppable\n                setTimeout((): void =>\n                {\n                    this.insetContainer.interactive = true;\n                    this.insetContainer.position.copyFrom(realPosition);\n\n                    this.emit('draggableend', e);\n                }, 0);\n            }\n        };\n    }\n\n    /**\n     * Makes this widget `droppable`.\n     */\n    makeDroppable(): Widget\n    {\n        this.droppable = true;\n\n        if (this.initialized)\n        {\n            this.initDroppable();\n        }\n\n        return this;\n    }\n\n    protected onDrop: (e: PIXI.interaction.InteractionEvent) => void;\n\n    /**\n     * Makes this widget not `droppable`.\n     */\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    private initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n\n            this.contentContainer.interactive = true;\n\n            this.onDrop = (event): void =>\n            {\n                const item = DragDropController.getEventItem(event, this.dropGroup);\n\n                if (item && item.isDragging)\n                {\n                    item.isDragging = false;\n                    item.insetContainer.interactive = true;\n                    const parent = this.droppableReparent !== null ? this.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent) { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @namespace PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n    public static MAX_DIMEN = 0xfffffff0;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public markers: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT)\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n\n        this.markers = {};\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(\n        anchorLeft: number,\n        anchorTop: number,\n        anchorRight: number,\n        anchorBottom: number,\n        horizontalAlign = ALIGN.NONE,\n        verticalAlign = ALIGN.NONE)\n    {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @namespace PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions\n{\n    static DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    static CENTER_ANCHOR = new PIXI.Point(0.5, 0.5);// fragile, shouldn't be modified\n\n    x: number;\n    y: number;\n    anchor: PIXI.Point;\n\n    constructor(width: number, height: number, x = 0, y = 0, anchor?: PIXI.Point)\n    {\n        super(width, height);\n\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         */\n        this.x = x;\n\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         */\n        this.y = y;\n\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         * @member {PIXI.Point}\n         * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n         */\n        this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\n","import { MeasureMode } from '../IMeasurable';\nimport { ILayoutManager } from './ILayoutManager';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @namespace PUXI\n * @extends PUXI.ILayoutManager\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout implements ILayoutManager\n{\n    private host: WidgetGroup;\n    private _measuredWidth: number;\n    private _measuredHeight: number;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        // TODO: Passthrough optimization pass, if there is only one child with FILL_PARENT width or height\n        // then don't measure twice.\n\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n\n        const children = this.host.widgetChildren;\n\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : maxWidth,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : maxHeight,\n                widthMeasureMode,\n                heightMeasureMode);\n        }\n\n        this._measuredWidth = this.measureWidthReach(maxWidth, widthMode);\n        this._measuredHeight = this.measureHeightReach(maxHeight, heightMode);\n\n        this.measureChildFillers();\n    }\n\n    private getChildMeasureMode(dimen: number, parentMeasureMode: MeasureMode): MeasureMode\n    {\n        if (parentMeasureMode === MeasureMode.UNBOUNDED)\n        {\n            return MeasureMode.UNBOUNDED;\n        }\n        if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT)\n        {\n            return MeasureMode.AT_MOST;\n        }\n\n        return MeasureMode.EXACTLY;\n    }\n\n    private measureWidthReach(parentWidthLimit: number, widthMode: MeasureMode): number\n    {\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            return parentWidthLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredWidth = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childWidth = widget.getMeasuredWidth();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const x = lopt.x ? lopt.x : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n            // as (1 - anchor.x)% child's width.\n            const minr = (Math.abs(x) < 1 ? (1 - anchor.x) * childWidth / (1 - x) : x);\n\n            measuredWidth = Math.max(measuredWidth, minr);\n        }\n\n        if (widthMode === MeasureMode.AT_MOST)\n        {\n            measuredWidth = Math.min(parentWidthLimit, measuredWidth);\n        }\n\n        return measuredWidth;\n    }\n\n    private measureHeightReach(parentHeightLimit: number, heightMode: MeasureMode): number\n    {\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            return parentHeightLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredHeight = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childHeight = widget.getMeasuredHeight();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const y = lopt.y ? lopt.y : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const minb = (Math.abs(y) < 1 ? (1 - anchor.y) * childHeight / (1 - y) : y);\n\n            measuredHeight = Math.max(measuredHeight, minb);\n        }\n\n        if (heightMode === MeasureMode.AT_MOST)\n        {\n            measuredHeight = Math.min(parentHeightLimit, measuredHeight);\n        }\n\n        return measuredHeight;\n    }\n\n    private measureChildFillers(): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            if (lopt.width === LayoutOptions.FILL_PARENT || lopt.height === LayoutOptions.FILL_PARENT)\n            {\n                const widthMode = lopt.width === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n                const heightMode = lopt.height === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n\n                widget.measure(\n                    this._measuredWidth,\n                    this._measuredHeight,\n                    widthMode,\n                    heightMode,\n                );\n            }\n        }\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { width, height, widgetChildren: children } = parent;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight());\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\nimport { FastLayout } from './layout-manager/FastLayout';\n\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @namespace PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport abstract class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;// lazily initialized (via useLayout(), useDefaultLayout())\n\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr: ILayoutManager): void\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach();\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout(): void\n    {\n        this.useLayout(new FastLayout());\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.measure(width, height, widthMode, heightMode);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onLayout();// layoutMgr is attached to this\n    }\n}\n","import { InputController } from './event/InputController';\nimport { WidgetGroup } from './WidgetGroup';\n\n/**\n * @namespace PUXI\n * @interface\n */\nexport interface IInputBaseOptions\n{\n    background?: PIXI.Container;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Represents a view that can gain or loose focus. It is primarily subclassed by\n * input/form widgets.\n *\n * Generally, it is a good idea not use layouts on these types of widgets.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport abstract class FocusableWidget extends WidgetGroup\n{\n    _focused: boolean;\n    _useTab: boolean;\n    _usePrev: boolean;\n    _useNext: boolean;\n\n    __down: boolean;\n\n    /**\n     * @param {PUXI.IInputBaseOptions} options\n     * @param {PIXI.Container}[options.background]\n     * @param {number}[tabIndex]\n     * @param {any}[tabGroup]\n     */\n    constructor(options: IInputBaseOptions = {})\n    {\n        super();\n\n        if (options.background)\n        {\n            super.setBackground(options.background);\n        }\n\n        const { tabIndex, tabGroup } = options;\n\n        this._focused = false;\n        this._useTab = this._usePrev = this._useNext = true;\n        this.interactive = true;\n        InputController.registrer(this, tabIndex || 0, tabGroup || 0);\n\n        this.insetContainer.on('pointerdown', () =>\n        {\n            this.focus();\n            this.__down = true;\n        });\n        this.insetContainer.on('pointerup', () => { this.__down = false; });\n        this.insetContainer.on('pointerupoutside', () => { this.__down = false; });\n    }\n\n    blur(): void\n    {\n        if (this._focused)\n        {\n            InputController.clear();\n            this._focused = false;\n            this.clearEvents();\n            this.emit('focusChanged', false);\n            this.emit('blur');\n        }\n    }\n\n    focus(): void\n    {\n        if (!this._focused)\n        {\n            this._focused = true;\n            this.bindEvents();\n            InputController.set(this);\n            this.emit('focusChanged', true);\n            this.emit('focus');\n        }\n    }\n\n    protected keyDownEvent = (e: any): void =>\n    {\n        if (e.which === 9)\n        {\n            if (this._useTab)\n            {\n                InputController.fireTab();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 38)\n        {\n            if (this._usePrev)\n            {\n                InputController.firePrev();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 40)\n        {\n            if (this._useNext)\n            {\n                InputController.fireNext();\n                e.preventDefault();\n            }\n        }\n\n        this.emit('keydown');\n    };\n\n    private documentMouseDown = (): void =>\n    {\n        if (!this.__down)\n        {\n            this.blur();\n        }\n    };\n\n    private bindEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.on('pointerdown', this.documentMouseDown);\n        }\n\n        document.addEventListener('keydown', this.keyDownEvent);\n    };\n\n    private clearEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.off('pointerdown', this.documentMouseDown);\n        }\n\n        document.removeEventListener('keydown', this.keyDownEvent);\n    };\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A static text widget. It cannot retain children.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport class TextWidget extends Widget\n{\n    private textDisplay: PIXI.Text;\n\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        super();\n\n        this.textDisplay = new PIXI.Text(text, textStyle);\n        this.contentContainer.addChild(this.textDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.textDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.textDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this.textDisplay.text;\n    }\n    set value(val: string)\n    {\n        this.textDisplay.text = val;\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","import { ClickManager } from './event/ClickManager';\nimport { FocusableWidget, IInputBaseOptions } from './FocusableWidget';\nimport { TextWidget } from './TextWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * @memberof PUXI\n * @interface\n */\ninterface IButtonOptions extends IInputBaseOptions\n{\n    background?: PIXI.Container;\n    text?: TextWidget | string;\n    tabIndex?: number;\n    tabGroup?: any;\n    width?: number;\n    height?: number;\n}\n\n/**\n * Button that can be clicked.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class Button extends FocusableWidget\n{\n    isHover: boolean;\n\n    protected textWidget: TextWidget;\n\n    click: () => void;\n    initialize: () => void;\n\n    /**\n     * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n     * @param [options.text=null] {PIXI.UI.Text} optional text\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.width=options.background.width] {Number|String} width\n     * @param [options.height=options.background.height] {Number|String} height\n     */\n    constructor(options: IButtonOptions)\n    {\n        super(options);\n\n        this.isHover = false;\n\n        if (typeof options.text === 'string')\n        {\n            options.text = new TextWidget(options.text, new PIXI.TextStyle());\n        }\n\n        this.textWidget = options.text.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5, 0.5,\n                FastLayoutOptions.CENTER_ANCHOR,\n            ),\n        ) as TextWidget;\n\n        if (this.textWidget)\n        {\n            this.addChild(this.textWidget);\n        }\n\n        this.contentContainer.buttonMode = true;\n\n        this.setupClick();\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent = new ClickManager(this);\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                FocusableWidget.prototype.focus.call(this);\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                FocusableWidget.prototype.blur.call(this);\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n\n        this.initialize = (): void =>\n        {\n            super.initialize();\n            this.contentContainer.interactiveChildren = false;\n            // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n\n            setTimeout(() =>\n            {\n                const bounds = this.contentContainer.getLocalBounds();\n\n                this.contentContainer.hitArea = new PIXI.Rectangle(\n                    bounds.x < 0 ? bounds.x : 0,\n                    bounds.y < 0 ? bounds.y : 0,\n                    Math.max(bounds.x + bounds.width + (bounds.x < 0 ? -bounds.x : 0), this._width),\n                    Math.max(bounds.y + bounds.height + (bounds.y < 0 ? -bounds.y : 0), this._height),\n                );\n            }, 20);\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    get value(): string\n    {\n        if (this.textWidget)\n        {\n            return this.textWidget.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.textWidget)\n        {\n            this.textWidget.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.textWidget;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { WidgetGroup } from './WidgetGroup';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An interactive container.\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n */\nexport class InteractiveGroup extends WidgetGroup\n{\n    private hitArea: PIXI.Rectangle;\n\n    constructor()\n    {\n        super();\n        this.hitArea = new PIXI.Rectangle();\n        this.insetContainer.hitArea = this.hitArea;\n    }\n\n    update(): void\n    {\n        // TODO:\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty: boolean): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    }\n}\n\n","import { FocusableWidget, IInputBaseOptions } from './FocusableWidget';\nimport { ClickManager } from './event/ClickManager';\nimport { InputController } from './event/InputController';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\ninterface ICheckBoxOptions extends IInputBaseOptions\n{\n    checked?: boolean;\n    background: PIXI.Container;\n    checkmark?: PIXI.Container;\n    checkgroup?: any;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * A checkbox is a button can be selected (checked). It has a on/off state that\n * can be controlled by the user.\n *\n * When used in a checkbox group, the group will control whether the checkbox can\n * be selected or not.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class CheckBox extends FocusableWidget\n{\n    private _checked: boolean;\n    private _value: string;\n    private checkGroup: any;\n\n    private checkmark: InteractiveGroup;\n\n    /**\n     * @param {PUXI.ICheckBoxOptions} options\n     * @param [options.checked=false] {bool} is checked\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n     * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n     * @param [options.checkgroup=null] {String} CheckGroup name\n     * @param options.value {String} mostly used along with checkgroup\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     */\n    constructor(options: ICheckBoxOptions)\n    {\n        super(options);\n\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkgroup || null;\n\n        this.checkmark = new InteractiveGroup();\n        this.checkmark.contentContainer.addChild(options.checkmark);\n        this.checkmark.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5,\n                0.5,\n                FastLayoutOptions.CENTER_ANCHOR),\n        );\n        this.checkmark.alpha = this._checked ? 1 : 0;\n        this.addChild(this.checkmark);\n\n        this.contentContainer.buttonMode = true;\n\n        if (this.checkGroup !== null)\n        {\n            InputController.registrerCheckGroup(this);\n        }\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                InputController.updateCheckGroupSelected(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            InputController.updateCheckGroupSelected(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return InputController.getCheckGroupSelectedValue(this.checkGroup);\n    }\n    set selectedValue(val: string)\n    {\n        InputController.setCheckGroupSelectedValue(this.checkGroup, val);\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        const clickMgr = (this.eventBroker.click as ClickManager);\n\n        clickMgr.onHover = (_, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        clickMgr.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickMgr.onClick = (): void =>\n        {\n            this.click();\n        };\n    }\n\n    protected change = (val: boolean): void =>\n    {\n        if (this.checkmark)\n        {\n            this.checkmark.alpha = val ? 1 : 0;\n        }\n    };\n\n    protected click = (): void =>\n    {\n        this.emit('click');\n\n        if (this.checkGroup !== null && this.checked)\n        {\n            return;\n        }\n\n        this.checked = !this.checked;\n        this.emit('changed', this.checked);\n    };\n\n    focus = (): void =>\n    {\n        if (!this._focused)\n        {\n            super.focus();\n            // document.addEventListener(\"keydown\", keyDownEvent, false);\n        }\n    };\n\n    blur = (): void =>\n    {\n        if (this._focused)\n        {\n            super.blur();\n            // document.removeEventListener(\"keydown\", keyDownEvent);\n        }\n    };\n\n    /**\n     * This event is fired when the user's cursor hovers over this checkbox.\n     * @event hover\n     */\n\n    /**\n     * This event is fired when the user clicks on the checkbox, regardless of whether\n     * the checkbox was selected or deselected.\n     * @event click\n     */\n\n    /**\n     * This event is fired when the user selects/deselects the checkbox, i.e. the \"value\"\n     * of the checkbox changes. This is also fired when setting the `checked` property\n     * directly.\n     * @event changed\n     * @param {boolean} checked - whether the checkbox is checked\n     */\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","function DynamicTextStyle(parent)\n{\n    this.respectDirty = true;\n    this._parent = parent || null;\n    this._scale = 1;\n    this._align = 'left';\n    this._fontFamily = 'Arial';\n    this._fontSize = 26;\n    this._fontWeight = 'normal';\n    this._fontStyle = 'normal';\n    this._letterSpacing = 0;\n    this._lineHeight = 0;\n    this._verticalAlign = 0;\n    this._rotation = 0;\n    this._skew = 0;\n    this._tint = '#FFFFFF';\n    this._fill = '#FFFFFF';\n    this._shadow = '';\n    this._stroke = 0;\n    this._strokeFill = '';\n    this._strokeShadow = '';\n    this._wrap = true;\n    this._breakWords = false;\n    this._overflowX = 'visible'; // visible|hidden\n    this._overflowY = 'visible'; // visible|hidden\n    this._ellipsis = false;\n\n    let _cachedEllipsisSize = null;\n\n    this.ellipsisSize = function (atlas)\n    {\n        if (!this.ellipsis) return 0;\n        if (_cachedEllipsisSize === null)\n        { _cachedEllipsisSize = (atlas.getCharObject('.', this).width + this.letterSpacing) * 3; }\n\n        return _cachedEllipsisSize;\n    };\n}\n\nDynamicTextStyle.prototype.clone = function ()\n{\n    const style = new DynamicTextStyle();\n\n    style.merge(this);\n\n    return style;\n};\n\nDynamicTextStyle.prototype.merge = function (style)\n{\n    if (typeof style === 'object')\n    {\n        this.respectDirty = false;\n        for (const param in style)\n        {\n            const val = style[param];\n\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\n            this[param] = style[param];\n        }\n        this.respectDirty = true;\n        this._dirty = true;\n    }\n};\n\nDynamicTextStyle.prototype.ctxKey = function (char)\n{\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\n};\n\nDynamicTextStyle.prototype.ctxFont = function ()\n{\n    const fontSize = `${Math.min(200, Math.max(1, this.fontSize || 26))}px `;\n    const fontWeight = this.fontWeight === 'bold' ? `${this.fontWeight} ` : '';\n    const fontStyle = this.fontStyle === 'italic' || this.fontStyle === 'oblique' ? `${this.fontStyle} ` : '';\n\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\n};\n\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\n\nexport { DynamicTextStyle };\n\nObject.defineProperties(DynamicTextStyle.prototype, {\n    _dirty: {\n        set(val)\n        {\n            if (this.respectDirty)\n            {\n                if (this._parent !== null)\n                {\n                    this._parent.dirtyStyle = val;\n                    this._parent.update();\n                }\n            }\n        },\n    },\n    scale: {\n        get()\n        {\n            return this._scale;\n        },\n        set(val)\n        {\n            if (val !== this._scale)\n            {\n                this._scale = val;\n                this._dirty = true;\n            }\n        },\n    },\n    align: {\n        get()\n        {\n            return this._align;\n        },\n        set(val)\n        {\n            if (val !== this._align)\n            {\n                this._align = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontFamily: {\n        get()\n        {\n            return this._fontFamily;\n        },\n        set(val)\n        {\n            if (val !== this._fontFamily)\n            {\n                this._fontFamily = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontSize: {\n        get()\n        {\n            return this._fontSize;\n        },\n        set(val)\n        {\n            if (val !== this._fontSize)\n            {\n                this._fontSize = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontWeight: {\n        get()\n        {\n            return this._fontWeight;\n        },\n        set(val)\n        {\n            if (val !== this._fontWeight)\n            {\n                this._fontWeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontStyle: {\n        get()\n        {\n            return this._fontStyle;\n        },\n        set(val)\n        {\n            if (val !== this._fontStyle)\n            {\n                this._fontStyle = val;\n                this._dirty = true;\n            }\n        },\n    },\n    letterSpacing: {\n        get()\n        {\n            return this._letterSpacing;\n        },\n        set(val)\n        {\n            if (val !== this._letterSpacing)\n            {\n                this._letterSpacing = val;\n                this._dirty = true;\n            }\n        },\n    },\n    lineHeight: {\n        get()\n        {\n            return this._lineHeight;\n        },\n        set(val)\n        {\n            if (val !== this._lineHeight)\n            {\n                this._lineHeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    verticalAlign: {\n        get()\n        {\n            return this._verticalAlign;\n        },\n        set(val)\n        {\n            if (val !== this._verticalAlign)\n            {\n                this._verticalAlign = val;\n                this._dirty = true;\n            }\n        },\n    },\n    rotation: {\n        get()\n        {\n            return this._rotation;\n        },\n        set(val)\n        {\n            if (val !== this._rotation)\n            {\n                this._rotation = val;\n                this._dirty = true;\n            }\n        },\n    },\n    skew: {\n        get()\n        {\n            return this._skew;\n        },\n        set(val)\n        {\n            if (val !== this._skew)\n            {\n                this._skew = val;\n                this._dirty = true;\n            }\n        },\n    },\n    tint: {\n        get()\n        {\n            return this._tint;\n        },\n        set(val)\n        {\n            if (val !== this._tint)\n            {\n                this._tint = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fill: {\n        get()\n        {\n            return this._fill;\n        },\n        set(val)\n        {\n            if (val !== this._fill)\n            {\n                this._fill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    shadow: {\n        get()\n        {\n            return this._shadow;\n        },\n        set(val)\n        {\n            if (val !== this._shadow)\n            {\n                this._shadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    stroke: {\n        get()\n        {\n            return this._stroke;\n        },\n        set(val)\n        {\n            if (val !== this._stroke)\n            {\n                this._stroke = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeFill: {\n        get()\n        {\n            return this._strokeFill;\n        },\n        set(val)\n        {\n            if (val !== this._strokeFill)\n            {\n                this._strokeFill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeShadow: {\n        get()\n        {\n            return this._strokeShadow;\n        },\n        set(val)\n        {\n            if (val !== this._strokeShadow)\n            {\n                this._strokeShadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    wrap: {\n        get()\n        {\n            return this._wrap;\n        },\n        set(val)\n        {\n            if (val !== this._wrap)\n            {\n                this._wrap = val;\n                this._dirty = true;\n            }\n        },\n    },\n    breakWords: {\n        get()\n        {\n            return this._breakWords;\n        },\n        set(val)\n        {\n            if (val !== this._breakWords)\n            {\n                this._breakWords = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowX: {\n        get()\n        {\n            return this._overflowX;\n        },\n        set(val)\n        {\n            if (val !== this._overflowX)\n            {\n                this._overflowX = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowY: {\n        get()\n        {\n            return this._overflowY;\n        },\n        set(val)\n        {\n            if (val !== this._overflowY)\n            {\n                this._overflowY = val;\n                this._dirty = true;\n            }\n        },\n    },\n    ellipsis: {\n        get()\n        {\n            return this._ellipsis;\n        },\n        set(val)\n        {\n            if (val !== this._ellipsis)\n            {\n                this._ellipsis = val;\n                this._dirty = true;\n            }\n        },\n    },\n});\n","function DynamicChar()\n{\n    // styledata (texture, orig width, orig height)\n    this.style = null;\n\n    // char data\n    this.data = null;\n\n    // is this char space?\n    this.space = false;\n\n    // is this char newline?\n    this.newline = false;\n\n    this.emoji = false;\n\n    // charcode\n    this.charcode = 0;\n\n    // char string value\n    this.value = '';\n\n    // word index\n    this.wordIndex = -1;\n\n    // line index of char\n    this.lineIndex = -1;\n}\n\nDynamicChar.prototype.constructor = DynamicChar;\n\nexport { DynamicChar };\n","import { Widget } from '../Widget';\nimport { DynamicTextStyle } from './DynamicTextStyle';\nimport { DynamicChar }  from './DynamicChar';\nimport emojiRegex  from 'emoji-regex';\nlet atlas = null;\n\n/**\n* An dynamic text object with auto generated atlas\n*\n* @class\n* @extends PIXI.UI.UIBase\n* @memberof PIXI.UI\n* @param text {String} Text content\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\n* @param [allowTags=true] {boolean} Allow inline styling\n* @param [options=null] {DynamicTextStyle} Additional text settings\n*/\nfunction DynamicText(text, options)\n{\n    options = options || {};\n\n    Widget.call(this, options.width || 0, options.height || 0);\n\n    // create atlas\n    if (atlas === null)\n    { atlas = new DynamicAtlas(1); }\n\n    const autoWidth = !options.width;\n    const autoHeight = !options.height;\n\n    // defaultstyle for this textobject\n    const defaultStyle = this._style = new DynamicTextStyle(this);\n\n    defaultStyle.merge(options.style);\n\n    // collection of all processed char\n    const chars = this.chars = [];\n    const renderChars = [];\n    const spriteCache = []; // (temp)\n    const charContainer = new PIXI.Container();\n\n    this.container.addChild(charContainer);\n\n    // the input text\n    this._inputText = text;\n\n    // list of rendered sprites (temp)\n    const sprites = [];\n\n    // states\n    let lastWidth = 0;\n    let lastHeight = 0;\n\n    this.dirtyText = true;\n    this.dirtyStyle = true;\n    this.dirtyRender = true;\n\n    // dictionary for line data\n    const lineWidthData = [];\n    const lineHeightData = [];\n    const lineFontSizeData = [];\n    const lineAlignmentData = [];\n    let renderCount = 0;\n    let charCount = 0;\n\n    // ellipsis caches (not nessesary when no sprites)\n    const lineEllipsisData = [];\n    const lineHasEllipsis = [];\n\n    // ROUGH TEMP RENDER (with sprites)\n    this.render = function ()\n    {\n        let yOffset = 0;\n        let xOffset = 0;\n        let currentLine = -1;\n        let i;\n\n        if (spriteCache.length > renderCount)\n        {\n            for (i = renderCount; i < spriteCache.length; i++)\n            {\n                const removeSprite = spriteCache[i];\n\n                if (removeSprite)\n                { removeSprite.visible = false; }\n            }\n        }\n\n        let char; let lineWidth = 0; let lineHeight = 0; let\n            maxLineWidth = 0;\n\n        for (i = 0; i < renderCount; i++)\n        {\n            char = renderChars[i];\n\n            // get line data\n            if (currentLine !== char.lineIndex)\n            {\n                currentLine = char.lineIndex;\n                lineWidth = lineWidthData[currentLine];\n                lineHeight = lineHeightData[currentLine];\n                yOffset += lineHeight;\n\n                switch (lineAlignmentData[currentLine])\n                {\n                    case 'right': xOffset = this._width - lineWidth; break;\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\n                    default: xOffset = 0;\n                }\n\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\n            }\n\n            // no reason to render a blank space or 0x0 letters (no texture created)\n            if (!char.data.texture || char.space || char.newline)\n            {\n                if (spriteCache[i])\n                { spriteCache[i].visible = false; }\n                continue;\n            }\n\n            // add new sprite\n            const tex = char.data.texture; let\n                sprite = spriteCache[i];\n\n            if (!sprite)\n            {\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\n                sprite.anchor.set(0.5);\n            }\n            else\n            { sprite.texture = tex; }\n\n            sprite.visible = true;\n            sprite.x = char.x + xOffset + tex.width * 0.5;\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\n\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\n            sprite.rotation = float(char.style.rotation, 0);\n            sprite.skew.x = float(char.style.skew, 0);\n\n            if (!sprite.parent)\n            { charContainer.addChild(sprite); }\n        }\n\n        if (autoWidth) this.width = maxLineWidth;\n        if (autoHeight) this.height = yOffset;\n    };\n\n    // updates the renderChar array and position chars for render\n    this.prepareForRender = function ()\n    {\n        const pos = new PIXI.Point();\n        let wordIndex = 0;\n        let lineHeight = 0;\n        let lineFontSize = 0;\n        let lineIndex = 0;\n        let lineAlignment = defaultStyle.align;\n        let lastSpaceIndex = -1;\n        let lastSpaceLineWidth = 0;\n        let textHeight = 0;\n        let forceNewline = false;\n        let style;\n        let renderIndex = 0;\n        let ellipsis = false;\n        let lineFull = false;\n        let i;\n\n        for (i = 0; i < charCount; i++)\n        {\n            const char = chars[i]; const\n                lastChar = chars[i - 1];\n\n            style = char.style;\n\n            // lineheight\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\n\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height)\n            {\n                if (style.overflowY === 'hidden')\n                { break; }\n            }\n\n            if (char.newline)\n            { lineFull = false; }\n\n            // set word index\n            if (char.space || char.newline) wordIndex++;\n            else char.wordIndex = wordIndex;\n\n            // textheight\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\n\n            // lineindex\n            char.lineIndex = lineIndex;\n\n            // lineAlignment\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\n\n            if (char.space)\n            {\n                lastSpaceIndex = i;\n                lastSpaceLineWidth = pos.x;\n            }\n\n            const size = Math.round(char.data.width) + float(style.letterSpacing, 0);\n\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width)\n            {\n                if (style.wrap)\n                {\n                    if (char.space)\n                    {\n                        forceNewline = true;\n                    }\n                    else if (lastSpaceIndex !== -1)\n                    {\n                        renderIndex -= i - lastSpaceIndex;\n                        i = lastSpaceIndex - 1;\n                        lastSpaceIndex = -1;\n                        pos.x = lastSpaceLineWidth;\n                        forceNewline = true;\n                        continue;\n                    }\n                    else if (style.breakWords)\n                    {\n                        if (lastChar)\n                        {\n                            pos.x -= lastChar.style.letterSpacing;\n                            pos.x -= lastChar.data.width;\n                        }\n                        i -= 2;\n                        renderIndex--;\n                        forceNewline = true;\n                        continue;\n                    }\n                }\n\n                if (style.overflowX == 'hidden' && !forceNewline)\n                {\n                    lineFull = true;\n                    if (style.ellipsis && !ellipsis)\n                    {\n                        ellipsis = true;\n                        let ellipsisData = lineEllipsisData[lineIndex];\n\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\n                        for (let d = 0; d < 3; d++)\n                        {\n                            const dot = ellipsisData[d];\n\n                            dot.value = '.';\n                            dot.data = atlas.getCharObject(dot.value, style);\n                            dot.style = style;\n                            dot.x = pos.x + char.data.xOffset;\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\n                            dot.lineIndex = lineIndex;\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\n                            renderChars[renderIndex] = dot;\n                            renderIndex++;\n                        }\n                    }\n                }\n            }\n\n            // Update position and add to renderchars\n            if (!lineFull)\n            {\n                // position\n                char.x = pos.x + char.data.xOffset;\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\n                pos.x += size;\n                renderChars[renderIndex] = char;\n                renderIndex++;\n            }\n\n            // new line\n            if (forceNewline || char.newline || i === charCount - 1)\n            {\n                if (lastChar)\n                {\n                    pos.x -= lastChar.style.letterSpacing;\n                }\n\n                if (char.space)\n                {\n                    pos.x -= char.data.width;\n                    pos.x -= float(style.letterSpacing, 0);\n                }\n\n                textHeight += lineHeight;\n                lineHasEllipsis[lineIndex] = ellipsis;\n                lineWidthData[lineIndex] = pos.x;\n                lineHeightData[lineIndex] = lineHeight;\n                lineFontSizeData[lineIndex] = lineFontSize;\n                lineAlignmentData[lineIndex] = lineAlignment;\n\n                // reset line vaules\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\n                lineAlignment = defaultStyle.align;\n                lastSpaceIndex = -1;\n                lineIndex++;\n                forceNewline = lineFull = ellipsis = false;\n            }\n        }\n\n        renderCount = renderIndex;\n    };\n\n    // phrases the input text and prepares the char array\n    const closeTags = ['</i>', '</b>', '</font>', '</center>'];\n\n    this.processInputText = function ()\n    {\n        const styleTree = [defaultStyle];\n        let charIndex = 0;\n        let inputTextIndex = 0;\n        const inputArray = Array.from(this._inputText);\n\n        for (let i = 0; i < inputArray.length; i++)\n        {\n            style = styleTree[styleTree.length - 1];\n            let c = inputArray[i];\n            const charcode = c.charCodeAt(0);\n            let newline = false;\n            let space = false;\n            let emoji = false;\n\n            // Extract Tags\n            if ((/(?:\\r\\n|\\r|\\n)/).test(c))\n            { newline = true; }\n            else if ((/(\\s)/).test(c))\n            { space = true; }\n            else if (options.allowTags && c === '<')\n            {\n                let tag = this._inputText.substring(inputTextIndex);\n\n                tag = tag.slice(0, tag.indexOf('>') + 1);\n                let FoundTag = true;\n\n                if (tag.length)\n                {\n                    if (tag === '<i>')\n                    {\n                        style = style.clone();\n                        style.fontStyle = 'italic';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<b>')\n                    {\n                        style = style.clone();\n                        style.fontWeight = 'bold';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<center>')\n                    {\n                        style = style.clone();\n                        style.align = 'center';\n                        styleTree.push(style);\n                    }\n                    else if (closeTags.indexOf(tag) !== -1)\n                    {\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\n                    }\n                    else if (tag.startsWith('<font '))\n                    {\n                        const regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g;\n                        let match = regex.exec(tag);\n\n                        if (match !== null)\n                        {\n                            style = style.clone();\n                            while (match !== null)\n                            {\n                                switch (match[1])\n                                {\n                                    case 'family': match[1] = 'fontFamily'; break;\n                                    case 'size': match[1] = 'fontSize'; break;\n                                    case 'weight': match[1] = 'fontWeight'; break;\n                                    case 'style': match[1] = 'fontStyle'; break;\n                                    case 'valign': match[1] = 'verticalAlign'; break;\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\n                                    case 'color': match[1] = 'tint'; break;\n                                }\n                                style[match[1]] = match[4];\n                                match = regex.exec(tag);\n                            }\n                            styleTree.push(style);\n                        }\n                    }\n                    else\n                    {\n                        FoundTag = false;\n                    }\n\n                    if (FoundTag)\n                    {\n                        inputTextIndex += tag.length;\n                        i += tag.length - 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                // detect emoji\n                let emojiMatch = emojiRegex().exec(c);\n\n                if (emojiMatch !== null)\n                {\n                    i--; c = '';\n                    while (emojiMatch !== null && c !== emojiMatch[0])\n                    {\n                        i++;\n                        c = emojiMatch[0];\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\n                    }\n                    emoji = true;\n                }\n            }\n\n            // Prepare DynamicChar object\n            let char = chars[charIndex];\n\n            if (!char)\n            {\n                char = new DynamicChar();\n                chars[charIndex] = char;\n            }\n            char.style = style;\n\n            if (emoji)\n            {\n                char.style = char.style.clone();\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\n            }\n\n            char.data = atlas.getCharObject(c, char.style);\n            char.value = c;\n            char.space = space;\n            char.newline = newline;\n            char.emoji = emoji;\n\n            charIndex++;\n            inputTextIndex += c.length;\n        }\n        charCount = charIndex;\n    };\n\n    // PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\n    this.lazyUpdate = null;\n    const self = this;\n\n    this.update = function ()\n    {\n        if (self.lazyUpdate !== null) return;\n        self.lazyUpdate = setTimeout(function ()\n        {\n            // console.log(\"UPDATING TEXT\");\n            const dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\n\n            if (self.dirtyText || self.dirtyStyle)\n            {\n                self.dirtyText = self.dirtyStyle = false;\n                self.dirtyRender = true; // force render after textchange\n                self.processInputText();\n            }\n\n            if (dirtySize || self.dirtyRender)\n            {\n                self.dirtyRender = false;\n                lastWidth = self._width;\n                lastHeight = self.height;\n                self.prepareForRender();\n                self.render();\n            }\n            self.lazyUpdate = null;\n        }, 0);\n    };\n}\n\nDynamicText.prototype = Object.create(Widget.prototype);\nDynamicText.prototype.constructor = DynamicText;\n\nexport { DynamicText };\n\nDynamicText.settings = {\n    debugSpriteSheet: false,\n    defaultEmojiFont: 'Segoe UI Emoji', // force one font family for emojis so we dont rerender them multiple times\n};\n\nObject.defineProperties(DynamicText.prototype, {\n    value: {\n        get()\n        {\n            return this._inputText;\n        },\n        set(val)\n        {\n            if (val !== this._inputText)\n            {\n                this._inputText = val;\n                this.dirtyText = true;\n                this.update();\n                // console.log(\"Updating Text to: \" + val);\n            }\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n    style: {\n        get()\n        {\n            return this._style;\n        },\n        set(val)\n        {\n            // get a clean default style\n            const style = new DynamicTextStyle(this);\n\n            // merge it with new style\n            style.merge(val);\n\n            // merge it onto this default style\n            this._style.merge(style);\n\n            this.dirtyStyle = true;\n            this.update();\n        },\n    },\n});\n\n// Atlas\nconst metricsCanvas = document.createElement('canvas');\nconst metricsContext = metricsCanvas.getContext('2d');\n\nmetricsCanvas.width = 100;\nmetricsCanvas.height = 100;\n\nvar DynamicAtlas = function (padding)\n{\n    const res = devicePixelRatio || 1;\n    let canvas;\n    let context;\n    let objects;\n    let newObjects = [];\n    let baseTexture;\n    let lazyTimeout;\n    let rootNode;\n    const canvasList = [];\n    let atlasdim;\n    const startdim = 256;\n    const maxdim = 2048;\n\n    var AtlasNode = function (w, h)\n    {\n        const children = this.children = [];\n\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\n        this.data = null;\n\n        this.insert = function (width, height, obj)\n        {\n            if (children.length > 0)\n            {\n                const newNode = children[0].insert(width, height, obj);\n\n                if (newNode !== null) return newNode;\n\n                return children[1].insert(width, height, obj);\n            }\n            if (this.data !== null) return null;\n            if (width > this.rect.width || height > this.rect.height) return null;\n            if (width == this.rect.width && height == this.rect.height)\n            {\n                this.data = obj;\n                obj.frame.x = this.rect.x;\n                obj.frame.y = this.rect.y;\n\n                return this;\n            }\n\n            children.push(new AtlasNode());\n            children.push(new AtlasNode());\n\n            const dw = this.rect.width - width;\n            const dh = this.rect.height - height;\n\n            if (dw > dh)\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\n            }\n            else\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\n            }\n\n            return children[0].insert(width, height, obj);\n        };\n    };\n\n    const addCanvas = function ()\n    {\n        // create new canvas\n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvasList.push(canvas);\n\n        // reset dimentions\n        atlasdim = startdim;\n        canvas.width = canvas.height = atlasdim;\n        rootNode = new AtlasNode(atlasdim, atlasdim);\n\n        // reset array with canvas objects and create new atlas\n        objects = [];\n\n        // set new basetexture\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\n        baseTexture.mipmap = false; // if not, pixi bug resizing POW2\n        baseTexture.resolution = 1; // todo: support all resolutions\n        baseTexture.update();\n\n        // Debug Spritesheet\n        if (DynamicText.settings.debugSpriteSheet)\n        {\n            canvas.className = 'DynamicText_SpriteSheet';\n            document.body.appendChild(canvas);\n        }\n    };\n\n    this.fontFamilyCache = {};\n\n    const drawObjects = function (arr, resized)\n    {\n        if (resized) baseTexture.update();\n        for (let i = 0; i < arr.length; i++)\n        { drawObject(arr[i]); }\n    };\n\n    var drawObject = function (obj)\n    {\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\n        obj.texture.frame = obj.frame;\n        obj.texture.update();\n    };\n\n    this.getCharObject = function (char, style)\n    {\n        const font = style.ctxFont();\n\n        // create new cache for fontFamily\n        let familyCache = this.fontFamilyCache[font];\n\n        if (!familyCache)\n        {\n            familyCache = {};\n            this.fontFamilyCache[font] = familyCache;\n        }\n\n        // get char data\n        const key = style.ctxKey(char);\n        let obj = familyCache[key];\n\n        if (!obj)\n        {\n            // create char object\n            const metrics = generateCharData(char, style);\n\n            // temp resize if doesnt fit (not nesseary when we dont need to generate textures)\n            if (metrics.rect)\n            {\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height)\n                {\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\n                    baseTexture.update();\n                }\n            }\n\n            // todo: cleanup when we know whats needed\n            obj = {\n                metrics,\n                font,\n                value: char,\n                frame: metrics.rect,\n                baseTexture: metrics.rect ? baseTexture : null,\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\n                yOffset: metrics.descent || 0,\n                width: metrics.width || 0,\n                lineHeight: metrics.lineHeight || 0,\n                _cache: metrics.canvas,\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null, // temp texture\n            };\n\n            // add to collections\n            familyCache[key] = obj;\n\n            // add to atlas if visible char\n            if (metrics.rect)\n            {\n                newObjects.push(obj);\n\n                if (lazyTimeout === undefined)\n                {\n                    lazyTimeout = setTimeout(function ()\n                    {\n                        addNewObjects();\n                        lazyTimeout = undefined;\n                    }, 0);\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    const compareFunction = function (a, b)\n    {\n        if (a.frame.height < b.frame.height)\n        { return 1; }\n\n        if (a.frame.height > b.frame.height)\n        { return -1; }\n\n        if (a.frame.width < b.frame.width)\n        { return 1; }\n\n        if (a.frame.width > b.frame.width)\n        { return -1; }\n\n        return 0;\n    };\n\n    var addNewObjects = function ()\n    {\n        newObjects.sort(compareFunction);\n        let _resized = false;\n        let _newcanvas = false;\n\n        for (let i = 0; i < newObjects.length; i++)\n        {\n            const obj = newObjects[i];\n            const node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n\n            if (node !== null)\n            {\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; // update basetexture if new canvas was created (temp)\n                objects.push(obj);\n                continue;\n            }\n\n            // step one back (so it will be added after resize/new canvas)\n            i--;\n\n            if (atlasdim < maxdim)\n            {\n                _resized = true;\n                resizeCanvas(atlasdim * 2);\n                continue;\n            }\n\n            // close current spritesheet and make a new one\n            drawObjects(objects, _resized);\n            addCanvas();\n            _newcanvas = true;\n            _resized = false;\n        }\n\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\n        newObjects = [];\n    };\n\n    var resizeCanvas = function (dim)\n    {\n        canvas.width = canvas.height = atlasdim = dim;\n\n        rootNode = new AtlasNode(dim, dim);\n        objects.sort(compareFunction);\n\n        for (let i = 0; i < objects.length; i++)\n        {\n            const obj = objects[i];\n\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n        }\n    };\n\n    var generateCharData = function (char, style)\n    {\n        const fontSize = Math.max(1, int(style.fontSize, 26));\n        const lineHeight = fontSize * 1.25;\n\n        // Start our returnobject\n        const data = {\n            fontSize,\n            lineHeight,\n            width: 0,\n        };\n\n        // Return if newline\n        if (!char || (/(?:\\r\\n|\\r|\\n)/).test(char))\n        { return data; }\n\n        // Ctx font string\n        const font = style.ctxFont();\n\n        metricsContext.font = font;\n\n        // Get char width\n        data.width = Math.round(metricsContext.measureText(char).width);\n\n        // Return if char = space\n        if ((/(\\s)/).test(char)) return data;\n\n        // set canvas size (with padding so we can messure)\n        const paddingY = Math.round(fontSize * 0.7); const\n            paddingX = Math.max(5, Math.round(fontSize * 0.7));\n\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\n        metricsCanvas.height = 1.5 * fontSize;\n        const w = metricsCanvas.width; const h = metricsCanvas.height; const\n            baseline = (h / 2) + (paddingY * 0.5);\n\n        // set font again after resize\n        metricsContext.font = font;\n\n        // make sure canvas is clean\n        metricsContext.clearRect(0, 0, w, h);\n\n        // save clean state with font\n        metricsContext.save();\n\n        // convert shadow string to shadow data\n        const shadowData = function (str)\n        {\n            const data = str.trim().split(' ');\n\n            return {\n                color: string(data[0], '#000000'),\n                alpha: float(data[1], 0.5),\n                xOffset: float(data[2], 3),\n                yOffset: float(data[3], 3),\n                blur: float(data[4], 5),\n            };\n        };\n\n        // convert fill string to fill data\n        const fillData = function (str)\n        {\n            const data = str.trim().split(' ');\n            const c = string(data[0], '#FFFFFF');\n            const a = float(data[1], 1);\n\n            return {\n                color: c,\n                alpha: a,\n                position: float(data[2], -1),\n                rgba: hexToRgba(c, a),\n            };\n        };\n\n        // create fill style from fill string\n        const getFillStyle = function (str)\n        {\n            const fills = str.split(',').filter(function (s) { return s !== ''; }); let\n                i;\n\n            // convert to fill data\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\n\n            switch (fills.length)\n            {\n                case 0: return 'white';\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || '#FFFFFF';\n                default:\n                    // make gradient\n                    try\n                    {\n                        const gradEnd = baseline + lineHeight - fontSize;\n                        const gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\n\n                        for (i = 0; i < fills.length; i++)\n                        { gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color); }\n\n                        return gradient;\n                    }\n                    catch (e)\n                    {\n                        return '#FFFFFF';\n                    }\n            }\n        };\n\n        // function to draw shadows\n        const drawShadows = function (shadowString, stroke)\n        {\n            const shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\n\n            if (shadows.length)\n            {\n                for (let i = 0; i < shadows.length; i++)\n                {\n                    const s = shadowData(shadows[i]);\n\n                    metricsContext.globalAlpha = s.alpha;\n                    metricsContext.shadowColor = s.color;\n                    metricsContext.shadowOffsetX = s.xOffset + w;\n                    metricsContext.shadowOffsetY = s.yOffset;\n                    metricsContext.shadowBlur = s.blur;\n\n                    if (stroke)\n                    {\n                        metricsContext.lineWidth = style.stroke;\n                        metricsContext.strokeText(char, paddingX - w, baseline);\n                    }\n                    else metricsContext.fillText(char, paddingX - w, baseline);\n                }\n                metricsContext.restore();\n            }\n        };\n\n        // draw text shadows\n        if (style.shadow.length)\n        { drawShadows(style.shadow, false); }\n\n        // draw stroke shadows\n        if (style.stroke && style.strokeShadow.length)\n        {\n            drawShadows(style.strokeShadow, true);\n        }\n\n        // draw text\n        metricsContext.fillStyle = getFillStyle(string(style.fill, '#000000'));\n        metricsContext.fillText(char, paddingX, baseline);\n        metricsContext.restore();\n\n        // draw stroke\n        if (style.stroke)\n        {\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, '#000000'));\n            metricsContext.lineWidth = style.stroke;\n            metricsContext.strokeText(char, paddingX, baseline);\n            metricsContext.restore();\n        }\n\n        // begin messuring\n        const pixelData = metricsContext.getImageData(0, 0, w, h).data;\n\n        let i = 3;\n        const line = w * 4;\n        const len = pixelData.length;\n\n        // scanline on alpha\n        while (i < len && !pixelData[i]) { i += 4; }\n        const ascent = (i / line) | 0;\n\n        if (i < len)\n        {\n            // rev scanline on alpha\n            i = len - 1;\n            while (i > 0 && !pixelData[i]) { i -= 4; }\n            const descent = (i / line) | 0;\n\n            // left to right scanline on alpha\n            for (i = 3; i < len && !pixelData[i];)\n            {\n                i += line;\n                if (i >= len) { i = (i - len) + 4; }\n            }\n            const minx = ((i % line) / 4) | 0;\n\n            // right to left scanline on alpha\n            let step = 1;\n\n            for (i = len - 1; i >= 0 && !pixelData[i];)\n            {\n                i -= line;\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\n            }\n            const maxx = ((i % line) / 4) + 1 | 0;\n\n            // set font metrics\n            data.ascent = Math.round(baseline - ascent);\n            data.descent = Math.round(descent - baseline);\n            data.height = 1 + Math.round(descent - ascent);\n            data.bounds = {\n                minx: minx - paddingX,\n                maxx: maxx - paddingX,\n                miny: 0,\n                maxy: descent - ascent,\n            };\n            data.rect = {\n                x: data.bounds.minx,\n                y: -data.ascent - 2,\n                width: data.bounds.maxx - data.bounds.minx + 2,\n                height: data.ascent + data.descent + 4,\n            };\n\n            // cache (for fast rearrange later)\n            data.canvas = document.createElement('canvas');\n            data.canvas.width = data.rect.width;\n            data.canvas.height = data.rect.height;\n            const c = data.canvas.getContext('2d');\n\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\n\n            // reset rect position\n            data.rect.x = data.rect.y = 0;\n        }\n\n        return data;\n    };\n\n    addCanvas();\n};\n\n// helper function for float or default\nfunction float(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseFloat(val);\n}\n\n// helper function for int or default\nfunction int(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseInt(val);\n}\n\n// helper function for string or default\nfunction string(val, def)\n{\n    if (typeof val === 'string' && val.length) return val;\n\n    return def;\n}\n\n// helper function to convert string hex to int or default\nfunction hexToInt(str, def)\n{\n    if (typeof str === 'number')\n    { return str; }\n\n    const result = parseInt(str.replace('#', '0x'));\n\n    if (isNaN(result)) return def;\n\n    return result;\n}\n\n// helper function to convert hex to rgba\nfunction hexToRgba(hex, alpha)\n{\n    const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n    alpha = float(alpha, 1);\n\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},${alpha})` : false;\n}\n\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","function EaseBase()\n{\n    this.getPosition = function (p)\n    {\n        return p;\n    };\n}\n\nEaseBase.prototype.constructor = EaseBase;\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","export const Ease = {};\nimport { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst HALF_PI = Math.PI * 0.5;\n\nfunction create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\n// Liear\nEase.Linear = new EaseBase();\n\n// Exponetial Eases\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Ease.Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\n","import * as PIXI from 'pixi.js';\n\nexport class MouseScrollEvent\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    private obj: any;\n\n    constructor(obj: any, preventDefault: boolean)\n    {\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.obj = obj;\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseScrollImpl = (e): void =>\n    {\n        const { obj, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(obj, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n\n    stopEvent(): void\n    {\n        const { obj, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener('mouseover', onHoverImpl);\n        obj.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    startEvent(): void\n    {\n        const { obj, onHoverImpl, onMouseOutImpl } = this;\n\n        obj.contentContainer.on('mouseover', onHoverImpl);\n        obj.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { ClickManager } from './ClickManager';\nimport { DragManager } from './DragManager';\nimport { InputController } from './InputController';\nimport { MouseScrollEvent } from './MouseScrollEvent';\n\nexport const Interaction = {\n    ClickManager,\n    DragManager,\n    InputController,\n    MouseScrollEvent,\n};\n\nexport default Interaction;\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Widget } from './Widget';\nimport { DragManager } from './event/DragManager';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n* An UI Slider, the default width/height is 90%\n*\n* @class\n* @extends Widget\n* @memberof PIXI.UI\n* @param options {Object} Slider settings\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n* @param [options.vertical=false] {boolean} Direction of the slider\n* @param [options.value=0] {number} value of the slider\n* @param [options.minValue=0] {number} minimum value\n* @param [options.maxValue=100] {number} max value\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\n*/\nexport class Slider extends Widget\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    constructor(options: ISliderOptions)\n    {\n        super(0, 0);\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.contentContainer.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.contentContainer.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.contentContainer.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragManager(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragManager(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n}\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollWidget } from './ScrollWidget';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollWidget;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PIXI.UI.Slider\n * @memberof PIXI.UI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollWidget;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { FocusableWidget, IInputBaseOptions } from './FocusableWidget';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { DragManager } from './event/DragManager';\nimport { ScrollWidget } from './ScrollWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions } from './layout-options';\n\n/**\n * @namespace PUXI\n * @interface\n */\ninterface ITextInputOptions extends IInputBaseOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: PIXI.Container;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\nfunction initMockDOMInput(): void\n{\n    // create temp input (for mobile keyboard)\n    if (typeof mockDOMInput === 'undefined')\n    {\n        mockDOMInput = document.createElement('INPUT');\n        mockDOMInput.setAttribute('type', 'text');\n        mockDOMInput.setAttribute('id', '_pui_tempInput');\n        mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n        document.body.appendChild(mockDOMInput);\n    }\n}\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n */\nexport class TextInput extends FocusableWidget\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollWidget;\n\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    /**\n     * @param {PUXI.ITextInputOptions} options\n     * @param {string} options.value Text content\n     * @param {boolean} [options.multiLine=false] Multiline input\n     * @param options.style {PIXI.TextStyle} Style used for the Text\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n     * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n     * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n     * @param [options.width=150] {Number} width of input\n     * @param [options.height=20] {Number} height of input\n     * @param [options.padding=3] {Number} input padding\n     * @param [options.paddingTop=0] {Number} input padding\n     * @param [options.paddingBottom=0] {Number} input padding\n     * @param [options.paddingLeft=0] {Number} input padding\n     * @param [options.paddingRight=0] {Number} input padding\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.maxLength=0] {Number} 0 = unlimited\n     * @param [options.caretWidth=1] {Number} width of the caret\n     * @param [options.lineHeight=0] {Number} 0 = inherit from text\n     */\n    constructor(options: ITextInputOptions)\n    {\n        super(options);\n        initMockDOMInput();\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollWidget({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        }).setPadding(\n            paddingLeft || 3,\n            paddingTop || 3,\n            paddingRight || 3,\n            paddingBottom || 3,\n        ).setLayoutOptions(\n            new LayoutOptions(\n                LayoutOptions.FILL_PARENT,\n                LayoutOptions.FILL_PARENT,\n            ),\n        ) as ScrollWidget;\n\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragManager(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._focused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer.insetContainer;\n    }\n\n    update(): void\n    {\n        if (this.width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    keyDownEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        this.emit('keydown', e);\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._focused)\n        {\n            super.focus();\n\n            const l = `${this.contentContainer.worldTransform.tx}px`;\n            const t = `${this.contentContainer.worldTransform.ty}px`;\n            const h = `${this.contentContainer.height}px`;\n            const w = `${this.contentContainer.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.keyDownEvent, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._focused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.keyDownEvent);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragManager } from './event/DragManager';\nimport { MouseScrollEvent } from './event/MouseScrollEvent';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\nimport { WidgetGroup } from './WidgetGroup';\n\n/**\n * @namespace PUXI\n * @interface\n */\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * `ScrollWidget` masks its contents to its layout bounds and translates\n * its children when scrolling.\n *\n * @namespace PUXI\n * @class\n * @extends PUXI.InteractiveGroup\n */\nexport class ScrollWidget extends InteractiveGroup\n{\n    private mask: PIXI.Graphics;\n    private innerContainer: WidgetGroup;\n    private innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private lastWidth: number;\n    private lastHeight: number;\n\n    protected scrollPosition: PIXI.Point;\n    protected scrollVelocity: PIXI.Point;\n    protected targetPosition: PIXI.Point;\n    protected lastPosition: PIXI.Point;\n    protected stop: boolean;\n\n    /**\n     * @param {PUXI.IScrollingContainerOptions} options\n     * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n     * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n     * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n     * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n     * @param [options.width=0] {Number|String} container width\n     * @param [options.height=0] {Number} container height\n     * @param [options.radius=0] {Number} corner radius of clipping mask\n     * @param [options.expandMask=0] {Number} mask expand (px)\n     * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n     * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n     */\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super();\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new InteractiveGroup();\n        this.innerBounds = new PIXI.Rectangle();\n        super.addChild(this.innerContainer);\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.scrollPosition = new PIXI.Point();\n        this.scrollVelocity = new PIXI.Point();\n        this.targetPosition = new PIXI.Point();\n        this.lastPosition = new PIXI.Point();\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n        this.initScrolling();\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    update(): void\n    {\n        super.update();\n\n        if (this.lastWidth !== this.width || this.lastHeight !== this.height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n                this.mask.drawRect(-of, -of, this.width + of, this.height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this.width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n\n            this.lastWidth = this.width;\n            this.lastHeight = this.height;\n        }\n\n        this.setScrollPosition();\n    }\n\n    addChild(...newChildren: Widget[]): Widget\n    {\n        for (let i = 0; i < newChildren.length; i++)\n        {\n            this.innerContainer.addChild(newChildren[i]);\n        }\n\n        this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n\n        return this;\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    initScrolling(): void\n    {\n        const container = this.innerContainer.insetContainer;\n        const containerStart = new PIXI.Point();\n        const {\n            scrollPosition,\n            targetPosition,\n        } = this;\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag = new DragManager(this);\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    containerStart.copyFrom(container.position);\n                    scrollPosition.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n                    this.emit('dragStart', e);\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragMove = (e, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = containerStart.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = containerStart.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('dragEnd', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new MouseScrollEvent(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n\n    forcePctPosition = (direction: string, pct: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        if (this.scrollX && direction === 'x')\n        {\n            container.position[direction] = -((bounds.width - this.width) * pct);\n        }\n        if (this.scrollY && direction === 'y')\n        {\n            container.position[direction] = -((bounds.height - this.height) * pct);\n        }\n\n        this.scrollPosition[direction] = this.targetPosition[direction] = container.position[direction];\n    };\n\n    focusPosition = (pos: PIXI.Point): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        let dif;\n\n        if (this.scrollX)\n        {\n            const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n            if (x + container.x > this.width)\n            {\n                dif = x - this.width;\n                container.x = -dif;\n            }\n            else if (x + container.x < 0)\n            {\n                dif = x + container.x;\n                container.x -= dif;\n            }\n        }\n        if (this.scrollY)\n        {\n            const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n            if (y + container.y > this.height)\n            {\n                dif = y - this.height;\n                container.y = -dif;\n            }\n            else if (y + container.y < 0)\n            {\n                dif = y + container.y;\n                container.y -= dif;\n            }\n        }\n\n        this.lastPosition.copyFrom(container.position);\n        this.targetPosition.copyFrom(container.position);\n        this.scrollPosition.copyFrom(container.position);\n\n        this.updateScrollBars();\n    };\n\n    setScrollPosition = (velocity?: PIXI.Point): void =>\n    {\n        if (velocity)\n        {\n            this.scrollVelocity.copyFrom(velocity);\n        }\n\n        const container = this.innerContainer.insetContainer;\n\n        if (!this.animating)\n        {\n            this.animating = true;\n\n            this.lastPosition.copyFrom(container.position);\n            this.targetPosition.copyFrom(container.position);\n\n            Ticker.on('update', this.updateScrollPosition, this);\n        }\n    };\n\n    updateScrollPosition = (delta: number): void =>\n    {\n        this.stop = true;\n\n        if (this.scrollX)\n        {\n            this.updateDirection('x', delta);\n        }\n        if (this.scrollY)\n        {\n            this.updateDirection('y', delta);\n        }\n\n        if (stop)\n        {\n            Ticker.removeListener('update', this.updateScrollPosition);\n            this.animating = false;\n        }\n    };\n\n    updateDirection = (direction: string, delta: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const {\n            scrollPosition,\n            scrollVelocity,\n            targetPosition,\n            lastPosition,\n        } = this;\n        const container = this.innerContainer.insetContainer;\n\n        let min;\n\n        if (direction === 'y')\n        {\n            min = Math.round(Math.min(0, this.height - bounds.height));\n        }\n        else\n        {\n            min = Math.round(Math.min(0, this.width - bounds.width));\n        }\n\n        if (!this.scrolling && Math.round(scrollVelocity[direction]) !== 0)\n        {\n            targetPosition[direction] += scrollVelocity[direction];\n            scrollVelocity[direction] = Helpers.Lerp(\n                scrollVelocity[direction],\n                0,\n                (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n            if (targetPosition[direction] > 0)\n            {\n                targetPosition[direction] = 0;\n            }\n            else if (targetPosition[direction] < min)\n            {\n                targetPosition[direction] = min;\n            }\n        }\n\n        if (!this.scrolling\n            && Math.round(scrollVelocity[direction]) === 0\n            && (container[direction] > 0\n            || container[direction] < min))\n        {\n            const target = this.scrollPosition[direction] > 0 ? 0 : min;\n\n            scrollPosition[direction] = Helpers.Lerp(\n                scrollPosition[direction],\n                target,\n                (40 - (30 * this.softness)) * delta);\n            this.stop = false;\n        }\n        else if (this.scrolling || Math.round(scrollVelocity[direction]) !== 0)\n        {\n            if (this.scrolling)\n            {\n                scrollVelocity[direction] = this.scrollPosition[direction] - lastPosition[direction];\n                lastPosition.copyFrom(scrollPosition);\n            }\n            if (targetPosition[direction] > 0)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n            }\n            else if (targetPosition[direction] < min)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n            }\n            else\n            {\n                scrollPosition[direction] = targetPosition[direction];\n            }\n\n            this.stop = false;\n        }\n\n        container.position[direction] = Math.round(scrollPosition[direction]);\n        this.updateScrollBars();\n    };\n}\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends InteractiveGroup\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n */\nexport class Sprite extends Widget\n{\n    private spriteDisplay: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        super();\n\n        this.spriteDisplay = new PIXI.Sprite(texture);\n        this.contentContainer.addChild(this.spriteDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.spriteDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.spriteDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @class\n * @memberof PUXI\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    widgetChildren: Widget[];\n\n    stage: any;\n\n    protected background: PIXI.Container;\n\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n    }\n\n    protected measureAndLayout(): void\n    {\n        if (this.background)\n        {\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++)\n        {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this.width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this.height : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this.width,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this.height,\n                widthMeasureMode,\n                heightMeasureMode);\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= this.width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= this.height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight(),\n                true);\n        }\n    }\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): void\n    {\n        if (this.background)\n        {\n            super.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            super.addChildAt(bg, 0);\n\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n    }\n\n    private update(widgets: Widget[]): void\n    {\n        for (let i = 0, j = widgets.length; i < j; i++)\n        {\n            const widget = widgets[i];\n\n            if (!widget.initialized)\n            {\n                widget.initialize();\n            }\n\n            this.update(widget.widgetChildren);\n            widget.stage = this;\n            widget.update();\n        }\n    }\n\n    render(renderer: PIXI.Renderer): void\n    {\n        this.update(this.widgetChildren);\n        super.render(renderer);\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n\n        this.measureAndLayout();\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.insetContainer);\n\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n\n        this.measureAndLayout();\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n\n        this.measureAndLayout();\n    }\n\n    get width(): number\n    {\n        return this.__width;\n    }\n    set width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get height(): number\n    {\n        return this.__height;\n    }\n    set height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @namespace PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n    protected noPercents: boolean;\n\n    constructor()\n    {\n        this.noPercents = false;\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    private measureChild(child: Widget,\n        maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode: number;\n        let widgetHeightMode: number;\n\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1))\n        {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1)\n        {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1)\n        {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1))\n        {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1)\n        {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1)\n        {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        child.measure(\n            maxWidgetWidth,\n            maxWidgetHeight,\n            widgetWidthMode,\n            widgetHeightMode,\n        );\n    }\n\n    measureStretch(lowerAnchor: number,\n        upperAnchor: number,\n        childDimen: number): number\n    {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1))\n        {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1)\n        {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1)\n        {\n            return upperAnchor;\n        }\n\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n\n    measureChildren(maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight,\n                MeasureMode.EXACTLY,\n                MeasureMode.EXACTLY);\n        }\n\n        let maxX = 0;\n        let maxY = 0;\n\n        const children = this.host.widgetChildren;\n\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = maxX;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = maxY;\n        }\n\n        this.measureChildren(this.measuredWidth, this.measuredHeight,\n            MeasureMode.EXACTLY,\n            MeasureMode.EXACTLY);\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n\n            if (anchorLeft > -1 && anchorLeft <= 1)\n            {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1)\n            {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1)\n            {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1)\n            {\n                anchorBottom *= parent.height;\n            }\n\n            let x = 0;\n            let y = 0;\n\n            if (childWidth !== 0)\n            {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n\n            if (childHeight !== 0)\n            {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n"],"names":["_items","DragDropController","add","item","event","_dragDropEventId","data","identifier","indexOf","push","[object Object]","object","index","i","length","splice","group","id","dragGroup","MeasureMode","this","reset","dirtyId","Insets","left","top","right","bottom","_currentItem","ALIGN","target","isEnabled","EventManager","includeHover","rightMouseButton","doubleClick","_super","_this","_includeHover","_rightMouseButton","_doubleClick","insetContainer","on","evMouseDown","onMouseDownImpl","onMouseOverImpl","onMouseOutImpl","bound","removeListener","evMouseUp","onMouseUpImpl","evMouseUpOutside","onMouseUpOutsideImpl","onMouseMoveImpl","_a","obj","_onMouseUp","_onMouseUpOutside","mouse","copyFrom","global","onPress","call","now","performance","time","onClick","originalEvent","preventDefault","offset","set","x","y","onMouseUpCommonImpl","dragThreshold","movementX","Math","abs","movementY","max","ishover","onHover","onMove","PIXI.Point","interactive","startEvent","__extends","Object","ClickManager","val","e","isBound","dragStart","stage","onDragMoveImpl","onDragEndImpl","lastCursor","dragOffset","isDragging","dragRestrictAxis","cancel","onDragStart","onDragMove","onDragEnd","DragManager","onDragStartImpl","mgr","defineProperty","get","EventBroker","MANAGER_MAP","keys","_i","click","dnd","PIXI.Container","contentContainer","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_elevation","tint","blendMode","PIXI.BLEND_MODES","NORMAL","draggable","droppable","Widget","_measuredWidth","_measuredHeight","width","height","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","l","t","r","b","_width","_height","background","lopt","layoutOptions","_eventBroker","alpha","bg","removeChild","PIXI.utils","string2hex","PIXI.Graphics","beginFill","drawRect","endFill","addChildAt","setBackground","_dropShadow","filters","DropShadowFilter","distance","UIObject","argumentsLength","arguments","parent","argumentLenght","container","initDraggable","eventBroker","stopEvent","initDroppable","realPosition","dragPosition","added","position","emit","getItem","setTimeout","onDrop","getEventItem","dropGroup","droppableReparent","self","toLocal","EventEmitter","tabGroups","checkGroups","checkGroupValues","InputController","registrer","tabIndex","tabGroup","groupName","items","_tabIndex","undefined","_tabGroup","sort","a","blur","clear","fireTab","focus","fireNext","firePrev","registrerCheckGroup","cb","name","checkGroup","value","checked","updateCheckGroupSelected","getCheckGroupSelectedValue","setCheckGroupSelectedValue","LayoutOptions","WRAP_CONTENT","markers","_marginLeft","_marginTop","_marginRight","_marginBottom","anchorLeft","anchorTop","anchorRight","anchorBottom","horizontalAlign","verticalAlign","NONE","anchor","FastLayoutOptions","DEFAULT_ANCHOR","clone","FastLayout","host","maxWidth","maxHeight","children","j","widget","DEFAULT","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","measure","measureWidthReach","measureHeightReach","measureChildFillers","dimen","parentMeasureMode","FILL_PARENT","parentWidthLimit","measuredWidth","childWidth","getMeasuredWidth","minr","parentHeightLimit","measuredHeight","childHeight","getMeasuredHeight","minb","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","options","which","_useTab","_usePrev","_useNext","__down","documentMouseDown","document","addEventListener","keyDownEvent","off","removeEventListener","_focused","FocusableWidget","clearEvents","bindEvents","text","textStyle","textDisplay","PIXI.Text","TextWidget","isHover","PIXI.TextStyle","textWidget","setLayoutOptions","CENTER_ANCHOR","buttonMode","setupClick","Button","clickEvent","over","isPressed","prototype","initialize","interactiveChildren","bounds","getLocalBounds","hitArea","PIXI.Rectangle","InteractiveGroup","checkmark","_checked","_value","checkgroup","CheckBox","change","clickMgr","_","DynamicTextStyle","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","atlas","ellipsis","getCharObject","letterSpacing","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","merge","param","_dirty","ctxKey","char","fill","shadow","stroke","strokeFill","strokeShadow","join","ctxFont","fontSize","fontWeight","fontStyle","fontFamily","constructor","defineProperties","dirtyStyle","update","scale","align","lineHeight","rotation","skew","wrap","breakWords","overflowX","overflowY","DynamicText","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","chars","renderChars","spriteCache","charContainer","PIXI","Container","_inputText","lastWidth","lastHeight","dirtyText","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","visible","lineWidth","maxLineWidth","texture","tex","sprite","Sprite","hexToInt","float","prepareForRender","pos","Point","lineFontSize","lineAlignment","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","lineFull","lastChar","size","round","ellipsisData","d","dot","parseFloat","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","c","charCodeAt","test","allowTags","tag","substring","slice","FoundTag","startsWith","regex","match","exec","emojiMatch","settings","defaultEmojiFont","lazyUpdate","dirtySize","create","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","AtlasNode","w","h","rect","Rectangle","insert","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","familyCache","key","metrics","generateCharData","minx","descent","Texture","addNewObjects","compareFunction","_resized","_newcanvas","resizeCanvas","dim","def","isNaN","parseInt","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","str","trim","split","color","string","fillData","rgba","hexToRgba","getFillStyle","fills","filter","s","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","fillStyle","strokeStyle","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","result","replace","hex","EaseBase","getPosition","p","ExponentialEase","power","easeIn","easeOut","pow","Ease","HALF_PI","PI","fn","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","MouseScrollEvent","onHoverImpl","Interaction","Helpers","Lerp","start","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","g","rgbToNumber","numberToRgb","floor","hexToRgb","m","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","tweens","active","onUpdate","_ready","callback","currentTime","CallbackItem","_tweenObjectId","_currentCallbackID","remove","to","ease","isColor","TweenItem","surfix","getSurfix","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","TweenObject","getTweenItem","tween","getCallbackItem","Tween","params","fromTo","paramsFrom","paramsTo","_update","_amt","_disabled","track","handle","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","pivot","Slider","soft","handleSize","maxPosition","localMousePosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","stopPropagation","trackDrag","scrollingContainer","autohide","_hidden","ScrollBar","innerContainer","forcePctPosition","_scrollBars","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","autoStart","_now","DeltaTime","Time","Ms","disabled","Ticker","shared","requestAnimationFrame","once","mockDOMInput","direction","pct","getInnerBounds","scrollX","scrollY","scrollPosition","targetPosition","dif","lastPosition","updateScrollBars","velocity","scrollVelocity","animating","updateScrollPosition","updateDirection","scrolling","softness","exp","mask","innerBounds","dragScrolling","radius","expandMask","boundCached","initScrolling","ScrollWidget","of","lineStyle","drawRoundedRect","setScrollPosition","newChildren","alignToContainer","force","containerStart","drag","scrollSpeed","desc","tweenTime","tweenEase","SortableList","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","altering","updatesettings","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","f","setting","minWidth","minHeight","sbr","sr","sbl","sb","sf","st","sl","stl","SliceSprite","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","_b","PIXI.extras","TilingSprite","PIXI.Texture","PIXI.Sprite","spriteDisplay","imageUrl","PIXI.BaseTexture","__width","__height","resize","Stage","MAX_DIMEN","widgets","renderer","measureAndLayout","rx","ry","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","_atEnd","multiLine","vrdd","hasSelection","de","textHeightPX","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","selectIndex","clipboardData","window","setData","copyEvent","getData","worldTransform","tx","ty","setAttribute","cacheAsBitmap","inputBlurEvent","keyUpEvent","pasteEvent","cutEvent","inputEvent","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","scrollToPosition","showCaret","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","_dirtyText","maxLength","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","setPadding","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","TextInput","mouseDown","timeSinceLast","selectWord","_lastWidth","updateText","whitespace","lastWordIndex","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","focusPosition","clearInterval","caretInterval","setInterval","tilePosition","tileScale","noPercents","AnchorLayout","child","maxParentWidth","maxParentHeight","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","LEFT","MIDDLE","RIGHT","TOP"],"mappings":"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"}