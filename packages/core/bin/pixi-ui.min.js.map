{"version":3,"file":"pixi-ui.min.js","sources":["../src/Interaction/DragEvent.ts","../src/Interaction/DragDropController.js","../src/layout-options/Align.ts","../src/layout-options/Insets.ts","../src/IMeasurable.ts","../src/layout-options/LayoutOptions.ts","../src/layout-options/AnchorLayoutOptions.ts","../src/layout-options/FastLayoutOptions.ts","../src/Interaction/InputController.ts","../src/Widget.ts","../src/Interaction/ClickEvent.ts","../src/layout-manager/FastLayout.ts","../src/WidgetGroup.ts","../src/InputBase.ts","../src/Button.ts","../src/InteractiveGroup.ts","../src/CheckBox.ts","../src/DynamicText/DynamicTextStyle.js","../src/DynamicText/DynamicChar.js","../src/DynamicText/DynamicText.js","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/Interaction/MouseScrollEvent.ts","../src/Interaction/Interaction.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/ScrollBar.ts","../src/Ticker.ts","../src/TextInput.ts","../src/ScrollingContainer.ts","../src/SortableList.ts","../src/SliceSprite.ts","../src/Sprite.ts","../src/Stage.ts","../src/Text.ts","../src/TilingSprite.ts","../src/layout-manager/AnchorLayout.ts"],"sourcesContent":["import * as PIXI from 'pixi.js';\n\nexport class DragEvent\n{\n    private bound: boolean;\n    private start: PIXI.Point;\n    private offset: PIXI.Point;\n    private mouse: PIXI.Point;\n\n    movementX: number;\n    movementY: number;\n\n    cancel: boolean;\n    dragging: boolean;\n\n    id: number;\n    obj: any;\n\n    constructor(obj: any)\n    {\n        this.bound = false;\n        this.start = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.mouse = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n        this.dragging = false;\n        this.id = 0;\n\n        this.obj = obj;\n        this.obj.interactive = true;\n\n        this.startEvent();\n    }\n\n    _onDragStart = (e): void =>\n    {\n        const {\n            obj,\n            start,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        this.id = e.data.identifier;\n        this.onPress.call(obj, e, true);\n\n        if (!this.bound)\n        {\n            start.copyFrom(e.data.global);\n\n            obj.stage.on('mousemove', _onDragMove);\n            obj.stage.on('touchmove', _onDragMove);\n            obj.stage.on('mouseup', _onDragEnd);\n            obj.stage.on('mouseupoutside', _onDragEnd);\n            obj.stage.on('touchend', _onDragEnd);\n            obj.stage.on('touchendoutside', _onDragEnd);\n            obj.stage.on('touchcancel', _onDragEnd);\n\n            this.bound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    _onDragMove = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            mouse,\n            offset,\n            start,\n            obj,\n        } = this;\n\n        mouse.copyFrom(e.data.global);\n        offset.set(mouse.x - start.x, mouse.y - start.y);\n\n        if (!this.dragging)\n        {\n            this.movementX = Math.abs(offset.x);\n            this.movementY = Math.abs(offset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < obj.dragThreshold)\n            {\n                return; // thresshold\n            }\n\n            if (obj.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (obj.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (obj.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this._onDragEnd(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart.call(obj, e);\n            this.dragging = true;\n        }\n\n        this.onDragMove.call(obj, e, offset);\n    };\n\n    _onDragEnd = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            obj,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n            obj.stage.removeListener('touchcancel', _onDragEnd);\n\n            this.dragging = false;\n            this.bound = false;\n\n            this.onDragEnd.call(obj, e);\n            this.onPress.call(obj, e, false);\n        }\n    };\n\n    stopEvent(): void\n    {\n        const {\n            obj,\n            _onDragStart,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener('mousedown', _onDragStart);\n        obj.contentContainer.removeListener('touchstart', _onDragStart);\n    }\n\n    startEvent(): void\n    {\n        const { obj, _onDragStart } = this;\n\n        obj.contentContainer.on('mousedown', _onDragStart);\n        obj.contentContainer.on('touchstart', _onDragStart);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onPress(e, isPressed: boolean): void\n    {\n        // Default onPress\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragStart(e): void\n    {\n        // Default onDragStart\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragMove(e, offset: PIXI.Point): void\n    {\n        // Default onDragMove\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragEnd(e): void\n    {\n        // Default onDragEnd\n    }\n}\n","const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @namespace PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","/**\n * @namespace PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","/**\n * @namespace PUXI\n * @enum\n */\nexport enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n */\nexport interface IMeasurable\n{\n    /**\n     * Measures its width & height based on the passed constraints.\n     *\n     * @param maxWidth\n     * @param maxHeight\n     * @param widthMode\n     * @param heightMode\n     */\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n\n    getMeasuredWidth(): number;\n\n    getMeasuredHeight(): number;\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @namespace PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n    public static MAX_DIMEN = 0xfffffff0;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public markers: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT)\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n\n        this.markers = {};\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(\n        anchorLeft: number,\n        anchorTop: number,\n        anchorRight: number,\n        anchorBottom: number,\n        horizontalAlign = ALIGN.NONE,\n        verticalAlign = ALIGN.NONE)\n    {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @namespace PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions\n{\n    static DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    static CENTER_ANCHOR = new PIXI.Point(0.5, 0.5);// fragile, shouldn't be modified\n\n    x: number;\n    y: number;\n    anchor: PIXI.Point;\n\n    constructor(width: number, height: number, x = 0, y = 0, anchor?: PIXI.Point)\n    {\n        super(width, height);\n\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         */\n        this.x = x;\n\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         */\n        this.y = y;\n\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         * @member {PIXI.Point}\n         * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n         */\n        this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\n","let _currentItem;\nconst tabGroups = {};\nconst checkGroups = {};\nconst checkGroupValues = {};\n\n/**\n * Handles focus-management in the scene graph.\n */\nexport const InputController = {\n    registrer(item, tabIndex, tabGroup): void\n    {\n        const groupName = tabGroup || 'default';\n\n        let items = tabGroups[groupName];\n\n        if (!items)\n        { items = tabGroups[groupName] = []; }\n\n        const i = items.indexOf(item);\n\n        if (i === -1)\n        {\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            item._tabGroup = items;\n            items.push(item);\n            items.sort(function sorter(a, b)\n            {\n                if (a._tabIndex < b._tabIndex)\n                { return -1; }\n                if (a._tabIndex > b._tabIndex)\n                { return 1; }\n\n                return 0;\n            });\n        }\n    },\n    set(item): void\n    {\n        this.blur();\n        _currentItem = item;\n    },\n    clear(): void\n    {\n        _currentItem = undefined;\n    },\n    blur(): void\n    {\n        if (_currentItem && typeof _currentItem.blur === 'function')\n        {\n            _currentItem.blur();\n        }\n    },\n    fireTab(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    fireNext(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    firePrev(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\n\n            if (i < 0) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    registrerCheckGroup(cb): void\n    {\n        const name = cb.checkGroup;\n        let group = checkGroups[name];\n\n        if (!group) group = checkGroups[name] = {};\n        group[cb.value] = cb;\n\n        if (cb.checked)\n        { checkGroupValues[name] = cb.value; }\n    },\n    updateCheckGroupSelected(cb): void\n    {\n        const group = checkGroups[cb.checkGroup];\n\n        for (const val in group)\n        {\n            const b = group[val];\n\n            if (b !== cb)\n            { b.checked = false; }\n        }\n        checkGroupValues[cb.checkGroup] = cb.value;\n    },\n    getCheckGroupSelectedValue(name): string\n    {\n        if (checkGroupValues[name])\n        { return checkGroupValues[name]; }\n\n        return '';\n    },\n    setCheckGroupSelectedValue(name, val): void\n    {\n        const group = checkGroups[name];\n\n        if (group)\n        {\n            const cb = group[val];\n\n            if (cb)\n            {\n                cb.checked = true;\n            }\n        }\n    },\n};\n\n","import { UISettings } from './UISettings';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { DragDropController } from './Interaction/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\nimport { Stage } from './Stage';\n\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @namespace PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport abstract class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    insetContainer: PIXI.Container;\n    contentContainer: PIXI.Container;\n    widgetChildren: Widget[];\n    stage: Stage;\n\n    initialized: boolean;\n    dragInitialized: boolean;\n    dropInitialized: boolean;\n    dragging: boolean;\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    _dragPosition: any;\n    parent: Widget;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    private tint: number;\n    private blendMode: PIXI.BLEND_MODES;\n\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    private background: PIXI.Container;\n    private _paddingLeft: number;\n    private _paddingTop: number;\n    private _paddingRight: number;\n    private _paddingBottom: number;\n    private _width: number;\n    private _height: number;\n\n    constructor()\n    {\n        super();\n\n        this.insetContainer = new PIXI.Container();\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n\n        this.tint = 0;\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n\n        this._dragPosition = null; // used for overriding positions if tweens is playing\n    }\n\n    /**\n     * Update method (override from other UIObjects)\n     *\n     * @private\n     */\n    abstract update ();\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): Widget\n    {\n        if (!this.background)\n        {\n            this.insetContainer.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            this.insetContainer.addChildAt(bg, 0);\n        }\n\n        return this;\n    }\n\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            const child = this.widgetChildren[i];\n            const childOptions = child.layoutOptions || LayoutOptions.DEFAULT;\n\n            const maxWidth = (childOptions.width === LayoutOptions.FILL_PARENT || childOptions.width === LayoutOptions.WRAP_CONTENT)\n                ? this.measuredWidth : 0;\n            const maxHeight = (childOptions.height === LayoutOptions.FILL_PARENT || childOptions.height === LayoutOptions.WRAP_CONTENT)\n                ? this.measuredHeight : 0;\n\n            child.measure(\n                maxWidth,\n                maxHeight,\n                maxWidth ? MeasureMode.AT_MOST : MeasureMode.UNBOUNDED,\n                maxHeight ? MeasureMode.AT_MOST : MeasureMode.UNBOUNDED,\n            );\n        }\n    }\n\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    layout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n\n        if (this.background)\n        {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n        // this.container.width = r - l;\n        // this.container.height = b - t;\n    }\n\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    get paddingLeft(): number\n    {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val: number)\n    {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n\n    get paddingTop(): number\n    {\n        return this._paddingTop;\n    }\n    set paddingTop(val: number)\n    {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n\n    get paddingRight(): number\n    {\n        return this._paddingRight;\n    }\n    set paddingRight(val: number)\n    {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n\n    get paddingBottom(): number\n    {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val: number)\n    {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n\n    get paddingHorizontal(): number\n    {\n        return this._paddingLeft + this._paddingRight;\n    }\n\n    get paddingVertical(): number\n    {\n        return this._paddingTop + this._paddingBottom;\n    }\n\n    get interactive(): boolean\n    {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n\n    setPadding(l: number, t: number, r: number, b: number): Widget\n    {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n\n        return this;\n    }\n\n    addChild(UIObject): any\n    {\n        const argumentsLength = arguments.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.contentContainer.addChild(UIObject.insetContainer);\n            this.widgetChildren.push(UIObject);\n        }\n\n        return UIObject;\n    }\n\n    removeChild(UIObject): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                const oldUIParent = UIObject.parent;\n                const oldParent = UIObject.container.parent;\n\n                UIObject.container.parent.removeChild(UIObject.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                UIObject.parent = null;\n\n                // oldParent._recursivePostUpdateTransform();\n            }\n        }\n    }\n\n    /**\n     * Initializes the object when its added to an UIStage\n     *\n     * @private\n     */\n    initialize(): void\n    {\n        this.initialized = true;\n        this.stage = this.parent.stage;\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n    }\n\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            this.drag.stopEvent();\n        }\n    }\n\n    initDraggable(): void\n    {\n        if (!this.dragInitialized)\n        {\n            this.dragInitialized = true;\n            const containerStart = new PIXI.Point();\n            const stageOffset = new PIXI.Point();\n            const self = this;\n\n            this._dragPosition = new PIXI.Point();\n            this.drag = new DragEvent(this);\n            this.drag.onDragStart = function (e)\n            {\n                const added = DragDropController.add(this, e);\n\n                if (!this.dragging && added)\n                {\n                    this.dragging = true;\n                    this.container.interactive = false;\n                    containerStart.copy(this.container.position);\n                    if (this.dragContainer)\n                    {\n                        const c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\n\n                        if (c)\n                        {\n                        // _this.container._recursivePostUpdateTransform();\n                            stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\n                            c.addChild(this.container);\n                        }\n                    }\n                    else\n                    {\n                        stageOffset.set(0);\n                    }\n                    this.emit('draggablestart', e);\n                }\n            };\n\n            this.drag.onDragMove = function (e, offset)\n            {\n                if (this.dragging)\n                {\n                    this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\n                    this.x = this._dragPosition.x;\n                    this.y = this._dragPosition.y;\n                    this.emit('draggablemove', e);\n                }\n            };\n\n            this.drag.onDragEnd = function (e)\n            {\n                if (this.dragging)\n                {\n                    this.dragging = false;\n                    // Return to container after 0ms if not picked up by a droppable\n                    setTimeout(function ()\n                    {\n                        self.contentContainer.interactive = true;\n                        const item = DragDropController.getItem(self);\n\n                        if (item)\n                        {\n                            const container = self.parent === self.stage ? self.stage : self.parent.contentContainer;\n\n                            container.toLocal(self.contentContainer.position, self.contentContainer.parent, self);\n                            if (container != self.contentContainer)\n                            {\n                                self.parent.addChild(self);\n                            }\n                        }\n                        self.emit('draggableend', e);\n                    }, 0);\n                }\n            };\n        }\n    }\n\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n            const self = this;\n\n            this.contentContainer.interactive = true;\n            this.onDrop = function (event)\n            {\n                const item = DragDropController.getEventItem(event, self.dropGroup);\n\n                if (item && item.dragging)\n                {\n                    item.dragging = false;\n                    item.container.interactive = true;\n                    const parent = self.droppableReparent !== null ? self.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent)\n                    { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n\n    get width(): number\n    {\n        return this._width;\n    }\n\n    get height(): number\n    {\n        return this._height;\n    }\n\n    get alpha(): number\n    {\n        return this.insetContainer.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.insetContainer.alpha = val;\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from '../Widget';\n\nexport class ClickEvent\n{\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    private obj: Widget;\n\n    private movementX: number;\n    private movementY: number;\n\n    right: boolean;\n    hover: boolean;\n    double: boolean;\n\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private eventname_mousedown: string;\n    private eventname_mouseup: string;\n    private eventname_mouseupoutside: string;\n\n    time: number;\n\n    constructor(obj, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        this.obj = obj;\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.right = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this.hover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.double = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        this.eventname_mousedown = this.right ? 'rightdown' : 'mousedown';\n        this.eventname_mouseup = this.right ? 'rightup' : 'mouseup';\n        this.eventname_mouseupoutside = this.right ? 'rightupoutside' : 'mouseupoutside';\n\n        obj.interactive = true;\n        this.time = 0;\n\n        this.startEvent();\n    }\n\n    _onMouseDown = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.obj, event, true);\n\n        if (!this.bound)\n        {\n            obj.contentContainer.on(eventname_mouseup, _onMouseUp);\n            obj.contentContainer.on(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.contentContainer.on('touchend', _onMouseUp);\n                obj.contentContainer.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this.double)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    _mouseUpAll = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.contentContainer.removeListener(eventname_mouseup, _onMouseUp);\n            obj.contentContainer.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.contentContainer.removeListener('touchend', _onMouseUp);\n                obj.contentContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    _onMouseUp = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.obj.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.obj.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this.double)\n        {\n            this.onClick.call(this.obj, event);\n        }\n    };\n\n    _onMouseUpOutside = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n    };\n\n    _onMouseOver = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.obj.contentContainer.on('mousemove', this._onMouseMove);\n            this.obj.contentContainer.on('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, true);\n        }\n    };\n\n    _onMouseOut = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.obj.contentContainer.removeListener('mousemove', this._onMouseMove);\n            this.obj.contentContainer.removeListener('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, false);\n        }\n    };\n\n    _onMouseMove = (event): void =>\n    {\n        this.onMove.call(this.obj, event);\n    };\n\n    stopEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n            _onMouseMove,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.contentContainer.removeListener(eventname_mouseup, _onMouseUp);\n            obj.contentContainer.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.contentContainer.removeListener('touchend', _onMouseUp);\n                obj.contentContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.contentContainer.removeListener('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.contentContainer.removeListener('mouseover', _onMouseOver);\n            obj.contentContainer.removeListener('mouseout', _onMouseOut);\n            obj.contentContainer.removeListener('mousemove', _onMouseMove);\n            obj.contentContainer.removeListener('touchmove', _onMouseMove);\n        }\n    };\n\n    startEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mousedown,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n        } = this;\n\n        obj.contentContainer.on(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.contentContainer.on('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.contentContainer.on('mouseover', _onMouseOver);\n            obj.contentContainer.on('mouseout', _onMouseOut);\n        }\n    };\n\n    onHover(event, over): void\n    {\n\n    }\n\n    onPress(event, isPressed): void\n    {\n\n    }\n\n    onClick(event): void\n    {\n\n    }\n\n    onMove(event): void\n    {\n\n    }\n}\n","import { MeasureMode } from '../IMeasurable';\nimport { ILayoutManager } from './ILayoutManager';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @namespace PUXI\n * @extends PUXI.ILayoutManager\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout implements ILayoutManager\n{\n    private host: WidgetGroup;\n    private _measuredWidth: number;\n    private _measuredHeight: number;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n\n        const children = this.host.widgetChildren;\n\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : maxWidth,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : maxHeight,\n                widthMeasureMode,\n                heightMeasureMode);\n        }\n\n        if (widthMode === MeasureMode.UNBOUNDED || widthMode === MeasureMode.AT_MOST)\n        {\n            this._measuredWidth = 0;\n\n            for (let i = 0, j = children.length; i < j; i++)\n            {\n                const widget = children[i];\n                const childWidth = widget.getMeasuredWidth();\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n                const x = lopt.x ? lopt.x : 0;\n\n                // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n                // as child's width.\n                const minr = childWidth + (Math.abs(x) < 1 ? childWidth / (1 - x) : x);\n\n                this._measuredWidth = Math.max(this._measuredWidth, minr);\n            }\n\n            if (widthMode === MeasureMode.AT_MOST)\n            {\n                this._measuredWidth = Math.min(maxWidth, this._measuredWidth);\n            }\n        }\n        if (heightMode === MeasureMode.UNBOUNDED || heightMode === MeasureMode.AT_MOST)\n        {\n            this._measuredHeight = 0;\n\n            for (let i = 0, j = children.length; i < j; i++)\n            {\n                const widget = children[i];\n                const childHeight = widget.getMeasuredHeight();\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n                const y = lopt.y ? lopt.y : 0;\n\n                const minb = childHeight + (Math.abs(y) < 1 ? childHeight / (1 - y) : y);\n\n                this._measuredHeight = Math.max(this._measuredHeight, minb);\n            }\n\n            if (heightMode === MeasureMode.AT_MOST)\n            {\n                this._measuredHeight = Math.min(maxHeight, this._measuredHeight);\n            }\n        }\n    }\n\n    private getChildMeasureMode(dimen: number, parentMeasureMode: MeasureMode): MeasureMode\n    {\n        if (parentMeasureMode === MeasureMode.UNBOUNDED)\n        {\n            return MeasureMode.UNBOUNDED;\n        }\n        if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT)\n        {\n            return MeasureMode.AT_MOST;\n        }\n\n        return MeasureMode.EXACTLY;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { width, height, widgetChildren: children } = parent;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight());\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\nimport { FastLayout } from './layout-manager/FastLayout';\n\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @namespace PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport abstract class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;// lazily initialized (via useLayout(), useDefaultLayout())\n\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr: ILayoutManager): void\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach();\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout(): void\n    {\n        this.useLayout(new FastLayout());\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.measure(width, height, widthMode, heightMode);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onLayout();// layoutMgr is attached to this\n    }\n}\n","import { InputController } from './Interaction/InputController';\nimport { WidgetGroup } from './WidgetGroup';\n\nexport interface IInputBaseOptions\n{\n    background?: PIXI.Container;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Represents a view that can accept any form of input. It can gain and loose focus.\n *\n * @class\n * @extends PUXI.WidgetGroup\n * @memberof PUXI\n * @param width {number} passed to uibase\n * @param height {number} passed to uibase\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n */\nexport abstract class InputBase extends WidgetGroup\n{\n    _focused: boolean;\n    _useTab: boolean;\n    _usePrev: boolean;\n    _useNext: boolean;\n\n    __down: boolean;\n\n    constructor(options: IInputBaseOptions = {})\n    {\n        super();\n\n        if (options.background)\n        {\n            super.setBackground(options.background);\n        }\n\n        const { tabIndex, tabGroup } = options;\n\n        this._focused = false;\n        this._useTab = this._usePrev = this._useNext = true;\n        this.interactive = true;\n        InputController.registrer(this, tabIndex || 0, tabGroup || 0);\n\n        this.insetContainer.on('pointerdown', (e) =>\n        {\n            this.focus();\n            this.__down = true;\n        });\n\n        this.contentContainer.on('pointerup', (e) =>\n        {\n            this.__down = false;\n        });\n\n        this.contentContainer.on('pointerupoutside', (e) =>\n        {\n            this.__down = false;\n        });\n    }\n\n    blur(): void\n    {\n        if (this._focused)\n        {\n            InputController.clear();\n            this._focused = false;\n            this._clearEvents();\n            this.emit('focusChanged', false);\n            this.emit('blur');\n        }\n    }\n\n    focus(): void\n    {\n        if (!this._focused)\n        {\n            this._focused = true;\n            this._bindEvents();\n            InputController.set(this);\n            this.emit('focusChanged', true);\n            this.emit('focus');\n        }\n    }\n\n    protected keyDownEvent = (e: any): void =>\n    {\n        if (e.which === 9)\n        {\n            if (this._useTab)\n            {\n                InputController.fireTab();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 38)\n        {\n            if (this._usePrev)\n            {\n                InputController.firePrev();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 40)\n        {\n            if (this._useNext)\n            {\n                InputController.fireNext();\n                e.preventDefault();\n            }\n        }\n\n        this.emit('keydown');\n    };\n\n    private documentMouseDown = (): void =>\n    {\n        if (!this.__down)\n        {\n            this.blur();\n        }\n    };\n\n    private _bindEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.on('pointerdown', this.documentMouseDown);\n        }\n\n        document.addEventListener('keydown', this.keyDownEvent);\n    };\n\n    private _clearEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.off('pointerdown', this.documentMouseDown);\n        }\n\n        document.removeEventListener('keydown', this.keyDownEvent);\n    };\n}\n","import { ClickEvent } from './Interaction/ClickEvent';\nimport { InputBase } from './InputBase';\nimport { Sprite } from './Sprite';\nimport { Text } from './Text';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\ninterface IButtonOptions\n{\n    background?: Sprite;\n    text?: Text;\n    tabIndex?: number;\n    tabGroup?: any;\n    width?: number;\n    height?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PUXI.InputBase\n * @memberof PUXI\n * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n * @param [options.text=null] {PIXI.UI.Text} optional text\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.width=options.background.width] {Number|String} width\n * @param [options.height=options.background.height] {Number|String} height\n */\nexport class Button extends InputBase\n{\n    background: Sprite;\n    isHover: boolean;\n\n    protected textWidget: Text;\n\n    click: () => void;\n    initialize: () => void;\n\n    constructor(options: IButtonOptions)\n    {\n        super(\n            options.width || (options.background ? options.background.width : 100),\n            options.height || (options.background ? options.background.height : 100),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this.background = options.background;\n\n        if (this.background)\n        {\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.background.pivot = 0.5;\n            this.background.verticalAlign = 'middle';\n            this.background.horizontalAlign = 'center';\n            this.addChild(this.background);\n        }\n\n        this.isHover = false;\n        this.textWidget = options.text.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5, 0.5,\n                FastLayoutOptions.CENTER_ANCHOR,\n            ),\n        ) as Text;\n\n        if (this.textWidget)\n        {\n            this.addChild(this.textWidget);\n        }\n\n        this.contentContainer.buttonMode = true;\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent = new ClickEvent(this);\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                InputBase.prototype.focus.call(this);\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                InputBase.prototype.blur.call(this);\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n\n        this.initialize = (): void =>\n        {\n            super.initialize();\n            this.contentContainer.interactiveChildren = false;\n            // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n\n            setTimeout(() =>\n            {\n                const bounds = this.contentContainer.getLocalBounds();\n\n                this.contentContainer.hitArea = new PIXI.Rectangle(\n                    bounds.x < 0 ? bounds.x : 0,\n                    bounds.y < 0 ? bounds.y : 0,\n                    Math.max(bounds.x + bounds.width + (bounds.x < 0 ? -bounds.x : 0), this._width),\n                    Math.max(bounds.y + bounds.height + (bounds.y < 0 ? -bounds.y : 0), this._height),\n                );\n            }, 20);\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    get value(): string\n    {\n        if (this.textWidget)\n        {\n            return this.textWidget.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.textWidget)\n        {\n            this.textWidget.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.textWidget;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { WidgetGroup } from './WidgetGroup';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An interactive container.\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n */\nexport class InteractiveGroup extends WidgetGroup\n{\n    private hitArea: PIXI.Rectangle;\n\n    constructor()\n    {\n        super();\n        this.hitArea = new PIXI.Rectangle();\n        this.insetContainer.hitArea = this.hitArea;\n    }\n\n    update(): void\n    {\n        // TODO:\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty: boolean): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    }\n}\n\n","import { InputBase, IInputBaseOptions } from './InputBase';\nimport { ClickEvent } from './Interaction/ClickEvent';\nimport { InputController } from './Interaction/InputController';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\ninterface ICheckBoxOptions extends IInputBaseOptions\n{\n    checked?: boolean;\n    background: PIXI.Container;\n    checkmark?: PIXI.Container;\n    checkgroup?: any;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param [options.checked=false] {bool} is checked\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n * @param [options.checkgroup=null] {String} CheckGroup name\n * @param options.value {String} mostly used along with checkgroup\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n */\nexport class CheckBox extends InputBase\n{\n    private _checked: boolean;\n    private _value: string;\n    private checkGroup: any;\n\n    private checkmark: InteractiveGroup;\n\n    change: (val: boolean) => void;\n    click: () => void;\n\n    constructor(options: ICheckBoxOptions)\n    {\n        super(options);\n\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkgroup || null;\n\n        this.checkmark = new InteractiveGroup();\n        this.checkmark.contentContainer.addChild(options.checkmark);\n        this.checkmark.setLayoutOptions(\n            new FastLayoutOptions(\n                LayoutOptions.WRAP_CONTENT,\n                LayoutOptions.WRAP_CONTENT,\n                0.5,\n                0.5,\n                FastLayoutOptions.CENTER_ANCHOR),\n        );\n        this.checkmark.alpha = this._checked ? 1 : 0;\n\n        this.contentContainer.buttonMode = true;\n\n        if (this.checkGroup !== null)\n        {\n            InputController.registrerCheckGroup(this);\n        }\n\n        // var keyDownEvent = function (e) {\n        //    if (e.which === 32) { //space\n        //        self.click();\n        //    }\n        // };\n\n        const clickEvent = new ClickEvent(this);\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.change = (val): void =>\n        {\n            if (this.checkmark)\n            {\n                this.checkmark.alpha = val ? 1 : 0;\n            }\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n\n            if (this.checkGroup !== null && this.checked)\n            {\n                return;\n            }\n\n            this.checked = !this.checked;\n            this.emit('change', this.checked);\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                super.focus();\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                super.blur();\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                InputController.updateCheckGroupSelected(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            InputController.updateCheckGroupSelected(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return InputController.getCheckGroupSelectedValue(this.checkGroup);\n    }\n    set selectedValue(val: string)\n    {\n        InputController.setCheckGroupSelectedValue(this.checkGroup, val);\n    }\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","function DynamicTextStyle(parent)\n{\n    this.respectDirty = true;\n    this._parent = parent || null;\n    this._scale = 1;\n    this._align = 'left';\n    this._fontFamily = 'Arial';\n    this._fontSize = 26;\n    this._fontWeight = 'normal';\n    this._fontStyle = 'normal';\n    this._letterSpacing = 0;\n    this._lineHeight = 0;\n    this._verticalAlign = 0;\n    this._rotation = 0;\n    this._skew = 0;\n    this._tint = '#FFFFFF';\n    this._fill = '#FFFFFF';\n    this._shadow = '';\n    this._stroke = 0;\n    this._strokeFill = '';\n    this._strokeShadow = '';\n    this._wrap = true;\n    this._breakWords = false;\n    this._overflowX = 'visible'; // visible|hidden\n    this._overflowY = 'visible'; // visible|hidden\n    this._ellipsis = false;\n\n    let _cachedEllipsisSize = null;\n\n    this.ellipsisSize = function (atlas)\n    {\n        if (!this.ellipsis) return 0;\n        if (_cachedEllipsisSize === null)\n        { _cachedEllipsisSize = (atlas.getCharObject('.', this).width + this.letterSpacing) * 3; }\n\n        return _cachedEllipsisSize;\n    };\n}\n\nDynamicTextStyle.prototype.clone = function ()\n{\n    const style = new DynamicTextStyle();\n\n    style.merge(this);\n\n    return style;\n};\n\nDynamicTextStyle.prototype.merge = function (style)\n{\n    if (typeof style === 'object')\n    {\n        this.respectDirty = false;\n        for (const param in style)\n        {\n            const val = style[param];\n\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\n            this[param] = style[param];\n        }\n        this.respectDirty = true;\n        this._dirty = true;\n    }\n};\n\nDynamicTextStyle.prototype.ctxKey = function (char)\n{\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\n};\n\nDynamicTextStyle.prototype.ctxFont = function ()\n{\n    const fontSize = `${Math.min(200, Math.max(1, this.fontSize || 26))}px `;\n    const fontWeight = this.fontWeight === 'bold' ? `${this.fontWeight} ` : '';\n    const fontStyle = this.fontStyle === 'italic' || this.fontStyle === 'oblique' ? `${this.fontStyle} ` : '';\n\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\n};\n\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\n\nexport { DynamicTextStyle };\n\nObject.defineProperties(DynamicTextStyle.prototype, {\n    _dirty: {\n        set(val)\n        {\n            if (this.respectDirty)\n            {\n                if (this._parent !== null)\n                {\n                    this._parent.dirtyStyle = val;\n                    this._parent.update();\n                }\n            }\n        },\n    },\n    scale: {\n        get()\n        {\n            return this._scale;\n        },\n        set(val)\n        {\n            if (val !== this._scale)\n            {\n                this._scale = val;\n                this._dirty = true;\n            }\n        },\n    },\n    align: {\n        get()\n        {\n            return this._align;\n        },\n        set(val)\n        {\n            if (val !== this._align)\n            {\n                this._align = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontFamily: {\n        get()\n        {\n            return this._fontFamily;\n        },\n        set(val)\n        {\n            if (val !== this._fontFamily)\n            {\n                this._fontFamily = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontSize: {\n        get()\n        {\n            return this._fontSize;\n        },\n        set(val)\n        {\n            if (val !== this._fontSize)\n            {\n                this._fontSize = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontWeight: {\n        get()\n        {\n            return this._fontWeight;\n        },\n        set(val)\n        {\n            if (val !== this._fontWeight)\n            {\n                this._fontWeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontStyle: {\n        get()\n        {\n            return this._fontStyle;\n        },\n        set(val)\n        {\n            if (val !== this._fontStyle)\n            {\n                this._fontStyle = val;\n                this._dirty = true;\n            }\n        },\n    },\n    letterSpacing: {\n        get()\n        {\n            return this._letterSpacing;\n        },\n        set(val)\n        {\n            if (val !== this._letterSpacing)\n            {\n                this._letterSpacing = val;\n                this._dirty = true;\n            }\n        },\n    },\n    lineHeight: {\n        get()\n        {\n            return this._lineHeight;\n        },\n        set(val)\n        {\n            if (val !== this._lineHeight)\n            {\n                this._lineHeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    verticalAlign: {\n        get()\n        {\n            return this._verticalAlign;\n        },\n        set(val)\n        {\n            if (val !== this._verticalAlign)\n            {\n                this._verticalAlign = val;\n                this._dirty = true;\n            }\n        },\n    },\n    rotation: {\n        get()\n        {\n            return this._rotation;\n        },\n        set(val)\n        {\n            if (val !== this._rotation)\n            {\n                this._rotation = val;\n                this._dirty = true;\n            }\n        },\n    },\n    skew: {\n        get()\n        {\n            return this._skew;\n        },\n        set(val)\n        {\n            if (val !== this._skew)\n            {\n                this._skew = val;\n                this._dirty = true;\n            }\n        },\n    },\n    tint: {\n        get()\n        {\n            return this._tint;\n        },\n        set(val)\n        {\n            if (val !== this._tint)\n            {\n                this._tint = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fill: {\n        get()\n        {\n            return this._fill;\n        },\n        set(val)\n        {\n            if (val !== this._fill)\n            {\n                this._fill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    shadow: {\n        get()\n        {\n            return this._shadow;\n        },\n        set(val)\n        {\n            if (val !== this._shadow)\n            {\n                this._shadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    stroke: {\n        get()\n        {\n            return this._stroke;\n        },\n        set(val)\n        {\n            if (val !== this._stroke)\n            {\n                this._stroke = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeFill: {\n        get()\n        {\n            return this._strokeFill;\n        },\n        set(val)\n        {\n            if (val !== this._strokeFill)\n            {\n                this._strokeFill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeShadow: {\n        get()\n        {\n            return this._strokeShadow;\n        },\n        set(val)\n        {\n            if (val !== this._strokeShadow)\n            {\n                this._strokeShadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    wrap: {\n        get()\n        {\n            return this._wrap;\n        },\n        set(val)\n        {\n            if (val !== this._wrap)\n            {\n                this._wrap = val;\n                this._dirty = true;\n            }\n        },\n    },\n    breakWords: {\n        get()\n        {\n            return this._breakWords;\n        },\n        set(val)\n        {\n            if (val !== this._breakWords)\n            {\n                this._breakWords = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowX: {\n        get()\n        {\n            return this._overflowX;\n        },\n        set(val)\n        {\n            if (val !== this._overflowX)\n            {\n                this._overflowX = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowY: {\n        get()\n        {\n            return this._overflowY;\n        },\n        set(val)\n        {\n            if (val !== this._overflowY)\n            {\n                this._overflowY = val;\n                this._dirty = true;\n            }\n        },\n    },\n    ellipsis: {\n        get()\n        {\n            return this._ellipsis;\n        },\n        set(val)\n        {\n            if (val !== this._ellipsis)\n            {\n                this._ellipsis = val;\n                this._dirty = true;\n            }\n        },\n    },\n});\n","function DynamicChar()\n{\n    // styledata (texture, orig width, orig height)\n    this.style = null;\n\n    // char data\n    this.data = null;\n\n    // is this char space?\n    this.space = false;\n\n    // is this char newline?\n    this.newline = false;\n\n    this.emoji = false;\n\n    // charcode\n    this.charcode = 0;\n\n    // char string value\n    this.value = '';\n\n    // word index\n    this.wordIndex = -1;\n\n    // line index of char\n    this.lineIndex = -1;\n}\n\nDynamicChar.prototype.constructor = DynamicChar;\n\nexport { DynamicChar };\n","import { Widget } from '../Widget';\nimport { DynamicTextStyle } from './DynamicTextStyle';\nimport { DynamicChar }  from './DynamicChar';\nimport emojiRegex  from 'emoji-regex';\nlet atlas = null;\n\n/**\n* An dynamic text object with auto generated atlas\n*\n* @class\n* @extends PIXI.UI.UIBase\n* @memberof PIXI.UI\n* @param text {String} Text content\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\n* @param [allowTags=true] {boolean} Allow inline styling\n* @param [options=null] {DynamicTextStyle} Additional text settings\n*/\nfunction DynamicText(text, options)\n{\n    options = options || {};\n\n    Widget.call(this, options.width || 0, options.height || 0);\n\n    // create atlas\n    if (atlas === null)\n    { atlas = new DynamicAtlas(1); }\n\n    const autoWidth = !options.width;\n    const autoHeight = !options.height;\n\n    // defaultstyle for this textobject\n    const defaultStyle = this._style = new DynamicTextStyle(this);\n\n    defaultStyle.merge(options.style);\n\n    // collection of all processed char\n    const chars = this.chars = [];\n    const renderChars = [];\n    const spriteCache = []; // (temp)\n    const charContainer = new PIXI.Container();\n\n    this.container.addChild(charContainer);\n\n    // the input text\n    this._inputText = text;\n\n    // list of rendered sprites (temp)\n    const sprites = [];\n\n    // states\n    let lastWidth = 0;\n    let lastHeight = 0;\n\n    this.dirtyText = true;\n    this.dirtyStyle = true;\n    this.dirtyRender = true;\n\n    // dictionary for line data\n    const lineWidthData = [];\n    const lineHeightData = [];\n    const lineFontSizeData = [];\n    const lineAlignmentData = [];\n    let renderCount = 0;\n    let charCount = 0;\n\n    // ellipsis caches (not nessesary when no sprites)\n    const lineEllipsisData = [];\n    const lineHasEllipsis = [];\n\n    // ROUGH TEMP RENDER (with sprites)\n    this.render = function ()\n    {\n        let yOffset = 0;\n        let xOffset = 0;\n        let currentLine = -1;\n        let i;\n\n        if (spriteCache.length > renderCount)\n        {\n            for (i = renderCount; i < spriteCache.length; i++)\n            {\n                const removeSprite = spriteCache[i];\n\n                if (removeSprite)\n                { removeSprite.visible = false; }\n            }\n        }\n\n        let char; let lineWidth = 0; let lineHeight = 0; let\n            maxLineWidth = 0;\n\n        for (i = 0; i < renderCount; i++)\n        {\n            char = renderChars[i];\n\n            // get line data\n            if (currentLine !== char.lineIndex)\n            {\n                currentLine = char.lineIndex;\n                lineWidth = lineWidthData[currentLine];\n                lineHeight = lineHeightData[currentLine];\n                yOffset += lineHeight;\n\n                switch (lineAlignmentData[currentLine])\n                {\n                    case 'right': xOffset = this._width - lineWidth; break;\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\n                    default: xOffset = 0;\n                }\n\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\n            }\n\n            // no reason to render a blank space or 0x0 letters (no texture created)\n            if (!char.data.texture || char.space || char.newline)\n            {\n                if (spriteCache[i])\n                { spriteCache[i].visible = false; }\n                continue;\n            }\n\n            // add new sprite\n            const tex = char.data.texture; let\n                sprite = spriteCache[i];\n\n            if (!sprite)\n            {\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\n                sprite.anchor.set(0.5);\n            }\n            else\n            { sprite.texture = tex; }\n\n            sprite.visible = true;\n            sprite.x = char.x + xOffset + tex.width * 0.5;\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\n\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\n            sprite.rotation = float(char.style.rotation, 0);\n            sprite.skew.x = float(char.style.skew, 0);\n\n            if (!sprite.parent)\n            { charContainer.addChild(sprite); }\n        }\n\n        if (autoWidth) this.width = maxLineWidth;\n        if (autoHeight) this.height = yOffset;\n    };\n\n    // updates the renderChar array and position chars for render\n    this.prepareForRender = function ()\n    {\n        const pos = new PIXI.Point();\n        let wordIndex = 0;\n        let lineHeight = 0;\n        let lineFontSize = 0;\n        let lineIndex = 0;\n        let lineAlignment = defaultStyle.align;\n        let lastSpaceIndex = -1;\n        let lastSpaceLineWidth = 0;\n        let textHeight = 0;\n        let forceNewline = false;\n        let style;\n        let renderIndex = 0;\n        let ellipsis = false;\n        let lineFull = false;\n        let i;\n\n        for (i = 0; i < charCount; i++)\n        {\n            const char = chars[i]; const\n                lastChar = chars[i - 1];\n\n            style = char.style;\n\n            // lineheight\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\n\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height)\n            {\n                if (style.overflowY === 'hidden')\n                { break; }\n            }\n\n            if (char.newline)\n            { lineFull = false; }\n\n            // set word index\n            if (char.space || char.newline) wordIndex++;\n            else char.wordIndex = wordIndex;\n\n            // textheight\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\n\n            // lineindex\n            char.lineIndex = lineIndex;\n\n            // lineAlignment\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\n\n            if (char.space)\n            {\n                lastSpaceIndex = i;\n                lastSpaceLineWidth = pos.x;\n            }\n\n            const size = Math.round(char.data.width) + float(style.letterSpacing, 0);\n\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width)\n            {\n                if (style.wrap)\n                {\n                    if (char.space)\n                    {\n                        forceNewline = true;\n                    }\n                    else if (lastSpaceIndex !== -1)\n                    {\n                        renderIndex -= i - lastSpaceIndex;\n                        i = lastSpaceIndex - 1;\n                        lastSpaceIndex = -1;\n                        pos.x = lastSpaceLineWidth;\n                        forceNewline = true;\n                        continue;\n                    }\n                    else if (style.breakWords)\n                    {\n                        if (lastChar)\n                        {\n                            pos.x -= lastChar.style.letterSpacing;\n                            pos.x -= lastChar.data.width;\n                        }\n                        i -= 2;\n                        renderIndex--;\n                        forceNewline = true;\n                        continue;\n                    }\n                }\n\n                if (style.overflowX == 'hidden' && !forceNewline)\n                {\n                    lineFull = true;\n                    if (style.ellipsis && !ellipsis)\n                    {\n                        ellipsis = true;\n                        let ellipsisData = lineEllipsisData[lineIndex];\n\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\n                        for (let d = 0; d < 3; d++)\n                        {\n                            const dot = ellipsisData[d];\n\n                            dot.value = '.';\n                            dot.data = atlas.getCharObject(dot.value, style);\n                            dot.style = style;\n                            dot.x = pos.x + char.data.xOffset;\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\n                            dot.lineIndex = lineIndex;\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\n                            renderChars[renderIndex] = dot;\n                            renderIndex++;\n                        }\n                    }\n                }\n            }\n\n            // Update position and add to renderchars\n            if (!lineFull)\n            {\n                // position\n                char.x = pos.x + char.data.xOffset;\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\n                pos.x += size;\n                renderChars[renderIndex] = char;\n                renderIndex++;\n            }\n\n            // new line\n            if (forceNewline || char.newline || i === charCount - 1)\n            {\n                if (lastChar)\n                {\n                    pos.x -= lastChar.style.letterSpacing;\n                }\n\n                if (char.space)\n                {\n                    pos.x -= char.data.width;\n                    pos.x -= float(style.letterSpacing, 0);\n                }\n\n                textHeight += lineHeight;\n                lineHasEllipsis[lineIndex] = ellipsis;\n                lineWidthData[lineIndex] = pos.x;\n                lineHeightData[lineIndex] = lineHeight;\n                lineFontSizeData[lineIndex] = lineFontSize;\n                lineAlignmentData[lineIndex] = lineAlignment;\n\n                // reset line vaules\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\n                lineAlignment = defaultStyle.align;\n                lastSpaceIndex = -1;\n                lineIndex++;\n                forceNewline = lineFull = ellipsis = false;\n            }\n        }\n\n        renderCount = renderIndex;\n    };\n\n    // phrases the input text and prepares the char array\n    const closeTags = ['</i>', '</b>', '</font>', '</center>'];\n\n    this.processInputText = function ()\n    {\n        const styleTree = [defaultStyle];\n        let charIndex = 0;\n        let inputTextIndex = 0;\n        const inputArray = Array.from(this._inputText);\n\n        for (let i = 0; i < inputArray.length; i++)\n        {\n            style = styleTree[styleTree.length - 1];\n            let c = inputArray[i];\n            const charcode = c.charCodeAt(0);\n            let newline = false;\n            let space = false;\n            let emoji = false;\n\n            // Extract Tags\n            if ((/(?:\\r\\n|\\r|\\n)/).test(c))\n            { newline = true; }\n            else if ((/(\\s)/).test(c))\n            { space = true; }\n            else if (options.allowTags && c === '<')\n            {\n                let tag = this._inputText.substring(inputTextIndex);\n\n                tag = tag.slice(0, tag.indexOf('>') + 1);\n                let FoundTag = true;\n\n                if (tag.length)\n                {\n                    if (tag === '<i>')\n                    {\n                        style = style.clone();\n                        style.fontStyle = 'italic';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<b>')\n                    {\n                        style = style.clone();\n                        style.fontWeight = 'bold';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<center>')\n                    {\n                        style = style.clone();\n                        style.align = 'center';\n                        styleTree.push(style);\n                    }\n                    else if (closeTags.indexOf(tag) !== -1)\n                    {\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\n                    }\n                    else if (tag.startsWith('<font '))\n                    {\n                        const regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g;\n                        let match = regex.exec(tag);\n\n                        if (match !== null)\n                        {\n                            style = style.clone();\n                            while (match !== null)\n                            {\n                                switch (match[1])\n                                {\n                                    case 'family': match[1] = 'fontFamily'; break;\n                                    case 'size': match[1] = 'fontSize'; break;\n                                    case 'weight': match[1] = 'fontWeight'; break;\n                                    case 'style': match[1] = 'fontStyle'; break;\n                                    case 'valign': match[1] = 'verticalAlign'; break;\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\n                                    case 'color': match[1] = 'tint'; break;\n                                }\n                                style[match[1]] = match[4];\n                                match = regex.exec(tag);\n                            }\n                            styleTree.push(style);\n                        }\n                    }\n                    else\n                    {\n                        FoundTag = false;\n                    }\n\n                    if (FoundTag)\n                    {\n                        inputTextIndex += tag.length;\n                        i += tag.length - 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                // detect emoji\n                let emojiMatch = emojiRegex().exec(c);\n\n                if (emojiMatch !== null)\n                {\n                    i--; c = '';\n                    while (emojiMatch !== null && c !== emojiMatch[0])\n                    {\n                        i++;\n                        c = emojiMatch[0];\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\n                    }\n                    emoji = true;\n                }\n            }\n\n            // Prepare DynamicChar object\n            let char = chars[charIndex];\n\n            if (!char)\n            {\n                char = new DynamicChar();\n                chars[charIndex] = char;\n            }\n            char.style = style;\n\n            if (emoji)\n            {\n                char.style = char.style.clone();\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\n            }\n\n            char.data = atlas.getCharObject(c, char.style);\n            char.value = c;\n            char.space = space;\n            char.newline = newline;\n            char.emoji = emoji;\n\n            charIndex++;\n            inputTextIndex += c.length;\n        }\n        charCount = charIndex;\n    };\n\n    // PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\n    this.lazyUpdate = null;\n    const self = this;\n\n    this.update = function ()\n    {\n        if (self.lazyUpdate !== null) return;\n        self.lazyUpdate = setTimeout(function ()\n        {\n            // console.log(\"UPDATING TEXT\");\n            const dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\n\n            if (self.dirtyText || self.dirtyStyle)\n            {\n                self.dirtyText = self.dirtyStyle = false;\n                self.dirtyRender = true; // force render after textchange\n                self.processInputText();\n            }\n\n            if (dirtySize || self.dirtyRender)\n            {\n                self.dirtyRender = false;\n                lastWidth = self._width;\n                lastHeight = self.height;\n                self.prepareForRender();\n                self.render();\n            }\n            self.lazyUpdate = null;\n        }, 0);\n    };\n}\n\nDynamicText.prototype = Object.create(Widget.prototype);\nDynamicText.prototype.constructor = DynamicText;\n\nexport { DynamicText };\n\nDynamicText.settings = {\n    debugSpriteSheet: false,\n    defaultEmojiFont: 'Segoe UI Emoji', // force one font family for emojis so we dont rerender them multiple times\n};\n\nObject.defineProperties(DynamicText.prototype, {\n    value: {\n        get()\n        {\n            return this._inputText;\n        },\n        set(val)\n        {\n            if (val !== this._inputText)\n            {\n                this._inputText = val;\n                this.dirtyText = true;\n                this.update();\n                // console.log(\"Updating Text to: \" + val);\n            }\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n    style: {\n        get()\n        {\n            return this._style;\n        },\n        set(val)\n        {\n            // get a clean default style\n            const style = new DynamicTextStyle(this);\n\n            // merge it with new style\n            style.merge(val);\n\n            // merge it onto this default style\n            this._style.merge(style);\n\n            this.dirtyStyle = true;\n            this.update();\n        },\n    },\n});\n\n// Atlas\nconst metricsCanvas = document.createElement('canvas');\nconst metricsContext = metricsCanvas.getContext('2d');\n\nmetricsCanvas.width = 100;\nmetricsCanvas.height = 100;\n\nvar DynamicAtlas = function (padding)\n{\n    const res = devicePixelRatio || 1;\n    let canvas;\n    let context;\n    let objects;\n    let newObjects = [];\n    let baseTexture;\n    let lazyTimeout;\n    let rootNode;\n    const canvasList = [];\n    let atlasdim;\n    const startdim = 256;\n    const maxdim = 2048;\n\n    var AtlasNode = function (w, h)\n    {\n        const children = this.children = [];\n\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\n        this.data = null;\n\n        this.insert = function (width, height, obj)\n        {\n            if (children.length > 0)\n            {\n                const newNode = children[0].insert(width, height, obj);\n\n                if (newNode !== null) return newNode;\n\n                return children[1].insert(width, height, obj);\n            }\n            if (this.data !== null) return null;\n            if (width > this.rect.width || height > this.rect.height) return null;\n            if (width == this.rect.width && height == this.rect.height)\n            {\n                this.data = obj;\n                obj.frame.x = this.rect.x;\n                obj.frame.y = this.rect.y;\n\n                return this;\n            }\n\n            children.push(new AtlasNode());\n            children.push(new AtlasNode());\n\n            const dw = this.rect.width - width;\n            const dh = this.rect.height - height;\n\n            if (dw > dh)\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\n            }\n            else\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\n            }\n\n            return children[0].insert(width, height, obj);\n        };\n    };\n\n    const addCanvas = function ()\n    {\n        // create new canvas\n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvasList.push(canvas);\n\n        // reset dimentions\n        atlasdim = startdim;\n        canvas.width = canvas.height = atlasdim;\n        rootNode = new AtlasNode(atlasdim, atlasdim);\n\n        // reset array with canvas objects and create new atlas\n        objects = [];\n\n        // set new basetexture\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\n        baseTexture.mipmap = false; // if not, pixi bug resizing POW2\n        baseTexture.resolution = 1; // todo: support all resolutions\n        baseTexture.update();\n\n        // Debug Spritesheet\n        if (DynamicText.settings.debugSpriteSheet)\n        {\n            canvas.className = 'DynamicText_SpriteSheet';\n            document.body.appendChild(canvas);\n        }\n    };\n\n    this.fontFamilyCache = {};\n\n    const drawObjects = function (arr, resized)\n    {\n        if (resized) baseTexture.update();\n        for (let i = 0; i < arr.length; i++)\n        { drawObject(arr[i]); }\n    };\n\n    var drawObject = function (obj)\n    {\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\n        obj.texture.frame = obj.frame;\n        obj.texture.update();\n    };\n\n    this.getCharObject = function (char, style)\n    {\n        const font = style.ctxFont();\n\n        // create new cache for fontFamily\n        let familyCache = this.fontFamilyCache[font];\n\n        if (!familyCache)\n        {\n            familyCache = {};\n            this.fontFamilyCache[font] = familyCache;\n        }\n\n        // get char data\n        const key = style.ctxKey(char);\n        let obj = familyCache[key];\n\n        if (!obj)\n        {\n            // create char object\n            const metrics = generateCharData(char, style);\n\n            // temp resize if doesnt fit (not nesseary when we dont need to generate textures)\n            if (metrics.rect)\n            {\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height)\n                {\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\n                    baseTexture.update();\n                }\n            }\n\n            // todo: cleanup when we know whats needed\n            obj = {\n                metrics,\n                font,\n                value: char,\n                frame: metrics.rect,\n                baseTexture: metrics.rect ? baseTexture : null,\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\n                yOffset: metrics.descent || 0,\n                width: metrics.width || 0,\n                lineHeight: metrics.lineHeight || 0,\n                _cache: metrics.canvas,\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null, // temp texture\n            };\n\n            // add to collections\n            familyCache[key] = obj;\n\n            // add to atlas if visible char\n            if (metrics.rect)\n            {\n                newObjects.push(obj);\n\n                if (lazyTimeout === undefined)\n                {\n                    lazyTimeout = setTimeout(function ()\n                    {\n                        addNewObjects();\n                        lazyTimeout = undefined;\n                    }, 0);\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    const compareFunction = function (a, b)\n    {\n        if (a.frame.height < b.frame.height)\n        { return 1; }\n\n        if (a.frame.height > b.frame.height)\n        { return -1; }\n\n        if (a.frame.width < b.frame.width)\n        { return 1; }\n\n        if (a.frame.width > b.frame.width)\n        { return -1; }\n\n        return 0;\n    };\n\n    var addNewObjects = function ()\n    {\n        newObjects.sort(compareFunction);\n        let _resized = false;\n        let _newcanvas = false;\n\n        for (let i = 0; i < newObjects.length; i++)\n        {\n            const obj = newObjects[i];\n            const node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n\n            if (node !== null)\n            {\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; // update basetexture if new canvas was created (temp)\n                objects.push(obj);\n                continue;\n            }\n\n            // step one back (so it will be added after resize/new canvas)\n            i--;\n\n            if (atlasdim < maxdim)\n            {\n                _resized = true;\n                resizeCanvas(atlasdim * 2);\n                continue;\n            }\n\n            // close current spritesheet and make a new one\n            drawObjects(objects, _resized);\n            addCanvas();\n            _newcanvas = true;\n            _resized = false;\n        }\n\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\n        newObjects = [];\n    };\n\n    var resizeCanvas = function (dim)\n    {\n        canvas.width = canvas.height = atlasdim = dim;\n\n        rootNode = new AtlasNode(dim, dim);\n        objects.sort(compareFunction);\n\n        for (let i = 0; i < objects.length; i++)\n        {\n            const obj = objects[i];\n\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n        }\n    };\n\n    var generateCharData = function (char, style)\n    {\n        const fontSize = Math.max(1, int(style.fontSize, 26));\n        const lineHeight = fontSize * 1.25;\n\n        // Start our returnobject\n        const data = {\n            fontSize,\n            lineHeight,\n            width: 0,\n        };\n\n        // Return if newline\n        if (!char || (/(?:\\r\\n|\\r|\\n)/).test(char))\n        { return data; }\n\n        // Ctx font string\n        const font = style.ctxFont();\n\n        metricsContext.font = font;\n\n        // Get char width\n        data.width = Math.round(metricsContext.measureText(char).width);\n\n        // Return if char = space\n        if ((/(\\s)/).test(char)) return data;\n\n        // set canvas size (with padding so we can messure)\n        const paddingY = Math.round(fontSize * 0.7); const\n            paddingX = Math.max(5, Math.round(fontSize * 0.7));\n\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\n        metricsCanvas.height = 1.5 * fontSize;\n        const w = metricsCanvas.width; const h = metricsCanvas.height; const\n            baseline = (h / 2) + (paddingY * 0.5);\n\n        // set font again after resize\n        metricsContext.font = font;\n\n        // make sure canvas is clean\n        metricsContext.clearRect(0, 0, w, h);\n\n        // save clean state with font\n        metricsContext.save();\n\n        // convert shadow string to shadow data\n        const shadowData = function (str)\n        {\n            const data = str.trim().split(' ');\n\n            return {\n                color: string(data[0], '#000000'),\n                alpha: float(data[1], 0.5),\n                xOffset: float(data[2], 3),\n                yOffset: float(data[3], 3),\n                blur: float(data[4], 5),\n            };\n        };\n\n        // convert fill string to fill data\n        const fillData = function (str)\n        {\n            const data = str.trim().split(' ');\n            const c = string(data[0], '#FFFFFF');\n            const a = float(data[1], 1);\n\n            return {\n                color: c,\n                alpha: a,\n                position: float(data[2], -1),\n                rgba: hexToRgba(c, a),\n            };\n        };\n\n        // create fill style from fill string\n        const getFillStyle = function (str)\n        {\n            const fills = str.split(',').filter(function (s) { return s !== ''; }); let\n                i;\n\n            // convert to fill data\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\n\n            switch (fills.length)\n            {\n                case 0: return 'white';\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || '#FFFFFF';\n                default:\n                    // make gradient\n                    try\n                    {\n                        const gradEnd = baseline + lineHeight - fontSize;\n                        const gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\n\n                        for (i = 0; i < fills.length; i++)\n                        { gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color); }\n\n                        return gradient;\n                    }\n                    catch (e)\n                    {\n                        return '#FFFFFF';\n                    }\n            }\n        };\n\n        // function to draw shadows\n        const drawShadows = function (shadowString, stroke)\n        {\n            const shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\n\n            if (shadows.length)\n            {\n                for (let i = 0; i < shadows.length; i++)\n                {\n                    const s = shadowData(shadows[i]);\n\n                    metricsContext.globalAlpha = s.alpha;\n                    metricsContext.shadowColor = s.color;\n                    metricsContext.shadowOffsetX = s.xOffset + w;\n                    metricsContext.shadowOffsetY = s.yOffset;\n                    metricsContext.shadowBlur = s.blur;\n\n                    if (stroke)\n                    {\n                        metricsContext.lineWidth = style.stroke;\n                        metricsContext.strokeText(char, paddingX - w, baseline);\n                    }\n                    else metricsContext.fillText(char, paddingX - w, baseline);\n                }\n                metricsContext.restore();\n            }\n        };\n\n        // draw text shadows\n        if (style.shadow.length)\n        { drawShadows(style.shadow, false); }\n\n        // draw stroke shadows\n        if (style.stroke && style.strokeShadow.length)\n        {\n            drawShadows(style.strokeShadow, true);\n        }\n\n        // draw text\n        metricsContext.fillStyle = getFillStyle(string(style.fill, '#000000'));\n        metricsContext.fillText(char, paddingX, baseline);\n        metricsContext.restore();\n\n        // draw stroke\n        if (style.stroke)\n        {\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, '#000000'));\n            metricsContext.lineWidth = style.stroke;\n            metricsContext.strokeText(char, paddingX, baseline);\n            metricsContext.restore();\n        }\n\n        // begin messuring\n        const pixelData = metricsContext.getImageData(0, 0, w, h).data;\n\n        let i = 3;\n        const line = w * 4;\n        const len = pixelData.length;\n\n        // scanline on alpha\n        while (i < len && !pixelData[i]) { i += 4; }\n        const ascent = (i / line) | 0;\n\n        if (i < len)\n        {\n            // rev scanline on alpha\n            i = len - 1;\n            while (i > 0 && !pixelData[i]) { i -= 4; }\n            const descent = (i / line) | 0;\n\n            // left to right scanline on alpha\n            for (i = 3; i < len && !pixelData[i];)\n            {\n                i += line;\n                if (i >= len) { i = (i - len) + 4; }\n            }\n            const minx = ((i % line) / 4) | 0;\n\n            // right to left scanline on alpha\n            let step = 1;\n\n            for (i = len - 1; i >= 0 && !pixelData[i];)\n            {\n                i -= line;\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\n            }\n            const maxx = ((i % line) / 4) + 1 | 0;\n\n            // set font metrics\n            data.ascent = Math.round(baseline - ascent);\n            data.descent = Math.round(descent - baseline);\n            data.height = 1 + Math.round(descent - ascent);\n            data.bounds = {\n                minx: minx - paddingX,\n                maxx: maxx - paddingX,\n                miny: 0,\n                maxy: descent - ascent,\n            };\n            data.rect = {\n                x: data.bounds.minx,\n                y: -data.ascent - 2,\n                width: data.bounds.maxx - data.bounds.minx + 2,\n                height: data.ascent + data.descent + 4,\n            };\n\n            // cache (for fast rearrange later)\n            data.canvas = document.createElement('canvas');\n            data.canvas.width = data.rect.width;\n            data.canvas.height = data.rect.height;\n            const c = data.canvas.getContext('2d');\n\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\n\n            // reset rect position\n            data.rect.x = data.rect.y = 0;\n        }\n\n        return data;\n    };\n\n    addCanvas();\n};\n\n// helper function for float or default\nfunction float(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseFloat(val);\n}\n\n// helper function for int or default\nfunction int(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseInt(val);\n}\n\n// helper function for string or default\nfunction string(val, def)\n{\n    if (typeof val === 'string' && val.length) return val;\n\n    return def;\n}\n\n// helper function to convert string hex to int or default\nfunction hexToInt(str, def)\n{\n    if (typeof str === 'number')\n    { return str; }\n\n    const result = parseInt(str.replace('#', '0x'));\n\n    if (isNaN(result)) return def;\n\n    return result;\n}\n\n// helper function to convert hex to rgba\nfunction hexToRgba(hex, alpha)\n{\n    const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n    alpha = float(alpha, 1);\n\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},${alpha})` : false;\n}\n\n","function EaseBase()\n{\n    this.getPosition = function (p)\n    {\n        return p;\n    };\n}\n\nEaseBase.prototype.constructor = EaseBase;\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","export const Ease = {};\nimport { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst HALF_PI = Math.PI * 0.5;\n\nfunction create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\n// Liear\nEase.Linear = new EaseBase();\n\n// Exponetial Eases\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Ease.Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\n","import * as PIXI from 'pixi.js';\n\nexport class MouseScrollEvent\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    private obj: any;\n\n    constructor(obj: any, preventDefault: boolean)\n    {\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.obj = obj;\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseScrollImpl = (e): void =>\n    {\n        const { obj, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(obj, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n\n    stopEvent(): void\n    {\n        const { obj, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        obj.contentContainer.removeListener('mouseover', onHoverImpl);\n        obj.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    startEvent(): void\n    {\n        const { obj, onHoverImpl, onMouseOutImpl } = this;\n\n        obj.contentContainer.on('mouseover', onHoverImpl);\n        obj.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { ClickEvent } from './ClickEvent';\nimport { DragEvent } from './DragEvent';\nimport { InputController } from './InputController';\nimport { MouseScrollEvent } from './MouseScrollEvent';\n\nexport const Interaction = {\n    ClickEvent,\n    DragEvent,\n    InputController,\n    MouseScrollEvent,\n};\n\nexport default Interaction;\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Widget } from './Widget';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n* An UI Slider, the default width/height is 90%\n*\n* @class\n* @extends Widget\n* @memberof PIXI.UI\n* @param options {Object} Slider settings\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n* @param [options.vertical=false] {boolean} Direction of the slider\n* @param [options.value=0] {number} value of the slider\n* @param [options.minValue=0] {number} minimum value\n* @param [options.maxValue=100] {number} max value\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\n*/\nexport class Slider extends Widget\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    constructor(options: ISliderOptions)\n    {\n        super(0, 0);\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.contentContainer.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.contentContainer.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.contentContainer.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragEvent(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragEvent(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n}\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollingContainer } from './ScrollingContainer';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollingContainer;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PIXI.UI.Slider\n * @memberof PIXI.UI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollingContainer;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { InputBase, IInputBaseOptions } from './InputBase';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { ScrollingContainer } from './ScrollingContainer';\nimport * as PIXI from 'pixi.js';\n\ninterface ITextInputOptions extends IInputBaseOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: PIXI.Container;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param options.value {String} Text content\n * @param [options.multiLine=false] {Boolean} Multiline input\n * @param options.style {PIXI.TextStyle} Style used for the Text\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n * @param [options.width=150] {Number} width of input\n * @param [options.height=20] {Number} height of input\n * @param [options.padding=3] {Number} input padding\n * @param [options.paddingTop=0] {Number} input padding\n * @param [options.paddingBottom=0] {Number} input padding\n * @param [options.paddingLeft=0] {Number} input padding\n * @param [options.paddingRight=0] {Number} input padding\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.maxLength=0] {Number} 0 = unlimited\n * @param [options.caretWidth=1] {Number} width of the caret\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\n */\nexport class TextInput extends InputBase\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollingContainer;\n\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    constructor(options: ITextInputOptions)\n    {\n        super(options);\n\n        // create temp input (for mobile keyboard)\n        if (typeof mockDOMInput === 'undefined')\n        {\n            mockDOMInput = document.createElement('INPUT');\n            mockDOMInput.setAttribute('type', 'text');\n            mockDOMInput.setAttribute('id', '_pui_tempInput');\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n            document.body.appendChild(mockDOMInput);\n        }\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollingContainer({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        }).setPadding(\n            paddingLeft || 3,\n            paddingTop || 3,\n            paddingRight || 3,\n            paddingBottom || 3,\n        ) as ScrollingContainer;\n\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragEvent(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._focused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer;\n    }\n\n    update(): void\n    {\n        if (this.width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    keyDownEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        this.emit('keydown', e);\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._focused)\n        {\n            super.focus();\n\n            const l = `${this.contentContainer.worldTransform.tx}px`;\n            const t = `${this.contentContainer.worldTransform.ty}px`;\n            const h = `${this.contentContainer.height}px`;\n            const w = `${this.contentContainer.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.keyDownEvent, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._focused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.keyDownEvent);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { MouseScrollEvent } from './Interaction/MouseScrollEvent';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    width?: number;\n    height?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * An UI Container object with expandMask hidden and possibility to enable scrolling\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n * @param [options.width=0] {Number|String} container width\n * @param [options.height=0] {Number} container height\n * @param [options.radius=0] {Number} corner radius of clipping mask\n * @param [options.expandMask=0] {Number} mask expand (px)\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n */\nexport class ScrollingContainer extends InteractiveGroup\n{\n    private mask: PIXI.Graphics;\n    private innerContainer: PIXI.Container;\n    private innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    forcePctPosition: (direction: string, pct: number) => void;\n    focusPosition: (pos: PIXI.Point) => void;\n    setScrollPosition: (speed?: PIXI.Point) => void;\n    updateScrollPosition: (delta: number) => void;\n    updateDirection: (direction: string, delta: number) => void;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super();\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new PIXI.Container();\n        this.innerBounds = new PIXI.Rectangle();\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.addChild(this.innerContainer);\n        this.contentContainer.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n        this.initScrolling();\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    update(): void\n    {\n        super.update();\n\n        if (this._lastWidth !== this._width || this._lastHeight !== this._height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n            // this.mask.drawRect(0, 0, this._width, this._height);\n            // this.mask.drawRect(-of, -of, this._width + of, this.height + of);\n            // this.mask.moveTo(-of, -of);\n            // this.mask.lineTo(this._width + of, -of);\n            // this.mask.lineTo(this._width + of, this._height + of);\n            // this.mask.lineTo(-of, this._height + of);\n                this.mask.drawRect(-of, -of, this._width + of, this._height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n            this._lastWidth = this._width;\n            this._lastHeight = this._height;\n        }\n\n        if (this.setScrollPosition)\n        {\n            this.setScrollPosition();\n        }\n    }\n\n    addChild(...newChildren: Widget[]): Widget\n    {\n        for (let i = 0; i < newChildren.length; i++)\n        {\n            super.addChild(newChildren[i]);\n            this.innerContainer.addChild(newChildren[i].contentContainer);\n        }\n\n        this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n\n        return newChildren[0];\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    initScrolling(): void\n    {\n        const container = this.innerContainer;\n        const containerStart = new PIXI.Point();\n        const targetPosition = new PIXI.Point();\n        const lastPosition = new PIXI.Point();\n        const Position = new PIXI.Point();\n        let Speed = new PIXI.Point();\n        let stop;\n\n        this.forcePctPosition = (direction: string, pct: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            if (this.scrollX && direction === 'x')\n            {\n                container.position[direction] = -((bounds.width - this._width) * pct);\n            }\n            if (this.scrollY && direction === 'y')\n            {\n                container.position[direction] = -((bounds.height - this._height) * pct);\n            }\n\n            Position[direction] = targetPosition[direction] = container.position[direction];\n        };\n\n        this.focusPosition = (pos: PIXI.Point): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let dif;\n\n            if (this.scrollX)\n            {\n                const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n                if (x + container.x > this._width)\n                {\n                    dif = x - this._width;\n                    container.x = -dif;\n                }\n                else if (x + container.x < 0)\n                {\n                    dif = x + container.x;\n                    container.x -= dif;\n                }\n            }\n\n            if (this.scrollY)\n            {\n                const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n                if (y + container.y > this._height)\n                {\n                    dif = y - this._height;\n                    container.y = -dif;\n                }\n                else if (y + container.y < 0)\n                {\n                    dif = y + container.y;\n                    container.y -= dif;\n                }\n            }\n\n            lastPosition.copyFrom(container.position);\n            targetPosition.copyFrom(container.position);\n            Position.copyFrom(container.position);\n            this.updateScrollBars();\n        };\n\n        this.setScrollPosition = (speed: PIXI.Point): void =>\n        {\n            if (speed)\n            {\n                Speed = speed;\n            }\n\n            if (!this.animating)\n            {\n                this.animating = true;\n                lastPosition.copyFrom(container.position);\n                targetPosition.copyFrom(container.position);\n\n                Ticker.on('update', this.updateScrollPosition, this);\n            }\n        };\n\n        this.updateScrollPosition = (delta: number): void =>\n        {\n            stop = true;\n            if (this.scrollX) this.updateDirection('x', delta);\n            if (this.scrollY) this.updateDirection('y', delta);\n            if (stop)\n            {\n                Ticker.removeListener('update', this.updateScrollPosition);\n                this.animating = false;\n            }\n        };\n\n        this.updateDirection = (direction: string, delta: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let min;\n\n            if (direction === 'y')\n            {\n                min = Math.round(Math.min(0, this._height - bounds.height));\n            }\n            else\n            {\n                min = Math.round(Math.min(0, this._width - bounds.width));\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) !== 0)\n            {\n                targetPosition[direction] += Speed[direction];\n                Speed[direction] = Helpers.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n                if (targetPosition[direction] > 0)\n                {\n                    targetPosition[direction] = 0;\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    targetPosition[direction] = min;\n                }\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) === 0\n                && (container[direction] > 0 || container[direction] < min))\n            {\n                const target = Position[direction] > 0 ? 0 : min;\n\n                Position[direction] = Helpers.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\n                stop = false;\n            }\n            else if (this.scrolling || Math.round(Speed[direction]) !== 0)\n            {\n                if (this.scrolling)\n                {\n                    Speed[direction] = Position[direction] - lastPosition[direction];\n                    lastPosition.copyFrom(Position);\n                }\n                if (targetPosition[direction] > 0)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n                }\n                else\n                {\n                    Position[direction] = targetPosition[direction];\n                }\n                stop = false;\n            }\n\n            container.position[direction] = Math.round(Position[direction]);\n            this.updateScrollBars();\n        };\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag = new DragEvent(this);\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    containerStart.copyFrom(container.position);\n                    Position.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n                    this.emit('dragStart', e);\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragMove = (e, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = containerStart.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = containerStart.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('dragEnd', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new MouseScrollEvent(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n}\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends InteractiveGroup\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n */\nexport class Sprite extends Widget\n{\n    private spriteDisplay: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        super();\n\n        this.spriteDisplay = new PIXI.Sprite(texture);\n        this.contentContainer.addChild(this.spriteDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.spriteDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.spriteDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @class\n * @memberof PUXI\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    widgetChildren: Widget[];\n\n    stage: any;\n\n    protected background: PIXI.Container;\n\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n    }\n\n    protected measureAndLayout(): void\n    {\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++)\n        {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this._width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this._height : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this._width,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this._height,\n                widthMeasureMode,\n                heightMeasureMode);\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= this._width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= this._height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight(),\n                true);\n        }\n    }\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): void\n    {\n        if (this.background)\n        {\n            super.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            super.addChildAt(bg, 0);\n        }\n    }\n\n    private update(widgets: Widget[]): void\n    {\n        for (let i = 0, j = widgets.length; i < j; i++)\n        {\n            this.update(widgets[i].widgetChildren);\n            widgets[i].update();\n        }\n    }\n\n    render(renderer: PIXI.Renderer): void\n    {\n        this.update(this.widgetChildren);\n        super.render(renderer);\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n\n        this.measureAndLayout();\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.insetContainer);\n\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n\n        this.measureAndLayout();\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n\n        this.measureAndLayout();\n    }\n\n    get _width(): number\n    {\n        return this.__width;\n    }\n    set _width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get _height(): number\n    {\n        return this.__height;\n    }\n    set _height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A static text widget. It cannot retain children.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport class Text extends Widget\n{\n    private textDisplay: PIXI.Text;\n\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        super();\n\n        this.textDisplay = new PIXI.Text(text, textStyle);\n        this.contentContainer.addChild(this.textDisplay);\n    }\n\n    update(): void\n    {\n        // set tint\n        if (this.tint !== null)\n        {\n            this.textDisplay.tint = this.tint;\n        }\n\n        // set blendmode\n        if (this.blendMode !== null)\n        {\n            this.textDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this.textDisplay.text;\n    }\n    set value(val: string)\n    {\n        this.textDisplay.text = val;\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @namespace PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n    protected noPercents: boolean;\n\n    constructor()\n    {\n        this.noPercents = false;\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    private measureChild(child: Widget,\n        maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode: number;\n        let widgetHeightMode: number;\n\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1))\n        {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1)\n        {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1)\n        {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1))\n        {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1)\n        {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1)\n        {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        child.measure(\n            maxWidgetWidth,\n            maxWidgetHeight,\n            widgetWidthMode,\n            widgetHeightMode,\n        );\n    }\n\n    measureStretch(lowerAnchor: number,\n        upperAnchor: number,\n        childDimen: number): number\n    {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1))\n        {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1)\n        {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1)\n        {\n            return upperAnchor;\n        }\n\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n\n    measureChildren(maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight,\n                MeasureMode.EXACTLY,\n                MeasureMode.EXACTLY);\n        }\n\n        let maxX = 0;\n        let maxY = 0;\n\n        const children = this.host.widgetChildren;\n\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = maxX;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = maxY;\n        }\n\n        this.measureChildren(this.measuredWidth, this.measuredHeight,\n            MeasureMode.EXACTLY,\n            MeasureMode.EXACTLY);\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n\n            if (anchorLeft > -1 && anchorLeft <= 1)\n            {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1)\n            {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1)\n            {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1)\n            {\n                anchorBottom *= parent.height;\n            }\n\n            let x = 0;\n            let y = 0;\n\n            if (childWidth !== 0)\n            {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n\n            if (childHeight !== 0)\n            {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n"],"names":["obj","this","e","_a","start","_onDragMove","_onDragEnd","_this","id","data","identifier","onPress","call","bound","copyFrom","global","stage","on","originalEvent","preventDefault","mouse","offset","set","x","y","dragging","movementX","Math","abs","movementY","max","dragThreshold","dragRestrictAxis","cancel","onDragStart","onDragMove","removeListener","onDragEnd","PIXI.Point","interactive","startEvent","DragEvent","_onDragStart","contentContainer","isPressed","_items","DragDropController","add","item","event","_dragDropEventId","indexOf","push","[object Object]","object","index","i","length","splice","group","dragGroup","ALIGN","reset","dirtyId","Insets","left","top","right","bottom","MeasureMode","width","height","LayoutOptions","WRAP_CONTENT","markers","Object","_marginLeft","val","_marginTop","_marginRight","_marginBottom","anchorLeft","anchorTop","anchorRight","anchorBottom","horizontalAlign","verticalAlign","NONE","_super","__extends","anchor","FastLayoutOptions","DEFAULT_ANCHOR","clone","_currentItem","insetContainer","PIXI.Container","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","tint","blendMode","PIXI.BLEND_MODES","NORMAL","_dragPosition","Widget","background","bg","removeChild","addChildAt","_measuredWidth","_measuredHeight","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","child","childOptions","layoutOptions","DEFAULT","maxWidth","FILL_PARENT","measuredWidth","maxHeight","measuredHeight","measure","l","t","r","b","_width","_height","lopt","UIObject","argumentsLength","arguments","parent","argumentLenght","container","draggable","initDraggable","droppable","initDroppable","drag","stopEvent","containerStart_1","stageOffset_1","self_1","added","copy","position","dragContainer","c","worldTransform","tx","ty","emit","setTimeout","getItem","toLocal","onDrop","self_2","getEventItem","dropGroup","droppableReparent","alpha","PIXI.utils","EventEmitter","includeHover","rightMouseButton","doubleClick","eventname_mouseup","_onMouseUp","eventname_mouseupoutside","_onMouseUpOutside","double","now","performance","time","onClick","_mouseUpAll","ishover","_onMouseMove","onHover","onMove","_onMouseDown","_onMouseOver","_onMouseOut","eventname_mousedown","hover","ClickEvent","over","tabGroups","checkGroups","checkGroupValues","InputController","registrer","tabIndex","tabGroup","groupName","items","_tabIndex","undefined","_tabGroup","sort","a","blur","clear","fireTab","focus","fireNext","firePrev","registrerCheckGroup","cb","name","checkGroup","value","checked","updateCheckGroupSelected","getCheckGroupSelectedValue","setCheckGroupSelectedValue","FastLayout","host","children","j","widget","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","childWidth","getMeasuredWidth","minr","childHeight","getMeasuredHeight","minb","dimen","parentMeasureMode","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","options","which","_useTab","_usePrev","_useNext","__down","documentMouseDown","document","addEventListener","keyDownEvent","off","removeEventListener","setBackground","_focused","InputBase","_clearEvents","_bindEvents","pivot","isHover","textWidget","text","setLayoutOptions","CENTER_ANCHOR","buttonMode","Button","clickEvent","click","prototype","initialize","interactiveChildren","bounds","getLocalBounds","hitArea","PIXI.Rectangle","InteractiveGroup","_checked","_value","checkgroup","checkmark","change","CheckBox","DynamicTextStyle","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","atlas","ellipsis","getCharObject","letterSpacing","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","merge","param","_dirty","ctxKey","char","fill","shadow","stroke","strokeFill","strokeShadow","join","ctxFont","fontSize","fontWeight","fontStyle","fontFamily","constructor","defineProperties","dirtyStyle","update","scale","align","lineHeight","rotation","skew","wrap","breakWords","overflowX","overflowY","DynamicText","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","chars","renderChars","spriteCache","charContainer","PIXI","Container","_inputText","lastWidth","lastHeight","dirtyText","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","visible","lineWidth","maxLineWidth","texture","tex","sprite","Sprite","hexToInt","float","prepareForRender","pos","Point","lineFontSize","lineAlignment","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","lineFull","lastChar","size","round","ellipsisData","d","dot","parseFloat","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","charCodeAt","test","allowTags","tag","substring","slice","FoundTag","startsWith","regex","match","exec","emojiMatch","emojiRegex","settings","defaultEmojiFont","lazyUpdate","self","dirtySize","create","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","AtlasNode","w","h","rect","Rectangle","insert","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","familyCache","key","metrics","generateCharData","minx","descent","Texture","addNewObjects","compareFunction","_resized","_newcanvas","resizeCanvas","dim","def","isNaN","parseInt","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","str","trim","split","color","string","fillData","rgba","hexToRgba","getFillStyle","fills","filter","s","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","fillStyle","strokeStyle","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","result","replace","hex","EaseBase","getPosition","p","ExponentialEase","power","easeIn","easeOut","pow","Ease","HALF_PI","PI","fn","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","MouseScrollEvent","onHoverImpl","onMouseOutImpl","Interaction","Helpers","Lerp","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","g","rgbToNumber","numberToRgb","floor","hexToRgb","m","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","tweens","active","onUpdate","_ready","callback","currentTime","CallbackItem","keys","_tweenObjectId","_currentCallbackID","remove","to","ease","isColor","TweenItem","surfix","getSurfix","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","TweenObject","getTweenItem","tween","getCallbackItem","Tween","params","fromTo","paramsFrom","paramsTo","_update","_amt","_disabled","track","handle","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","Slider","soft","handleSize","maxPosition","localMousePosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","stopPropagation","trackDrag","scrollingContainer","autohide","_hidden","ScrollBar","innerContainer","forcePctPosition","_scrollBars","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","autoStart","_now","DeltaTime","Time","Ms","disabled","Ticker","shared","requestAnimationFrame","once","mockDOMInput","mask","PIXI.Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","initScrolling","ScrollingContainer","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","_i","newChildren","getInnerBounds","alignToContainer","force","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","focusPosition","dif","updateScrollBars","speed","updateScrollPosition","updateDirection","target","exp","scrollSpeed","desc","tweenTime","tweenEase","SortableList","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","altering","updatesettings","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","f","setting","minWidth","minHeight","sbr","sr","sbl","sb","sf","st","sl","stl","SliceSprite","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","_b","PIXI.extras","TilingSprite","PIXI.Texture","PIXI.Sprite","spriteDisplay","imageUrl","PIXI.BaseTexture","__width","__height","resize","Stage","MAX_DIMEN","widgets","renderer","measureAndLayout","rx","ry","textStyle","textDisplay","PIXI.Text","Text","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","_atEnd","multiLine","vrdd","hasSelection","de","textHeightPX","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","selectIndex","clipboardData","window","setData","copyEvent","getData","setAttribute","cacheAsBitmap","inputBlurEvent","keyUpEvent","pasteEvent","cutEvent","inputEvent","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","scrollToPosition","showCaret","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","_dirtyText","maxLength","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","setPadding","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","TextInput","mouseDown","timeSinceLast","selectWord","updateText","whitespace","lastWordIndex","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","clearInterval","caretInterval","setInterval","tilePosition","tileScale","noPercents","AnchorLayout","maxParentWidth","maxParentHeight","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","LEFT","MIDDLE","RIGHT","TOP"],"mappings":"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"}