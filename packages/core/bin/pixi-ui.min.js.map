{"version":3,"file":"pixi-ui.min.js","sources":["../lib/event/DragDropController.js","../lib/layout-options/Insets.js","../lib/IMeasurable.js","../lib/layout-options/Align.js","../lib/event/EventManager.js","../lib/event/ClickManager.js","../lib/event/DragManager.js","../lib/event/EventBroker.js","../lib/event/ScrollManager.js","../lib/Widget.js","../lib/layout-options/LayoutOptions.js","../lib/layout-options/FastLayoutOptions.js","../lib/layout-manager/FastLayout.js","../lib/WidgetGroup.js","../lib/InteractiveGroup.js","../lib/FocusableWidget.js","../lib/TextWidget.js","../lib/Ease/EaseBase.js","../lib/Ease/ExponentialEase.js","../lib/Ease/Ease.js","../lib/Helpers.js","../lib/Tween.js","../lib/Slider.js","../lib/Ticker.js","../lib/ScrollWidget.js","../lib/Sprite.js","../lib/ctl/Controller.js","../lib/Stage.js","../lib/TextInput.js","../lib/ctl/CheckBoxGroupController.js","../lib/ctl/FocusController.js","../lib/layout-manager/AnchorLayout.js","../lib/layout-options/AnchorLayoutOptions.js","../lib/Button.js","../lib/CheckBox.js","../lib/ScrollBar.js","../lib/SliceSprite.js","../lib/SortableList.js","../lib/TilingSprite.js"],"sourcesContent":["const _items = [];\nconst DragDropController = {\n    add(item, event) {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1) {\n            _items.push(item);\n            return true;\n        }\n        return false;\n    },\n    getItem(object) {\n        let item = null;\n        let index;\n        for (let i = 0; i < _items.length; i++) {\n            if (_items[i] === object) {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n        if (item !== null) {\n            _items.splice(index, 1);\n            return item;\n        }\n        return false;\n    },\n    getEventItem(event, group) {\n        let item = null;\n        let index;\n        const id = event.data.identifier;\n        for (let i = 0; i < _items.length; i++) {\n            if (_items[i]._dragDropEventId === id) {\n                if (group !== _items[i].dragGroup) {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n        if (item !== null) {\n            _items.splice(index, 1);\n            return item;\n        }\n        return false;\n    },\n};\nexport { DragDropController };\nexport default DragDropController;\n//# sourceMappingURL=DragDropController.js.map","/**\n * @memberof PUXI\n * @class\n */\nexport class Insets {\n    constructor() {\n        this.reset();\n        this.dirtyId = 0;\n    }\n    reset() {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n//# sourceMappingURL=Insets.js.map","/**\n * These are the modes in which an entity can measures its dimension. They are\n * relevant when a layout needs to know the optimal sizes of its children.\n *\n * @memberof PUXI\n * @enum\n * @property {number} UNBOUNDED - no upper limit on bounds. This should calculate the optimal dimensions for the entity.\n * @property {number} EXACTLY - the entity should set its dimension to the one passed to it.\n * @property {number} AT_MOST - the entity should find an optimal dimension below the one passed to it.\n */\nexport var MeasureMode;\n(function (MeasureMode) {\n    MeasureMode[MeasureMode[\"UNBOUNDED\"] = 0] = \"UNBOUNDED\";\n    MeasureMode[MeasureMode[\"EXACTLY\"] = 1] = \"EXACTLY\";\n    MeasureMode[MeasureMode[\"AT_MOST\"] = 2] = \"AT_MOST\";\n})(MeasureMode || (MeasureMode = {}));\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n *\n * @memberof PUXI\n * @interface IMeasurable\n */\n/**\n * Measures its width & height based on the passed constraints.\n *\n * @memberof PUXI.IMeasurable#\n * @method onMeasure\n * @param {number} maxWidth\n * @param {number} maxHeight\n * @param {PUXI.MeasureMode} widthMode\n * @param {PUXI.MeasureMode} heightMode\n */\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredWidth\n * @returns {number} - the measured width of the entity after a `onMeasure` call\n */\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredHeight\n * @returns {number} - the measured height of the entity after a `onMeasure` call\n */\n//# sourceMappingURL=IMeasurable.js.map","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @memberof PUXI\n * @enum\n */\nexport var ALIGN;\n(function (ALIGN) {\n    ALIGN[ALIGN[\"LEFT\"] = 0] = \"LEFT\";\n    ALIGN[ALIGN[\"TOP\"] = 0] = \"TOP\";\n    ALIGN[ALIGN[\"MIDDLE\"] = 4081] = \"MIDDLE\";\n    ALIGN[ALIGN[\"CENTER\"] = 4081] = \"CENTER\";\n    ALIGN[ALIGN[\"RIGHT\"] = 1048561] = \"RIGHT\";\n    ALIGN[ALIGN[\"BOTTOM\"] = 1048561] = \"BOTTOM\";\n    ALIGN[ALIGN[\"NONE\"] = 4294967295] = \"NONE\";\n})(ALIGN || (ALIGN = {}));\n//# sourceMappingURL=Align.js.map","/**\n * An event manager handles the states related to certain events and can augment\n * widget interaction. For example, the click manager will hide clicks when\n * the object is dragging.\n *\n * Event managers are lifecycle objects - they can start/stop. Their constructor\n * will always accept one argument - the widget. Other settings can be applied before\n * `startEvent`.\n *\n * Ideally, you should access event managers _after_ your widget has initialized. This is\n * because it may depend on the widget's stage being assigned.\n *\n * @memberof PUXI\n * @class\n * @abstract\n */\nexport class EventManager {\n    /**\n     * @param {Widget} target\n     */\n    constructor(target) {\n        this.target = target;\n        this.isEnabled = false; // use to track start/stopEvent\n    }\n    /**\n     * @returns {Widget}\n     */\n    getTarget() {\n        return this.target;\n    }\n}\n//# sourceMappingURL=EventManager.js.map","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\n/**\n * `ClickManager` handles hover and click events. It registers listeners\n * for `mousedown`, `mouseup`, `mousemove`, `mouseout`, `mouseover`, `touchstart`,\n * `touchend`, `touchendoutside`, `touchmove`, `rightup`, `rightdown`, `rightupoutside`\n * events.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ClickManager extends EventManager {\n    /**\n     * @param {PUXI.Widget | PUXI.Button} target\n     * @param {boolean}[includeHover=false] - enable hover (`mouseover`, `mouseout`) listeners\n     * @param {boolean}[rightMouseButton=false] - use right mouse clicks\n     * @param {boolean}[doubleClick=false] - fire double clicks\n     */\n    constructor(target, includeHover, rightMouseButton, doubleClick) {\n        super(target);\n        /**\n         * @param {boolean}[includeHover]\n         * @param {boolean}[rightMouseButton]\n         * @param {boolean}[doubleClick]\n         * @override\n         */\n        this.startEvent = (includeHover = this._includeHover, rightMouseButton = this._rightMouseButton, doubleClick = this._doubleClick) => {\n            if (this.isEnabled) {\n                return;\n            }\n            this._includeHover = includeHover;\n            this.rightMouseButton = rightMouseButton;\n            this._doubleClick = doubleClick;\n            const { target } = this;\n            target.insetContainer.on(this.evMouseDown, this.onMouseDownImpl);\n            if (!this._rightMouseButton) {\n                target.insetContainer.on('touchstart', this.onMouseDownImpl);\n            }\n            if (this._includeHover) {\n                target.insetContainer.on('mouseover', this.onMouseOverImpl);\n                target.insetContainer.on('mouseout', this.onMouseOutImpl);\n            }\n            this.isEnabled = true;\n        };\n        /**\n         * @override\n         */\n        this.stopEvent = () => {\n            if (!this.isEnabled) {\n                return;\n            }\n            const { target } = this;\n            if (this.bound) {\n                target.insetContainer.removeListener(this.evMouseUp, this.onMouseUpImpl);\n                target.insetContainer.removeListener(this.evMouseUpOutside, this.onMouseUpOutsideImpl);\n                if (!this._rightMouseButton) {\n                    target.insetContainer.removeListener('touchend', this.onMouseUpImpl);\n                    target.insetContainer.removeListener('touchendoutside', this.onMouseUpOutsideImpl);\n                }\n                this.bound = false;\n            }\n            target.insetContainer.removeListener(this.evMouseDown, this.onMouseDownImpl);\n            if (!this._rightMouseButton) {\n                target.insetContainer.removeListener('touchstart', this.onMouseDownImpl);\n            }\n            if (this._includeHover) {\n                target.insetContainer.removeListener('mouseover', this.onMouseOverImpl);\n                target.insetContainer.removeListener('mouseout', this.onMouseOutImpl);\n                target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n                target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n            }\n            this.isEnabled = false;\n        };\n        this.onMouseDownImpl = (event) => {\n            const { target: obj, evMouseUp, onMouseUpImpl: _onMouseUp, evMouseUpOutside, onMouseUpOutsideImpl: _onMouseUpOutside, _rightMouseButton: right, } = this;\n            this.mouse.copyFrom(event.data.global);\n            this.id = event.data.identifier;\n            this.onPress.call(this.target, event, true);\n            if (!this.bound) {\n                obj.insetContainer.on(evMouseUp, _onMouseUp);\n                obj.insetContainer.on(evMouseUpOutside, _onMouseUpOutside);\n                if (!right) {\n                    obj.insetContainer.on('touchend', _onMouseUp);\n                    obj.insetContainer.on('touchendoutside', _onMouseUpOutside);\n                }\n                this.bound = true;\n            }\n            if (this._doubleClick) {\n                const now = performance.now();\n                if (now - this.time < 210) {\n                    this.onClick.call(obj, event);\n                }\n                else {\n                    this.time = now;\n                }\n            }\n            event.data.originalEvent.preventDefault();\n        };\n        this.onMouseUpCommonImpl = (event) => {\n            const { target: obj, evMouseUp, onMouseUpImpl: _onMouseUp, evMouseUpOutside, onMouseUpOutsideImpl: _onMouseUpOutside, } = this;\n            if (event.data.identifier !== this.id) {\n                return;\n            }\n            this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n            if (this.bound) {\n                obj.insetContainer.removeListener(evMouseUp, _onMouseUp);\n                obj.insetContainer.removeListener(evMouseUpOutside, _onMouseUpOutside);\n                if (!this._rightMouseButton) {\n                    obj.insetContainer.removeListener('touchend', _onMouseUp);\n                    obj.insetContainer.removeListener('touchendoutside', _onMouseUpOutside);\n                }\n                this.bound = false;\n            }\n            this.onPress.call(obj, event, false);\n        };\n        this.onMouseUpImpl = (event) => {\n            if (event.data.identifier !== this.id) {\n                return;\n            }\n            this.onMouseUpCommonImpl(event);\n            // prevent clicks with scrolling/dragging objects\n            if (this.target.dragThreshold) {\n                this.movementX = Math.abs(this.offset.x);\n                this.movementY = Math.abs(this.offset.y);\n                if (Math.max(this.movementX, this.movementY) > this.target.dragThreshold) {\n                    return;\n                }\n            }\n            if (!this._doubleClick) {\n                this.onClick.call(this.target, event);\n            }\n        };\n        this.onMouseUpOutsideImpl = (event) => {\n            if (event.data.identifier !== this.id) {\n                return;\n            }\n            this.onMouseUpCommonImpl(event);\n        };\n        this.onMouseOverImpl = (event) => {\n            if (!this.ishover) {\n                this.ishover = true;\n                this.target.insetContainer.on('mousemove', this.onMouseMoveImpl);\n                this.target.insetContainer.on('touchmove', this.onMouseMoveImpl);\n                this.onHover.call(this.target, event, true);\n            }\n        };\n        this.onMouseOutImpl = (event) => {\n            if (this.ishover) {\n                this.ishover = false;\n                this.target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n                this.target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n                this.onHover.call(this.target, event, false);\n            }\n        };\n        this.onMouseMoveImpl = (event) => {\n            this.onMove.call(this.target, event);\n        };\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this._includeHover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.rightMouseButton = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this._doubleClick = typeof doubleClick === 'undefined' ? false : doubleClick;\n        target.interactive = true;\n        this.time = 0;\n        this.startEvent();\n        this.onHover = () => null;\n        this.onPress = () => null;\n        this.onClick = () => null;\n        this.onMove = () => null;\n    }\n    /**\n     * Whether right mice are used for clicks rather than left mice.\n     * @member boolean\n     */\n    get rightMouseButton() {\n        return this._rightMouseButton;\n    }\n    set rightMouseButton(val) {\n        this._rightMouseButton = val;\n        this.evMouseDown = this._rightMouseButton ? 'rightdown' : 'mousedown';\n        this.evMouseUp = this._rightMouseButton ? 'rightup' : 'mouseup';\n        this.evMouseUpOutside = this._rightMouseButton ? 'rightupoutside' : 'mouseupoutside';\n    }\n}\n//# sourceMappingURL=ClickManager.js.map","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\n/**\n * `DragManager` handles drag & drop events. It registers listeners for `mousedown`,\n * `touchstart` on the target and `mousemove`, `touchmove`, `mouseup`, `mouseupoutside`,\n * `touchend`, `touchendoutside` on the stage.\n *\n * By default, `draggable` widgets will internally handle drag-n-drop and reassigning\n * the callbacks on their `DragManager` will break their behaviour. You can prevent\n * this by using `eventBroker.dnd` directly without setting `widget.draggable` to\n * `true` (or using `widget.makeDraggable()`).\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class DragManager extends EventManager {\n    constructor(target) {\n        super(target);\n        this.onDragStartImpl = (e) => {\n            const { target } = this;\n            this.id = e.data.identifier;\n            this.onPress(e, true);\n            if (!this.isBound) {\n                this.dragStart.copyFrom(e.data.global);\n                target.stage.on('mousemove', this.onDragMoveImpl);\n                target.stage.on('touchmove', this.onDragMoveImpl);\n                target.stage.on('mouseup', this.onDragEndImpl);\n                target.stage.on('mouseupoutside', this.onDragEndImpl);\n                target.stage.on('touchend', this.onDragEndImpl);\n                target.stage.on('touchendoutside', this.onDragEndImpl);\n                target.stage.on('touchcancel', this.onDragEndImpl);\n                this.isBound = true;\n            }\n            e.data.originalEvent.preventDefault();\n        };\n        this.onDragMoveImpl = (e) => {\n            if (e.data.identifier !== this.id) {\n                return;\n            }\n            const { lastCursor, dragOffset, dragStart, target, } = this;\n            this.lastCursor.copyFrom(e.data.global);\n            this.dragOffset.set(lastCursor.x - dragStart.x, lastCursor.y - dragStart.y);\n            if (!this.isDragging) {\n                this.movementX = Math.abs(dragOffset.x);\n                this.movementY = Math.abs(dragOffset.y);\n                if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < target.dragThreshold) {\n                    return; // threshold\n                }\n                if (target.dragRestrictAxis !== null) {\n                    this.cancel = false;\n                    if (target.dragRestrictAxis === 'x' && this.movementY > this.movementX) {\n                        this.cancel = true;\n                    }\n                    else if (target.dragRestrictAxis === 'y' && this.movementY <= this.movementX) {\n                        this.cancel = true;\n                    }\n                    if (this.cancel) {\n                        this.onDragEndImpl(e);\n                        return;\n                    }\n                }\n                this.onDragStart(e);\n                this.isDragging = true;\n            }\n            this.onDragMove(e, dragOffset);\n        };\n        this.onDragEndImpl = (e) => {\n            if (e.data.identifier !== this.id) {\n                return;\n            }\n            const { target } = this;\n            if (this.isBound) {\n                target.stage.removeListener('mousemove', this.onDragMoveImpl);\n                target.stage.removeListener('touchmove', this.onDragMoveImpl);\n                target.stage.removeListener('mouseup', this.onDragEndImpl);\n                target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n                target.stage.removeListener('touchend', this.onDragEndImpl);\n                target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n                target.stage.removeListener('touchcancel', this.onDragEndImpl);\n                this.isDragging = false;\n                this.isBound = false;\n                this.onDragEnd(e);\n                this.onPress(e, false);\n            }\n        };\n        this.isBound = false;\n        this.isDragging = false;\n        this.id = 0;\n        this.dragStart = new PIXI.Point();\n        this.dragOffset = new PIXI.Point();\n        this.lastCursor = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n        this.target.interactive = true;\n        this.onPress = () => null;\n        this.onDragStart = () => null;\n        this.onDragMove = () => null;\n        this.onDragEnd = () => null;\n        this.startEvent();\n    }\n    startEvent() {\n        if (this.isEnabled) {\n            return;\n        }\n        const { target } = this;\n        target.insetContainer.on('mousedown', this.onDragStartImpl);\n        target.insetContainer.on('touchstart', this.onDragStartImpl);\n        this.isEnabled = true;\n    }\n    stopEvent() {\n        if (!this.isEnabled) {\n            return;\n        }\n        const { target } = this;\n        if (this.isBound) {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n            this.isBound = false;\n        }\n        target.insetContainer.removeListener('mousedown', this.onDragStartImpl);\n        target.insetContainer.removeListener('touchstart', this.onDragStartImpl);\n        this.isEnabled = false;\n    }\n}\n//# sourceMappingURL=DragManager.js.map","import { ClickManager } from './ClickManager';\nimport { DragManager } from './DragManager';\n/**\n * The event brokers allows you to access event managers without manually assigning\n * them to a widget. By default, the click (`PUXI.ClickManager`), dnd (`PUXI.DragManager`)\n * are defined. You can add event managers for all (new) widgets by adding an entry to\n * `EventBroker.MANAGER_MAP`.\n *\n * @memberof PUXI\n * @class\n */\nexport class EventBroker {\n    constructor(target) {\n        this.target = target;\n        for (const mgr of Object.keys(EventBroker.MANAGER_MAP)) {\n            Object.defineProperty(this, mgr, {\n                get() {\n                    if (!this[`_${mgr}`]) {\n                        this[`_${mgr}`] = new EventBroker.MANAGER_MAP[mgr](this.target);\n                    }\n                    return this[`_${mgr}`];\n                },\n            });\n        }\n    }\n}\nEventBroker.MANAGER_MAP = {\n    click: ClickManager,\n    dnd: DragManager,\n};\n//# sourceMappingURL=EventBroker.js.map","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\n/**\n * Handles the `wheel` and `scroll` DOM events on widgets. It also registers\n * listeners for `mouseout` and `mouseover`.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ScrollManager extends EventManager {\n    constructor(target, preventDefault = true) {\n        super(target);\n        this.onMouseScrollImpl = (e) => {\n            const { target, preventDefault, delta } = this;\n            if (preventDefault) {\n                event.preventDefault();\n            }\n            if (typeof e.deltaX !== 'undefined') {\n                delta.set(e.deltaX, e.deltaY);\n            }\n            else // Firefox\n             {\n                delta.set(e.axis === 1 ? e.detail * 60 : 0, e.axis === 2 ? e.detail * 60 : 0);\n            }\n            this.onMouseScroll.call(target, event, delta);\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onHoverImpl = (e) => {\n            const { onMouseScrollImpl } = this;\n            if (!this.bound) {\n                document.addEventListener('mousewheel', onMouseScrollImpl, false);\n                document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n                this.bound = true;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onMouseOutImpl = (e) => {\n            const { onMouseScrollImpl } = this;\n            if (this.bound) {\n                document.removeEventListener('mousewheel', onMouseScrollImpl);\n                document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n                this.bound = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onMouseScroll = function onMouseScroll(event, delta) {\n            // Default onMouseScroll.\n        };\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.preventDefault = preventDefault;\n        this.startEvent();\n    }\n    /**\n     * @override\n     */\n    startEvent() {\n        const { target, onHoverImpl, onMouseOutImpl } = this;\n        target.contentContainer.on('mouseover', onHoverImpl);\n        target.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n    /**\n     * @override\n     */\n    stopEvent() {\n        const { target, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n        if (this.bound) {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n            this.bound = false;\n        }\n        target.contentContainer.removeListener('mouseover', onHoverImpl);\n        target.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n}\n//# sourceMappingURL=ScrollManager.js.map","import { DragDropController } from './event/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { MeasureMode } from './IMeasurable';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { EventBroker } from './event';\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport class Widget extends PIXI.utils.EventEmitter {\n    constructor() {\n        super();\n        this.insetContainer = new PIXI.Container();\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n        this._elevation = 0;\n        this.tint = 0;\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n        this.draggable = false;\n        this.droppable = false;\n    }\n    /**\n     * The measured width that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredWidth() {\n        return this._measuredWidth;\n    }\n    /**\n     * The measured height that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredHeight() {\n        return this._measuredHeight;\n    }\n    /**\n     * Alias for `Widget.measuredWidth`.\n     *\n     * @returns {number} the measured width\n     */\n    getMeasuredWidth() {\n        return this._measuredWidth;\n    }\n    /**\n     * Alias for `Widget.measuredHeight`.\n     *\n     * @returns {number} the measured height\n     */\n    getMeasuredHeight() {\n        return this._measuredHeight;\n    }\n    /**\n     * Override this method to measure the dimensions for your widget. By default, it\n     * will use the natural width/height of this widget's content (`contentContainer`)\n     * plus any padding.\n     *\n     * @param {number} width - width of region provided by parent\n     * @param {number} height - height of region provided by parent\n     * @param {PUXI.MeasureMode} widthMode - mode in which provided width is to be used\n     * @param {PUXI.MeasureMode} heightMode - mode in which provided height is to be used\n     */\n    onMeasure(width, height, widthMode, heightMode) {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n        switch (widthMode) {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n        switch (heightMode) {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n    /**\n     * This method calls `Widget.onMeasure` and should not be overriden. It does internal\n     * bookkeeping.\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     */\n    measure(width, height, widthMode, heightMode) {\n        this.onMeasure(width, height, widthMode, heightMode);\n    }\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    layout(l, t = l, r = l, b = t, dirty = true) {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n        this._width = r - l;\n        this._height = b - t;\n        if (this.background) {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n        // this.container.width = r - l;\n        // this.container.height = b - t;\n    }\n    /**\n     * Use this to specify how you want to layout this widget w.r.t its parent.\n     * The specific layout options class depends on which layout you are\n     * using in the parent widget.\n     *\n     * @param {PUXI.LayoutOptions} lopt\n     * @returns {Widget} this\n     */\n    setLayoutOptions(lopt) {\n        this.layoutOptions = lopt;\n        return this;\n    }\n    /**\n     * The event broker for this widget that holds all the event managers. This can\n     * be used to start/stop clicks, drags, scrolls and configure how those events\n     * are handled/interpreted.\n     * @member PUXI.EventBroker\n     */\n    get eventBroker() {\n        if (!this._eventBroker) {\n            this._eventBroker = new EventBroker(this);\n        }\n        return this._eventBroker;\n    }\n    /**\n     * Padding on left side.\n     * @member {number}\n     */\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val) {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n    /**\n     * Padding on top side.\n     * @member {number}\n     */\n    get paddingTop() {\n        return this._paddingTop;\n    }\n    set paddingTop(val) {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n    /**\n     * Padding on right side.\n     * @member {number}\n     */\n    get paddingRight() {\n        return this._paddingRight;\n    }\n    set paddingRight(val) {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n    /**\n     * Padding on bottom side.\n     * @member {number}\n     */\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val) {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n    /**\n     * Sum of left & right padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingHorizontal() {\n        return this._paddingLeft + this._paddingRight;\n    }\n    /**\n     * Sum of top & bottom padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingVertical() {\n        return this._paddingTop + this._paddingBottom;\n    }\n    /**\n     * Whether this widget is interactive in the PixiJS scene graph.\n     * @member {boolean}\n     */\n    get interactive() {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val) {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n    /**\n     * Layout width of this widget.\n     * @member {number}\n     */\n    get width() {\n        return this._width;\n    }\n    /**\n     * Layout height of this widget.\n     * @member {number}\n     */\n    get height() {\n        return this._height;\n    }\n    /**\n     * Alpha of this widget & its contents.\n     * @member {number}\n     */\n    get alpha() {\n        return this.insetContainer.alpha;\n    }\n    set alpha(val) {\n        this.insetContainer.alpha = val;\n    }\n    /**\n     * Sets the padding values.\n     *\n     * To set all paddings to one value:\n     * ```\n     * widget.setPadding(8);\n     * ```\n     *\n     * To set horizontal & vertical padding separately:\n     * ```\n     * widget.setPadding(4, 12);\n     * ```\n     *\n     * @param {number}[l=0] - left padding\n     * @param {number}[t=l] - top padding (default is equal to left padding)\n     * @param {number}[r=l] - right padding (default is equal to right padding)\n     * @param {number}[b=t] - bottom padding (default is equal to top padding)\n     */\n    setPadding(l, t = l, r = l, b = t) {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n        return this;\n    }\n    /**\n     * @returns {PIXI.Container} - the background display-object\n     */\n    getBackground() {\n        return this.background;\n    }\n    /**\n     * The background of a widget is a `PIXI.DisplayObject` that is rendered before\n     * all of its children.\n     *\n     * @param {PIXI.Container | number | string} bg - the background display-object or\n     *     a color that will be used to generate a `PIXI.Graphics` as the background.\n     */\n    setBackground(bg) {\n        if (this.background) {\n            this.insetContainer.removeChild(this.background);\n        }\n        if (typeof bg === 'string') {\n            bg = PIXI.utils.string2hex(bg);\n        }\n        if (typeof bg === 'number') {\n            bg = new PIXI.Graphics()\n                .beginFill(bg)\n                .drawRect(0, 0, 1, 1)\n                .endFill();\n        }\n        this.background = bg;\n        if (bg) {\n            bg.width = this.width;\n            bg.height = this.height;\n            this.insetContainer.addChildAt(bg, 0);\n        }\n        return this;\n    }\n    /**\n     * @returns {number} the alpha on the background display-object.\n     */\n    getBackgroundAlpha() {\n        return this.background ? this.background.alpha : 1;\n    }\n    /**\n     * This can be used to set the alpha on the _background_ of this widget. This\n     * does not affect the widget's contents nor individual components of the\n     * background display-object.\n     *\n     * @param {number} val - background alpha\n     */\n    setBackgroundAlpha(val) {\n        if (!this.background) {\n            this.setBackground(0xffffff);\n        }\n        this.background.alpha = val;\n        return this;\n    }\n    /**\n     * @return {number} the elevation set on this widget\n     */\n    getElevation() {\n        return this._elevation;\n    }\n    /**\n     * This can be used add a drop-shadow that will appear to raise this widget by\n     * the given elevation against its parent.\n     *\n     * @param {number} val - elevation to use. 2px is good for most widgets.\n     */\n    setElevation(val) {\n        this._elevation = val;\n        if (val === 0 && this._dropShadow) {\n            const i = this.insetContainer.filters.indexOf(this._dropShadow);\n            if (i > 0) {\n                this.insetContainer.filters.splice(i, 1);\n            }\n        }\n        else if (val > 0) {\n            if (!this._dropShadow) {\n                if (!this.insetContainer.filters) {\n                    this.insetContainer.filters = [];\n                }\n                this._dropShadow = new DropShadowFilter({ distance: val });\n                this.insetContainer.filters.push(this._dropShadow);\n            }\n            this._dropShadow.distance = val;\n        }\n        return this;\n    }\n    /**\n     * Adds the widgets as children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    addChild(...widgets) {\n        for (let i = 0; i < widgets.length; i++) {\n            const widget = widgets[i];\n            if (widget.parent) {\n                widget.parent.removeChild(widget);\n            }\n            widget.parent = this;\n            this.contentContainer.addChild(widget.insetContainer);\n            this.widgetChildren.push(widget);\n        }\n        return this;\n    }\n    /**\n     * Orphans the widgets that are children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    removeChild(...widgets) {\n        for (let i = 0; i < widgets.length; i++) {\n            const widget = widgets[i];\n            const index = this.widgetChildren.indexOf(widget);\n            if (index !== -1) {\n                widget.insetContainer.parent.removeChild(widget.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                widget.parent = null;\n            }\n        }\n        return this;\n    }\n    /**\n     * Makes this widget `draggable`.\n     */\n    makeDraggable() {\n        this.draggable = true;\n        if (this.initialized) {\n            this.initDraggable();\n        }\n        return this;\n    }\n    /**\n     * Makes this widget not `draggable`.\n     */\n    clearDraggable() {\n        if (this.dragInitialized) {\n            this.dragInitialized = false;\n            this.eventBroker.dnd.stopEvent();\n        }\n    }\n    /**\n     * Widget initialization related to the stage. This method should always call\n     * `super.initialize()`.\n     *\n     * This method expects `stage` to be set before calling it. This is handled\n     * by the `Stage` itself.\n     *\n     * This will set `initialized` to true. If it was already set to true, it _should\n     * do nothing_.\n     *\n     * @protected\n     */\n    initialize() {\n        if (this.initialized) {\n            return;\n        }\n        if (this.draggable) {\n            this.initDraggable();\n        }\n        if (this.droppable) {\n            this.initDroppable();\n        }\n        this.initialized = true;\n    }\n    initDraggable() {\n        if (this.dragInitialized) {\n            return;\n        }\n        this.dragInitialized = true;\n        const realPosition = new PIXI.Point();\n        const dragPosition = new PIXI.Point();\n        const dnd = this.eventBroker.dnd;\n        const { insetContainer } = this;\n        dnd.onDragStart = (e) => {\n            const added = DragDropController.add(this, e);\n            if (!this.isDragging && added) {\n                this.isDragging = true;\n                insetContainer.interactive = false;\n                realPosition.copyFrom(insetContainer.position);\n                this.emit('draggablestart', e);\n            }\n        };\n        dnd.onDragMove = (e, offset) => {\n            if (this.isDragging) {\n                dragPosition.set(realPosition.x + offset.x, realPosition.y + offset.y);\n                insetContainer.x = dragPosition.x;\n                insetContainer.y = dragPosition.y;\n                this.emit('draggablemove', e);\n            }\n        };\n        dnd.onDragEnd = (e) => {\n            if (this.isDragging) {\n                this.isDragging = false;\n                DragDropController.getItem(this);\n                // Return to container after 0ms if not picked up by a droppable\n                setTimeout(() => {\n                    this.insetContainer.interactive = true;\n                    this.insetContainer.position.copyFrom(realPosition);\n                    this.emit('draggableend', e);\n                }, 0);\n            }\n        };\n    }\n    /**\n     * Makes this widget `droppable`.\n     */\n    makeDroppable() {\n        this.droppable = true;\n        if (this.initialized) {\n            this.initDroppable();\n        }\n        return this;\n    }\n    /**\n     * Makes this widget not `droppable`.\n     */\n    clearDroppable() {\n        if (this.dropInitialized) {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n    initDroppable() {\n        if (!this.dropInitialized) {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n            this.contentContainer.interactive = true;\n            this.onDrop = (event) => {\n                const item = DragDropController.getEventItem(event, this.dropGroup);\n                if (item && item.isDragging) {\n                    item.isDragging = false;\n                    item.insetContainer.interactive = true;\n                    const parent = this.droppableReparent !== null ? this.droppableReparent : self;\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent) {\n                        parent.addChild(item);\n                    }\n                }\n            };\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n}\n//# sourceMappingURL=Widget.js.map","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @memberof PUXI\n * @class\n */\nexport class LayoutOptions {\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT) {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n        this.markers = {};\n    }\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft() {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val) {\n        this._marginLeft = val;\n    }\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop() {\n        return this._marginTop || 0;\n    }\n    set marginTop(val) {\n        this._marginTop = val;\n    }\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight() {\n        return this._marginRight || 0;\n    }\n    set marginRight(val) {\n        this._marginRight = val;\n    }\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom() {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val) {\n        this._marginBottom = val;\n    }\n    setMargin(left, top, right, bottom) {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\nLayoutOptions.FILL_PARENT = 0xfffffff1;\nLayoutOptions.WRAP_CONTENT = 0xfffffff2;\nLayoutOptions.MAX_DIMEN = 0xfffffff0;\nLayoutOptions.DEFAULT = new LayoutOptions();\n//# sourceMappingURL=LayoutOptions.js.map","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions {\n    constructor(width, height, x = 0, y = 0, anchor) {\n        super(width, height);\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         */\n        this.x = x;\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         */\n        this.y = y;\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         * @member {PIXI.Point}\n         * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n         */\n        this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\nFastLayoutOptions.DEFAULT_ANCHOR = new PIXI.Point(0, 0);\nFastLayoutOptions.CENTER_ANCHOR = new PIXI.Point(0.5, 0.5); // fragile, shouldn't be modified\n//# sourceMappingURL=FastLayoutOptions.js.map","import { MeasureMode } from '../IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.ILayoutManager\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout {\n    onAttach(host) {\n        this.host = host;\n    }\n    onDetach() {\n        this.host = null;\n    }\n    onMeasure(maxWidth, maxHeight, widthMode, heightMode) {\n        // TODO: Passthrough optimization pass, if there is only one child with FILL_PARENT width or height\n        // then don't measure twice.\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n        const children = this.host.widgetChildren;\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++) {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n            widget.measure(widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : maxWidth, heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : maxHeight, widthMeasureMode, heightMeasureMode);\n        }\n        this._measuredWidth = this.measureWidthReach(maxWidth, widthMode);\n        this._measuredHeight = this.measureHeightReach(maxHeight, heightMode);\n        this.measureChildFillers();\n    }\n    getChildMeasureMode(dimen, parentMeasureMode) {\n        if (parentMeasureMode === MeasureMode.UNBOUNDED) {\n            return MeasureMode.UNBOUNDED;\n        }\n        if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT) {\n            return MeasureMode.AT_MOST;\n        }\n        return MeasureMode.EXACTLY;\n    }\n    measureWidthReach(parentWidthLimit, widthMode) {\n        if (widthMode === MeasureMode.EXACTLY) {\n            return parentWidthLimit;\n        }\n        const children = this.host.widgetChildren;\n        let measuredWidth = 0;\n        for (let i = 0, j = children.length; i < j; i++) {\n            const widget = children[i];\n            const childWidth = widget.getMeasuredWidth();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n            const x = lopt.x ? lopt.x : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n            // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n            // as (1 - anchor.x)% child's width.\n            const minr = (Math.abs(x) < 1 ? (1 - anchor.x) * childWidth / (1 - x) : x);\n            measuredWidth = Math.max(measuredWidth, minr);\n        }\n        if (widthMode === MeasureMode.AT_MOST) {\n            measuredWidth = Math.min(parentWidthLimit, measuredWidth);\n        }\n        return measuredWidth;\n    }\n    measureHeightReach(parentHeightLimit, heightMode) {\n        if (heightMode === MeasureMode.EXACTLY) {\n            return parentHeightLimit;\n        }\n        const children = this.host.widgetChildren;\n        let measuredHeight = 0;\n        for (let i = 0, j = children.length; i < j; i++) {\n            const widget = children[i];\n            const childHeight = widget.getMeasuredHeight();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n            const y = lopt.y ? lopt.y : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n            const minb = (Math.abs(y) < 1 ? (1 - anchor.y) * childHeight / (1 - y) : y);\n            measuredHeight = Math.max(measuredHeight, minb);\n        }\n        if (heightMode === MeasureMode.AT_MOST) {\n            measuredHeight = Math.min(parentHeightLimit, measuredHeight);\n        }\n        return measuredHeight;\n    }\n    measureChildFillers() {\n        const children = this.host.widgetChildren;\n        for (let i = 0, j = children.length; i < j; i++) {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n            if (lopt.width === LayoutOptions.FILL_PARENT || lopt.height === LayoutOptions.FILL_PARENT) {\n                const widthMode = lopt.width === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n                const heightMode = lopt.height === LayoutOptions.FILL_PARENT ? MeasureMode.EXACTLY : MeasureMode.AT_MOST;\n                widget.measure(this._measuredWidth, this._measuredHeight, widthMode, heightMode);\n            }\n        }\n    }\n    onLayout() {\n        const parent = this.host;\n        const { width, height, widgetChildren: children } = parent;\n        for (let i = 0, j = children.length; i < j; i++) {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n            if (Math.abs(x) < 1) {\n                x *= width;\n            }\n            if (Math.abs(y) < 1) {\n                y *= height;\n            }\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n            widget.layout(l, t, l + widget.getMeasuredWidth(), t + widget.getMeasuredHeight());\n        }\n    }\n    getMeasuredWidth() {\n        return this._measuredWidth;\n    }\n    getMeasuredHeight() {\n        return this._measuredHeight;\n    }\n}\n//# sourceMappingURL=FastLayout.js.map","import { Widget } from './Widget';\nimport { FastLayout } from './layout-manager/FastLayout';\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @example\n * ```\n * const group = new PUXI.InteractiveGroup();\n *\n * group.useLayout(new PUXI.AnchorLayout());\n *\n * group.addChild(new PUXI.Button({ text: \"Hey\" })\n *  .setLayoutOptions(\n *      new PUXI.AnchorLayoutOptions(\n *             100,\n *             300,\n *             .4,\n *             500,\n *             PUXI.ALIGN.CENTER\n *      )\n *  )\n * )\n * ```\n */\nexport class WidgetGroup extends Widget {\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {PUXI.ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr) {\n        if (this.layoutMgr) {\n            this.layoutMgr.onDetach();\n        }\n        this.layoutMgr = layoutMgr;\n        if (layoutMgr) {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout() {\n        this.useLayout(new FastLayout());\n    }\n    measure(width, height, widthMode, heightMode) {\n        super.measure(width, height, widthMode, heightMode);\n        if (this.widgetChildren.length === 0) {\n            return;\n        }\n        if (!this.layoutMgr) {\n            this.useDefaultLayout();\n        }\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n    layout(l, t, r, b, dirty = true) {\n        super.layout(l, t, r, b, dirty);\n        if (this.widgetChildren.length === 0) {\n            return;\n        }\n        if (!this.layoutMgr) {\n            this.useDefaultLayout();\n        }\n        this.layoutMgr.onLayout(); // layoutMgr is attached to this\n    }\n}\n//# sourceMappingURL=WidgetGroup.js.map","import { WidgetGroup } from './WidgetGroup';\nimport * as PIXI from 'pixi.js';\n/**\n * An interactive container.\n *\n * @class\n * @extends PUXI.WidgetGroup\n * @memberof PUXI\n */\nexport class InteractiveGroup extends WidgetGroup {\n    constructor() {\n        super();\n        this.hitArea = new PIXI.Rectangle();\n        this.insetContainer.hitArea = this.hitArea;\n    }\n    update() {\n        // YO\n    }\n    layout(l, t, r, b, dirty) {\n        super.layout(l, t, r, b, dirty);\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    }\n}\n//# sourceMappingURL=InteractiveGroup.js.map","import { InteractiveGroup } from './InteractiveGroup';\n/**\n * Represents a view that can gain or loose focus. It is primarily subclassed by\n * input/form widgets.\n *\n * Generally, it is a good idea not use layouts on these types of widgets.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport class FocusableWidget extends InteractiveGroup {\n    /**\n     * @param {PUXI.IInputBaseOptions} options\n     * @param {PIXI.Container}[options.background]\n     * @param {number}[options.tabIndex]\n     * @param {any}[options.tabGroup]\n     */\n    constructor(options = {}) {\n        super();\n        this.bindEvents = () => {\n            this.stage.on('pointerdown', this.onDocumentPointerDownImpl);\n            document.addEventListener('keydown', this.onKeyDownImpl);\n        };\n        this.clearEvents = () => {\n            this.stage.off('pointerdown', this.onDocumentPointerDownImpl);\n            document.removeEventListener('keydown', this.onKeyDownImpl);\n        };\n        this.onKeyDownImpl = (e) => {\n            const focusCtl = this.stage.focusController;\n            if (e.which === 9 && focusCtl.useTab) {\n                focusCtl.onTab();\n                e.preventDefault();\n            }\n            else if (e.which === 38 && focusCtl.useBack) {\n                focusCtl.onBack();\n                e.preventDefault();\n            }\n            else if (e.which === 40 && focusCtl.useForward) {\n                focusCtl.onForward();\n                e.preventDefault();\n            }\n            this.emit('keydown');\n        };\n        this.onDocumentPointerDownImpl = () => {\n            if (!this._isMousePressed) {\n                this.blur();\n            }\n        };\n        if (options.background) {\n            super.setBackground(options.background);\n        }\n        // Prevents double focusing/blurring.\n        this._isFocused = false;\n        // Used to lose focus when mouse-down outside widget.\n        this._isMousePressed = false;\n        this.interactive = true;\n        /**\n         * @member {number}\n         * @readonly\n         */\n        this.tabIndex = options.tabIndex;\n        /**\n         * The name of the tab group in which this widget's focus will move on\n         * pressing tab.\n         * @member {PUXI.TabGroup}\n         * @readonly\n         */\n        this.tabGroup = options.tabGroup;\n        this.insetContainer.on('pointerdown', () => {\n            this.focus();\n            this._isMousePressed = true;\n        });\n        this.insetContainer.on('pointerup', () => { this._isMousePressed = false; });\n        this.insetContainer.on('pointerupoutside', () => { this._isMousePressed = false; });\n    }\n    /**\n     * Brings this widget into focus.\n     */\n    focus() {\n        if (this.isFocused) {\n            return;\n        }\n        this.stage.focusController.notifyFocus(this);\n        this._isFocused = true;\n        this.bindEvents();\n        this.emit('focusChanged', true);\n        this.emit('focus');\n    }\n    /**\n     * Brings this widget out of focus.\n     */\n    blur() {\n        if (!this._isFocused) {\n            return;\n        }\n        this.stage.focusController.notifyBlur();\n        this._isFocused = false;\n        this.clearEvents();\n        this.emit('focusChanged', false);\n        this.emit('blur');\n    }\n    /**\n     * Whether this widget is in focus.\n     * @member {boolean}\n     * @readonly\n     */\n    get isFocused() {\n        return this._isFocused;\n    }\n    initialize() {\n        super.initialize();\n        this.stage.focusController.in(this, this.tabIndex, this.tabGroup);\n    }\n}\n//# sourceMappingURL=FocusableWidget.js.map","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n/**\n * A static text widget. It cannot retain children.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class TextWidget extends Widget {\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text, textStyle) {\n        super();\n        this.textDisplay = new PIXI.Text(text, textStyle);\n        this.contentContainer.addChild(this.textDisplay);\n    }\n    update() {\n        if (this.tint !== null) {\n            this.textDisplay.tint = this.tint;\n        }\n        if (this.blendMode !== null) {\n            this.textDisplay.blendMode = this.blendMode;\n        }\n    }\n    get value() {\n        return this.textDisplay.text;\n    }\n    set value(val) {\n        this.textDisplay.text = val;\n    }\n    get text() {\n        return this.value;\n    }\n    set text(val) {\n        this.value = val;\n    }\n}\n//# sourceMappingURL=TextWidget.js.map","class EaseBase {\n    getPosition(p) {\n        return p;\n    }\n}\nexport { EaseBase };\n//# sourceMappingURL=EaseBase.js.map","import { EaseBase } from './EaseBase';\nfunction ExponentialEase(power, easeIn, easeOut) {\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n    this.getPosition = function (p) {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n        if (pow === 1) {\n            r *= r;\n        }\n        else if (pow === 2) {\n            r *= r * r;\n        }\n        else if (pow === 3) {\n            r *= r * r * r;\n        }\n        else if (pow === 4) {\n            r *= r * r * r * r;\n        }\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\nexport { ExponentialEase };\n//# sourceMappingURL=ExponentialEase.js.map","import { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\nconst Ease = {};\nconst HALF_PI = Math.PI * 0.5;\nexport function create(fn) {\n    const e = Object.create(EaseBase.prototype);\n    e.getPosition = fn;\n    return e;\n}\nconst Linear = new EaseBase();\n// Liear\nEase.Linear = Linear;\n// Exponetial Eases\nexport function wrapEase(easeInFunction, easeOutFunction, easeInOutFunction) {\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\nEase.Power0 = {\n    easeNone: Linear,\n};\nEase.Power1 = Ease.Quad = wrapEase(new ExponentialEase(1, 1, 0), new ExponentialEase(1, 0, 1), new ExponentialEase(1, 1, 1));\nEase.Power2 = Ease.Cubic = wrapEase(new ExponentialEase(2, 1, 0), new ExponentialEase(2, 0, 1), new ExponentialEase(2, 1, 1));\nEase.Power3 = Ease.Quart = wrapEase(new ExponentialEase(3, 1, 0), new ExponentialEase(3, 0, 1), new ExponentialEase(3, 1, 1));\nEase.Power4 = Ease.Quint = wrapEase(new ExponentialEase(4, 1, 0), new ExponentialEase(4, 0, 1), new ExponentialEase(4, 1, 1));\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p) {\n        if ((p = 1 - p) < 1 / 2.75) {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75) {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75) {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p) {\n        if (p < 1 / 2.75) {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75) {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75) {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p) {\n        const invert = (p < 0.5);\n        if (invert) {\n            p = 1 - (p * 2);\n        }\n        else {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75) {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75) {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75) {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n// Circ\nEase.Circ = {\n    CircIn: create(function (p) {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p) {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p) {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p) {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p) {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p) {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n// Sine\nEase.Sine = {\n    SineIn: create(function (p) {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p) {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p) {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\nexport { Ease };\n//# sourceMappingURL=Ease.js.map","export const Helpers = {\n    Lerp(start, stop, amt) {\n        if (amt > 1)\n            amt = 1;\n        else if (amt < 0)\n            amt = 0;\n        return start + (stop - start) * amt;\n    },\n    Round(number, decimals) {\n        const pow = Math.pow(10, decimals);\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c) {\n        const hex = c.toString(16);\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r, g, b) {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r, g, b) {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c) {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex) {\n        if (hex === null) {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex)) {\n            return this.numberToRgb(hex);\n        }\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n//# sourceMappingURL=Helpers.js.map","import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\nclass TweenObject {\n    constructor(object) {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\nclass CallbackItem {\n    constructor() {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n    remove() {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length) {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n    set(obj, callback, time) {\n        this.obj = obj.object;\n        if (!this.obj._currentCallbackID) {\n            this.obj._currentCallbackID = 1;\n        }\n        else {\n            this.obj._currentCallbackID++;\n        }\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active) {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n    update(delta) {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time) {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\nclass TweenItem {\n    constructor() {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n    remove() {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length) {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n    set(obj, key, from, to, time, ease) {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n        if (this.isColor) {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n        if (!this.parent.active) {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n    update(delta) {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease) {\n            this.t = this.ease.getPosition(this.t);\n        }\n        if (this.isColor) {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n        if (this.currentTime >= this.time) {\n            this.remove();\n        }\n    }\n}\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\nfunction getFromValue(from, to, obj, key) {\n    // both number\n    if (!isNaN(from) && !isNaN(to)) {\n        return from;\n    }\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1) {\n        return parseFloat(from.replace('%', ''));\n    }\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1) {\n        if (widthKeys.indexOf(key) !== -1) {\n            return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01);\n        }\n        else if (heightKeys.indexOf(key) !== -1) {\n            return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01);\n        }\n        return 0;\n    }\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1) {\n        if (widthKeys.indexOf(key) !== -1) {\n            return from / obj.parent._width * 100;\n        }\n        else if (heightKeys.indexOf(key) !== -1) {\n            return from / obj.parent._height * 100;\n        }\n        return 0;\n    }\n    return 0;\n}\nfunction getSurfix(to) {\n    if (isNaN(to) && to.indexOf('%') !== -1) {\n        return '%';\n    }\n}\nfunction getToValue(to) {\n    if (!isNaN(to)) {\n        return to;\n    }\n    if (isNaN(to) && to.indexOf('%') !== -1) {\n        return parseFloat(to.replace('%', ''));\n    }\n}\nfunction getObject(obj) {\n    if (!obj._tweenObjectId) {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n    if (!object) {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n    return object;\n}\nfunction getTweenItem() {\n    for (let i = 0; i < _tweenItemCache.length; i++) {\n        if (_tweenItemCache[i]._ready) {\n            return _tweenItemCache[i];\n        }\n    }\n    const tween = new TweenItem();\n    _tweenItemCache.push(tween);\n    return tween;\n}\nfunction getCallbackItem() {\n    for (let i = 0; i < _callbackItemCache.length; i++) {\n        if (_callbackItemCache[i]._ready) {\n            return _callbackItemCache[i];\n        }\n    }\n    const cb = new CallbackItem();\n    _callbackItemCache.push(cb);\n    return cb;\n}\nexport const Tween = {\n    to(obj, time, params, ease) {\n        const object = getObject(obj);\n        let onUpdate = null;\n        for (const key in params) {\n            if (key === 'onComplete') {\n                const cb = getCallbackItem();\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n            if (key === 'onUpdate') {\n                onUpdate = params[key];\n                continue;\n            }\n            if (time) {\n                const match = params[key] === obj[key];\n                if (typeof obj[key] === 'undefined')\n                    continue;\n                if (match) {\n                    if (object.tweens[key])\n                        object.tweens[key].remove();\n                }\n                else {\n                    if (!object.tweens[key]) {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n        if (time) {\n            object.onUpdate = onUpdate;\n        }\n        else\n            this.set(obj, params);\n    },\n    from(obj, time, params, ease) {\n        const object = getObject(obj);\n        let onUpdate = null;\n        for (const key in params) {\n            if (key === 'onComplete') {\n                const cb = getCallbackItem();\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n            if (key === 'onUpdate') {\n                onUpdate = params[key];\n                continue;\n            }\n            if (time) {\n                const match = params[key] == obj[key];\n                if (typeof obj[key] === 'undefined')\n                    continue;\n                if (match) {\n                    if (object.tweens[key])\n                        object.tweens[key].remove();\n                }\n                else {\n                    if (!object.tweens[key]) {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n        if (time) {\n            object.onUpdate = onUpdate;\n        }\n        else\n            this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease) {\n        const object = getObject(obj);\n        let onUpdate = null;\n        for (const key in paramsTo) {\n            if (key === 'onComplete') {\n                const cb = getCallbackItem();\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n            if (key === 'onUpdate') {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n            if (time) {\n                const match = paramsFrom[key] == paramsTo[key];\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined')\n                    continue;\n                if (match) {\n                    if (object.tweens[key])\n                        object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else {\n                    if (!object.tweens[key]) {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n        if (time) {\n            object.onUpdate = onUpdate;\n        }\n        else\n            this.set(obj, paramsTo);\n    },\n    set(obj, params) {\n        const object = getObject(obj);\n        for (const key in params) {\n            if (typeof obj[key] === 'undefined')\n                continue;\n            if (object.tweens[key])\n                object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta) {\n        for (const id in _activeTweenObjects) {\n            const object = _activeTweenObjects[id];\n            for (const key in object.tweens) {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate) {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n//# sourceMappingURL=Tween.js.map","import { Widget } from './Widget';\nimport { DragManager } from './event/DragManager';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport * as PIXI from 'pixi.js';\n/**\n * These options are used to configure a `PUXI.Slider`.\n *\n * @memberof PUXI\n * @interface ISliderOptions\n * @property {PIXI.Container}[track]\n * @property {PIXI.Container}[fill]\n * @property {boolean}[vertical]\n * @property {number}[value]\n * @property {number}[minValue]\n * @property {number}[maxValue]\n * @property {number}[decimals]\n * @property {Function}[onValueChange]\n * @property {Function}[onValueChanging]\n */\n/**\n * An UI Slider, the default width/height is 90%\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Slider extends Widget {\n    /**\n     * @param options {Object} Slider settings\n     * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n     * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n     * @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n     * @param [options.vertical=false] {boolean} Direction of the slider\n     * @param [options.value=0] {number} value of the slider\n     * @param [options.minValue=0] {number} minimum value\n     * @param [options.maxValue=100] {number} max value\n     * @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n     * @param [options.onValueChange=null] {callback} Callback when the value has changed\n     * @param [options.onValueChanging=null] {callback} Callback while the value is changing\n     */\n    constructor(options) {\n        super();\n        this._amt = 0;\n        this._disabled = false;\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n        this.addChild(this.track);\n        if (this.fill) {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.contentContainer.buttonMode = true;\n        if (this.vertical) {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n            if (this.fill) {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n            if (this.fill) {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n    update(soft = 0) {\n        let handleSize;\n        let val;\n        if (this.vertical) {\n            handleSize = this.handle._height || this.handle.contentContainer.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft) {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill)\n                    Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else {\n                Tween.set(this.handle, { top: val });\n                if (this.fill)\n                    Tween.set(this.fill, { height: val });\n            }\n        }\n        else {\n            handleSize = this.handle._width || this.handle.contentContainer.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft) {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill)\n                    Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else {\n                Tween.set(this.handle, { left: val });\n                if (this.fill)\n                    Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n    initialize() {\n        super.initialize();\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n        const triggerValueChange = () => {\n            this.emit('change', this.value);\n            if (this._lastChange != this.value) {\n                this._lastChange = this.value;\n                if (typeof this.onValueChange === 'function') {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n        const triggerValueChanging = () => {\n            this.emit('changing', this.value);\n            if (this._lastChanging != this.value) {\n                this._lastChanging = this.value;\n                if (typeof this.onValueChanging === 'function') {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n        const updatePositionToMouse = (mousePosition, soft) => {\n            this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n        // //Handle dragging\n        const handleDrag = new DragManager(this.handle);\n        handleDrag.onPress = (event, isPressed) => {\n            event.stopPropagation();\n        };\n        handleDrag.onDragStart = (event) => {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n        handleDrag.onDragMove = (event, offset) => {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n            triggerValueChanging();\n            this.update();\n        };\n        handleDrag.onDragEnd = function () {\n            triggerValueChange();\n            this.update();\n        };\n        // Bar pressing/dragging\n        const trackDrag = new DragManager(this.track);\n        trackDrag.onPress = (event, isPressed) => {\n            if (isPressed) {\n                updatePositionToMouse(event.data.global, true);\n            }\n            event.stopPropagation();\n        };\n        trackDrag.onDragMove = (event) => {\n            updatePositionToMouse(event.data.global, false);\n        };\n        trackDrag.onDragEnd = () => {\n            triggerValueChange();\n        };\n    }\n    get value() {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val) {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n        if (typeof this.onValueChange === 'function') {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function') {\n            this.onValueChanging(this.value);\n        }\n        this.update();\n    }\n    get minValue() {\n        return this._minValue;\n    }\n    set minValue(val) {\n        this._minValue = val;\n        this.update();\n    }\n    get maxValue() {\n        return this._maxValue;\n    }\n    set maxValue(val) {\n        this._maxValue = val;\n        this.update();\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(val) {\n        if (val !== this._disabled) {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n}\n//# sourceMappingURL=Slider.js.map","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n/**\n * This ticker is an event-emitter that can be used for running periodic tasks\n * in the rendering loop. It emits the `update` event every animation frame.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n */\nexport class Ticker extends PIXI.utils.EventEmitter {\n    constructor(autoStart) {\n        super();\n        this._disabled = true;\n        this._now = 0;\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n        if (autoStart) {\n            this.disabled = false;\n        }\n        Ticker.shared = this;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(val) {\n        if (!this._disabled) {\n            this._disabled = true;\n        }\n        else {\n            this._disabled = false;\n            Ticker.shared = this;\n            this.update(performance.now(), true);\n        }\n    }\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time) {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n        if (!Ticker.shared._disabled) {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n    static on(event, fn, context) {\n        Ticker.shared.on(event, fn, context);\n    }\n    static once(event, fn, context) {\n        Ticker.shared.once(event, fn, context);\n    }\n    static removeListener(event, fn) {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\nTicker.shared = new Ticker(true);\n//# sourceMappingURL=Ticker.js.map","import { InteractiveGroup } from './InteractiveGroup';\nimport { Helpers } from './Helpers';\nimport { Ticker } from './Ticker';\nimport { ScrollManager } from './event/ScrollManager';\nimport * as PIXI from 'pixi.js';\n/**\n * `ScrollWidget` masks its contents to its layout bounds and translates\n * its children when scrolling.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.InteractiveGroup\n */\nexport class ScrollWidget extends InteractiveGroup {\n    /**\n     * @param {PUXI.IScrollingContainerOptions} options\n     * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n     * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n     * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n     * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n     * @param [options.width=0] {Number|String} container width\n     * @param [options.height=0] {Number} container height\n     * @param [options.radius=0] {Number} corner radius of clipping mask\n     * @param [options.expandMask=0] {Number} mask expand (px)\n     * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n     * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n     */\n    constructor(options = {}) {\n        super();\n        this.forcePctPosition = (direction, pct) => {\n            const bounds = this.getInnerBounds();\n            const container = this.innerContainer.insetContainer;\n            if (this.scrollX && direction === 'x') {\n                container.position[direction] = -((bounds.width - this.width) * pct);\n            }\n            if (this.scrollY && direction === 'y') {\n                container.position[direction] = -((bounds.height - this.height) * pct);\n            }\n            this.scrollPosition[direction] = this.targetPosition[direction] = container.position[direction];\n        };\n        this.focusPosition = (pos) => {\n            const bounds = this.getInnerBounds();\n            const container = this.innerContainer.insetContainer;\n            let dif;\n            if (this.scrollX) {\n                const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n                if (x + container.x > this.width) {\n                    dif = x - this.width;\n                    container.x = -dif;\n                }\n                else if (x + container.x < 0) {\n                    dif = x + container.x;\n                    container.x -= dif;\n                }\n            }\n            if (this.scrollY) {\n                const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n                if (y + container.y > this.height) {\n                    dif = y - this.height;\n                    container.y = -dif;\n                }\n                else if (y + container.y < 0) {\n                    dif = y + container.y;\n                    container.y -= dif;\n                }\n            }\n            this.lastPosition.copyFrom(container.position);\n            this.targetPosition.copyFrom(container.position);\n            this.scrollPosition.copyFrom(container.position);\n            this.updateScrollBars();\n        };\n        /**\n         * @param {PIXI.Point}[velocity]\n         */\n        this.setScrollPosition = (velocity) => {\n            if (velocity) {\n                this.scrollVelocity.copyFrom(velocity);\n            }\n            const container = this.innerContainer.insetContainer;\n            if (!this.animating) {\n                this.animating = true;\n                this.lastPosition.copyFrom(container.position);\n                this.targetPosition.copyFrom(container.position);\n                Ticker.on('update', this.updateScrollPosition, this);\n            }\n        };\n        /**\n         * @param {number} delta\n         * @protected\n         */\n        this.updateScrollPosition = (delta) => {\n            this.stop = true;\n            if (this.scrollX) {\n                this.updateDirection('x', delta);\n            }\n            if (this.scrollY) {\n                this.updateDirection('y', delta);\n            }\n            if (stop) {\n                Ticker.removeListener('update', this.updateScrollPosition);\n                this.animating = false;\n            }\n        };\n        /**\n         * @param {'x' | 'y'} direction\n         * @param {number} delta\n         * @protected\n         */\n        this.updateDirection = (direction, delta) => {\n            const bounds = this.getInnerBounds();\n            const { scrollPosition, scrollVelocity, targetPosition, lastPosition, } = this;\n            const container = this.innerContainer.insetContainer;\n            let min;\n            if (direction === 'y') {\n                min = Math.round(Math.min(0, this.height - bounds.height));\n            }\n            else {\n                min = Math.round(Math.min(0, this.width - bounds.width));\n            }\n            if (!this.scrolling && Math.round(scrollVelocity[direction]) !== 0) {\n                targetPosition[direction] += scrollVelocity[direction];\n                scrollVelocity[direction] = Helpers.Lerp(scrollVelocity[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n                if (targetPosition[direction] > 0) {\n                    targetPosition[direction] = 0;\n                }\n                else if (targetPosition[direction] < min) {\n                    targetPosition[direction] = min;\n                }\n            }\n            if (!this.scrolling\n                && Math.round(scrollVelocity[direction]) === 0\n                && (container[direction] > 0\n                    || container[direction] < min)) {\n                const target = this.scrollPosition[direction] > 0 ? 0 : min;\n                scrollPosition[direction] = Helpers.Lerp(scrollPosition[direction], target, (40 - (30 * this.softness)) * delta);\n                this.stop = false;\n            }\n            else if (this.scrolling || Math.round(scrollVelocity[direction]) !== 0) {\n                if (this.scrolling) {\n                    scrollVelocity[direction] = this.scrollPosition[direction] - lastPosition[direction];\n                    lastPosition.copyFrom(scrollPosition);\n                }\n                if (targetPosition[direction] > 0) {\n                    scrollVelocity[direction] = 0;\n                    scrollPosition[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n                }\n                else if (targetPosition[direction] < min) {\n                    scrollVelocity[direction] = 0;\n                    scrollPosition[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n                }\n                else {\n                    scrollPosition[direction] = targetPosition[direction];\n                }\n                this.stop = false;\n            }\n            container.position[direction] = Math.round(scrollPosition[direction]);\n            this.updateScrollBars();\n        };\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new InteractiveGroup();\n        this.innerBounds = new PIXI.Rectangle();\n        super.addChild(this.innerContainer);\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.mask = this.mask;\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n        this.scrollVelocity = new PIXI.Point();\n        /**\n         * Widget's position in a scroll.\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.scrollPosition = new PIXI.Point();\n        /**\n         * Position that the cursor is at, i.e. our scroll \"target\".\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.targetPosition = new PIXI.Point();\n        this.lastPosition = new PIXI.Point();\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n        this.boundCached = performance.now() - 1000;\n        this.initScrolling();\n    }\n    /**\n     * Updates the mask and scroll position before rendering.\n     *\n     * @override\n     */\n    update() {\n        super.update();\n        if (this.lastWidth !== this.width || this.lastHeight !== this.height) {\n            const of = this.expandMask;\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n            if (this.radius === 0) {\n                this.mask.drawRect(-of, -of, this.width + of, this.height + of);\n            }\n            else {\n                this.mask.drawRoundedRect(-of, -of, this.width + of, this.height + of, this.radius);\n            }\n            this.mask.endFill();\n            this.lastWidth = this.width;\n            this.lastHeight = this.height;\n        }\n        this.setScrollPosition();\n    }\n    /**\n     * @param {PUXI.Widget[]} newChildren\n     * @returns {ScrollWidget} this widget\n     */\n    addChild(...newChildren) {\n        for (let i = 0; i < newChildren.length; i++) {\n            this.innerContainer.addChild(newChildren[i]);\n        }\n        this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n        return this;\n    }\n    updateScrollBars() {\n        for (let i = 0; i < this._scrollBars.length; i++) {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n    getInnerBounds(force) {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000) {\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n        return this.innerBounds;\n    }\n    /**\n     * @override\n     */\n    initialize() {\n        super.initialize();\n        if (this.scrollX || this.scrollY) {\n            this.initScrolling();\n        }\n    }\n    initScrolling() {\n        const container = this.innerContainer.insetContainer;\n        const realPosition = new PIXI.Point();\n        const { scrollPosition, targetPosition, } = this;\n        // Drag scroll\n        if (this.dragScrolling) {\n            const drag = this.eventBroker.dnd;\n            drag.onDragStart = (e) => {\n                if (!this.scrolling) {\n                    realPosition.copyFrom(container.position);\n                    scrollPosition.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n                    this.emit('scrollstart', e);\n                }\n            };\n            drag.onDragMove = (_, offset) => {\n                if (this.scrollX) {\n                    targetPosition.x = realPosition.x + offset.x;\n                }\n                if (this.scrollY) {\n                    targetPosition.y = realPosition.y + offset.y;\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e) => {\n                if (this.scrolling) {\n                    this.scrolling = false;\n                    this.emit('scrollend', e);\n                }\n            };\n        }\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new ScrollManager(this, true);\n        scroll.onMouseScroll = (e, delta) => {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n        this.updateScrollBars();\n    }\n}\n//# sourceMappingURL=ScrollWidget.js.map","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n/**\n * An UI sprite object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Sprite extends Widget {\n    constructor(texture) {\n        super();\n        this.spriteDisplay = new PIXI.Sprite(texture);\n        this.contentContainer.addChild(this.spriteDisplay);\n    }\n    update() {\n        if (this.tint !== null) {\n            this.spriteDisplay.tint = this.tint;\n        }\n        if (this.blendMode !== null) {\n            this.spriteDisplay.blendMode = this.blendMode;\n        }\n    }\n    static fromImage(imageUrl) {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n//# sourceMappingURL=Sprite.js.map","import * as PIXI from 'pixi.js';\nexport class Controller extends PIXI.utils.EventEmitter {\n    constructor(stage) {\n        super();\n        this.stage = stage;\n    }\n}\n/**\n * A controller handles a stage-level state that can be held by wigets. For example,\n * `PUXI.FocusController` handles which widget is focused.\n *\n * @memberof PUXI\n * @class Controller\n */\n/**\n * Enables the widget to enter the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method in\n * @param {PUXI.Widget} widget\n */\n/**\n * Disables the widget from the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method out\n * @param {PUXI.Widget} widget\n */\n//# sourceMappingURL=Controller.js.map","import * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { FocusController, CheckBoxGroupController } from './ctl';\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.Container\n */\nexport class Stage extends PIXI.Container {\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width, height) {\n        super();\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n        this._checkBoxGroupCtl = new Stage.CHECK_BOX_GROUP_CONTROLLER(this);\n        this._focusCtl = new Stage.FOCUS_CONTROLLER(this);\n    }\n    measureAndLayout() {\n        if (this.background) {\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++) {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this.width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this.height : lopt.height;\n            widget.measure(widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this.width, heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this.height, widthMeasureMode, heightMeasureMode);\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n            if (Math.abs(x) < 1) {\n                x *= this.width;\n            }\n            if (Math.abs(y) < 1) {\n                y *= this.height;\n            }\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n            widget.layout(l, t, l + widget.getMeasuredWidth(), t + widget.getMeasuredHeight(), true);\n        }\n    }\n    getBackground() {\n        return this.background;\n    }\n    setBackground(bg) {\n        if (this.background) {\n            super.removeChild(this.background);\n        }\n        this.background = bg;\n        if (bg) {\n            super.addChildAt(bg, 0);\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n    }\n    update(widgets) {\n        for (let i = 0, j = widgets.length; i < j; i++) {\n            const widget = widgets[i];\n            widget.stage = this;\n            if (!widget.initialized) {\n                widget.initialize();\n            }\n            this.update(widget.widgetChildren);\n            widget.update();\n        }\n    }\n    render(renderer) {\n        this.update(this.widgetChildren);\n        super.render(renderer);\n    }\n    addChild(UIObject) {\n        const argumentLenght = arguments.length;\n        if (argumentLenght > 1) {\n            for (let i = 0; i < argumentLenght; i++) {\n                this.addChild(arguments[i]);\n            }\n        }\n        else {\n            if (UIObject.parent) {\n                UIObject.parent.removeChild(UIObject);\n            }\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n        this.measureAndLayout();\n    }\n    removeChild(UIObject) {\n        const argumentLenght = arguments.length;\n        if (argumentLenght > 1) {\n            for (let i = 0; i < argumentLenght; i++) {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else {\n            super.removeChild(UIObject.insetContainer);\n            const index = this.widgetChildren.indexOf(UIObject);\n            if (index !== -1) {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n        this.measureAndLayout();\n    }\n    resize(width, height) {\n        if (!isNaN(height))\n            this.__height = height;\n        if (!isNaN(width))\n            this.__width = width;\n        if (this.minWidth || this.minHeight) {\n            let rx = 1;\n            let ry = 1;\n            if (width && width < this.minWidth) {\n                rx = this.minWidth / width;\n            }\n            if (height && height < this.minHeight) {\n                ry = this.minHeight / height;\n            }\n            if (rx > ry && rx > 1) {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1) {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1) {\n                this.scale.set(1);\n            }\n        }\n        if (this.hitArea) {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n        for (let i = 0; i < this.widgetChildren.length; i++) {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n        this.measureAndLayout();\n    }\n    get width() {\n        return this.__width;\n    }\n    set width(val) {\n        if (!isNaN(val)) {\n            this.__width = val;\n            this.resize();\n        }\n    }\n    get height() {\n        return this.__height;\n    }\n    set height(val) {\n        if (!isNaN(val)) {\n            this.__height = val;\n            this.resize();\n        }\n    }\n    /**\n     * The check box group controller for check boxes in this stage.\n     *\n     * @member {PUXI.CheckBoxGroupController}\n     */\n    get checkBoxGroupController() {\n        return this._checkBoxGroupCtl;\n    }\n    /**\n     * The focus controller for widgets in this stage. You can use this to bring a\n     * widget into focus.\n     *\n     * @member {PUXI.FocusController}\n     */\n    get focusController() {\n        return this._focusCtl;\n    }\n}\n/**\n * Use this to override which class is used for the check box group controller. It\n * should extend from `PUXI.CheckBoxGroupController`.\n *\n * @static\n */\nStage.CHECK_BOX_GROUP_CONTROLLER = CheckBoxGroupController;\n/**\n * Use this to override which class is used for the focus controller. It should\n * extend from `PUXI.FocusController`.\n *\n * @static\n */\nStage.FOCUS_CONTROLLER = FocusController;\n//# sourceMappingURL=Stage.js.map","import { FocusableWidget } from './FocusableWidget';\nimport { ScrollWidget } from './ScrollWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions } from './layout-options';\nimport { DragManager } from './event/DragManager';\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput;\nfunction initMockDOMInput() {\n    // create temp input (for mobile keyboard)\n    if (typeof mockDOMInput === 'undefined') {\n        mockDOMInput = document.createElement('INPUT');\n        mockDOMInput.setAttribute('type', 'text');\n        mockDOMInput.setAttribute('id', '_pui_tempInput');\n        mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n        document.body.appendChild(mockDOMInput);\n    }\n}\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n */\nexport class TextInput extends FocusableWidget {\n    /**\n     * @param {PUXI.ITextInputOptions} options\n     * @param {string} options.value Text content\n     * @param {boolean} [options.multiLine=false] Multiline input\n     * @param options.style {PIXI.TextStyle} Style used for the Text\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n     * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n     * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n     * @param [options.width=150] {Number} width of input\n     * @param [options.height=20] {Number} height of input\n     * @param [options.padding=3] {Number} input padding\n     * @param [options.paddingTop=0] {Number} input padding\n     * @param [options.paddingBottom=0] {Number} input padding\n     * @param [options.paddingLeft=0] {Number} input padding\n     * @param [options.paddingRight=0] {Number} input padding\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.maxLength=0] {Number} 0 = unlimited\n     * @param [options.caretWidth=1] {Number} width of the caret\n     * @param [options.lineHeight=0] {Number} 0 = inherit from text\n     */\n    constructor(options) {\n        super(options);\n        this.onKeyDown = (e) => {\n            if (e.which === this.ctrlKey || e.which === this.cmdKey) {\n                this.ctrlDown = true;\n            }\n            if (e.which === this.shiftKey) {\n                this.shiftDown = true;\n            }\n            // FocusableWidget.onKeyDownImpl should've been called before this.\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (e.which === 13) { // enter\n                this.insertTextAtCaret('\\n');\n                e.preventDefault();\n                return;\n            }\n            if (this.ctrlDown) {\n                // Handle Ctrl+<?> commands\n                if (e.which === 65) {\n                    // Ctrl+A (Select all)\n                    this.select();\n                    e.preventDefault();\n                    return;\n                }\n                else if (e.which === 90) {\n                    // Ctrl+Z (Undo)\n                    if (this.value != this._lastValue) {\n                        this.valueEvent = this._lastValue;\n                    }\n                    this.setCaretIndex(this._lastValue.length + 1);\n                    e.preventDefault();\n                    return;\n                }\n            }\n            if (e.which === 8) {\n                // Handle backspace\n                if (!this.deleteSelection()) {\n                    if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd)) {\n                        if (this.caret._atEnd) {\n                            this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                            this.setCaretIndex(this.caret._index);\n                        }\n                        else {\n                            this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                            this.setCaretIndex(this.caret._index - 1);\n                        }\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n            if (e.which === 46) {\n                // Delete selection\n                if (!this.deleteSelection()) {\n                    if (!this.caret._atEnd) {\n                        this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n            else if (e.which === 37 || e.which === 39) {\n                this.rdd = e.which === 37;\n                if (this.shiftDown) {\n                    if (this.hasSelection) {\n                        const caretAtStart = this.selectionStart === this.caret._index;\n                        if (caretAtStart) {\n                            if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward) {\n                                this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                            }\n                            else {\n                                const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n                                this.selectRange(startindex, this.selectionEnd);\n                                this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                            }\n                        }\n                        else {\n                            const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n                            this.selectRange(this.selectionStart, endIndex);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                        }\n                    }\n                    else {\n                        const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                        const selectIndex = this.rdd ? _i - 1 : _i;\n                        this.selectRange(selectIndex, selectIndex);\n                        this.caret._index = selectIndex;\n                        this.caret._forward = !rdd;\n                    }\n                }\n                else {\n                    // Navigation\n                    // eslint-disable-next-line no-lonely-if\n                    if (this.hasSelection) {\n                        this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                    }\n                    else {\n                        this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                    }\n                }\n                e.preventDefault();\n                return;\n            }\n            else if (this.multiLine && (e.which === 38 || e.which === 40)) {\n                this.vrdd = e.which === 38;\n                if (this.shiftDown) {\n                    if (this.hasSelection) {\n                        this.de.y = Math.max(0, Math.min(this.textHeightPX, this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                        this.updateClosestIndex(this.de, false);\n                        // console.log(si, ei);\n                        if (Math.abs(this.si - this.ei) <= 1) {\n                            // console.log(si, ei);\n                            this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                        }\n                        else {\n                            this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                            this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                        }\n                    }\n                    else {\n                        this.si = this.caret._index;\n                        this.sie = false;\n                        this.de.copyFrom(this.caret);\n                        this.de.y = Math.max(0, Math.min(this.textHeightPX, this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                        this.updateClosestIndex(this.de, false);\n                        this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                        this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                        this.caret._down = !this.vrdd;\n                    }\n                }\n                else if (this.hasSelection) {\n                    this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else {\n                    this.ds.copyFrom(this.caret);\n                    this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                    this.ds.x += 1;\n                    this.updateClosestIndex(this.ds, true);\n                    this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                }\n                e.preventDefault();\n                return;\n            }\n        };\n        this.keyUpEvent = (e) => {\n            if (e.which === this.ctrlKey || e.which === this.cmdKey)\n                this.ctrlDown = false;\n            if (e.which === this.shiftKey)\n                this.shiftDown = false;\n            this.emit('keyup', e);\n            if (e.defaultPrevented) {\n                return;\n            }\n        };\n        this.copyEvent = (e) => {\n            this.emit('copy', e);\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (this.hasSelection) {\n                const clipboardData = e.clipboardData || window.clipboardData;\n                clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n            }\n            e.preventDefault();\n        };\n        this.cutEvent = (e) => {\n            this.emit('cut', e);\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (this.hasSelection) {\n                this.copyEvent(e);\n                this.deleteSelection();\n            }\n            e.preventDefault();\n        };\n        this.pasteEvent = (e) => {\n            this.emit('paste', e);\n            if (e.defaultPrevented) {\n                return;\n            }\n            const clipboardData = e.clipboardData || window.clipboardData;\n            this.insertTextAtCaret(clipboardData.getData('Text'));\n            e.preventDefault();\n        };\n        this.inputEvent = (e) => {\n            const c = mockDOMInput.value;\n            if (c.length) {\n                this.insertTextAtCaret(c);\n                mockDOMInput.value = '';\n            }\n            e.preventDefault();\n        };\n        this.inputBlurEvent = (e) => {\n            this.blur();\n        };\n        this.focus = () => {\n            if (!this._isFocused) {\n                super.focus();\n                const l = `${this.contentContainer.worldTransform.tx}px`;\n                const t = `${this.contentContainer.worldTransform.ty}px`;\n                const h = `${this.contentContainer.height}px`;\n                const w = `${this.contentContainer.width}px`;\n                mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n                mockDOMInput.value = '';\n                mockDOMInput.focus();\n                mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n                this.innerContainer.cacheAsBitmap = false;\n                mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n                document.addEventListener('keydown', this.onKeyDown, false);\n                document.addEventListener('keyup', this.keyUpEvent, false);\n                document.addEventListener('paste', this.pasteEvent, false);\n                document.addEventListener('copy', this.copyEvent, false);\n                document.addEventListener('cut', this.cutEvent, false);\n                mockDOMInput.addEventListener('input', this.inputEvent, false);\n                setTimeout(() => {\n                    if (!this.caret.visible && !this.selection.visible && !this.multiLine) {\n                        this.setCaretIndex(this.chars.length);\n                    }\n                }, 0);\n            }\n        };\n        this.blur = () => {\n            if (this._isFocused) {\n                super.blur();\n                this.ctrlDown = false;\n                this.shiftDown = false;\n                this.hideCaret();\n                this.clearSelection();\n                if (this.chars.length > 1) {\n                    this.innerContainer.cacheAsBitmap = true;\n                }\n                mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n                document.removeEventListener('keydown', this.onKeyDown);\n                document.removeEventListener('keyup', this.keyUpEvent);\n                document.removeEventListener('paste', this.pasteEvent);\n                document.removeEventListener('copy', this.copyEvent);\n                document.removeEventListener('cut', this.cutEvent);\n                mockDOMInput.removeEventListener('input', this.inputEvent);\n                mockDOMInput.blur();\n            }\n            if (!this.multiLine) {\n                this.resetScrollPosition();\n            }\n        };\n        this.setCaretIndex = (index) => {\n            this.caret._atEnd = index >= this.chars.length;\n            this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n            if (this.chars.length && index > 0) {\n                let i = Math.max(0, Math.min(index, this.chars.length - 1));\n                let c = this.chars[i];\n                if (c && c.wrapped) {\n                    this.caret.x = c.x;\n                    this.caret.y = c.y;\n                }\n                else {\n                    i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                    c = this.chars[i];\n                    this.caret.x = this.chars[i].x + this.chars[i].width;\n                    this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n                }\n            }\n            else {\n                this.caret.x = 0;\n                this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n            }\n            this.scrollToPosition(this.caret);\n            this.showCaret();\n        };\n        this.select = () => {\n            this.selectRange(0, this.chars.length - 1);\n        };\n        this.selectWord = (wordIndex) => {\n            let startIndex = this.chars.length;\n            let endIndex = 0;\n            for (let i = 0; i < this.chars.length; i++) {\n                if (this.chars[i].wordIndex !== wordIndex) {\n                    continue;\n                }\n                if (i < startIndex) {\n                    startIndex = i;\n                }\n                if (i > endIndex) {\n                    endIndex = i;\n                }\n            }\n            this.selectRange(startIndex, endIndex);\n        };\n        this.selectRange = (startIndex, endIndex) => {\n            if (startIndex > -1 && endIndex > -1) {\n                const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n                const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n                if (start !== this.selectionStart || end !== this.selectionEnd) {\n                    this.hasSelection = true;\n                    this.selection.visible = true;\n                    this.selectionStart = start;\n                    this.selectionEnd = end;\n                    this.hideCaret();\n                    this.updateSelectionGraphics();\n                    this.updateSelectionColors();\n                }\n                this.focus();\n            }\n            else {\n                this.clearSelection();\n            }\n        };\n        this.clearSelection = () => {\n            if (this.hasSelection) {\n                // Remove color\n                this.hasSelection = false;\n                this.selection.visible = false;\n                this.selectionStart = -1;\n                this.selectionEnd = -1;\n                this.updateSelectionColors();\n            }\n        };\n        this.updateSelectionGraphics = () => {\n            const c1 = this.chars[this.selectionStart];\n            if (c1 !== undefined) {\n                let cx = c1.x;\n                let cy = c1.y;\n                let w = 0;\n                const h = this.textHeight;\n                let cl = c1.lineIndex;\n                this.selection.clear();\n                for (let i = this.selectionStart; i <= this.selectionEnd; i++) {\n                    const c = this.chars[i];\n                    if (c.lineIndex != cl) {\n                        this.drawSelectionRect(cx, cy, w, h);\n                        cx = c.x;\n                        cy = c.y;\n                        cl = c.lineIndex;\n                        w = 0;\n                    }\n                    w += c.width;\n                }\n                this.drawSelectionRect(cx, cy, w, h);\n                this.innerContainer.addChildAt(this.selection, 0);\n            }\n        };\n        this.drawSelectionRect = (x, y, w, h) => {\n            this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n            this.selection.moveTo(x, y);\n            this.selection.lineTo(x + w, y);\n            this.selection.lineTo(x + w, y + h);\n            this.selection.lineTo(x, y + h);\n            this.selection.endFill();\n        };\n        initMockDOMInput();\n        this.options = options;\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n        if (this.maxLength) {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n        this.tempText.destroy();\n        // set cursor\n        // this.container.cursor = \"text\";\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollWidget({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        }).setPadding(paddingLeft || 3, paddingTop || 3, paddingRight || 3, paddingBottom || 3).setLayoutOptions(new LayoutOptions(LayoutOptions.FILL_PARENT, LayoutOptions.FILL_PARENT));\n        this.addChild(this.textContainer);\n        if (this.multiLine) {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n        this.setupDrag();\n    }\n    setupDrag() {\n        const event = new DragManager(this);\n        event.onPress = (e, mouseDown) => {\n            if (mouseDown) {\n                const timeSinceLast = performance.now() - this.t;\n                this.t = performance.now();\n                if (timeSinceLast < 250) {\n                    this.cc++;\n                    if (this.cc > 1) {\n                        this.select();\n                    }\n                    else {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n                        if (c) {\n                            if (c.wordIndex != -1) {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                    if (this.chars.length) {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n        event.onDragMove = (e, offset) => {\n            if (!this.chars.length || !this._isFocused) {\n                return;\n            }\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n            if (this.si < this.ei) {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei) {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie) {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n            this.scrollToPosition(this.de);\n        };\n    }\n    get innerContainer() {\n        return this.textContainer.innerContainer.insetContainer;\n    }\n    update() {\n        if (this.width !== this._lastWidth) {\n            this._lastWidth = this._width;\n            if (this.multiLine) {\n                this.updateText();\n                if (this.caret.visible) {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection) {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n        // update text\n        if (this._dirtyText) {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n    updateText() {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n        // destroy excess chars\n        if (this.chars.length > length) {\n            for (i = this.chars.length - 1; i >= length; i--) {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n            this.chars.splice(length, this.chars.length - length);\n        }\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n        for (i = 0; i < this._value.length; i++) {\n            if (whitespace || newline) {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n            let c = this._value[i];\n            whitespace = c === ' ';\n            newline = c === '\\n';\n            if (newline) { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n            let charText = this.chars[i];\n            if (!charText) {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else {\n                charText.text = c;\n            }\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight)) {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n                if (lastWordIndex !== -1 && !newline) {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n            if (x > this.textLengthPX) {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX) {\n                this.textHeightPX = y;\n            }\n        }\n        this.lineIndexMax = lineIndex;\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n        // recache\n        if (this.innerContainer.cacheAsBitmap) {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n        this.textContainer.update();\n    }\n    updateClosestIndex(point, start) {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n        let closestLineIndex = 0;\n        if (this.lineIndexMax > 0) {\n            closestLineIndex = Math.max(0, Math.min(this.lineIndexMax, Math.floor(point.y / this.lineHeight)));\n        }\n        for (let i = 0; i < this.chars.length; i++) {\n            const char = this.chars[i];\n            if (char.lineIndex !== closestLineIndex) {\n                continue;\n            }\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n            if (distX < currentDistX) {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n        if (start) {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n    deleteSelection() {\n        if (this.hasSelection) {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n            return true;\n        }\n        return false;\n    }\n    updateSelectionColors() {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++) {\n            if (i >= this.selectionStart && i <= this.selectionEnd) {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n    scrollToPosition(pos) {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n        if (this.multiLine && this._sp.y >= this.lineHeight) {\n            this._sp.y += this.lineHeight;\n        }\n        this.textContainer.focusPosition(this._sp);\n    }\n    resetScrollPosition() {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n    hideCaret() {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n    showCaret() {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n        this.caretInterval = setInterval(() => {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n    insertTextAtCaret(c) {\n        if (!this.multiLine && c.indexOf('\\n') !== -1) {\n            c = c.replace(/\\n/g, '');\n        }\n        if (this.hasSelection) {\n            this.deleteSelection();\n        }\n        if (!this.maxLength || this.chars.length < this.maxLength) {\n            if (this.caret._atEnd) {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n    get valueEvent() {\n        return this._value;\n    }\n    set valueEvent(val) {\n        if (this.maxLength) {\n            val = val.slice(0, this.maxLength);\n        }\n        if (this._value != val) {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        if (this.maxLength) {\n            val = val.slice(0, this.maxLength);\n        }\n        if (this._value != val) {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n    get text() {\n        return this.value;\n    }\n    set text(value) {\n        this.value = value;\n    }\n}\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n//# sourceMappingURL=TextInput.js.map","import { Controller } from './Controller';\n/**\n * Check boxes use this controller to deselect other checkboxes in the group when\n * they are selected.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class CheckBoxGroupController extends Controller {\n    constructor(stage) {\n        super(stage);\n        this.checkGroups = new Map();\n    }\n    /**\n     * @param {PUXI.CheckBox} widget\n     * @param {PUXI.CheckGroup} checkGroup\n     * @override\n     */\n    in(widget, checkGroup) {\n        if (!checkGroup) {\n            throw new Error('Default check groups don\\'t exist!');\n        }\n        const group = this.checkGroups.get(checkGroup) || this.initGroup(checkGroup);\n        group.checks.push(widget);\n        widget.checkGroup = checkGroup;\n    }\n    /**\n     * @override\n     */\n    out(widget) {\n        const group = this.checkGroups.get(widget.checkGroup);\n        const i = group.checks.indexOf(widget);\n        if (i > 0) {\n            group.checks.splice(i, 1);\n        }\n        widget.checkGroup = null;\n    }\n    /**\n     * Called when a checkbox is selected. Do not call from outside.\n     *\n     * @param {CheckBox} widget\n     */\n    notifyCheck(widget) {\n        const group = this.checkGroups.get(widget.checkGroup);\n        if (!group) {\n            return;\n        }\n        const { checks } = group;\n        for (let i = 0, j = checks.length; i < j; i++) {\n            if (checks[i] !== widget) {\n                checks[i].checked = false;\n            }\n        }\n        group.selected = widget;\n    }\n    /**\n     * @param {PUXI.CheckGroup} group\n     * @returns {CheckBox} the selected checkbox in the group\n     */\n    getSelected(group) {\n        var _a;\n        return (_a = this.checkGroups.get(group)) === null || _a === void 0 ? void 0 : _a.selected;\n    }\n    /**\n     * Ensures that the check group exists in `this.checkGroups`.\n     *\n     * @param {PUXI.CheckGroup} id\n     * @protected\n     */\n    initGroup(id) {\n        const cgroup = {\n            checks: [],\n            selected: null,\n        };\n        this.checkGroups.set(id, cgroup);\n        return cgroup;\n    }\n}\n//# sourceMappingURL=CheckBoxGroupController.js.map","import { Controller } from './Controller';\n/**\n * Pressing tab on a focused widget will make the next widget its tab group\n * focused. If no tab group is specified for a focusable widget, then it\n * has the `'default'` tab group.\n *\n * @memberof PUXI\n * @typedef {string} TabGroup\n */\n/**\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class FocusController extends Controller {\n    constructor(stage) {\n        super(stage);\n        /**\n         * Map of tab-group names to the widgets in those groups.\n         * @member {Map<PUXI.TabGroup, PUXI.FocusableWidget[]>}\n         * @protected\n         */\n        this.tabGroups = new Map();\n        /**\n         * Whether to enable tab-based focus movement.\n         * @member {boolean}\n         */\n        this.useTab = true;\n        /**\n         * Whether to enable forward arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useForward = true;\n        /**\n         * Whether to enable back arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useBack = true;\n    }\n    /**\n     * Adds the (focusable) widget to the tab group so that pressing tab repeatedly\n     * will eventually bring it into focus.\n     *\n     * @param {PUXI.FocusableWidget} widget - the widget to add\n     * @param {number}[tabIndex=0] - unique index for the widget in tab group used for ordering\n     * @param {PUXI.TabGroup}[tabGroup='default'] - tab group name\n     */\n    in(widget, tabIndex = 0, tabGroup = 'default') {\n        let widgets = this.tabGroups.get(tabGroup);\n        if (!widgets) {\n            widgets = [];\n            this.tabGroups.set(tabGroup, widgets);\n        }\n        const i = widgets.indexOf(widget);\n        // Push widget into tab group list if not present already.\n        if (i === -1) {\n            widget.tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            widget.tabGroup = tabGroup;\n            widgets.push(widget);\n            widgets.sort((a, b) => a.tabIndex - b.tabIndex);\n        }\n    }\n    /**\n     * @param {PUXI.FocusableWidget} widget\n     * @override\n     */\n    out(widget) {\n        const widgets = this.tabGroups.get(widget.tabGroup);\n        if (!widgets) {\n            return;\n        }\n        const i = widgets.indexOf(widget);\n        if (i !== -1) {\n            // Widgets should already be sorted & so deleting should not unsort it.\n            widgets.splice(i, 1);\n        }\n    }\n    /**\n     * Called when a widget comes into focus. Do not call this yourself.\n     *\n     * @param {FocusableWidget} widget\n     */\n    notifyFocus(widget) {\n        const lastItem = this.currentItem;\n        if (lastItem) {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n        this.currentItem = widget;\n        this.emit('focus', widget);\n        this.emit('focusChanged', widget, lastItem);\n    }\n    /**\n     * Clears the currently focused item without blurring it. It is called\n     * when a widget goes out of focus.\n     */\n    notifyBlur() {\n        this.emit('blur', this.currentItem);\n        this.emit('focusChanged', null, this.currentItem);\n        this.currentItem = null;\n    }\n    /**\n     * Brings the widget into focus.\n     *\n     * @param {FocusableWidget} item\n     */\n    focus(item) {\n        const lastItem = this.currentItem;\n        if (lastItem) {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n        item.focus();\n        this.emit('focus', item);\n        this.emit('focusChanged', item, lastItem);\n    }\n    /**\n     * Blurs the currently focused widget out of focus.\n     */\n    blur() {\n        if (this.currentItem) {\n            this.currentItem.blur();\n            this.emit('blur', this.currentItem);\n            this.emit('focusChanged', null, this.currentItem);\n            this.currentItem = null;\n        }\n    }\n    /**\n     * Called when tab is pressed on a focusable widget.\n     */\n    onTab() {\n        const { tabGroups, currentItem } = this;\n        if (currentItem) {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n            let i = tabGroup.indexOf(currentItem) + 1;\n            if (i >= tabGroup.length) {\n                i = 0;\n            }\n            this.focus(tabGroup[i]);\n        }\n    }\n    /**\n     * Focuses the next item without wrapping, i.e. it does not go to the first\n     * item if the current one is the last item. This is called when the user\n     * presses the forward arrow key.\n     */\n    onForward() {\n        if (!this.useForward) {\n            return;\n        }\n        const { currentItem, tabGroups } = this;\n        if (currentItem) {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n            let i = tabGroup.indexOf(currentItem) + 1;\n            if (i >= tabGroup.length) {\n                i = tabGroup.length - 1;\n            }\n            this.focus(tabGroup[i]);\n        }\n    }\n    /**\n     * Focuses the last item without wrapping, i.e. it does not go to the last\n     * item if the current item is the first one. This is called when the user\n     * presses the back arrow button.\n     */\n    onBack() {\n        const { currentItem, tabGroups } = this;\n        if (currentItem) {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n            let i = tabGroup.indexOf(currentItem) - 1;\n            if (i < 0)\n                i = 0;\n            this.focus(tabGroup[i]);\n        }\n    }\n}\n//# sourceMappingURL=FocusController.js.map","import { ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @memberof PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout {\n    constructor() {\n        this.noPercents = false;\n    }\n    onAttach(host) {\n        this.host = host;\n    }\n    onDetach() {\n        this.host = null;\n    }\n    measureChild(child, maxParentWidth, maxParentHeight, widthMode, heightMode) {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT);\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode;\n        let widgetHeightMode;\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1)) {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1) {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1) {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1)) {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1) {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1) {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        child.measure(maxWidgetWidth, maxWidgetHeight, widgetWidthMode, widgetHeightMode);\n    }\n    measureStretch(lowerAnchor, upperAnchor, childDimen) {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1)) {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1) {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1) {\n            return upperAnchor;\n        }\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n    measureChildren(maxParentWidth, maxParentHeight, widthMode, heightMode) {\n        const children = this.host.widgetChildren;\n        for (let i = 0, j = children.length; i < j; i++) {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n    onMeasure(maxWidth, maxHeight, widthMode, heightMode) {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY) {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight, MeasureMode.EXACTLY, MeasureMode.EXACTLY);\n        }\n        let maxX = 0;\n        let maxY = 0;\n        const children = this.host.widgetChildren;\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n        for (let i = 0, j = children.length; i < j; i++) {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT);\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n        if (widthMode === MeasureMode.EXACTLY) {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST) {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else {\n            this.measuredWidth = maxX;\n        }\n        if (heightMode === MeasureMode.EXACTLY) {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST) {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else {\n            this.measuredHeight = maxY;\n        }\n        this.measureChildren(this.measuredWidth, this.measuredHeight, MeasureMode.EXACTLY, MeasureMode.EXACTLY);\n    }\n    getMeasuredWidth() {\n        return this.measuredWidth;\n    }\n    getMeasuredHeight() {\n        return this.measuredHeight;\n    }\n    onLayout() {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n        for (let i = 0; i < widgetChildren.length; i++) {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {});\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n            if (anchorLeft > -1 && anchorLeft <= 1) {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1) {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1) {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1) {\n                anchorBottom *= parent.height;\n            }\n            let x = 0;\n            let y = 0;\n            if (childWidth !== 0) {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE) {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n            if (childHeight !== 0) {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE) {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n//# sourceMappingURL=AnchorLayout.js.map","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions {\n    constructor(anchorLeft, anchorTop, anchorRight, anchorBottom, horizontalAlign = ALIGN.NONE, verticalAlign = ALIGN.NONE) {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n//# sourceMappingURL=AnchorLayoutOptions.js.map","import { FocusableWidget } from './FocusableWidget';\nimport { TextWidget } from './TextWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n/**\n * Button that can be clicked.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class Button extends FocusableWidget {\n    /**\n     * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n     * @param [options.text=null] {PIXI.UI.Text} optional text\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.width=options.background.width] {Number|String} width\n     * @param [options.height=options.background.height] {Number|String} height\n     */\n    constructor(options) {\n        super(options);\n        this.isHover = false;\n        if (typeof options.text === 'string') {\n            options.text = new TextWidget(options.text, new PIXI.TextStyle());\n        }\n        this.textWidget = options.text.setLayoutOptions(new FastLayoutOptions(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT, 0.5, 0.5, FastLayoutOptions.CENTER_ANCHOR));\n        if (this.textWidget) {\n            this.addChild(this.textWidget);\n        }\n        this.contentContainer.buttonMode = true;\n        this.setupClick();\n    }\n    setupClick() {\n        const clickEvent = this.eventBroker.click;\n        clickEvent.onHover = (e, over) => {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n        clickEvent.onPress = (e, isPressed) => {\n            if (isPressed) {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n            this.emit('press', isPressed);\n        };\n        clickEvent.onClick = (e) => {\n            this.click();\n        };\n        this.click = () => {\n            this.emit('click');\n        };\n    }\n    update() {\n        // No update needed\n    }\n    initialize() {\n        super.initialize();\n        this.setupClick();\n        this.insetContainer.interactiveChildren = false;\n        // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n    }\n    /**\n     * Label for this button.\n     * @member {string}\n     */\n    get value() {\n        if (this.textWidget) {\n            return this.textWidget.text;\n        }\n        return '';\n    }\n    set value(val) {\n        if (this.textWidget) {\n            this.textWidget.text = val;\n        }\n    }\n    get text() {\n        return this.textWidget;\n    }\n    set text(val) {\n        this.value = val;\n    }\n}\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n//# sourceMappingURL=Button.js.map","import { FocusableWidget } from './FocusableWidget';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n/**\n * @memberof PUXI\n * @extends PUXI.IFocusableOptions\n * @member {boolean} checked\n * @member {PIXI.Container}[checkmark]\n * @member {PUXI.CheckGroup}[checkGroup]\n * @member {string}[value]\n */\n/**\n * A checkbox is a button can be selected (checked). It has a on/off state that\n * can be controlled by the user.\n *\n * When used in a checkbox group, the group will control whether the checkbox can\n * be selected or not.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class CheckBox extends FocusableWidget {\n    /**\n     * @param {PUXI.ICheckBoxOptions} options\n     * @param [options.checked=false] {bool} is checked\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n     * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n     * @param {PUXI.CheckGroup}[options.checkGroup=null] CheckGroup name\n     * @param options.value {String} mostly used along with checkgroup\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     */\n    constructor(options) {\n        super(options);\n        this.change = (val) => {\n            if (this.checkmark) {\n                this.checkmark.alpha = val ? 1 : 0;\n            }\n        };\n        this.click = () => {\n            this.emit('click');\n            if (this.checkGroup !== null && this.checked) {\n                return;\n            }\n            this.checked = !this.checked;\n            this.emit('changed', this.checked);\n        };\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkGroup || null;\n        this.checkmark = new InteractiveGroup();\n        this.checkmark.contentContainer.addChild(options.checkmark);\n        this.checkmark.setLayoutOptions(new FastLayoutOptions(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT, 0.5, 0.5, FastLayoutOptions.CENTER_ANCHOR));\n        this.checkmark.alpha = this._checked ? 1 : 0;\n        this.addChild(this.checkmark);\n        this.contentContainer.buttonMode = true;\n    }\n    update() {\n        // No need for updating\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(val) {\n        if (val !== this._checked) {\n            if (this.checkGroup !== null && val) {\n                this.stage.checkBoxGroupController.notifyCheck(this);\n            }\n            this._checked = val;\n            this.change(val);\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        if (this.checked) {\n            this.stage.checkBoxGroupController.notifyCheck(this);\n        }\n    }\n    get selectedValue() {\n        var _a;\n        return (_a = this.stage) === null || _a === void 0 ? void 0 : _a.checkBoxGroupController.getSelected(this.checkGroup).value;\n    }\n    initialize() {\n        super.initialize();\n        const clickMgr = this.eventBroker.click;\n        clickMgr.onHover = (_, over) => {\n            this.emit('hover', over);\n        };\n        clickMgr.onPress = (e, isPressed) => {\n            if (isPressed) {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n            this.emit('press', isPressed);\n        };\n        clickMgr.onClick = () => {\n            this.click();\n        };\n        if (this.checkGroup !== null) {\n            this.stage.checkBoxGroupController.in(this, this.checkGroup);\n        }\n    }\n}\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n//# sourceMappingURL=CheckBox.js.map","import { Slider } from './Slider';\nimport { Tween } from './Tween';\n/**\n * @memberof PUXI\n * @interface IScrollBarOptions\n * @property {PUXI.Sprite} track\n * @property {PUXI.Sprite} handle\n */\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PUXI.Slider\n * @memberof PUXI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider {\n    constructor(options) {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n    initialize() {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val) => {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n            if (sizeAmt < 1) {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n        this.scrollingContainer._scrollBars.push(this);\n    }\n    alignToContainer() {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n        if (sizeAmt >= 1) {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1) {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0) {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n            if (this._amt < 0) {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1) {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n    toggleHidden(hidden) {\n        if (this.autohide) {\n            if (hidden && !this._hidden) {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden) {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n//# sourceMappingURL=ScrollBar.js.map","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PUXI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget {\n    constructor(texture, borderWidth, horizontalSlice, verticalSlice, tile) {\n        super(texture.width, texture.height);\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n        if (this.hs) {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs) {\n            this.setting.minHeight = borderWidth * 2;\n        }\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function () {\n            if (!this.initialized)\n                return;\n            if (vs && hs) {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs) {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n            if (this.tint !== null) {\n                sf.tint = this.tint;\n                if (vs && hs)\n                    stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs)\n                    sl.tint = sr.tint = this.tint;\n                if (vs)\n                    st.tint = sb.tint = this.tint;\n            }\n            if (this.blendMode !== null) {\n                sf.blendMode = this.blendMode;\n                if (vs && hs)\n                    stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs)\n                    sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs)\n                    st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n    initialize() {\n        super.initialize();\n        const { f, bw } = this;\n        // get frames\n        if (this.vs && this.hs) {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs) {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n        // TODO: swap frames if rotation\n        const { t, ff, fl, fr, ft, fb } = this;\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n        if (this.vs && this.hs) {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs) {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs) {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n        // set constant position and sizes\n        if (this.vs && this.hs) {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n        if (this.hs) {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs) {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n    update() {\n        // NO updates\n    }\n}\n//# sourceMappingURL=SliceSprite.js.map","import { InteractiveGroup } from './InteractiveGroup';\nimport { Tween } from './Tween';\n/**\n * An UI Container object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends InteractiveGroup {\n    constructor(desc, tweenTime, tweenEase) {\n        super(0, 0);\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n    addChild(UIObject, fnValue, fnThenBy) {\n        super.addChild(UIObject);\n        if (this.items.indexOf(UIObject) === -1) {\n            this.items.push(UIObject);\n        }\n        if (typeof fnValue === 'function') {\n            UIObject._sortListValue = fnValue;\n        }\n        if (typeof fnThenBy === 'function') {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n        if (!UIObject._sortListRnd) {\n            UIObject._sortListRnd = Math.random();\n        }\n        this.sort();\n    }\n    removeChild(UIObject) {\n        if (arguments.length > 1) {\n            for (let i = 0; i < arguments.length; i++) {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n            if (index !== -1) {\n                this.items.splice(index, 1);\n            }\n            this.sort();\n        }\n    }\n    sort(instant = false) {\n        clearTimeout(this._sortTimeout);\n        if (instant) {\n            this._sort();\n            return;\n        }\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n    _sort() {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n        this.items.sort(function (a, b) {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue) {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0) {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n            return res;\n        });\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            alt = !alt;\n            if (this.tweenTime > 0) {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function') {\n                item.altering(alt);\n            }\n        }\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0) {\n            setTimeout(() => {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n//# sourceMappingURL=SortableList.js.map","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget {\n    constructor(t, width, height) {\n        const sprite = new PIXI.extras.TilingSprite(t);\n        super(width || sprite.width, height || sprite.height);\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update() {\n        if (this.tint !== null) {\n            this.sprite.tint = this.tint;\n        }\n        if (this.blendMode !== null) {\n            this.sprite.blendMode = this.blendMode;\n        }\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n    get tilePosition() {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val) {\n        this.sprite.tilePosition = val;\n    }\n    get tileScale() {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val) {\n        this.sprite.tileScale = val;\n    }\n}\n//# sourceMappingURL=TilingSprite.js.map"],"names":["_items","DragDropController","add","item","event","_dragDropEventId","data","identifier","indexOf","push","[object Object]","object","index","i","length","splice","group","id","dragGroup","Insets","this","reset","dirtyId","left","top","right","bottom","MeasureMode","ALIGN","EventManager","target","isEnabled","ClickManager","includeHover","rightMouseButton","doubleClick","super","startEvent","_includeHover","_rightMouseButton","_doubleClick","insetContainer","on","evMouseDown","onMouseDownImpl","onMouseOverImpl","onMouseOutImpl","stopEvent","bound","removeListener","evMouseUp","onMouseUpImpl","evMouseUpOutside","onMouseUpOutsideImpl","onMouseMoveImpl","obj","_onMouseUp","_onMouseUpOutside","mouse","copyFrom","global","onPress","call","now","performance","time","onClick","originalEvent","preventDefault","onMouseUpCommonImpl","offset","set","x","y","dragThreshold","movementX","Math","abs","movementY","max","ishover","onHover","onMove","PIXI.Point","interactive","val","DragManager","onDragStartImpl","e","isBound","dragStart","stage","onDragMoveImpl","onDragEndImpl","lastCursor","dragOffset","isDragging","dragRestrictAxis","cancel","onDragStart","onDragMove","onDragEnd","EventBroker","mgr","Object","keys","MANAGER_MAP","defineProperty","click","dnd","ScrollManager","onMouseScrollImpl","delta","deltaX","deltaY","axis","detail","onMouseScroll","onHoverImpl","document","addEventListener","removeEventListener","contentContainer","Widget","PIXI.utils","EventEmitter","PIXI.Container","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_elevation","tint","blendMode","PIXI.BLEND_MODES","NORMAL","draggable","droppable","measuredWidth","_measuredWidth","measuredHeight","_measuredHeight","width","height","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","l","t","r","b","_width","_height","background","lopt","layoutOptions","eventBroker","_eventBroker","paddingLeft","paddingTop","paddingRight","paddingBottom","alpha","bg","removeChild","string2hex","PIXI.Graphics","beginFill","drawRect","endFill","addChildAt","setBackground","_dropShadow","filters","DropShadowFilter","distance","widgets","widget","parent","initDraggable","initDroppable","realPosition","dragPosition","added","position","emit","getItem","setTimeout","onDrop","container","getEventItem","dropGroup","droppableReparent","self","toLocal","LayoutOptions","WRAP_CONTENT","markers","marginLeft","_marginLeft","marginTop","_marginTop","marginRight","_marginRight","marginBottom","_marginBottom","FILL_PARENT","MAX_DIMEN","DEFAULT","FastLayoutOptions","anchor","DEFAULT_ANCHOR","clone","CENTER_ANCHOR","FastLayout","host","maxWidth","maxHeight","children","j","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","measure","measureWidthReach","measureHeightReach","measureChildFillers","dimen","parentMeasureMode","parentWidthLimit","childWidth","getMeasuredWidth","minr","parentHeightLimit","childHeight","getMeasuredHeight","minb","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","InteractiveGroup","hitArea","PIXI.Rectangle","FocusableWidget","options","bindEvents","onDocumentPointerDownImpl","onKeyDownImpl","clearEvents","off","focusCtl","focusController","which","useTab","onTab","useBack","onBack","useForward","onForward","_isMousePressed","blur","_isFocused","tabIndex","tabGroup","focus","isFocused","notifyFocus","notifyBlur","initialize","in","TextWidget","text","textStyle","textDisplay","PIXI.Text","value","EaseBase","p","ExponentialEase","power","easeIn","easeOut","pow","getPosition","prototype","create","constructor","Ease","HALF_PI","PI","fn","Linear","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","Helpers","Lerp","start","stop","amt","number","decimals","round","c","hex","toString","g","componentToHex","rgbToNumber","numberToRgb","floor","isNaN","replace","m","result","exec","parseInt","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","TweenObject","tweens","active","onUpdate","CallbackItem","_ready","key","callback","currentTime","_tweenObjectId","_currentCallbackID","remove","TweenItem","from","to","ease","isColor","surfix","getSurfix","hexToRgb","currentColor","parseFloat","getToValue","widthKeys","heightKeys","getFromValue","getObject","getTweenItem","tween","getCallbackItem","cb","Tween","params","match","paramsFrom","paramsTo","update","Slider","_amt","_disabled","track","handle","fill","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","pivot","buttonMode","horizontalAlign","verticalAlign","soft","handleSize","localMousePosition","maxPosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","isPressed","stopPropagation","trackDrag","Round","disabled","Ticker","autoStart","_now","DeltaTime","Time","Ms","shared","_update","requestAnimationFrame","context","once","ScrollWidget","forcePctPosition","direction","pct","bounds","getInnerBounds","innerContainer","scrollX","scrollY","scrollPosition","targetPosition","focusPosition","pos","dif","lastPosition","updateScrollBars","setScrollPosition","velocity","scrollVelocity","animating","updateScrollPosition","updateDirection","scrolling","softness","exp","mask","innerBounds","undefined","dragScrolling","radius","expandMask","overflowY","overflowX","_scrollBars","boundCached","initScrolling","lastWidth","lastHeight","of","clear","lineStyle","drawRoundedRect","newChildren","alignToContainer","force","getLocalBounds","drag","_","scrollSpeed","Sprite","texture","spriteDisplay","PIXI.Sprite","imageUrl","PIXI.Texture","PIXI.BaseTexture","Controller","Stage","__width","__height","minWidth","minHeight","resize","_checkBoxGroupCtl","CHECK_BOX_GROUP_CONTROLLER","_focusCtl","FOCUS_CONTROLLER","renderer","render","UIObject","argumentLenght","arguments","measureAndLayout","rx","ry","scale","updatesettings","checkBoxGroupController","mockDOMInput","checkGroups","Map","checkGroup","Error","get","initGroup","checks","checked","selected","_a","cgroup","tabGroups","sort","a","lastItem","currentItem","noPercents","child","maxParentWidth","maxParentHeight","anchorLeft","anchorTop","anchorRight","anchorBottom","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","ceil","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","NONE","LEFT","MIDDLE","RIGHT","TOP","isHover","PIXI.TextStyle","textWidget","setLayoutOptions","setupClick","clickEvent","over","interactiveChildren","change","checkmark","_checked","_value","notifyCheck","selectedValue","getSelected","clickMgr","scrollingContainer","autohide","_hidden","size","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","baseTexture","f","frame","setting","str","sbr","sr","sbl","sb","sf","st","sl","stl","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","PIXI.extras","TilingSprite","desc","tweenTime","tweenEase","items","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","fromTo","altering","onKeyDown","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","chars","_atEnd","slice","multiLine","vrdd","hasSelection","de","textHeightPX","lineHeight","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","_i","selectIndex","keyUpEvent","copyEvent","clipboardData","window","setData","cutEvent","pasteEvent","getData","inputEvent","inputBlurEvent","worldTransform","tx","ty","h","w","setAttribute","cacheAsBitmap","visible","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","lineIndex","textHeight","scrollToPosition","showCaret","selectWord","wordIndex","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","createElement","body","appendChild","_dirtyText","maxLength","color","style","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","padding","textContainer","setPadding","_useNext","_usePrev","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","mouseDown","timeSinceLast","_lastWidth","updateText","whitespace","newline","lastWordIndex","wrap","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","char","distX","clearInterval","caretInterval","setInterval","sprite","tilePosition","tilingPosition","tileScale"],"mappings":"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"}