{"version":3,"file":"pixi-ui.min.js","sources":["../src/UISettings.ts","../src/Interaction/DragEvent.ts","../src/Interaction/DragDropController.js","../src/layout-options/Align.ts","../src/layout-options/Insets.ts","../src/IMeasurable.ts","../src/layout-options/LayoutOptions.ts","../src/layout-options/AnchorLayoutOptions.ts","../src/Interaction/InputController.ts","../src/Widget.ts","../src/Interaction/ClickEvent.ts","../src/InputBase.ts","../src/Button.ts","../src/CheckBox.ts","../src/Container.ts","../src/DynamicText/DynamicTextStyle.js","../src/DynamicText/DynamicChar.js","../src/DynamicText/DynamicText.js","../src/Ease/EaseBase.js","../src/Ease/ExponentialEase.js","../src/Ease/Ease.js","../src/Interaction/MouseScrollEvent.ts","../src/Interaction/Interaction.js","../src/Helpers.ts","../src/Tween.ts","../src/Slider.ts","../src/ScrollBar.ts","../src/Ticker.ts","../src/TextInput.ts","../src/ScrollingContainer.ts","../src/SortableList.ts","../src/SliceSprite.ts","../src/Sprite.ts","../src/Stage.ts","../src/Text.ts","../src/TilingSprite.ts","../src/layout-manager/AnchorLayout.ts","../src/WidgetGroup.ts"],"sourcesContent":["/**\n * Layout and rendering configuration for a `PIXI.UI.UIBase`.\n *\n * @class\n * @memberof PIXI.UI\n */\nexport class UISettings\n{\n    public width: number;\n    public height: number;\n    public minWidth: number;\n    public minHeight: number;\n    public maxWidth: number;\n    public maxHeight: number;\n\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public widthPct: number;\n    public heightPct: number;\n    public minWidthPct: number;\n    public minHeightPct: number;\n    public maxWidthPct: number;\n    public maxHeightPct: number;\n\n    public leftPct: number;\n    public topPct: number;\n    public rightPct: number;\n    public bottomPct: number;\n\n    public anchorLeftPct: number;\n    public anchorTopPct: number;\n    public anchorBottomPct: number;\n    public anchorRightPct: number;\n\n    public pivotX: number;\n    public pivotY: number;\n    public scaleX: number;\n    public scaleY: number;\n\n    public horizontalAlign: boolean;\n    public verticalAlign: boolean;\n\n    public rotation: number;\n    public blendMode: number;\n    public tint: number;\n    public alpha: number;\n\n    public draggable: boolean;\n    public dragRestricted: boolean;\n    public dragRestrictAxis: PIXI.Point;\n    public dragGroup: any;\n    public dragThreshold: number;\n    public dragContainer: PIXI.Container;\n    public droppable: boolean;\n    public droppableParent: boolean;\n    public droppableReparent: boolean;\n    public dropGroup: any;\n\n    constructor()\n    {\n        this.width = 0;\n        this.height = 0;\n        this.minWidth = 0;\n        this.minHeight = 0;\n        this.maxWidth = null;\n        this.maxHeight = null;\n\n        this.left = null;\n        this.right = null;\n        this.top = null;\n        this.bottom = null;\n\n        this.anchorLeft = null;\n        this.anchorRight = null;\n        this.anchorTop = null;\n        this.anchorBottom = null;\n\n        this.widthPct = null;\n        this.heightPct = null;\n        this.minWidthPct = null;\n        this.minHeightPct = null;\n        this.maxWidthPct = null;\n        this.maxHeightPct = null;\n        this.leftPct = null;\n        this.rightPct = null;\n        this.topPct = null;\n        this.bottomPct = null;\n        this.anchorLeftPct = null;\n        this.anchorRightPct = null;\n        this.anchorTopPct = null;\n        this.anchorBottomPct = null;\n\n        this.pivotX = 0;\n        this.pivotY = 0;\n        this.scaleX = 1;\n        this.scaleY = 1;\n        this.verticalAlign = null;\n        this.horizontalAlign = null;\n        this.rotation = null;\n        this.blendMode = null;\n        this.tint = null;\n        this.alpha = 1;\n\n        this.draggable = null;\n        this.dragRestricted = false;\n        this.dragRestrictAxis = null; // x, y\n        this.dragThreshold = 0;\n        this.dragGroup = null;\n        this.dragContainer = null;\n        this.droppable = null;\n        this.droppableReparent = null;\n        this.dropGroup = null;\n    }\n}\n\nexport default UISettings;\n","import * as PIXI from 'pixi.js';\n\nexport class DragEvent\n{\n    private bound: boolean;\n    private start: PIXI.Point;\n    private offset: PIXI.Point;\n    private mouse: PIXI.Point;\n\n    movementX: number;\n    movementY: number;\n\n    cancel: boolean;\n    dragging: boolean;\n\n    id: number;\n    obj: any;\n\n    constructor(obj: any)\n    {\n        this.bound = false;\n        this.start = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.mouse = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n        this.dragging = false;\n        this.id = 0;\n\n        this.obj = obj;\n        this.obj.container.interactive = true;\n\n        this.startEvent();\n    }\n\n    _onDragStart = (e): void =>\n    {\n        const {\n            obj,\n            start,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        this.id = e.data.identifier;\n        this.onPress.call(obj, e, true);\n\n        if (!this.bound)\n        {\n            start.copyFrom(e.data.global);\n\n            obj.stage.on('mousemove', _onDragMove);\n            obj.stage.on('touchmove', _onDragMove);\n            obj.stage.on('mouseup', _onDragEnd);\n            obj.stage.on('mouseupoutside', _onDragEnd);\n            obj.stage.on('touchend', _onDragEnd);\n            obj.stage.on('touchendoutside', _onDragEnd);\n            obj.stage.on('touchcancel', _onDragEnd);\n\n            this.bound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    _onDragMove = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            mouse,\n            offset,\n            start,\n            obj,\n        } = this;\n\n        mouse.copyFrom(e.data.global);\n        offset.set(mouse.x - start.x, mouse.y - start.y);\n\n        if (!this.dragging)\n        {\n            this.movementX = Math.abs(offset.x);\n            this.movementY = Math.abs(offset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < obj.dragThreshold)\n            {\n                return; // thresshold\n            }\n\n            if (obj.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (obj.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (obj.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this._onDragEnd(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart.call(obj, e);\n            this.dragging = true;\n        }\n\n        this.onDragMove.call(obj, e, offset);\n    };\n\n    _onDragEnd = (e): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            obj,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n            obj.stage.removeListener('touchcancel', _onDragEnd);\n\n            this.dragging = false;\n            this.bound = false;\n\n            this.onDragEnd.call(obj, e);\n            this.onPress.call(obj, e, false);\n        }\n    };\n\n    stopEvent(): void\n    {\n        const {\n            obj,\n            _onDragStart,\n            _onDragMove,\n            _onDragEnd,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.stage.removeListener('mousemove', _onDragMove);\n            obj.stage.removeListener('touchmove', _onDragMove);\n            obj.stage.removeListener('mouseup', _onDragEnd);\n            obj.stage.removeListener('mouseupoutside', _onDragEnd);\n            obj.stage.removeListener('touchend', _onDragEnd);\n            obj.stage.removeListener('touchendoutside', _onDragEnd);\n\n            this.bound = false;\n        }\n\n        obj.container.removeListener('mousedown', _onDragStart);\n        obj.container.removeListener('touchstart', _onDragStart);\n    }\n\n    startEvent(): void\n    {\n        const { obj, _onDragStart } = this;\n\n        obj.container.on('mousedown', _onDragStart);\n        obj.container.on('touchstart', _onDragStart);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onPress(e, isPressed: boolean): void\n    {\n        // Default onPress\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragStart(e): void\n    {\n        // Default onDragStart\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragMove(e, offset: PIXI.Point): void\n    {\n        // Default onDragMove\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDragEnd(e): void\n    {\n        // Default onDragEnd\n    }\n}\n","const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @namespace PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","/**\n * @namespace PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","export enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n */\nexport interface IMeasurable\n{\n    /**\n     * Measures its width & height based on the passed constraints.\n     *\n     * @param maxWidth\n     * @param maxHeight\n     * @param widthMode\n     * @param heightMode\n     */\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n\n    getMeasuredWidth(): number;\n\n    getMeasuredHeight(): number;\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @namespace PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public markers: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT)\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = width;\n\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = height;\n\n        this.markers = {};\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\n/**\n * Anchored layout-options specify the left, top, right, and bottom offsets of a\n * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n * as a percentage of the parent's dimensions.\n *\n * The following example will render a widget at 80% of the parent's width and\n * 60px height.\n * ```js\n * const widget: PUXI.Widget = new Widget();\n * const anchorPane: PUXI.Widget = new Widget();\n *\n * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n *      .10,\n *      .90,\n *      20,\n *      80\n * );\n *\n * // Prevent child from requesting natural bounds.\n * widget.layoutOptions.width = 0;\n * widget.layoutOptions.height = 0;\n * ```\n *\n * ### Intra-anchor region constraints\n *\n * If the offsets given provide a region larger than the widget's dimensions, then\n * the widget will be aligned accordingly. However, if the width or height of the\n * child is set to 0, then that child will be scaled to fit in the entire region\n * in that dimension.\n *\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(\n        anchorLeft: number,\n        anchorTop: number,\n        anchorRight: number,\n        anchorBottom: number,\n        horizontalAlign = ALIGN.NONE,\n        verticalAlign = ALIGN.NONE)\n    {\n        super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n\n        this.anchorLeft = anchorLeft;\n        this.anchorTop = anchorTop;\n        this.anchorBottom = anchorBottom;\n        this.anchorRight = anchorRight;\n\n        this.horizontalAlign = horizontalAlign;\n        this.verticalAlign = verticalAlign;\n    }\n}\n","let _currentItem;\nconst tabGroups = {};\nconst checkGroups = {};\nconst checkGroupValues = {};\n\n/**\n * Handles focus-management in the scene graph.\n */\nexport const InputController = {\n    registrer(item, tabIndex, tabGroup): void\n    {\n        const groupName = tabGroup || 'default';\n\n        let items = tabGroups[groupName];\n\n        if (!items)\n        { items = tabGroups[groupName] = []; }\n\n        const i = items.indexOf(item);\n\n        if (i === -1)\n        {\n            item._tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            item._tabGroup = items;\n            items.push(item);\n            items.sort(function sorter(a, b)\n            {\n                if (a._tabIndex < b._tabIndex)\n                { return -1; }\n                if (a._tabIndex > b._tabIndex)\n                { return 1; }\n\n                return 0;\n            });\n        }\n    },\n    set(item): void\n    {\n        this.blur();\n        _currentItem = item;\n    },\n    clear(): void\n    {\n        _currentItem = undefined;\n    },\n    blur(): void\n    {\n        if (_currentItem && typeof _currentItem.blur === 'function')\n        {\n            _currentItem.blur();\n        }\n    },\n    fireTab(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    fireNext(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) + 1;\n\n            if (i >= _currentItem._tabGroup.length) i = _currentItem._tabGroup.length - 1;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    firePrev(): void\n    {\n        if (_currentItem)\n        {\n            let i = _currentItem._tabGroup.indexOf(_currentItem) - 1;\n\n            if (i < 0) i = 0;\n            _currentItem._tabGroup[i].focus();\n        }\n    },\n    registrerCheckGroup(cb): void\n    {\n        const name = cb.checkGroup;\n        let group = checkGroups[name];\n\n        if (!group) group = checkGroups[name] = {};\n        group[cb.value] = cb;\n\n        if (cb.checked)\n        { checkGroupValues[name] = cb.value; }\n    },\n    updateCheckGroupSelected(cb): void\n    {\n        const group = checkGroups[cb.checkGroup];\n\n        for (const val in group)\n        {\n            const b = group[val];\n\n            if (b !== cb)\n            { b.checked = false; }\n        }\n        checkGroupValues[cb.checkGroup] = cb.value;\n    },\n    getCheckGroupSelectedValue(name): string\n    {\n        if (checkGroupValues[name])\n        { return checkGroupValues[name]; }\n\n        return '';\n    },\n    setCheckGroupSelectedValue(name, val): void\n    {\n        const group = checkGroups[name];\n\n        if (group)\n        {\n            const cb = group[val];\n\n            if (cb)\n            {\n                cb.checked = true;\n            }\n        }\n    },\n};\n\n","import { UISettings } from './UISettings';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { DragDropController } from './Interaction/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\n\n/**\n * A widget is a user interface control that renders content inside its prescribe\n * rectangle on the screen.\n *\n * @class\n * @extends PIXI.Container\n * @param width {Number} Width of the UIObject\n * @param height {Number} Height of the UIObject\n */\nexport abstract class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    content: PIXI.Container;\n    container: PIXI.Container;\n    setting: UISettings;\n    widgetChildren: Widget[];\n    stage: any;\n\n    initialized: boolean;\n    dragInitialized: boolean;\n    dropInitialized: boolean;\n    dragging: boolean;\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    _width: number;\n    _height: number;\n    _minWidth: number;\n    _minHeight: number;\n    _maxWidth: number;\n    _maxHeight: number;\n    _anchorLeft: number;\n    _anchorRight: number;\n    _anchorTop: number;\n    _anchorBottom: number;\n    _left: number;\n    _right: number;\n    _top: number;\n    _bottom: number;\n\n    _dragPosition: any;\n    parent: Widget;\n    _parentWidth: number;\n    _parentHeight: number;\n\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.container = new PIXI.Container();\n        this.setting = new UISettings();\n        this.widgetChildren = [];\n        this.stage = null;\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        if (width && isNaN(width) && width.indexOf('%') != -1)\n        {\n            this.setting.widthPct = parseFloat(width.replace('%', '')) * 0.01;\n        }\n        else\n        {\n            this.setting.widthPct = null;\n        }\n\n        if (height && isNaN(height) && height.indexOf('%') != -1)\n        { this.setting.heightPct = parseFloat(height.replace('%', '')) * 0.01; }\n        else\n        {\n            this.setting.heightPct = null;\n        }\n\n        this.setting.width = width || 0;\n        this.setting.height = height || 0;\n\n        // actual values\n        this._width = 0;\n        this._height = 0;\n        this._minWidth = null;\n        this._minHeight = null;\n        this._maxWidth = null;\n        this._maxHeight = null;\n        this._anchorLeft = null;\n        this._anchorRight = null;\n        this._anchorTop = null;\n        this._anchorBottom = null;\n        this._left = null;\n        this._right = null;\n        this._top = null;\n        this._bottom = null;\n\n        this._dragPosition = null; // used for overriding positions if tweens is playing\n    }\n\n    /**\n     * Renders the object using the WebGL renderer\n     *\n     * @private\n     */\n    protected updatesettings(updateChildren: boolean, updateParent?: boolean): void\n    {\n        if (!this.initialized)\n        {\n            if (this.parent && this.parent.stage && this.parent.initialized)\n            {\n                this.initialize();\n            }\n            else\n            {\n                return;\n            }\n        }\n\n        if (updateParent)\n        {\n            this.updateParent();\n        }\n\n        this.baseupdate();\n        this.update();\n\n        if (updateChildren)\n        {\n            this.updateChildren();\n        }\n    }\n\n    /**\n     * Update method (override from other UIObjects)\n     *\n     * @private\n     */\n    abstract update ();\n\n    /**\n     * Updates the parent\n     *\n     * @private\n     */\n    updateParent(): void\n    {\n        if (this.parent)\n        {\n            if (this.parent.updatesettings)\n            {\n                this.parent.updatesettings(false, true);\n            }\n        }\n    }\n\n    /**\n     * Updates the UIObject with all base settings\n     *\n     * @private\n     */\n    protected baseupdate(): void\n    {\n    // return if parent size didnt change\n        if (this.parent)\n        {\n            let parentHeight; let\n                parentWidth;\n\n            // transform convertion (% etc)\n            this.dirty = true;\n            this._width = this.actual_width;\n            this._height = this.actual_height;\n            this._minWidth = this.actual_minWidth;\n            this._minHeight = this.actual_minHeight;\n            this._maxWidth = this.actual_maxWidth;\n            this._maxHeight = this.actual_maxHeight;\n            this._anchorLeft = this.actual_anchorLeft;\n            this._anchorRight = this.actual_anchorRight;\n            this._anchorTop = this.actual_anchorTop;\n            this._anchorBottom = this.actual_anchorBottom;\n            this._left = this.actual_left;\n            this._right = this.actual_right;\n            this._top = this.actual_top;\n            this._bottom = this.actual_bottom;\n            this._parentWidth = parentWidth = this.parent._width;\n            this._parentHeight = parentHeight = this.parent._height;\n            this.dirty = false;\n\n            let pivotXOffset = this.pivotX * this._width;\n            let pivotYOffset = this.pivotY * this._height;\n\n            if (this.pixelPerfect)\n            {\n                pivotXOffset = Math.round(pivotXOffset);\n                pivotYOffset = Math.round(pivotYOffset);\n            }\n\n            if (this.horizontalAlign === null)\n            {\n            // get anchors (use left right if conflict)\n                if (this._anchorLeft !== null && this._anchorRight === null && this._right !== null)\n                { this._anchorRight = this._right; }\n                else if (this._anchorLeft === null && this._anchorRight !== null && this._left !== null)\n                { this._anchorLeft = this._left; }\n                else if (this._anchorLeft === null && this._anchorRight === null && this._left !== null && this._right !== null)\n                {\n                    this._anchorLeft = this._left;\n                    this._anchorRight = this._right;\n                }\n\n                const useHorizontalAnchor = this._anchorLeft !== null || this._anchorRight !== null;\n                const useLeftRight = !useHorizontalAnchor && (this._left !== null || this._right !== null);\n\n                if (useLeftRight)\n                {\n                    if (this._left !== null)\n                    { this.container.position.x = this._left; }\n                    else if (this._right !== null)\n                    { this.container.position.x = parentWidth - this._right; }\n                }\n                else if (useHorizontalAnchor)\n                {\n                    if (this._anchorLeft !== null && this._anchorRight === null)\n                    { this.container.position.x = this._anchorLeft; }\n                    else if (this._anchorLeft === null && this._anchorRight !== null)\n                    { this.container.position.x = parentWidth - this._width - this._anchorRight; }\n                    else if (this._anchorLeft !== null && this._anchorRight !== null)\n                    {\n                        this.container.position.x = this._anchorLeft;\n                        this._width = parentWidth - this._anchorLeft - this._anchorRight;\n                    }\n                    this.container.position.x += pivotXOffset;\n                }\n                else\n                {\n                    this.container.position.x = 0;\n                }\n            }\n\n            if (this.verticalAlign === null)\n            {\n            // get anchors (use top bottom if conflict)\n                if (this._anchorTop !== null && this._anchorBottom === null && this._bottom !== null)\n                { this._anchorBottom = this._bottom; }\n                if (this._anchorTop === null && this._anchorBottom !== null && this._top !== null)\n                { this._anchorTop = this._top; }\n\n                const useVerticalAnchor = this._anchorTop !== null || this._anchorBottom !== null;\n                const useTopBottom = !useVerticalAnchor && (this._top !== null || this._bottom !== null);\n\n                if (useTopBottom)\n                {\n                    if (this._top !== null)\n                    { this.container.position.y = this._top; }\n                    else if (this._bottom !== null)\n                    { this.container.position.y = parentHeight - this._bottom; }\n                }\n                else if (useVerticalAnchor)\n                {\n                    if (this._anchorTop !== null && this._anchorBottom === null)\n                    { this.container.position.y = this._anchorTop; }\n                    else if (this._anchorTop === null && this._anchorBottom !== null)\n                    { this.container.position.y = parentHeight - this._height - this._anchorBottom; }\n                    else if (this._anchorTop !== null && this._anchorBottom !== null)\n                    {\n                        this.container.position.y = this._anchorTop;\n                        this._height = parentHeight - this._anchorTop - this._anchorBottom;\n                    }\n                    this.container.position.y += pivotYOffset;\n                }\n                else\n                {\n                    this.container.position.y = 0;\n                }\n            }\n\n            // min/max sizes\n            if (this._maxWidth !== null && this._width > this._maxWidth) this._width = this._maxWidth;\n            if (this._width < this._minWidth) this._width = this._minWidth;\n\n            if (this._maxHeight !== null && this._height > this._maxHeight) this._height = this._maxHeight;\n            if (this._height < this._minHeight) this._height = this._minHeight;\n\n            // pure vertical/horizontal align\n            if (this.horizontalAlign !== null)\n            {\n                if (this.horizontalAlign == 'center')\n                {\n                    this.container.position.x = parentWidth * 0.5 - this._width * 0.5;\n                }\n                else if (this.horizontalAlign == 'right')\n                {\n                    this.container.position.x = parentWidth - this._width;\n                }\n                else\n                {\n                    this.container.position.x = 0;\n                }\n\n                this.container.position.x += pivotXOffset;\n            }\n            if (this.verticalAlign !== null)\n            {\n                if (this.verticalAlign == 'middle')\n                {\n                    this.container.position.y = parentHeight * 0.5 - this._height * 0.5;\n                }\n                else if (this.verticalAlign == 'bottom')\n                {\n                    this.container.position.y = parentHeight - this._height;\n                }\n                else\n                {\n                    this.container.position.y = 0;\n                }\n\n                this.container.position.y += pivotYOffset;\n            }\n\n            // Unrestricted dragging\n            if (this.dragging && !this.setting.dragRestricted)\n            {\n                this.container.position.x = this._dragPosition.x;\n                this.container.position.y = this._dragPosition.y;\n            }\n\n            // scale\n            if (this.setting.scaleX !== null) this.container.scale.x = this.setting.scaleX;\n            if (this.setting.scaleY !== null) this.container.scale.y = this.setting.scaleY;\n\n            // pivot\n            if (this.setting.pivotX !== null) this.container.pivot.x = pivotXOffset;\n            if (this.setting.pivotY !== null) this.container.pivot.y = pivotYOffset;\n\n            if (this.setting.alpha !== null) this.container.alpha = this.setting.alpha;\n            if (this.setting.rotation !== null) this.container.rotation = this.setting.rotation;\n\n            // make pixel perfect\n            if (this.pixelPerfect)\n            {\n                this._width = Math.round(this._width);\n                this._height = Math.round(this._height);\n                this.container.position.x = Math.round(this.container.position.x);\n                this.container.position.y = Math.round(this.container.position.y);\n            }\n        }\n    }\n\n    /**\n     * Updates all UI Children\n     *\n     * @private\n     */\n    updateChildren(): void\n    {\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true);\n        }\n    }\n\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.container.width;\n        const naturalHeight = this.container.height;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            const child = this.widgetChildren[i];\n            const childOptions = child.layoutOptions || LayoutOptions.DEFAULT;\n\n            const maxWidth = (childOptions.width === LayoutOptions.FILL_PARENT || childOptions.width === LayoutOptions.WRAP_CONTENT)\n                ? this.measuredWidth : 0;\n            const maxHeight = (childOptions.height === LayoutOptions.FILL_PARENT || childOptions.height === LayoutOptions.WRAP_CONTENT)\n                ? this.measuredHeight : 0;\n\n            child.measure(\n                maxWidth,\n                maxHeight,\n                maxWidth ? MeasureMode.AT_MOST : MeasureMode.UNBOUNDED,\n                maxHeight ? MeasureMode.AT_MOST : MeasureMode.UNBOUNDED,\n            );\n        }\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n    }\n\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    addChild(UIObject): any\n    {\n        const argumentsLength = arguments.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < argumentsLength; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.container.addChild(UIObject.container);\n            this.widgetChildren.push(UIObject);\n            this.updatesettings(true, true);\n        }\n\n        return UIObject;\n    }\n\n    removeChild(UIObject): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                const oldUIParent = UIObject.parent;\n                const oldParent = UIObject.container.parent;\n\n                UIObject.container.parent.removeChild(UIObject.container);\n                this.widgetChildren.splice(index, 1);\n                UIObject.parent = null;\n\n                // oldParent._recursivePostUpdateTransform();\n                setTimeout(function ()\n                { // hack but cant get the transforms to update propertly otherwice?\n                    if (oldUIParent.updatesettings)\n                    { oldUIParent.updatesettings(true, true); }\n                }, 0);\n            }\n        }\n    }\n\n    /**\n     * Initializes the object when its added to an UIStage\n     *\n     * @private\n     */\n    initialize(): void\n    {\n        this.initialized = true;\n        this.stage = this.parent.stage;\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n    }\n\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            this.drag.stopEvent();\n        }\n    }\n\n    initDraggable(): void\n    {\n        if (!this.dragInitialized)\n        {\n            this.dragInitialized = true;\n            const containerStart = new PIXI.Point();\n            const stageOffset = new PIXI.Point();\n            const self = this;\n\n            this._dragPosition = new PIXI.Point();\n            this.drag = new DragEvent(this);\n            this.drag.onDragStart = function (e)\n            {\n                const added = DragDropController.add(this, e);\n\n                if (!this.dragging && added)\n                {\n                    this.dragging = true;\n                    this.container.interactive = false;\n                    containerStart.copy(this.container.position);\n                    if (this.dragContainer)\n                    {\n                        const c = this.dragContainer.container ? this.dragContainer.container : this.dragContainer;\n\n                        if (c)\n                        {\n                        // _this.container._recursivePostUpdateTransform();\n                            stageOffset.set(c.worldTransform.tx - this.parent.container.worldTransform.tx, c.worldTransform.ty - this.parent.container.worldTransform.ty);\n                            c.addChild(this.container);\n                        }\n                    }\n                    else\n                    {\n                        stageOffset.set(0);\n                    }\n                    this.emit('draggablestart', e);\n                }\n            };\n\n            this.drag.onDragMove = function (e, offset)\n            {\n                if (this.dragging)\n                {\n                    this._dragPosition.set(containerStart.x + offset.x - stageOffset.x, containerStart.y + offset.y - stageOffset.y);\n                    this.x = this._dragPosition.x;\n                    this.y = this._dragPosition.y;\n                    this.emit('draggablemove', e);\n                }\n            };\n\n            this.drag.onDragEnd = function (e)\n            {\n                if (this.dragging)\n                {\n                    this.dragging = false;\n                    // Return to container after 0ms if not picked up by a droppable\n                    setTimeout(function ()\n                    {\n                        self.container.interactive = true;\n                        const item = DragDropController.getItem(self);\n\n                        if (item)\n                        {\n                            const container = self.parent === self.stage ? self.stage : self.parent.container;\n\n                            container.toLocal(self.container.position, self.container.parent, self);\n                            if (container != self.container)\n                            {\n                                self.parent.addChild(self);\n                            }\n                        }\n                        self.emit('draggableend', e);\n                    }, 0);\n                }\n            };\n        }\n    }\n\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.container.removeListener('mouseup', this.onDrop);\n            this.container.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.container;\n            const self = this;\n\n            this.container.interactive = true;\n            this.onDrop = function (event)\n            {\n                const item = DragDropController.getEventItem(event, self.dropGroup);\n\n                if (item && item.dragging)\n                {\n                    item.dragging = false;\n                    item.container.interactive = true;\n                    const parent = self.droppableReparent !== null ? self.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent)\n                    { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n\n    get x(): number\n    {\n        return this.setting.left;\n    }\n    set x(val: number)\n    {\n        this.left = val;\n    }\n\n    get y(): number\n    {\n        return this.setting.top;\n    }\n    set y(val: number)\n    {\n        this.top = val;\n    }\n\n    get width(): number\n    {\n        return this._width;\n    }\n    set width(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.widthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.widthPct = null; }\n\n        this.setting.width = val;\n        this.updatesettings(true);\n    }\n\n    get actual_width(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.widthPct !== null)\n            {\n                this._width = this.parent._width * this.setting.widthPct;\n            }\n            else\n            {\n                this._width = this.setting.width;\n            }\n        }\n\n        return this._width;\n    }\n\n    get height(): number\n    {\n        return this._height;\n    }\n    set height(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.heightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.heightPct = null; }\n\n        this.setting.height = val;\n        this.updatesettings(true);\n    }\n\n    get actual_height(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.heightPct !== null)\n            {\n                this._height = this.parent._height * this.setting.heightPct;\n            }\n            else\n            {\n                this._height = this.setting.height;\n            }\n        }\n\n        return this._height;\n    }\n\n    get minWidth(): number\n    {\n        return this.setting.minWidth;\n    }\n    set minWidth(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.minWidthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.minWidthPct = null; }\n\n        this.setting.minWidth = val;\n        this.updatesettings(true);\n    }\n\n    get actual_minWidth(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.minWidthPct !== null)\n            {\n                this._minWidth = this.parent._width * this.setting.minWidthPct;\n            }\n            else\n            {\n                this._minWidth = this.setting.minWidth;\n            }\n        }\n\n        return this._minWidth;\n    }\n\n    get minHeight(): number\n    {\n        return this.setting.minHeight;\n    }\n    set minHeight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.minHeightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.minHeightPct = null; }\n\n        this.setting.minHeight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_minHeight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.minHeightPct !== null)\n            {\n                this._minHeight = this.parent._height * this.setting.minHeightPct;\n            }\n            else\n            {\n                this._minHeight = this.setting.minHeight;\n            }\n        }\n\n        return this._minHeight;\n    }\n\n    get maxWidth(): number\n    {\n        return this.setting.maxWidth;\n    }\n    set maxWidth(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.maxWidthPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.maxWidthPct = null; }\n\n        this.setting.maxWidth = val;\n        this.updatesettings(true);\n    }\n\n    get actual_maxWidth(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.maxWidthPct !== null)\n            {\n                this._maxWidth = this.parent._width * this.setting.maxWidthPct;\n            }\n            else\n            {\n                this._maxWidth = this.setting.maxWidth;\n            }\n        }\n\n        return this._maxWidth;\n    }\n\n    get maxHeight(): number\n    {\n        return this.setting.maxHeight;\n    }\n    set maxHeight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.maxHeightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.maxHeightPct = null; }\n\n        this.setting.maxHeight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_maxHeight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.maxHeightPct !== null)\n            {\n                this._maxHeight = this.parent._height * this.setting.maxHeightPct;\n            }\n            else\n            {\n                this._maxHeight = this.setting.maxHeight;\n            }\n        }\n\n        return this._maxHeight;\n    }\n\n    get anchorLeft(): number\n    {\n        return this.setting.anchorLeft;\n    }\n    set anchorLeft(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorLeftPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorLeftPct = null; }\n\n        this.setting.anchorLeft = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorLeft(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorLeftPct !== null)\n            {\n                this._anchorLeft = this.parent._width * this.setting.anchorLeftPct;\n            }\n            else\n            {\n                this._anchorLeft = this.setting.anchorLeft;\n            }\n        }\n\n        return this._anchorLeft;\n    }\n\n    get anchorRight(): number\n    {\n        return this.setting.anchorRight;\n    }\n    set anchorRight(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorRightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorRightPct = null; }\n\n        this.setting.anchorRight = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorRight(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorRightPct !== null)\n            {\n                this._anchorRight = this.parent._width * this.setting.anchorRightPct;\n            }\n            else\n            {\n                this._anchorRight = this.setting.anchorRight;\n            }\n        }\n\n        return this._anchorRight;\n    }\n\n    get anchorTop(): number\n    {\n        return this.setting.anchorTop;\n    }\n    set anchorTop(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorTopPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorTopPct = null; }\n\n        this.setting.anchorTop = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorTop(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorTopPct !== null)\n            {\n                this._anchorTop = this.parent._height * this.setting.anchorTopPct;\n            }\n            else\n            {\n                this._anchorTop = this.setting.anchorTop;\n            }\n        }\n\n        return this._anchorTop;\n    }\n\n    get anchorBottom(): number\n    {\n        return this.setting.anchorBottom;\n    }\n    set anchorBottom(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.anchorBottomPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.anchorBottomPct = null; }\n\n        this.setting.anchorBottom = val;\n        this.updatesettings(true);\n    }\n\n    get actual_anchorBottom(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.anchorBottomPct !== null)\n            {\n                this._anchorBottom = this.parent._height * this.setting.anchorBottomPct;\n            }\n            else\n            {\n                this._anchorBottom = this.setting.anchorBottom;\n            }\n        }\n\n        return this._anchorBottom;\n    }\n\n    get left(): number\n    {\n        return this.setting.left;\n    }\n    set left(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.leftPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.leftPct = null; }\n\n        this.setting.left = val;\n        this.updatesettings(true);\n    }\n\n    get actual_left(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.leftPct !== null)\n            {\n                this._left = this.parent._width * this.setting.leftPct;\n            }\n            else\n            {\n                this._left = this.setting.left;\n            }\n        }\n\n        return this._left;\n    }\n\n    get right(): number\n    {\n        return this.setting.right;\n    }\n    set right(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.rightPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.rightPct = null; }\n\n        this.setting.right = val;\n        this.updatesettings(true);\n    }\n\n    get actual_right(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.rightPct !== null)\n            {\n                this._right = this.parent._width * this.setting.rightPct;\n            }\n            else\n            {\n                this._right = this.setting.right;\n            }\n        }\n\n        return this._right;\n    }\n\n    get top(): number\n    {\n        return this.setting.top;\n    }\n    set top(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.topPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.topPct = null; }\n\n        this.setting.top = val;\n        this.updatesettings(true);\n    }\n\n    get actual_top(): number\n    {\n        if (this.dirty)\n        {\n            if (this.setting.topPct !== null)\n            {\n                this._top = this.parent._height * this.setting.topPct;\n            }\n            else\n            {\n                this._top = this.setting.top;\n            }\n        }\n\n        return this._top;\n    }\n\n    get bottom(): number\n    {\n        return this.setting.bottom;\n    }\n    set bottom(val: number)\n    {\n        if (isNaN(val) && val.indexOf('%') !== -1)\n        { this.setting.bottomPct = parseFloat(val.replace('%', '')) * 0.01; }\n        else\n        { this.setting.bottomPct = null; }\n\n        this.setting.bottom = val;\n        this.updatesettings(true);\n    }\n\n    get actual_bottom()\n    {\n        if (this.dirty)\n        {\n            if (this.setting.bottomPct !== null)\n            {\n                this._bottom = this.parent._height * this.setting.bottomPct;\n            }\n            else\n            {\n                this._bottom = this.setting.bottom;\n            }\n        }\n\n        return this._bottom;\n    }\n\n    get verticalAlign(): number\n    {\n        return this.setting.verticalAlign;\n    }\n    set verticalAlign(val: number)\n    {\n        this.setting.verticalAlign = val;\n        this.baseupdate();\n    }\n\n    get valign(): number\n    {\n        return this.setting.verticalAlign;\n    }\n    set valign(val: number)\n    {\n        this.setting.verticalAlign = val;\n        this.baseupdate();\n    }\n\n    get horizontalAlign(): boolean\n    {\n        return this.setting.horizontalAlign;\n    }\n    set horizontalAlign(val: boolean)\n    {\n        this.setting.horizontalAlign = val;\n        this.baseupdate();\n    }\n\n    get align(): boolean\n    {\n        return this.setting.horizontalAlign;\n    }\n    set align(val: boolean)\n    {\n        this.setting.horizontalAlign = val;\n        this.baseupdate();\n    }\n\n    get tint(): number\n    {\n        return this.setting.tint;\n    }\n    set tint(val: number)\n    {\n        this.setting.tint = val;\n        this.update();\n    }\n\n    get alpha(): number\n    {\n        return this.setting.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.setting.alpha = val;\n        this.container.alpha = val;\n    }\n\n    get rotation(): number\n    {\n        return this.setting.rotation;\n    }\n    set rotation(val: number)\n    {\n        this.setting.rotation = val;\n        this.container.rotation = val;\n    }\n\n    get blendMode(): number\n    {\n        return this.setting.blendMode;\n    }\n    set blendMode(val: number)\n    {\n        this.setting.blendMode = val;\n        this.update();\n    }\n\n    get pivotX(): number\n    {\n        return this.setting.pivotX;\n    }\n    set pivotX(val: number)\n    {\n        this.setting.pivotX = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    get pivotY(): number\n    {\n        return this.setting.pivotY;\n    }\n    set pivotY(val: number)\n    {\n        this.setting.pivotY = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    set pivot(val: number)\n    {\n        this.setting.pivotX = val;\n        this.setting.pivotY = val;\n        this.baseupdate();\n        this.update();\n    }\n\n    get scaleX(): number\n    {\n        return this.setting.scaleX;\n    }\n    set scaleX(val: number)\n    {\n        this.setting.scaleX = val;\n        this.container.scale.x = val;\n    }\n\n    get scaleY(): number\n    {\n        return this.setting.scaleY;\n    }\n    set scaleY(val: number)\n    {\n        this.setting.scaleY = val;\n        this.container.scale.y = val;\n    }\n\n    get scale(): number\n    {\n        return this.setting.scaleX;\n    }\n    set scale(val: number)\n    {\n        this.setting.scaleX = val;\n        this.setting.scaleY = val;\n        this.container.scale.x = val;\n        this.container.scale.y = val;\n    }\n\n    get draggable(): boolean\n    {\n        return this.setting.draggable;\n    }\n    set draggable(val: boolean)\n    {\n        this.setting.draggable = val;\n        if (this.initialized)\n        {\n            if (val)\n            { this.initDraggable(); }\n            else\n            { this.clearDraggable(); }\n        }\n    }\n\n    get dragRestricted(): boolean\n    {\n        return this.setting.dragRestricted;\n    }\n    set dragRestricted(val: boolean)\n    {\n        this.setting.dragRestricted = val;\n    }\n\n    get dragRestrictAxis(): any\n    {\n        return this.setting.dragRestrictAxis;\n    }\n    set dragRestrictAxis(val: any)\n    {\n        this.setting.dragRestrictAxis = val;\n    }\n\n    get dragThreshold(): number\n    {\n        return this.setting.dragThreshold;\n    }\n    set dragThreshold(val: number)\n    {\n        this.setting.dragThreshold = val;\n    }\n\n    get dragGroup(): number\n    {\n        return this.setting.dragGroup;\n    }\n    set dragGroup(val: number)\n    {\n        this.setting.dragGroup = val;\n    }\n\n    get dragContainer(): number\n    {\n        return this.setting.dragContainer;\n    }\n    set dragContainer(val: number)\n    {\n        this.setting.dragContainer = val;\n    }\n\n    get droppable(): boolean\n    {\n        return this.setting.droppable;\n    }\n    set droppable(val: boolean)\n    {\n        this.setting.droppable = true;\n        if (this.initialized)\n        {\n            if (val)\n            { this.initDroppable(); }\n            else\n            { this.clearDroppable(); }\n        }\n    }\n\n    get droppableReparent(): boolean\n    {\n        return this.setting.droppableReparent;\n    }\n    set droppableReparent(val: boolean)\n    {\n        this.setting.droppableReparent = val;\n    }\n\n    get dropGroup(): any\n    {\n        return this.setting.dropGroup;\n    }\n    set dropGroup(val: any)\n    {\n        this.setting.dropGroup = val;\n    }\n\n    get renderable(): boolean\n    {\n        return this.container.renderable;\n    }\n    set renderable(val: boolean)\n    {\n        this.container.renderable = val;\n    }\n\n    get visible(): boolean\n    {\n        return this.container.visible;\n    }\n    set visible(val: boolean)\n    {\n        this.container.visible = val;\n    }\n\n    get cacheAsBitmap(): boolean\n    {\n        return this.container.cacheAsBitmap;\n    }\n    set cacheAsBitmap(val: boolean)\n    {\n        this.container.cacheAsBitmap = val;\n    }\n\n    get onClick(): any\n    {\n        return this.container.click;\n    }\n    set onClick(val: any)\n    {\n        this.container.click = val;\n    }\n\n    get interactive(): boolean\n    {\n        return this.container.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.container.interactive = val;\n    }\n\n    get interactiveChildren(): boolean\n    {\n        return this.container.interactiveChildren;\n    }\n    set interactiveChildren(val: boolean)\n    {\n        this.container.interactiveChildren = val;\n    }\n\n    get parentLayer(): any\n    {\n        return this.container.parentLayer;\n    }\n    set parentLayer(val: any)\n    {\n        this.container.parentLayer = val;\n    }\n}\n","import * as PIXI from 'pixi.js';\n\nexport class ClickEvent\n{\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    private obj: any;\n\n    private movementX: number;\n    private movementY: number;\n\n    right: boolean;\n    hover: boolean;\n    double: boolean;\n\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private eventname_mousedown: string;\n    private eventname_mouseup: string;\n    private eventname_mouseupoutside: string;\n\n    time: number;\n\n    constructor(obj, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        this.obj = obj;\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.right = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this.hover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.double = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        this.eventname_mousedown = this.right ? 'rightdown' : 'mousedown';\n        this.eventname_mouseup = this.right ? 'rightup' : 'mouseup';\n        this.eventname_mouseupoutside = this.right ? 'rightupoutside' : 'mouseupoutside';\n\n        obj.container.interactive = true;\n        this.time = 0;\n\n        this.startEvent();\n    }\n\n    _onMouseDown = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.obj, event, true);\n\n        if (!this.bound)\n        {\n            obj.container.on(eventname_mouseup, _onMouseUp);\n            obj.container.on(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.container.on('touchend', _onMouseUp);\n                obj.container.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this.double)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    _mouseUpAll = (event): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.container.removeListener('touchend', _onMouseUp);\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    _onMouseUp = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.obj.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.obj.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this.double)\n        {\n            this.onClick.call(this.obj, event);\n        }\n    };\n\n    _onMouseUpOutside = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this._mouseUpAll(event);\n    };\n\n    _onMouseOver = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.obj.container.on('mousemove', this._onMouseMove);\n            this.obj.container.on('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, true);\n        }\n    };\n\n    _onMouseOut = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.obj.container.removeListener('mousemove', this._onMouseMove);\n            this.obj.container.removeListener('touchmove', this._onMouseMove);\n\n            this.onHover.call(this.obj, event, false);\n        }\n    };\n\n    _onMouseMove = (event): void =>\n    {\n        this.onMove.call(this.obj, event);\n    };\n\n    stopEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mouseup,\n            _onMouseUp,\n            eventname_mouseupoutside,\n            _onMouseUpOutside,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n            _onMouseMove,\n        } = this;\n\n        if (this.bound)\n        {\n            obj.container.removeListener(eventname_mouseup, _onMouseUp);\n            obj.container.removeListener(eventname_mouseupoutside, _onMouseUpOutside);\n\n            if (!this.right)\n            {\n                obj.container.removeListener('touchend', _onMouseUp);\n                obj.container.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        obj.container.removeListener(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.container.removeListener('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.container.removeListener('mouseover', _onMouseOver);\n            obj.container.removeListener('mouseout', _onMouseOut);\n            obj.container.removeListener('mousemove', _onMouseMove);\n            obj.container.removeListener('touchmove', _onMouseMove);\n        }\n    };\n\n    startEvent = (): void =>\n    {\n        const {\n            obj,\n            eventname_mousedown,\n            _onMouseDown,\n            _onMouseOver,\n            _onMouseOut,\n        } = this;\n\n        obj.container.on(eventname_mousedown, _onMouseDown);\n\n        if (!this.right)\n        {\n            obj.container.on('touchstart', _onMouseDown);\n        }\n\n        if (this.hover)\n        {\n            obj.container.on('mouseover', _onMouseOver);\n            obj.container.on('mouseout', _onMouseOut);\n        }\n    };\n\n    onHover(event, over): void\n    {\n\n    }\n\n    onPress(event, isPressed): void\n    {\n\n    }\n\n    onClick(event): void\n    {\n\n    }\n\n    onMove(event): void\n    {\n\n    }\n}\n","import { Widget } from './Widget';\nimport { InputController } from './Interaction/InputController';\n\n/**\n * Represents a view that can accept any form of input. It can gain and loose focus.\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param width {number} passed to uibase\n * @param height {number} passed to uibase\n * @param tabIndex {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n */\nexport abstract class InputBase extends Widget\n{\n    _focused: boolean;\n    _useTab: boolean;\n    _usePrev: boolean;\n    _useNext: boolean;\n\n    __down: boolean;\n\n    constructor(width: number, height: number, tabIndex: number, tabGroup: any)\n    {\n        super(width, height);\n\n        this._focused = false;\n        this._useTab = this._usePrev = this._useNext = true;\n        this.container.interactive = true;\n        InputController.registrer(this, tabIndex, tabGroup);\n\n        this.container.on('pointerdown', (e) =>\n        {\n            this.focus();\n            this.__down = true;\n        });\n\n        this.container.on('pointerup', (e) =>\n        {\n            this.__down = false;\n        });\n\n        this.container.on('pointerupoutside', (e) =>\n        {\n            this.__down = false;\n        });\n    }\n\n    blur(): void\n    {\n        if (this._focused)\n        {\n            InputController.clear();\n            this._focused = false;\n            this._clearEvents();\n            this.emit('focusChanged', false);\n            this.emit('blur');\n        }\n    }\n\n    focus(): void\n    {\n        if (!this._focused)\n        {\n            this._focused = true;\n            this._bindEvents();\n            InputController.set(this);\n            this.emit('focusChanged', true);\n            this.emit('focus');\n        }\n    }\n\n    protected keyDownEvent = (e: any): void =>\n    {\n        if (e.which === 9)\n        {\n            if (this._useTab)\n            {\n                InputController.fireTab();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 38)\n        {\n            if (this._usePrev)\n            {\n                InputController.firePrev();\n                e.preventDefault();\n            }\n        }\n        else if (e.which === 40)\n        {\n            if (this._useNext)\n            {\n                InputController.fireNext();\n                e.preventDefault();\n            }\n        }\n    };\n\n    private documentMouseDown = (): void =>\n    {\n        if (!this.__down)\n        {\n            this.blur();\n        }\n    };\n\n    private _bindEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.on('pointerdown', this.documentMouseDown);\n            document.addEventListener('keydown', this.keyDownEvent);\n        }\n    };\n\n    private _clearEvents = (): void =>\n    {\n        if (this.stage !== null)\n        {\n            this.stage.off('pointerdown', this.documentMouseDown);\n            document.removeEventListener('keydown', this.keyDownEvent);\n        }\n    };\n}\n","import { ClickEvent } from './Interaction/ClickEvent.js';\nimport { InputBase } from './InputBase';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface IButtonOptions\n{\n    background?: Sprite;\n    text?: string;\n    tabIndex?: number;\n    tabGroup?: any;\n    width?: number;\n    height?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n * @param [options.text=null] {PIXI.UI.Text} optional text\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.width=options.background.width] {Number|String} width\n * @param [options.height=options.background.height] {Number|String} height\n */\nexport class Button extends InputBase\n{\n    background: Sprite;\n    isHover: boolean;\n    uiText: any;\n\n    click: () => void;\n    initialize: () => void;\n\n    constructor(options: IButtonOptions)\n    {\n        super(\n            options.width || (options.background ? options.background.width : 100),\n            options.height || (options.background ? options.background.height : 100),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this.background = options.background;\n\n        if (this.background)\n        {\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.background.pivot = 0.5;\n            this.background.verticalAlign = 'middle';\n            this.background.horizontalAlign = 'center';\n            this.addChild(this.background);\n        }\n\n        this.isHover = false;\n        this.uiText = options.text;\n\n        if (this.uiText)\n        {\n            this.uiText.verticalAlign = 'middle';\n            this.uiText.horizontalAlign = 'center';\n            this.addChild(this.uiText);\n        }\n\n        this.container.buttonMode = true;\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent = new ClickEvent(this);\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                InputBase.prototype.focus.call(this);\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                InputBase.prototype.blur.call(this);\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n\n        this.initialize = (): void =>\n        {\n            super.initialize();\n            this.container.interactiveChildren = false;\n            // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n\n            setTimeout(() =>\n            {\n                const bounds = this.container.getLocalBounds();\n\n                this.container.hitArea = new PIXI.Rectangle(\n                    bounds.x < 0 ? bounds.x : 0,\n                    bounds.y < 0 ? bounds.y : 0,\n                    Math.max(bounds.x + bounds.width + (bounds.x < 0 ? -bounds.x : 0), this._width),\n                    Math.max(bounds.y + bounds.height + (bounds.y < 0 ? -bounds.y : 0), this._height),\n                );\n            }, 20);\n        };\n    }\n\n    update(): void\n    {\n        // No update needed\n    }\n\n    get value(): string\n    {\n        if (this.uiText)\n        {\n            return this.uiText.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.uiText)\n        {\n            this.uiText.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.uiText;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { InputBase } from './InputBase';\nimport { ClickEvent } from './Interaction/ClickEvent';\nimport { InputController } from './Interaction/InputController';\nimport { Sprite } from './Sprite';\n\ninterface ICheckBoxOptions\n{\n    checked?: boolean;\n    background: Sprite;\n    checkmark?: Sprite;\n    checkgroup?: any;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * An UI button object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param [options.checked=false] {bool} is checked\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n * @param [options.checkgroup=null] {String} CheckGroup name\n * @param options.value {String} mostly used along with checkgroup\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n */\nexport class CheckBox extends InputBase\n{\n    private _checked: boolean;\n    private _value: string;\n    private checkGroup: any;\n\n    background: Sprite;\n    checkmark: Sprite;\n\n    change: (val: boolean) => void;\n    click: () => void;\n\n    constructor(options: ICheckBoxOptions)\n    {\n        super(\n            options.background.width,\n            options.background.height,\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkgroup || null;\n\n        this.background = options.background;\n        this.background.width = '100%';\n        this.background.height = '100%';\n        this.addChild(this.background);\n\n        this.checkmark = options.checkmark;\n\n        if (this.checkmark)\n        {\n            this.checkmark.verticalAlign = 'middle';\n            this.checkmark.horizontalAlign = 'center';\n\n            if (!this._checked)\n            {\n                this.checkmark.alpha = 0;\n            }\n\n            this.addChild(this.checkmark);\n        }\n\n        this.container.buttonMode = true;\n\n        if (this.checkGroup !== null)\n        {\n            InputController.registrerCheckGroup(this);\n        }\n\n        // var keyDownEvent = function (e) {\n        //    if (e.which === 32) { //space\n        //        self.click();\n        //    }\n        // };\n\n        const clickEvent = new ClickEvent(this);\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.change = (val): void =>\n        {\n            if (this.checkmark)\n            {\n                this.checkmark.alpha = val ? 1 : 0;\n            }\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n\n            if (this.checkGroup !== null && this.checked)\n            {\n                return;\n            }\n\n            this.checked = !this.checked;\n            this.emit('change', this.checked);\n        };\n\n        this.focus = (): void =>\n        {\n            if (!this._focused)\n            {\n                super.focus();\n                // document.addEventListener(\"keydown\", keyDownEvent, false);\n            }\n        };\n\n        this.blur = (): void =>\n        {\n            if (this._focused)\n            {\n                super.blur();\n                // document.removeEventListener(\"keydown\", keyDownEvent);\n            }\n        };\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                InputController.updateCheckGroupSelected(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            InputController.updateCheckGroupSelected(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return InputController.getCheckGroupSelectedValue(this.checkGroup);\n    }\n    set selectedValue(val: string)\n    {\n        InputController.setCheckGroupSelectedValue(this.checkGroup, val);\n    }\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param width {Number} Width of the Container\n * @param height {Number} Height of the Container\n */\nexport class Container extends Widget\n{\n    constructor(width: number, height: number)\n    {\n        super(width, height);\n        this.container.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n    }\n\n    update()\n    {\n        // if (this.container.interactive) {\n        this.container.hitArea.width = this._width;\n        this.container.hitArea.height = this._height;\n        // }\n    }\n}\n\n","function DynamicTextStyle(parent)\n{\n    this.respectDirty = true;\n    this._parent = parent || null;\n    this._scale = 1;\n    this._align = 'left';\n    this._fontFamily = 'Arial';\n    this._fontSize = 26;\n    this._fontWeight = 'normal';\n    this._fontStyle = 'normal';\n    this._letterSpacing = 0;\n    this._lineHeight = 0;\n    this._verticalAlign = 0;\n    this._rotation = 0;\n    this._skew = 0;\n    this._tint = '#FFFFFF';\n    this._fill = '#FFFFFF';\n    this._shadow = '';\n    this._stroke = 0;\n    this._strokeFill = '';\n    this._strokeShadow = '';\n    this._wrap = true;\n    this._breakWords = false;\n    this._overflowX = 'visible'; // visible|hidden\n    this._overflowY = 'visible'; // visible|hidden\n    this._ellipsis = false;\n\n    let _cachedEllipsisSize = null;\n\n    this.ellipsisSize = function (atlas)\n    {\n        if (!this.ellipsis) return 0;\n        if (_cachedEllipsisSize === null)\n        { _cachedEllipsisSize = (atlas.getCharObject('.', this).width + this.letterSpacing) * 3; }\n\n        return _cachedEllipsisSize;\n    };\n}\n\nDynamicTextStyle.prototype.clone = function ()\n{\n    const style = new DynamicTextStyle();\n\n    style.merge(this);\n\n    return style;\n};\n\nDynamicTextStyle.prototype.merge = function (style)\n{\n    if (typeof style === 'object')\n    {\n        this.respectDirty = false;\n        for (const param in style)\n        {\n            const val = style[param];\n\n            if (typeof val === 'function' || param === 'respectDirty' || param === '_parent') continue;\n            this[param] = style[param];\n        }\n        this.respectDirty = true;\n        this._dirty = true;\n    }\n};\n\nDynamicTextStyle.prototype.ctxKey = function (char)\n{\n    return [char, this.fill, this.shadow, this.stroke, this.strokeFill, this.strokeShadow].join('|');\n};\n\nDynamicTextStyle.prototype.ctxFont = function ()\n{\n    const fontSize = `${Math.min(200, Math.max(1, this.fontSize || 26))}px `;\n    const fontWeight = this.fontWeight === 'bold' ? `${this.fontWeight} ` : '';\n    const fontStyle = this.fontStyle === 'italic' || this.fontStyle === 'oblique' ? `${this.fontStyle} ` : '';\n\n    return fontWeight + fontStyle + fontSize + this.fontFamily;\n};\n\nDynamicTextStyle.prototype.constructor = DynamicTextStyle;\n\nexport { DynamicTextStyle };\n\nObject.defineProperties(DynamicTextStyle.prototype, {\n    _dirty: {\n        set(val)\n        {\n            if (this.respectDirty)\n            {\n                if (this._parent !== null)\n                {\n                    this._parent.dirtyStyle = val;\n                    this._parent.update();\n                }\n            }\n        },\n    },\n    scale: {\n        get()\n        {\n            return this._scale;\n        },\n        set(val)\n        {\n            if (val !== this._scale)\n            {\n                this._scale = val;\n                this._dirty = true;\n            }\n        },\n    },\n    align: {\n        get()\n        {\n            return this._align;\n        },\n        set(val)\n        {\n            if (val !== this._align)\n            {\n                this._align = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontFamily: {\n        get()\n        {\n            return this._fontFamily;\n        },\n        set(val)\n        {\n            if (val !== this._fontFamily)\n            {\n                this._fontFamily = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontSize: {\n        get()\n        {\n            return this._fontSize;\n        },\n        set(val)\n        {\n            if (val !== this._fontSize)\n            {\n                this._fontSize = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontWeight: {\n        get()\n        {\n            return this._fontWeight;\n        },\n        set(val)\n        {\n            if (val !== this._fontWeight)\n            {\n                this._fontWeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fontStyle: {\n        get()\n        {\n            return this._fontStyle;\n        },\n        set(val)\n        {\n            if (val !== this._fontStyle)\n            {\n                this._fontStyle = val;\n                this._dirty = true;\n            }\n        },\n    },\n    letterSpacing: {\n        get()\n        {\n            return this._letterSpacing;\n        },\n        set(val)\n        {\n            if (val !== this._letterSpacing)\n            {\n                this._letterSpacing = val;\n                this._dirty = true;\n            }\n        },\n    },\n    lineHeight: {\n        get()\n        {\n            return this._lineHeight;\n        },\n        set(val)\n        {\n            if (val !== this._lineHeight)\n            {\n                this._lineHeight = val;\n                this._dirty = true;\n            }\n        },\n    },\n    verticalAlign: {\n        get()\n        {\n            return this._verticalAlign;\n        },\n        set(val)\n        {\n            if (val !== this._verticalAlign)\n            {\n                this._verticalAlign = val;\n                this._dirty = true;\n            }\n        },\n    },\n    rotation: {\n        get()\n        {\n            return this._rotation;\n        },\n        set(val)\n        {\n            if (val !== this._rotation)\n            {\n                this._rotation = val;\n                this._dirty = true;\n            }\n        },\n    },\n    skew: {\n        get()\n        {\n            return this._skew;\n        },\n        set(val)\n        {\n            if (val !== this._skew)\n            {\n                this._skew = val;\n                this._dirty = true;\n            }\n        },\n    },\n    tint: {\n        get()\n        {\n            return this._tint;\n        },\n        set(val)\n        {\n            if (val !== this._tint)\n            {\n                this._tint = val;\n                this._dirty = true;\n            }\n        },\n    },\n    fill: {\n        get()\n        {\n            return this._fill;\n        },\n        set(val)\n        {\n            if (val !== this._fill)\n            {\n                this._fill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    shadow: {\n        get()\n        {\n            return this._shadow;\n        },\n        set(val)\n        {\n            if (val !== this._shadow)\n            {\n                this._shadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    stroke: {\n        get()\n        {\n            return this._stroke;\n        },\n        set(val)\n        {\n            if (val !== this._stroke)\n            {\n                this._stroke = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeFill: {\n        get()\n        {\n            return this._strokeFill;\n        },\n        set(val)\n        {\n            if (val !== this._strokeFill)\n            {\n                this._strokeFill = val;\n                this._dirty = true;\n            }\n        },\n    },\n    strokeShadow: {\n        get()\n        {\n            return this._strokeShadow;\n        },\n        set(val)\n        {\n            if (val !== this._strokeShadow)\n            {\n                this._strokeShadow = val;\n                this._dirty = true;\n            }\n        },\n    },\n    wrap: {\n        get()\n        {\n            return this._wrap;\n        },\n        set(val)\n        {\n            if (val !== this._wrap)\n            {\n                this._wrap = val;\n                this._dirty = true;\n            }\n        },\n    },\n    breakWords: {\n        get()\n        {\n            return this._breakWords;\n        },\n        set(val)\n        {\n            if (val !== this._breakWords)\n            {\n                this._breakWords = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowX: {\n        get()\n        {\n            return this._overflowX;\n        },\n        set(val)\n        {\n            if (val !== this._overflowX)\n            {\n                this._overflowX = val;\n                this._dirty = true;\n            }\n        },\n    },\n    overflowY: {\n        get()\n        {\n            return this._overflowY;\n        },\n        set(val)\n        {\n            if (val !== this._overflowY)\n            {\n                this._overflowY = val;\n                this._dirty = true;\n            }\n        },\n    },\n    ellipsis: {\n        get()\n        {\n            return this._ellipsis;\n        },\n        set(val)\n        {\n            if (val !== this._ellipsis)\n            {\n                this._ellipsis = val;\n                this._dirty = true;\n            }\n        },\n    },\n});\n","function DynamicChar()\n{\n    // styledata (texture, orig width, orig height)\n    this.style = null;\n\n    // char data\n    this.data = null;\n\n    // is this char space?\n    this.space = false;\n\n    // is this char newline?\n    this.newline = false;\n\n    this.emoji = false;\n\n    // charcode\n    this.charcode = 0;\n\n    // char string value\n    this.value = '';\n\n    // word index\n    this.wordIndex = -1;\n\n    // line index of char\n    this.lineIndex = -1;\n}\n\nDynamicChar.prototype.constructor = DynamicChar;\n\nexport { DynamicChar };\n","import { Widget } from '../Widget';\nimport { DynamicTextStyle } from './DynamicTextStyle';\nimport { DynamicChar }  from './DynamicChar';\nimport emojiRegex  from 'emoji-regex';\nlet atlas = null;\n\n/**\n* An dynamic text object with auto generated atlas\n*\n* @class\n* @extends PIXI.UI.UIBase\n* @memberof PIXI.UI\n* @param text {String} Text content\n* @param [width=0] {Number|String} width of textbox. 0 = autoWidth\n* @param [height=0] {Number|String} height of textbox. 0 = autoHeight\n* @param [allowTags=true] {boolean} Allow inline styling\n* @param [options=null] {DynamicTextStyle} Additional text settings\n*/\nfunction DynamicText(text, options)\n{\n    options = options || {};\n\n    Widget.call(this, options.width || 0, options.height || 0);\n\n    // create atlas\n    if (atlas === null)\n    { atlas = new DynamicAtlas(1); }\n\n    const autoWidth = !options.width;\n    const autoHeight = !options.height;\n\n    // defaultstyle for this textobject\n    const defaultStyle = this._style = new DynamicTextStyle(this);\n\n    defaultStyle.merge(options.style);\n\n    // collection of all processed char\n    const chars = this.chars = [];\n    const renderChars = [];\n    const spriteCache = []; // (temp)\n    const charContainer = new PIXI.Container();\n\n    this.container.addChild(charContainer);\n\n    // the input text\n    this._inputText = text;\n\n    // list of rendered sprites (temp)\n    const sprites = [];\n\n    // states\n    let lastWidth = 0;\n    let lastHeight = 0;\n\n    this.dirtyText = true;\n    this.dirtyStyle = true;\n    this.dirtyRender = true;\n\n    // dictionary for line data\n    const lineWidthData = [];\n    const lineHeightData = [];\n    const lineFontSizeData = [];\n    const lineAlignmentData = [];\n    let renderCount = 0;\n    let charCount = 0;\n\n    // ellipsis caches (not nessesary when no sprites)\n    const lineEllipsisData = [];\n    const lineHasEllipsis = [];\n\n    // ROUGH TEMP RENDER (with sprites)\n    this.render = function ()\n    {\n        let yOffset = 0;\n        let xOffset = 0;\n        let currentLine = -1;\n        let i;\n\n        if (spriteCache.length > renderCount)\n        {\n            for (i = renderCount; i < spriteCache.length; i++)\n            {\n                const removeSprite = spriteCache[i];\n\n                if (removeSprite)\n                { removeSprite.visible = false; }\n            }\n        }\n\n        let char; let lineWidth = 0; let lineHeight = 0; let\n            maxLineWidth = 0;\n\n        for (i = 0; i < renderCount; i++)\n        {\n            char = renderChars[i];\n\n            // get line data\n            if (currentLine !== char.lineIndex)\n            {\n                currentLine = char.lineIndex;\n                lineWidth = lineWidthData[currentLine];\n                lineHeight = lineHeightData[currentLine];\n                yOffset += lineHeight;\n\n                switch (lineAlignmentData[currentLine])\n                {\n                    case 'right': xOffset = this._width - lineWidth; break;\n                    case 'center': xOffset = (this._width - lineWidth) * 0.5; break;\n                    default: xOffset = 0;\n                }\n\n                maxLineWidth = Math.max(lineWidth, maxLineWidth);\n            }\n\n            // no reason to render a blank space or 0x0 letters (no texture created)\n            if (!char.data.texture || char.space || char.newline)\n            {\n                if (spriteCache[i])\n                { spriteCache[i].visible = false; }\n                continue;\n            }\n\n            // add new sprite\n            const tex = char.data.texture; let\n                sprite = spriteCache[i];\n\n            if (!sprite)\n            {\n                sprite = spriteCache[i] = new PIXI.Sprite(tex);\n                sprite.anchor.set(0.5);\n            }\n            else\n            { sprite.texture = tex; }\n\n            sprite.visible = true;\n            sprite.x = char.x + xOffset + tex.width * 0.5;\n            sprite.y = char.y + yOffset - tex.height * 0.5 - (lineHeight - lineFontSizeData[currentLine]);\n\n            sprite.tint = char.emoji ? 0xffffff : hexToInt(char.style.tint, 0xffffff);\n            sprite.rotation = float(char.style.rotation, 0);\n            sprite.skew.x = float(char.style.skew, 0);\n\n            if (!sprite.parent)\n            { charContainer.addChild(sprite); }\n        }\n\n        if (autoWidth) this.width = maxLineWidth;\n        if (autoHeight) this.height = yOffset;\n    };\n\n    // updates the renderChar array and position chars for render\n    this.prepareForRender = function ()\n    {\n        const pos = new PIXI.Point();\n        let wordIndex = 0;\n        let lineHeight = 0;\n        let lineFontSize = 0;\n        let lineIndex = 0;\n        let lineAlignment = defaultStyle.align;\n        let lastSpaceIndex = -1;\n        let lastSpaceLineWidth = 0;\n        let textHeight = 0;\n        let forceNewline = false;\n        let style;\n        let renderIndex = 0;\n        let ellipsis = false;\n        let lineFull = false;\n        let i;\n\n        for (i = 0; i < charCount; i++)\n        {\n            const char = chars[i]; const\n                lastChar = chars[i - 1];\n\n            style = char.style;\n\n            // lineheight\n            lineHeight = Math.max(lineHeight, defaultStyle.lineHeight || style.lineHeight || char.data.lineHeight);\n\n            if (style.overflowY !== 'visible' && lineHeight + textHeight > this._height)\n            {\n                if (style.overflowY === 'hidden')\n                { break; }\n            }\n\n            if (char.newline)\n            { lineFull = false; }\n\n            // set word index\n            if (char.space || char.newline) wordIndex++;\n            else char.wordIndex = wordIndex;\n\n            // textheight\n            lineFontSize = Math.max(lineFontSize, style.fontSize);\n\n            // lineindex\n            char.lineIndex = lineIndex;\n\n            // lineAlignment\n            if (style.align !== defaultStyle.align) lineAlignment = style.align;\n\n            if (char.space)\n            {\n                lastSpaceIndex = i;\n                lastSpaceLineWidth = pos.x;\n            }\n\n            const size = Math.round(char.data.width) + float(style.letterSpacing, 0);\n\n            if (!autoWidth && !forceNewline && !char.newline && pos.x + size > this._width)\n            {\n                if (style.wrap)\n                {\n                    if (char.space)\n                    {\n                        forceNewline = true;\n                    }\n                    else if (lastSpaceIndex !== -1)\n                    {\n                        renderIndex -= i - lastSpaceIndex;\n                        i = lastSpaceIndex - 1;\n                        lastSpaceIndex = -1;\n                        pos.x = lastSpaceLineWidth;\n                        forceNewline = true;\n                        continue;\n                    }\n                    else if (style.breakWords)\n                    {\n                        if (lastChar)\n                        {\n                            pos.x -= lastChar.style.letterSpacing;\n                            pos.x -= lastChar.data.width;\n                        }\n                        i -= 2;\n                        renderIndex--;\n                        forceNewline = true;\n                        continue;\n                    }\n                }\n\n                if (style.overflowX == 'hidden' && !forceNewline)\n                {\n                    lineFull = true;\n                    if (style.ellipsis && !ellipsis)\n                    {\n                        ellipsis = true;\n                        let ellipsisData = lineEllipsisData[lineIndex];\n\n                        if (!ellipsisData) ellipsisData = lineEllipsisData[lineIndex] = [new DynamicChar(), new DynamicChar(), new DynamicChar()];\n                        for (let d = 0; d < 3; d++)\n                        {\n                            const dot = ellipsisData[d];\n\n                            dot.value = '.';\n                            dot.data = atlas.getCharObject(dot.value, style);\n                            dot.style = style;\n                            dot.x = pos.x + char.data.xOffset;\n                            dot.y = parseFloat(style.verticalAlign) + dot.data.yOffset;\n                            dot.lineIndex = lineIndex;\n                            pos.x += Math.round(dot.data.width) + float(style.letterSpacing, 0);\n                            renderChars[renderIndex] = dot;\n                            renderIndex++;\n                        }\n                    }\n                }\n            }\n\n            // Update position and add to renderchars\n            if (!lineFull)\n            {\n                // position\n                char.x = pos.x + char.data.xOffset;\n                char.y = parseFloat(style.verticalAlign) + char.data.yOffset;\n                pos.x += size;\n                renderChars[renderIndex] = char;\n                renderIndex++;\n            }\n\n            // new line\n            if (forceNewline || char.newline || i === charCount - 1)\n            {\n                if (lastChar)\n                {\n                    pos.x -= lastChar.style.letterSpacing;\n                }\n\n                if (char.space)\n                {\n                    pos.x -= char.data.width;\n                    pos.x -= float(style.letterSpacing, 0);\n                }\n\n                textHeight += lineHeight;\n                lineHasEllipsis[lineIndex] = ellipsis;\n                lineWidthData[lineIndex] = pos.x;\n                lineHeightData[lineIndex] = lineHeight;\n                lineFontSizeData[lineIndex] = lineFontSize;\n                lineAlignmentData[lineIndex] = lineAlignment;\n\n                // reset line vaules\n                lineHeight = pos.x = lastSpaceLineWidth = lineFontSize = 0;\n                lineAlignment = defaultStyle.align;\n                lastSpaceIndex = -1;\n                lineIndex++;\n                forceNewline = lineFull = ellipsis = false;\n            }\n        }\n\n        renderCount = renderIndex;\n    };\n\n    // phrases the input text and prepares the char array\n    const closeTags = ['</i>', '</b>', '</font>', '</center>'];\n\n    this.processInputText = function ()\n    {\n        const styleTree = [defaultStyle];\n        let charIndex = 0;\n        let inputTextIndex = 0;\n        const inputArray = Array.from(this._inputText);\n\n        for (let i = 0; i < inputArray.length; i++)\n        {\n            style = styleTree[styleTree.length - 1];\n            let c = inputArray[i];\n            const charcode = c.charCodeAt(0);\n            let newline = false;\n            let space = false;\n            let emoji = false;\n\n            // Extract Tags\n            if ((/(?:\\r\\n|\\r|\\n)/).test(c))\n            { newline = true; }\n            else if ((/(\\s)/).test(c))\n            { space = true; }\n            else if (options.allowTags && c === '<')\n            {\n                let tag = this._inputText.substring(inputTextIndex);\n\n                tag = tag.slice(0, tag.indexOf('>') + 1);\n                let FoundTag = true;\n\n                if (tag.length)\n                {\n                    if (tag === '<i>')\n                    {\n                        style = style.clone();\n                        style.fontStyle = 'italic';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<b>')\n                    {\n                        style = style.clone();\n                        style.fontWeight = 'bold';\n                        styleTree.push(style);\n                    }\n                    else if (tag === '<center>')\n                    {\n                        style = style.clone();\n                        style.align = 'center';\n                        styleTree.push(style);\n                    }\n                    else if (closeTags.indexOf(tag) !== -1)\n                    {\n                        if (styleTree.length > 1) styleTree.splice(styleTree.length - 1, 1);\n                    }\n                    else if (tag.startsWith('<font '))\n                    {\n                        const regex = /(\\w+)\\s*=\\s*(([\"'])(.*?)\\3|([^>\\s]*)(?=\\s|\\/>))(?=[^<]*>)/g;\n                        let match = regex.exec(tag);\n\n                        if (match !== null)\n                        {\n                            style = style.clone();\n                            while (match !== null)\n                            {\n                                switch (match[1])\n                                {\n                                    case 'family': match[1] = 'fontFamily'; break;\n                                    case 'size': match[1] = 'fontSize'; break;\n                                    case 'weight': match[1] = 'fontWeight'; break;\n                                    case 'style': match[1] = 'fontStyle'; break;\n                                    case 'valign': match[1] = 'verticalAlign'; break;\n                                    case 'spacing': match[1] = 'letterSpacing'; break;\n                                    case 'color': match[1] = 'tint'; break;\n                                }\n                                style[match[1]] = match[4];\n                                match = regex.exec(tag);\n                            }\n                            styleTree.push(style);\n                        }\n                    }\n                    else\n                    {\n                        FoundTag = false;\n                    }\n\n                    if (FoundTag)\n                    {\n                        inputTextIndex += tag.length;\n                        i += tag.length - 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                // detect emoji\n                let emojiMatch = emojiRegex().exec(c);\n\n                if (emojiMatch !== null)\n                {\n                    i--; c = '';\n                    while (emojiMatch !== null && c !== emojiMatch[0])\n                    {\n                        i++;\n                        c = emojiMatch[0];\n                        emojiMatch = emojiRegex().exec(c + inputArray[i + 1]);\n                    }\n                    emoji = true;\n                }\n            }\n\n            // Prepare DynamicChar object\n            let char = chars[charIndex];\n\n            if (!char)\n            {\n                char = new DynamicChar();\n                chars[charIndex] = char;\n            }\n            char.style = style;\n\n            if (emoji)\n            {\n                char.style = char.style.clone();\n                char.style.fontFamily = DynamicText.settings.defaultEmojiFont;\n            }\n\n            char.data = atlas.getCharObject(c, char.style);\n            char.value = c;\n            char.space = space;\n            char.newline = newline;\n            char.emoji = emoji;\n\n            charIndex++;\n            inputTextIndex += c.length;\n        }\n        charCount = charIndex;\n    };\n\n    // PIXIUI update, lazy update (bad solution needs rewrite when converted to pixi plugin)\n    this.lazyUpdate = null;\n    const self = this;\n\n    this.update = function ()\n    {\n        if (self.lazyUpdate !== null) return;\n        self.lazyUpdate = setTimeout(function ()\n        {\n            // console.log(\"UPDATING TEXT\");\n            const dirtySize = !autoWidth && (self._width != lastWidth || self._height != lastHeight || self.dirtyText);\n\n            if (self.dirtyText || self.dirtyStyle)\n            {\n                self.dirtyText = self.dirtyStyle = false;\n                self.dirtyRender = true; // force render after textchange\n                self.processInputText();\n            }\n\n            if (dirtySize || self.dirtyRender)\n            {\n                self.dirtyRender = false;\n                lastWidth = self._width;\n                lastHeight = self.height;\n                self.prepareForRender();\n                self.render();\n            }\n            self.lazyUpdate = null;\n        }, 0);\n    };\n}\n\nDynamicText.prototype = Object.create(Widget.prototype);\nDynamicText.prototype.constructor = DynamicText;\n\nexport { DynamicText };\n\nDynamicText.settings = {\n    debugSpriteSheet: false,\n    defaultEmojiFont: 'Segoe UI Emoji', // force one font family for emojis so we dont rerender them multiple times\n};\n\nObject.defineProperties(DynamicText.prototype, {\n    value: {\n        get()\n        {\n            return this._inputText;\n        },\n        set(val)\n        {\n            if (val !== this._inputText)\n            {\n                this._inputText = val;\n                this.dirtyText = true;\n                this.update();\n                // console.log(\"Updating Text to: \" + val);\n            }\n        },\n    },\n    text: {\n        get()\n        {\n            return this.value;\n        },\n        set(val)\n        {\n            this.value = val;\n        },\n    },\n    style: {\n        get()\n        {\n            return this._style;\n        },\n        set(val)\n        {\n            // get a clean default style\n            const style = new DynamicTextStyle(this);\n\n            // merge it with new style\n            style.merge(val);\n\n            // merge it onto this default style\n            this._style.merge(style);\n\n            this.dirtyStyle = true;\n            this.update();\n        },\n    },\n});\n\n// Atlas\nconst metricsCanvas = document.createElement('canvas');\nconst metricsContext = metricsCanvas.getContext('2d');\n\nmetricsCanvas.width = 100;\nmetricsCanvas.height = 100;\n\nvar DynamicAtlas = function (padding)\n{\n    const res = devicePixelRatio || 1;\n    let canvas;\n    let context;\n    let objects;\n    let newObjects = [];\n    let baseTexture;\n    let lazyTimeout;\n    let rootNode;\n    const canvasList = [];\n    let atlasdim;\n    const startdim = 256;\n    const maxdim = 2048;\n\n    var AtlasNode = function (w, h)\n    {\n        const children = this.children = [];\n\n        this.rect = new PIXI.Rectangle(0, 0, w || 0, h || 0);\n        this.data = null;\n\n        this.insert = function (width, height, obj)\n        {\n            if (children.length > 0)\n            {\n                const newNode = children[0].insert(width, height, obj);\n\n                if (newNode !== null) return newNode;\n\n                return children[1].insert(width, height, obj);\n            }\n            if (this.data !== null) return null;\n            if (width > this.rect.width || height > this.rect.height) return null;\n            if (width == this.rect.width && height == this.rect.height)\n            {\n                this.data = obj;\n                obj.frame.x = this.rect.x;\n                obj.frame.y = this.rect.y;\n\n                return this;\n            }\n\n            children.push(new AtlasNode());\n            children.push(new AtlasNode());\n\n            const dw = this.rect.width - width;\n            const dh = this.rect.height - height;\n\n            if (dw > dh)\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, width, this.rect.height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x + width, this.rect.y, this.rect.width - width, this.rect.height);\n            }\n            else\n            {\n                children[0].rect = new PIXI.Rectangle(this.rect.x, this.rect.y, this.rect.width, height);\n                children[1].rect = new PIXI.Rectangle(this.rect.x, this.rect.y + height, this.rect.width, this.rect.height - height);\n            }\n\n            return children[0].insert(width, height, obj);\n        };\n    };\n\n    const addCanvas = function ()\n    {\n        // create new canvas\n        canvas = document.createElement('canvas');\n        context = canvas.getContext('2d');\n        canvasList.push(canvas);\n\n        // reset dimentions\n        atlasdim = startdim;\n        canvas.width = canvas.height = atlasdim;\n        rootNode = new AtlasNode(atlasdim, atlasdim);\n\n        // reset array with canvas objects and create new atlas\n        objects = [];\n\n        // set new basetexture\n        baseTexture = PIXI.BaseTexture.fromCanvas(canvas);\n        baseTexture.mipmap = false; // if not, pixi bug resizing POW2\n        baseTexture.resolution = 1; // todo: support all resolutions\n        baseTexture.update();\n\n        // Debug Spritesheet\n        if (DynamicText.settings.debugSpriteSheet)\n        {\n            canvas.className = 'DynamicText_SpriteSheet';\n            document.body.appendChild(canvas);\n        }\n    };\n\n    this.fontFamilyCache = {};\n\n    const drawObjects = function (arr, resized)\n    {\n        if (resized) baseTexture.update();\n        for (let i = 0; i < arr.length; i++)\n        { drawObject(arr[i]); }\n    };\n\n    var drawObject = function (obj)\n    {\n        context.drawImage(obj._cache, obj.frame.x, obj.frame.y);\n        obj.texture.frame = obj.frame;\n        obj.texture.update();\n    };\n\n    this.getCharObject = function (char, style)\n    {\n        const font = style.ctxFont();\n\n        // create new cache for fontFamily\n        let familyCache = this.fontFamilyCache[font];\n\n        if (!familyCache)\n        {\n            familyCache = {};\n            this.fontFamilyCache[font] = familyCache;\n        }\n\n        // get char data\n        const key = style.ctxKey(char);\n        let obj = familyCache[key];\n\n        if (!obj)\n        {\n            // create char object\n            const metrics = generateCharData(char, style);\n\n            // temp resize if doesnt fit (not nesseary when we dont need to generate textures)\n            if (metrics.rect)\n            {\n                if (canvas.width < metrics.rect.width || canvas.height < metrics.rect.height)\n                {\n                    canvas.width = canvas.height = Math.max(metrics.rect.width, metrics.rect.height);\n                    baseTexture.update();\n                }\n            }\n\n            // todo: cleanup when we know whats needed\n            obj = {\n                metrics,\n                font,\n                value: char,\n                frame: metrics.rect,\n                baseTexture: metrics.rect ? baseTexture : null,\n                xOffset: metrics.bounds ? metrics.bounds.minx : 0,\n                yOffset: metrics.descent || 0,\n                width: metrics.width || 0,\n                lineHeight: metrics.lineHeight || 0,\n                _cache: metrics.canvas,\n                texture: metrics.rect ? new PIXI.Texture(baseTexture, metrics.rect) : null, // temp texture\n            };\n\n            // add to collections\n            familyCache[key] = obj;\n\n            // add to atlas if visible char\n            if (metrics.rect)\n            {\n                newObjects.push(obj);\n\n                if (lazyTimeout === undefined)\n                {\n                    lazyTimeout = setTimeout(function ()\n                    {\n                        addNewObjects();\n                        lazyTimeout = undefined;\n                    }, 0);\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    const compareFunction = function (a, b)\n    {\n        if (a.frame.height < b.frame.height)\n        { return 1; }\n\n        if (a.frame.height > b.frame.height)\n        { return -1; }\n\n        if (a.frame.width < b.frame.width)\n        { return 1; }\n\n        if (a.frame.width > b.frame.width)\n        { return -1; }\n\n        return 0;\n    };\n\n    var addNewObjects = function ()\n    {\n        newObjects.sort(compareFunction);\n        let _resized = false;\n        let _newcanvas = false;\n\n        for (let i = 0; i < newObjects.length; i++)\n        {\n            const obj = newObjects[i];\n            const node = rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n\n            if (node !== null)\n            {\n                if (_newcanvas) obj.texture.baseTexture = baseTexture; // update basetexture if new canvas was created (temp)\n                objects.push(obj);\n                continue;\n            }\n\n            // step one back (so it will be added after resize/new canvas)\n            i--;\n\n            if (atlasdim < maxdim)\n            {\n                _resized = true;\n                resizeCanvas(atlasdim * 2);\n                continue;\n            }\n\n            // close current spritesheet and make a new one\n            drawObjects(objects, _resized);\n            addCanvas();\n            _newcanvas = true;\n            _resized = false;\n        }\n\n        drawObjects(_resized || _newcanvas ? objects : newObjects, _resized);\n        newObjects = [];\n    };\n\n    var resizeCanvas = function (dim)\n    {\n        canvas.width = canvas.height = atlasdim = dim;\n\n        rootNode = new AtlasNode(dim, dim);\n        objects.sort(compareFunction);\n\n        for (let i = 0; i < objects.length; i++)\n        {\n            const obj = objects[i];\n\n            rootNode.insert(obj.frame.width + padding, obj.frame.height + padding, obj);\n        }\n    };\n\n    var generateCharData = function (char, style)\n    {\n        const fontSize = Math.max(1, int(style.fontSize, 26));\n        const lineHeight = fontSize * 1.25;\n\n        // Start our returnobject\n        const data = {\n            fontSize,\n            lineHeight,\n            width: 0,\n        };\n\n        // Return if newline\n        if (!char || (/(?:\\r\\n|\\r|\\n)/).test(char))\n        { return data; }\n\n        // Ctx font string\n        const font = style.ctxFont();\n\n        metricsContext.font = font;\n\n        // Get char width\n        data.width = Math.round(metricsContext.measureText(char).width);\n\n        // Return if char = space\n        if ((/(\\s)/).test(char)) return data;\n\n        // set canvas size (with padding so we can messure)\n        const paddingY = Math.round(fontSize * 0.7); const\n            paddingX = Math.max(5, Math.round(fontSize * 0.7));\n\n        metricsCanvas.width = Math.ceil(data.width) + paddingX * 2;\n        metricsCanvas.height = 1.5 * fontSize;\n        const w = metricsCanvas.width; const h = metricsCanvas.height; const\n            baseline = (h / 2) + (paddingY * 0.5);\n\n        // set font again after resize\n        metricsContext.font = font;\n\n        // make sure canvas is clean\n        metricsContext.clearRect(0, 0, w, h);\n\n        // save clean state with font\n        metricsContext.save();\n\n        // convert shadow string to shadow data\n        const shadowData = function (str)\n        {\n            const data = str.trim().split(' ');\n\n            return {\n                color: string(data[0], '#000000'),\n                alpha: float(data[1], 0.5),\n                xOffset: float(data[2], 3),\n                yOffset: float(data[3], 3),\n                blur: float(data[4], 5),\n            };\n        };\n\n        // convert fill string to fill data\n        const fillData = function (str)\n        {\n            const data = str.trim().split(' ');\n            const c = string(data[0], '#FFFFFF');\n            const a = float(data[1], 1);\n\n            return {\n                color: c,\n                alpha: a,\n                position: float(data[2], -1),\n                rgba: hexToRgba(c, a),\n            };\n        };\n\n        // create fill style from fill string\n        const getFillStyle = function (str)\n        {\n            const fills = str.split(',').filter(function (s) { return s !== ''; }); let\n                i;\n\n            // convert to fill data\n            for (i = 0; i < fills.length; i++) fills[i] = fillData(fills[i]);\n\n            switch (fills.length)\n            {\n                case 0: return 'white';\n                case 1: return fills[0].rgba ? fills[0].rgba : fills[0].color || '#FFFFFF';\n                default:\n                    // make gradient\n                    try\n                    {\n                        const gradEnd = baseline + lineHeight - fontSize;\n                        const gradient = metricsContext.createLinearGradient(0, gradEnd - fontSize, 0, gradEnd);\n\n                        for (i = 0; i < fills.length; i++)\n                        { gradient.addColorStop(fills[i].position !== -1 ? fills[i].position : i / (fills.length - 1), fills[i].rgba || fills[i].color); }\n\n                        return gradient;\n                    }\n                    catch (e)\n                    {\n                        return '#FFFFFF';\n                    }\n            }\n        };\n\n        // function to draw shadows\n        const drawShadows = function (shadowString, stroke)\n        {\n            const shadows = shadowString.trim().split(',').filter(function (s) { return s !== ''; });\n\n            if (shadows.length)\n            {\n                for (let i = 0; i < shadows.length; i++)\n                {\n                    const s = shadowData(shadows[i]);\n\n                    metricsContext.globalAlpha = s.alpha;\n                    metricsContext.shadowColor = s.color;\n                    metricsContext.shadowOffsetX = s.xOffset + w;\n                    metricsContext.shadowOffsetY = s.yOffset;\n                    metricsContext.shadowBlur = s.blur;\n\n                    if (stroke)\n                    {\n                        metricsContext.lineWidth = style.stroke;\n                        metricsContext.strokeText(char, paddingX - w, baseline);\n                    }\n                    else metricsContext.fillText(char, paddingX - w, baseline);\n                }\n                metricsContext.restore();\n            }\n        };\n\n        // draw text shadows\n        if (style.shadow.length)\n        { drawShadows(style.shadow, false); }\n\n        // draw stroke shadows\n        if (style.stroke && style.strokeShadow.length)\n        {\n            drawShadows(style.strokeShadow, true);\n        }\n\n        // draw text\n        metricsContext.fillStyle = getFillStyle(string(style.fill, '#000000'));\n        metricsContext.fillText(char, paddingX, baseline);\n        metricsContext.restore();\n\n        // draw stroke\n        if (style.stroke)\n        {\n            metricsContext.strokeStyle = getFillStyle(string(style.strokeFill, '#000000'));\n            metricsContext.lineWidth = style.stroke;\n            metricsContext.strokeText(char, paddingX, baseline);\n            metricsContext.restore();\n        }\n\n        // begin messuring\n        const pixelData = metricsContext.getImageData(0, 0, w, h).data;\n\n        let i = 3;\n        const line = w * 4;\n        const len = pixelData.length;\n\n        // scanline on alpha\n        while (i < len && !pixelData[i]) { i += 4; }\n        const ascent = (i / line) | 0;\n\n        if (i < len)\n        {\n            // rev scanline on alpha\n            i = len - 1;\n            while (i > 0 && !pixelData[i]) { i -= 4; }\n            const descent = (i / line) | 0;\n\n            // left to right scanline on alpha\n            for (i = 3; i < len && !pixelData[i];)\n            {\n                i += line;\n                if (i >= len) { i = (i - len) + 4; }\n            }\n            const minx = ((i % line) / 4) | 0;\n\n            // right to left scanline on alpha\n            let step = 1;\n\n            for (i = len - 1; i >= 0 && !pixelData[i];)\n            {\n                i -= line;\n                if (i < 0) { i = (len - 1) - (step++) * 4; }\n            }\n            const maxx = ((i % line) / 4) + 1 | 0;\n\n            // set font metrics\n            data.ascent = Math.round(baseline - ascent);\n            data.descent = Math.round(descent - baseline);\n            data.height = 1 + Math.round(descent - ascent);\n            data.bounds = {\n                minx: minx - paddingX,\n                maxx: maxx - paddingX,\n                miny: 0,\n                maxy: descent - ascent,\n            };\n            data.rect = {\n                x: data.bounds.minx,\n                y: -data.ascent - 2,\n                width: data.bounds.maxx - data.bounds.minx + 2,\n                height: data.ascent + data.descent + 4,\n            };\n\n            // cache (for fast rearrange later)\n            data.canvas = document.createElement('canvas');\n            data.canvas.width = data.rect.width;\n            data.canvas.height = data.rect.height;\n            const c = data.canvas.getContext('2d');\n\n            c.drawImage(metricsCanvas, -paddingX - data.rect.x, -baseline - data.rect.y);\n\n            // reset rect position\n            data.rect.x = data.rect.y = 0;\n        }\n\n        return data;\n    };\n\n    addCanvas();\n};\n\n// helper function for float or default\nfunction float(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseFloat(val);\n}\n\n// helper function for int or default\nfunction int(val, def)\n{\n    if (isNaN(val)) return def;\n\n    return parseInt(val);\n}\n\n// helper function for string or default\nfunction string(val, def)\n{\n    if (typeof val === 'string' && val.length) return val;\n\n    return def;\n}\n\n// helper function to convert string hex to int or default\nfunction hexToInt(str, def)\n{\n    if (typeof str === 'number')\n    { return str; }\n\n    const result = parseInt(str.replace('#', '0x'));\n\n    if (isNaN(result)) return def;\n\n    return result;\n}\n\n// helper function to convert hex to rgba\nfunction hexToRgba(hex, alpha)\n{\n    const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n    alpha = float(alpha, 1);\n\n    return result ? `rgba(${parseInt(result[1], 16)},${parseInt(result[2], 16)},${parseInt(result[3], 16)},${alpha})` : false;\n}\n\n","function EaseBase()\n{\n    this.getPosition = function (p)\n    {\n        return p;\n    };\n}\n\nEaseBase.prototype.constructor = EaseBase;\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","export const Ease = {};\nimport { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst HALF_PI = Math.PI * 0.5;\n\nfunction create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\n// Liear\nEase.Linear = new EaseBase();\n\n// Exponetial Eases\nfunction wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Ease.Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\n","import * as PIXI from 'pixi.js';\n\nexport class MouseScrollEvent\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    private obj: any;\n\n    constructor(obj: any, preventDefault: boolean)\n    {\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.obj = obj;\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseScrollImpl = (e): void =>\n    {\n        const { obj, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(obj, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n\n    stopEvent(): void\n    {\n        const { obj, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        obj.container.removeListener('mouseover', onHoverImpl);\n        obj.container.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    startEvent(): void\n    {\n        const { obj, onHoverImpl, onMouseOutImpl } = this;\n\n        obj.container.on('mouseover', onHoverImpl);\n        obj.container.on('mouseout', onMouseOutImpl);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { ClickEvent } from './ClickEvent';\nimport { DragEvent } from './DragEvent';\nimport { InputController } from './InputController';\nimport { MouseScrollEvent } from './MouseScrollEvent';\n\nexport const Interaction = {\n    ClickEvent,\n    DragEvent,\n    InputController,\n    MouseScrollEvent,\n};\n\nexport default Interaction;\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Widget } from './Widget';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\n\ninterface ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    fill?: Sprite;\n    vertical?: boolean;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n* An UI Slider, the default width/height is 90%\n*\n* @class\n* @extends Widget\n* @memberof PIXI.UI\n* @param options {Object} Slider settings\n* @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n* @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n* @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n* @param [options.vertical=false] {boolean} Direction of the slider\n* @param [options.value=0] {number} value of the slider\n* @param [options.minValue=0] {number} minimum value\n* @param [options.maxValue=100] {number} max value\n* @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n* @param [options.onValueChange=null] {callback} Callback when the value has changed\n* @param [options.onValueChanging=null] {callback} Callback while the value is changing\n*/\nexport class Slider extends Widget\n{\n    protected _amt: number;\n    protected _disabled: boolean;\n\n    track: Sprite;\n    handle: Sprite;\n    fill: Sprite;\n\n    _minValue: number;\n    _maxValue: number;\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (number) => void;\n    onValueChanging: (number) => void;\n\n    constructor(options: ISliderOptions)\n    {\n        super(0, 0);\n\n        this._amt = 0;\n        this._disabled = false;\n\n        // set options\n        this.track = options.track;\n        this.handle = options.handle;\n        this.fill = options.fill || null;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.vertical = options.vertical || false;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n        this.handle.pivot = 0.5;\n\n        this.addChild(this.track);\n        if (this.fill)\n        {\n            this.track.addChild(this.fill);\n        }\n        this.addChild(this.handle);\n        this.handle.container.buttonMode = true;\n\n        if (this.vertical)\n        {\n            this.height = '100%';\n            this.width = this.track.width;\n            this.track.height = '100%';\n            this.handle.horizontalAlign = 'center';\n\n            if (this.fill)\n            {\n                this.fill.horizontalAlign = 'center';\n            }\n        }\n        else\n        {\n            this.width = '100%';\n            this.height = this.track.height;\n            this.track.width = '100%';\n            this.handle.verticalAlign = 'middle';\n\n            if (this.fill)\n            {\n                this.fill.verticalAlign = 'middle';\n            }\n        }\n    }\n\n    update(soft = 0): void\n    {\n        let handleSize; let\n            val;\n\n        if (this.vertical)\n        {\n            handleSize = this.handle._height || this.handle.container.height;\n            val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { top: val });\n                if (this.fill) Tween.set(this.fill, { height: val });\n            }\n        }\n        else\n        {\n            handleSize = this.handle._width || this.handle.container.width;\n            val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n            if (soft)\n            {\n                Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                if (this.fill) Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n            }\n            else\n            {\n                Tween.set(this.handle, { left: val });\n                if (this.fill) Tween.set(this.fill, { width: val });\n            }\n        }\n    }\n\n    initialize()\n    {\n        super.initialize();\n\n        const localMousePosition = new PIXI.Point();\n        let startValue = 0;\n        let maxPosition;\n\n        const triggerValueChange = () =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = () =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.track.container.toLocal(mousePosition, null, localMousePosition, true);\n\n            const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n            const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n\n            this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n            this.update(soft);\n            triggerValueChanging();\n        };\n\n        // //Handle dragging\n        const handleDrag = new DragEvent(this.handle);\n\n        handleDrag.onPress = (event, isPressed: boolean): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (event): void =>\n        {\n            startValue = this._amt;\n            maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n\n            triggerValueChanging();\n            this.update();\n        };\n\n        handleDrag.onDragEnd = function ()\n        {\n            triggerValueChange();\n            this.update();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag = new DragEvent(this.track);\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            { updatePositionToMouse(event.data.global, true); }\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event) =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = () =>\n        {\n            triggerValueChange();\n        };\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n    }\n    set value(val: number)\n    {\n        this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        this.update();\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.container.buttonMode = !val;\n            this.handle.container.interactive = !val;\n            this.track.container.interactive = !val;\n        }\n    }\n}\n","import { Slider } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollingContainer } from './ScrollingContainer';\n\ninterface IScrollBarOptions\n{\n    track: Sprite;\n    handle: Sprite;\n    scrollingContainer: ScrollingContainer;\n    vertical?: boolean;\n    autohide?: boolean;\n}\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PIXI.UI.Slider\n * @memberof PIXI.UI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollingContainer;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track,\n            handle: options.handle,\n            fill: null,\n            vertical: options.vertical,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.onValueChanging = (val): void =>\n        {\n            const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n\n            if (sizeAmt < 1)\n            {\n                this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n            }\n        };\n\n        this.scrollingContainer._scrollBars.push(this);\n    }\n\n    alignToContainer(): void\n    {\n        let newPos;\n        let size;\n        const xY = this.vertical ? 'y' : 'x';\n        const widthHeight = this.vertical ? 'height' : 'width';\n        const topLeft = this.vertical ? 'top' : 'left';\n        const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n        const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n            ? 1\n            : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n\n        // update amt\n        const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n\n        this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n            ? 0\n            : -(this.scrollingContainer.innerContainer[xY] / diff);\n\n        if (sizeAmt >= 1)\n        {\n            size = this[`_${widthHeight}`];\n            this.handle[topLeft] = size * 0.5;\n            this.toggleHidden(true);\n        }\n        else\n        {\n            size = this[`_${widthHeight}`] * sizeAmt;\n            if (this._amt > 1)\n            {\n                size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n            }\n            else if (this._amt < 0)\n            {\n                size -= (this[`_${widthHeight}`] - size) * -this._amt;\n            }\n\n            if (this._amt < 0)\n            {\n                newPos = size * 0.5;\n            }\n            else if (this._amt > 1)\n            {\n                newPos = this[`_${widthHeight}`] - (size * 0.5);\n            }\n            else\n            {\n                newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n            }\n\n            this.handle[topLeft] = newPos;\n            this.toggleHidden(false);\n        }\n        this.handle[widthHeight] = size;\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n}\n\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { InputBase } from './InputBase';\nimport { Container } from './Container';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { ScrollingContainer } from './ScrollingContainer';\nimport * as PIXI from 'pixi.js';\nimport { Sprite } from './Sprite';\n\ninterface ITextInputOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: Sprite;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n * @param options.value {String} Text content\n * @param [options.multiLine=false] {Boolean} Multiline input\n * @param options.style {PIXI.TextStyle} Style used for the Text\n * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n * @param [options.width=150] {Number} width of input\n * @param [options.height=20] {Number} height of input\n * @param [options.padding=3] {Number} input padding\n * @param [options.paddingTop=0] {Number} input padding\n * @param [options.paddingBottom=0] {Number} input padding\n * @param [options.paddingLeft=0] {Number} input padding\n * @param [options.paddingRight=0] {Number} input padding\n * @param [options.tabIndex=0] {Number} input tab index\n * @param [options.tabGroup=0] {Number|String} input tab group\n * @param [options.maxLength=0] {Number} 0 = unlimited\n * @param [options.caretWidth=1] {Number} width of the caret\n * @param [options.lineHeight=0] {Number} 0 = inherit from text\n */\nexport class TextInput extends InputBase\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollingContainer;\n\n    public background: Sprite;\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    constructor(options: ITextInputOptions)\n    {\n        super(\n            typeof options.width !== 'undefined' // eslint-disable-line no-nested-ternary\n                ? options.width\n                : (options.background ? options.background.width : 150),\n            typeof options.height !== 'undefined' // eslint-disable-line no-nested-ternary\n                ? options.height\n                : (options.background ? options.background.height : 150),\n            options.tabIndex || 0,\n            options.tabGroup || 0,\n        );\n\n        // create temp input (for mobile keyboard)\n        if (typeof mockDOMInput === 'undefined')\n        {\n            mockDOMInput = document.createElement('INPUT');\n            mockDOMInput.setAttribute('type', 'text');\n            mockDOMInput.setAttribute('id', '_pui_tempInput');\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n            document.body.appendChild(mockDOMInput);\n        }\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // insert bg\n        if (options.background)\n        {\n            this.background = options.background;\n            this.background.width = '100%';\n            this.background.height = '100%';\n            this.addChild(this.background);\n        }\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding !== undefined ? options.padding : 3;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding !== undefined ? options.padding : 3;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding !== undefined ? options.padding : 3;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding !== undefined ? options.padding : 3;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollingContainer({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        });\n        this.textContainer.anchorTop = paddingTop;\n        this.textContainer.anchorBottom = paddingBottom;\n        this.textContainer.anchorLeft = paddingLeft;\n        this.textContainer.anchorRight = paddingRight;\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragEvent(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._focused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer;\n    }\n\n    update(): void\n    {\n        if (this._width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    keyDownEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        this.emit('keydown', e);\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._focused)\n        {\n            super.focus();\n\n            const l = `${this.container.worldTransform.tx}px`;\n            const t = `${this.container.worldTransform.ty}px`;\n            const h = `${this.container.height}px`;\n            const w = `${this.container.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.keyDownEvent, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._focused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.keyDownEvent);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { Container } from './Container';\nimport { Helpers }  from './Helpers';\nimport { Ticker } from './Ticker';\nimport { DragEvent } from './Interaction/DragEvent';\nimport { MouseScrollEvent } from './Interaction/MouseScrollEvent';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    width?: number;\n    height?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n}\n\n/**\n * An UI Container object with expandMask hidden and possibility to enable scrolling\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n * @param [options.width=0] {Number|String} container width\n * @param [options.height=0] {Number} container height\n * @param [options.radius=0] {Number} corner radius of clipping mask\n * @param [options.expandMask=0] {Number} mask expand (px)\n * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n */\nexport class ScrollingContainer extends Container\n{\n    mask: PIXI.Graphics;\n    innerContainer: PIXI.Container;\n    innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    forcePctPosition: (direction: string, pct: number) => void;\n    focusPosition: (pos: PIXI.Point) => void;\n    setScrollPosition: (speed?: PIXI.Point) => void;\n    updateScrollPosition: (delta: number) => void;\n    updateDirection: (direction: string, delta: number) => void;\n\n    _scrollBars: any[];\n    private boundCached: number;\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super(options.width, options.height);\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new PIXI.Container();\n        this.innerBounds = new PIXI.Rectangle();\n        this.container.addChild(this.mask);\n        this.container.addChild(this.innerContainer);\n        this.container.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.animating = false;\n        this.scrolling = false;\n        this._scrollBars = [];\n\n        this.boundCached = performance.now() - 1000;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    update(): void\n    {\n        super.update();\n\n        if (this._lastWidth !== this._width || this._lastHeight !== this._height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n            // this.mask.drawRect(0, 0, this._width, this._height);\n            // this.mask.drawRect(-of, -of, this._width + of, this.height + of);\n            // this.mask.moveTo(-of, -of);\n            // this.mask.lineTo(this._width + of, -of);\n            // this.mask.lineTo(this._width + of, this._height + of);\n            // this.mask.lineTo(-of, this._height + of);\n                this.mask.drawRect(-of, -of, this._width + of, this._height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this._width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n            this._lastWidth = this._width;\n            this._lastHeight = this._height;\n        }\n\n        if (this.setScrollPosition)\n        {\n            this.setScrollPosition();\n        }\n    }\n\n    addChild(...newChildren: Widget[]): Widget\n    {\n        const argumentsLength = newChildren.length;\n\n        if (argumentsLength > 1)\n        {\n            for (let i = 0; i < newChildren.length; i++)\n            {\n                this.addChild(newChildren[i]);\n            }\n        }\n        else\n        {\n            super.addChild(newChildren[0]);\n            this.innerContainer.addChild(newChildren[0].container);\n            this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n        }\n\n        return newChildren[0];\n    }\n\n    updateScrollBars(): void\n    {\n        for (let i = 0; i < this._scrollBars.length; i++)\n        {\n            this._scrollBars[i].alignToContainer();\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerContainer.getLocalBounds(this.innerBounds);\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    initScrolling(): void\n    {\n        const container = this.innerContainer;\n        const containerStart = new PIXI.Point();\n        const targetPosition = new PIXI.Point();\n        const lastPosition = new PIXI.Point();\n        const Position = new PIXI.Point();\n        let Speed = new PIXI.Point();\n        let stop;\n\n        this.forcePctPosition = (direction: string, pct: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            if (this.scrollX && direction === 'x')\n            {\n                container.position[direction] = -((bounds.width - this._width) * pct);\n            }\n            if (this.scrollY && direction === 'y')\n            {\n                container.position[direction] = -((bounds.height - this._height) * pct);\n            }\n\n            Position[direction] = targetPosition[direction] = container.position[direction];\n        };\n\n        this.focusPosition = (pos: PIXI.Point): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let dif;\n\n            if (this.scrollX)\n            {\n                const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n                if (x + container.x > this._width)\n                {\n                    dif = x - this._width;\n                    container.x = -dif;\n                }\n                else if (x + container.x < 0)\n                {\n                    dif = x + container.x;\n                    container.x -= dif;\n                }\n            }\n\n            if (this.scrollY)\n            {\n                const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n                if (y + container.y > this._height)\n                {\n                    dif = y - this._height;\n                    container.y = -dif;\n                }\n                else if (y + container.y < 0)\n                {\n                    dif = y + container.y;\n                    container.y -= dif;\n                }\n            }\n\n            lastPosition.copyFrom(container.position);\n            targetPosition.copyFrom(container.position);\n            Position.copyFrom(container.position);\n            this.updateScrollBars();\n        };\n\n        this.setScrollPosition = (speed: PIXI.Point): void =>\n        {\n            if (speed)\n            {\n                Speed = speed;\n            }\n\n            if (!this.animating)\n            {\n                this.animating = true;\n                lastPosition.copyFrom(container.position);\n                targetPosition.copyFrom(container.position);\n\n                Ticker.on('update', this.updateScrollPosition, this);\n            }\n        };\n\n        this.updateScrollPosition = (delta: number): void =>\n        {\n            stop = true;\n            if (this.scrollX) this.updateDirection('x', delta);\n            if (this.scrollY) this.updateDirection('y', delta);\n            if (stop)\n            {\n                Ticker.removeListener('update', this.updateScrollPosition);\n                this.animating = false;\n            }\n        };\n\n        this.updateDirection = (direction: string, delta: number): void =>\n        {\n            const bounds = this.getInnerBounds();\n\n            let min;\n\n            if (direction === 'y')\n            {\n                min = Math.round(Math.min(0, this._height - bounds.height));\n            }\n            else\n            {\n                min = Math.round(Math.min(0, this._width - bounds.width));\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) !== 0)\n            {\n                targetPosition[direction] += Speed[direction];\n                Speed[direction] = Helpers.Lerp(Speed[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n                if (targetPosition[direction] > 0)\n                {\n                    targetPosition[direction] = 0;\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    targetPosition[direction] = min;\n                }\n            }\n\n            if (!this.scrolling && Math.round(Speed[direction]) === 0\n                && (container[direction] > 0 || container[direction] < min))\n            {\n                const target = Position[direction] > 0 ? 0 : min;\n\n                Position[direction] = Helpers.Lerp(Position[direction], target, (40 - (30 * this.softness)) * delta);\n                stop = false;\n            }\n            else if (this.scrolling || Math.round(Speed[direction]) !== 0)\n            {\n                if (this.scrolling)\n                {\n                    Speed[direction] = Position[direction] - lastPosition[direction];\n                    lastPosition.copyFrom(Position);\n                }\n                if (targetPosition[direction] > 0)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n                }\n                else if (targetPosition[direction] < min)\n                {\n                    Speed[direction] = 0;\n                    Position[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n                }\n                else\n                {\n                    Position[direction] = targetPosition[direction];\n                }\n                stop = false;\n            }\n\n            container.position[direction] = Math.round(Position[direction]);\n            this.updateScrollBars();\n        };\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag = new DragEvent(this);\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    containerStart.copyFrom(container.position);\n                    Position.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n                    this.emit('dragStart', e);\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragMove = (e, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = containerStart.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = containerStart.y + offset.y;\n                }\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('dragEnd', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new MouseScrollEvent(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n}\n","import { Container } from './Container';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends Container\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.container.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.container.addChildAt(this.stl, 0);\n            this.container.addChildAt(this.str, 0);\n            this.container.addChildAt(this.sbl, 0);\n            this.container.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.container.addChildAt(this.sl, 0);\n            this.container.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.container.addChildAt(this.st, 0);\n            this.container.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n */\nexport class Sprite extends Widget\n{\n    sprite: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        const sprite = new PIXI.Sprite(texture);\n\n        super(sprite.width, sprite.height);\n\n        this.sprite = sprite;\n        this.container.addChild(this.sprite);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.sprite.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.sprite.blendMode = this.blendMode;\n        }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A Stage for UIObjects\n *\n * @class\n * @extends PIXI.UI.Container\n * @memberof PIXI.UI\n * @param width {Number} Width of the Stage\n * @param height {Number} Height of the Stage\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    UIChildren: Widget[];\n\n    stage: any;\n\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.UIChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.UIChildren.push(UIObject);\n            super.addChild(UIObject.container);\n            UIObject.updatesettings(true);\n        }\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.container);\n\n            const index = this.UIChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.UIChildren.length; i++)\n        {\n            this.UIChildren[i].updatesettings(true, false);\n        }\n    }\n\n    get _width(): number\n    {\n        return this.__width;\n    }\n    set _width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get _height(): number\n    {\n        return this.__height;\n    }\n    set _height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n}\n","import { Widget } from './Widget';\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Text {String} Text content\n * @param TextStyle {PIXI.TextStyle} Style used for the Text\n */\nexport class Text extends Widget\n{\n    private _text: PIXI.Text;\n\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        const textDisplay = new PIXI.Text(text, textStyle);\n\n        super(textDisplay.width, textDisplay.height);\n        this._text = textDisplay;\n        this.container.addChild(this._text);\n    }\n\n    baseupdate(): void\n    {\n        // force original text width unless using anchors\n        if (this._anchorLeft === null || this._anchorRight === null)\n        {\n            this.setting.width = this._text.width;\n            this.setting.widthPct = null;\n        }\n        else\n        {\n            this._text.width = this._width;\n        }\n\n        // force original text height unless using anchors\n        if (this._anchorTop === null || this._anchorBottom === null)\n        {\n            this.setting.height = this._text.height;\n            this.setting.heightPct = null;\n        }\n        else\n        {\n            this._text.width = this._width;\n        }\n\n        super.baseupdate();\n    }\n\n    update()\n    {\n        // set tint\n        if (this.tint !== null)\n        {\n            this._text.tint = this.tint;\n        }\n\n        // set blendmode\n        if (this.blendMode !== null)\n        {\n            this._text.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this._text.text;\n    }\n    set value(val: string)\n    {\n        this._text.text = val;\n        this.updatesettings(true);\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.container.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @namespace PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(\n *    new PUXI.AnchorLayout()\n * );\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n    protected noPercents: boolean;\n\n    constructor()\n    {\n        this.noPercents = false;\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    private measureChild(child: Widget,\n        maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n        const anchorLeft = lopt.anchorLeft || 0;\n        const anchorTop = lopt.anchorTop || 0;\n        const anchorRight = lopt.anchorRight || 0;\n        const anchorBottom = lopt.anchorBottom || 0;\n\n        let maxWidgetWidth = 0;\n        let maxWidgetHeight = 0;\n        let widgetWidthMode: number;\n        let widgetHeightMode: number;\n\n        // Widget width measurement\n        if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1))\n        {\n            maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1)\n        {\n            maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorLeft) < 1)\n        {\n            maxWidgetWidth = anchorRight;\n            widgetWidthMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n            widgetWidthMode = (widthMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        // Widget height measurement\n        if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1))\n        {\n            maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1)\n        {\n            maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n        else if (Math.abs(anchorTop) < 1)\n        {\n            maxWidgetHeight = anchorBottom;\n            widgetHeightMode = MeasureMode.AT_MOST;\n        }\n        else\n        {\n            maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n            widgetHeightMode = (heightMode === MeasureMode.UNBOUNDED)\n                ? MeasureMode.UNBOUNDED\n                : MeasureMode.AT_MOST;\n        }\n\n        child.measure(\n            maxWidgetWidth,\n            maxWidgetHeight,\n            widgetWidthMode,\n            widgetHeightMode,\n        );\n    }\n\n    measureStretch(lowerAnchor: number,\n        upperAnchor: number,\n        childDimen: number): number\n    {\n        if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1))\n        {\n            return Math.max(lowerAnchor, upperAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1)\n        {\n            return childDimen / (upperAnchor - lowerAnchor);\n        }\n        else if (Math.abs(lowerAnchor) < 1)\n        {\n            return upperAnchor;\n        }\n\n        return (childDimen + lowerAnchor) / upperAnchor;\n    }\n\n    measureChildren(maxParentWidth: number,\n        maxParentHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        if (widthMode === MeasureMode.EXACTLY && heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n            this.measuredHeight = maxHeight;\n            this.measureChildren(this.measuredWidth, this.measuredHeight,\n                MeasureMode.EXACTLY,\n                MeasureMode.EXACTLY);\n        }\n\n        let maxX = 0;\n        let maxY = 0;\n\n        const children = this.host.widgetChildren;\n\n        this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const child = children[i];\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n\n            maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n            maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n        }\n\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(maxX, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = maxX;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(maxY, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = maxY;\n        }\n\n        this.measureChildren(this.measuredWidth, this.measuredHeight,\n            MeasureMode.EXACTLY,\n            MeasureMode.EXACTLY);\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    onLayout(parent: Widget): void\n    {\n        const { widgetChildren } = parent;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            let childWidth = child.measuredWidth;\n            let childHeight = child.measuredHeight;\n\n            let anchorLeft = layoutOptions.anchorLeft || 0;\n            let anchorTop = layoutOptions.anchorTop || 0;\n            let anchorRight = layoutOptions.anchorRight || 0;\n            let anchorBottom = layoutOptions.anchorBottom || 0;\n\n            if (anchorLeft > -1 && anchorLeft <= 1)\n            {\n                anchorLeft *= parent.width;\n            }\n            if (anchorTop > -1 && anchorTop <= 1)\n            {\n                anchorTop *= parent.height;\n            }\n            if (anchorRight > -1 && anchorRight <= 1)\n            {\n                anchorRight *= parent.width;\n            }\n            if (anchorBottom > -1 && anchorBottom <= 1)\n            {\n                anchorBottom *= parent.height;\n            }\n\n            let x = 0;\n            let y = 0;\n\n            if (childWidth !== 0)\n            {\n                switch (layoutOptions.horizontalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.LEFT:\n                        x = anchorLeft;\n                        break;\n                    case ALIGN.MIDDLE:\n                        x = (anchorRight - anchorLeft - childWidth) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        x = anchorRight - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                x = anchorLeft;\n                childWidth = anchorRight - anchorLeft;\n            }\n\n            if (childHeight !== 0)\n            {\n                switch (layoutOptions.verticalAlign || ALIGN.NONE as ALIGN)\n                {\n                    case ALIGN.TOP:\n                        y = anchorTop;\n                        break;\n                    case ALIGN.MIDDLE:\n                        y = (anchorBottom - anchorTop - childHeight) / 2;\n                        break;\n                    case ALIGN.RIGHT:\n                        y = anchorBottom - childWidth;\n                        break;\n                }\n            }\n            else\n            {\n                y = anchorRight;\n                childHeight = anchorBottom - anchorTop;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\n\nexport abstract class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;\n\n    useLayout(layoutMgr: ILayoutManager): void\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach(this);\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n    }\n\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.measure(width, height, widthMode, heightMode);\n\n        this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        this.layoutMgr.onLayout(this);\n    }\n}\n"],"names":["this","width","height","minWidth","minHeight","maxWidth","maxHeight","left","right","top","bottom","anchorLeft","anchorRight","anchorTop","anchorBottom","widthPct","heightPct","minWidthPct","minHeightPct","maxWidthPct","maxHeightPct","leftPct","rightPct","topPct","bottomPct","anchorLeftPct","anchorRightPct","anchorTopPct","anchorBottomPct","pivotX","pivotY","scaleX","scaleY","verticalAlign","horizontalAlign","rotation","blendMode","tint","alpha","draggable","dragRestricted","dragRestrictAxis","dragThreshold","dragGroup","dragContainer","droppable","droppableReparent","dropGroup","obj","e","_a","start","_onDragMove","_onDragEnd","_this","id","data","identifier","onPress","call","bound","copyFrom","global","stage","on","originalEvent","preventDefault","mouse","offset","set","x","y","dragging","movementX","Math","abs","movementY","max","cancel","onDragStart","onDragMove","removeListener","onDragEnd","PIXI.Point","container","interactive","startEvent","DragEvent","_onDragStart","isPressed","_items","DragDropController","add","item","event","_dragDropEventId","indexOf","push","[object Object]","object","index","i","length","splice","group","ALIGN","reset","dirtyId","Insets","MeasureMode","LayoutOptions","WRAP_CONTENT","markers","Object","_marginLeft","val","_marginTop","_marginRight","_marginBottom","NONE","_super","__extends","_currentItem","PIXI.Container","setting","UISettings","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","isNaN","parseFloat","replace","_width","_height","_minWidth","_minHeight","_maxWidth","_maxHeight","_anchorLeft","_anchorRight","_anchorTop","_anchorBottom","_left","_right","_top","_bottom","_dragPosition","Widget","updateChildren","updateParent","parent","initialize","baseupdate","update","updatesettings","parentHeight","parentWidth","actual_width","actual_height","actual_minWidth","actual_minHeight","actual_maxWidth","actual_maxHeight","actual_anchorLeft","actual_anchorRight","actual_anchorTop","actual_anchorBottom","actual_left","actual_right","actual_top","actual_bottom","_parentWidth","_parentHeight","pivotXOffset","pivotYOffset","round","useHorizontalAnchor","position","useVerticalAnchor","scale","pivot","_measuredWidth","_measuredHeight","widthMode","heightMode","naturalWidth","naturalHeight","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","child","childOptions","layoutOptions","DEFAULT","FILL_PARENT","measuredWidth","measuredHeight","measure","l","t","r","b","lopt","UIObject","argumentsLength","arguments","addChild","removeChild","argumentLenght","oldUIParent_1","setTimeout","initDraggable","initDroppable","drag","stopEvent","containerStart_1","stageOffset_1","self_1","added","copy","c","worldTransform","tx","ty","emit","getItem","toLocal","onDrop","self_2","getEventItem","clearDraggable","clearDroppable","renderable","visible","cacheAsBitmap","click","interactiveChildren","parentLayer","PIXI.utils","EventEmitter","includeHover","rightMouseButton","doubleClick","eventname_mouseup","_onMouseUp","eventname_mouseupoutside","_onMouseUpOutside","double","now","performance","time","onClick","_mouseUpAll","ishover","_onMouseMove","onHover","onMove","_onMouseDown","_onMouseOver","_onMouseOut","eventname_mousedown","hover","ClickEvent","over","tabGroups","checkGroups","checkGroupValues","InputController","registrer","tabIndex","tabGroup","groupName","items","_tabIndex","undefined","_tabGroup","sort","a","blur","clear","fireTab","focus","fireNext","firePrev","registrerCheckGroup","cb","name","checkGroup","value","checked","updateCheckGroupSelected","getCheckGroupSelectedValue","setCheckGroupSelectedValue","which","_useTab","_usePrev","_useNext","__down","documentMouseDown","document","addEventListener","keyDownEvent","off","removeEventListener","_focused","InputBase","_clearEvents","_bindEvents","options","background","isHover","uiText","text","buttonMode","Button","clickEvent","prototype","bounds","getLocalBounds","hitArea","PIXI.Rectangle","_checked","_value","checkgroup","checkmark","change","CheckBox","Container","DynamicTextStyle","respectDirty","_parent","_scale","_align","_fontFamily","_fontSize","_fontWeight","_fontStyle","_letterSpacing","_lineHeight","_verticalAlign","_rotation","_skew","_tint","_fill","_shadow","_stroke","_strokeFill","_strokeShadow","_wrap","_breakWords","_overflowX","_overflowY","_ellipsis","_cachedEllipsisSize","ellipsisSize","atlas","ellipsis","getCharObject","letterSpacing","DynamicChar","style","space","newline","emoji","charcode","wordIndex","lineIndex","clone","merge","param","_dirty","ctxKey","char","fill","shadow","stroke","strokeFill","strokeShadow","join","ctxFont","fontSize","fontWeight","fontStyle","fontFamily","constructor","defineProperties","dirtyStyle","align","lineHeight","skew","wrap","breakWords","overflowX","overflowY","DynamicText","DynamicAtlas","autoWidth","autoHeight","defaultStyle","_style","chars","renderChars","spriteCache","charContainer","PIXI","_inputText","lastWidth","lastHeight","dirtyText","dirtyRender","lineWidthData","lineHeightData","lineFontSizeData","lineAlignmentData","renderCount","charCount","lineEllipsisData","lineHasEllipsis","render","yOffset","xOffset","currentLine","removeSprite","lineWidth","maxLineWidth","texture","tex","sprite","Sprite","anchor","hexToInt","float","prepareForRender","pos","Point","lineFontSize","lineAlignment","lastSpaceIndex","lastSpaceLineWidth","textHeight","forceNewline","renderIndex","lineFull","lastChar","size","ellipsisData","d","dot","closeTags","processInputText","styleTree","charIndex","inputTextIndex","inputArray","Array","from","charCodeAt","test","allowTags","tag","substring","slice","FoundTag","startsWith","regex","match","exec","emojiMatch","emojiRegex","settings","defaultEmojiFont","lazyUpdate","self","dirtySize","create","debugSpriteSheet","metricsCanvas","createElement","metricsContext","getContext","padding","canvas","context","objects","baseTexture","lazyTimeout","rootNode","atlasdim","newObjects","AtlasNode","w","h","children","rect","Rectangle","insert","newNode","frame","addCanvas","BaseTexture","fromCanvas","mipmap","resolution","className","body","appendChild","fontFamilyCache","drawObjects","arr","resized","drawObject","drawImage","_cache","font","familyCache","key","metrics","generateCharData","minx","descent","Texture","addNewObjects","compareFunction","_resized","_newcanvas","resizeCanvas","dim","def","parseInt","measureText","paddingY","paddingX","ceil","baseline","clearRect","save","shadowData","str","trim","split","color","string","fillData","rgba","hexToRgba","getFillStyle","fills","filter","s","gradEnd","gradient","createLinearGradient","addColorStop","drawShadows","shadowString","shadows","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","strokeText","fillText","restore","fillStyle","strokeStyle","pixelData","getImageData","line","len","ascent","step","maxx","miny","maxy","result","hex","EaseBase","getPosition","p","ExponentialEase","power","easeIn","easeOut","pow","Ease","HALF_PI","PI","fn","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Linear","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","MouseScrollEvent","onHoverImpl","onMouseOutImpl","Interaction","Helpers","Lerp","stop","amt","Round","number","decimals","componentToHex","toString","rgbToHex","g","rgbToNumber","numberToRgb","floor","hexToRgb","m","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","tweens","active","onUpdate","_ready","callback","currentTime","CallbackItem","keys","_tweenObjectId","_currentCallbackID","remove","to","ease","isColor","TweenItem","surfix","getSurfix","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","TweenObject","getTweenItem","tween","getCallbackItem","Tween","params","fromTo","paramsFrom","paramsTo","_update","_amt","_disabled","track","handle","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","Slider","soft","handleSize","maxPosition","localMousePosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","stopPropagation","trackDrag","scrollingContainer","autohide","_hidden","ScrollBar","innerContainer","forcePctPosition","_scrollBars","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","autoStart","_now","DeltaTime","Time","Ms","disabled","Ticker","shared","requestAnimationFrame","once","mockDOMInput","mask","PIXI.Graphics","innerBounds","scrollX","scrollY","dragScrolling","softness","radius","expandMask","animating","scrolling","boundCached","ScrollingContainer","initScrolling","_lastWidth","_lastHeight","of","lineStyle","beginFill","drawRect","drawRoundedRect","endFill","setScrollPosition","_i","newChildren","getInnerBounds","alignToContainer","force","containerStart","targetPosition","lastPosition","Position","Speed","direction","pct","focusPosition","dif","updateScrollBars","speed","updateScrollPosition","updateDirection","target","exp","scrollSpeed","desc","tweenTime","tweenEase","SortableList","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","altering","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","f","sbr","sr","sbl","sb","sf","st","sl","stl","SliceSprite","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","_b","PIXI.extras","TilingSprite","PIXI.Texture","PIXI.Sprite","addChildAt","imageUrl","PIXI.BaseTexture","__width","__height","UIChildren","resize","Stage","rx","ry","textStyle","textDisplay","Text","_text","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","_atEnd","multiLine","vrdd","hasSelection","de","textHeightPX","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","selectIndex","clipboardData","window","setData","copyEvent","getData","setAttribute","inputBlurEvent","keyUpEvent","pasteEvent","cutEvent","inputEvent","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","scrollToPosition","showCaret","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","_dirtyText","maxLength","selectedColor","tempText","PIXI.Text","destroy","_startIndex","_endIndex","caretWidth","paddingLeft","paddingRight","paddingBottom","paddingTop","textContainer","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","TextInput","mouseDown","timeSinceLast","selectWord","updateText","whitespace","lastWordIndex","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","distX","clearInterval","caretInterval","setInterval","tilePosition","tileScale","noPercents","AnchorLayout","host","maxParentWidth","maxParentHeight","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","lowerAnchor","upperAnchor","childDimen","j","measureChild","measureChildren","maxX","maxY","measureStretch","getMeasuredWidth","getMeasuredHeight","childWidth","childHeight","LEFT","MIDDLE","RIGHT","TOP","layout","WidgetGroup","layoutMgr","onDetach","onAttach","onLayout"],"mappings":"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"}