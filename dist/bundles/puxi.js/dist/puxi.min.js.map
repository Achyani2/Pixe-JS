{"version":3,"file":"puxi.min.js","sources":["../../../../packages/core/bin/puxi-core.js","../../../../packages/tween/bin/puxi-tween.js"],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('pixi.js'), require('@pixi/filter-drop-shadow')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'pixi.js', '@pixi/filter-drop-shadow'], factory) :\n    (global = global || self, factory(global.PUXI = {}, global.PIXI, global.PIXI.filters));\n}(this, (function (exports, PIXI, filterDropShadow) { 'use strict';\n\n    const _items = [];\n    const DragDropController = {\n        add(item, event) {\n            item._dragDropEventId = event.data.identifier;\n            if (_items.indexOf(item) === -1) {\n                _items.push(item);\n                return true;\n            }\n            return false;\n        },\n        getItem(object) {\n            let item = null;\n            let index;\n            for (let i = 0; i < _items.length; i++) {\n                if (_items[i] === object) {\n                    item = _items[i];\n                    index = i;\n                    break;\n                }\n            }\n            if (item !== null) {\n                _items.splice(index, 1);\n                return item;\n            }\n            return false;\n        },\n        getEventItem(event, group) {\n            let item = null;\n            let index;\n            const id = event.data.identifier;\n            for (let i = 0; i < _items.length; i++) {\n                if (_items[i]._dragDropEventId === id) {\n                    if (group !== _items[i].dragGroup) {\n                        return false;\n                    }\n                    item = _items[i];\n                    index = i;\n                    break;\n                }\n            }\n            if (item !== null) {\n                _items.splice(index, 1);\n                return item;\n            }\n            return false;\n        },\n    };\n\n    /**\n     * @memberof PUXI\n     * @class\n     */\n    class Insets {\n        constructor() {\n            this.reset();\n            this.dirtyId = 0;\n        }\n        reset() {\n            this.left = -1;\n            this.top = -1;\n            this.right = -1;\n            this.bottom = -1;\n        }\n    }\n\n    /**\n     * These are the modes in which an entity can measures its dimension. They are\n     * relevant when a layout needs to know the optimal sizes of its children.\n     *\n     * @memberof PUXI\n     * @enum\n     * @property {number} UNBOUNDED - no upper limit on bounds. This should calculate the optimal dimensions for the entity.\n     * @property {number} EXACTLY - the entity should set its dimension to the one passed to it.\n     * @property {number} AT_MOST - the entity should find an optimal dimension below the one passed to it.\n     */\n    (function (MeasureMode) {\n        MeasureMode[MeasureMode[\"UNBOUNDED\"] = 0] = \"UNBOUNDED\";\n        MeasureMode[MeasureMode[\"EXACTLY\"] = 1] = \"EXACTLY\";\n        MeasureMode[MeasureMode[\"AT_MOST\"] = 2] = \"AT_MOST\";\n    })(exports.MeasureMode || (exports.MeasureMode = {}));\n    /**\n     * Any renderable entity that can be used in a widget hierarchy must be\n     * measurable.\n     *\n     * @memberof PUXI\n     * @interface IMeasurable\n     */\n    /**\n     * Measures its width & height based on the passed constraints.\n     *\n     * @memberof PUXI.IMeasurable#\n     * @method onMeasure\n     * @param {number} maxWidth\n     * @param {number} maxHeight\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     */\n    /**\n     * @memberof PUXI.IMeasurable#\n     * @method getMeasuredWidth\n     * @returns {number} - the measured width of the entity after a `onMeasure` call\n     */\n    /**\n     * @memberof PUXI.IMeasurable#\n     * @method getMeasuredHeight\n     * @returns {number} - the measured height of the entity after a `onMeasure` call\n     */\n\n    /**\n     * An event manager handles the states related to certain events and can augment\n     * widget interaction. For example, the click manager will hide clicks when\n     * the object is dragging.\n     *\n     * Event managers are lifecycle objects - they can start/stop. Their constructor\n     * will always accept one argument - the widget. Other settings can be applied before\n     * `startEvent`.\n     *\n     * Ideally, you should access event managers _after_ your widget has initialized. This is\n     * because it may depend on the widget's stage being assigned.\n     *\n     * @memberof PUXI\n     * @class\n     * @abstract\n     */\n    class EventManager {\n        /**\n         * @param {Widget} target\n         */\n        constructor(target) {\n            this.target = target;\n            this.isEnabled = false; // use to track start/stopEvent\n        }\n        /**\n         * @returns {Widget}\n         */\n        getTarget() {\n            return this.target;\n        }\n    }\n\n    /**\n     * `ClickManager` handles hover and click events. It registers listeners\n     * for `mousedown`, `mouseup`, `mousemove`, `mouseout`, `mouseover`, `touchstart`,\n     * `touchend`, `touchendoutside`, `touchmove`, `rightup`, `rightdown`, `rightupoutside`\n     * events.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.EventManager\n     */\n    class ClickManager extends EventManager {\n        /**\n         * @param {PUXI.Widget | PUXI.Button} target\n         * @param {boolean}[includeHover=false] - enable hover (`mouseover`, `mouseout`) listeners\n         * @param {boolean}[rightMouseButton=false] - use right mouse clicks\n         * @param {boolean}[doubleClick=false] - fire double clicks\n         */\n        constructor(target, includeHover, rightMouseButton, doubleClick) {\n            super(target);\n            /**\n             * @param {boolean}[includeHover]\n             * @param {boolean}[rightMouseButton]\n             * @param {boolean}[doubleClick]\n             * @override\n             */\n            this.startEvent = (includeHover = this._includeHover, rightMouseButton = this._rightMouseButton, doubleClick = this._doubleClick) => {\n                if (this.isEnabled) {\n                    return;\n                }\n                this._includeHover = includeHover;\n                this.rightMouseButton = rightMouseButton;\n                this._doubleClick = doubleClick;\n                const { target } = this;\n                target.insetContainer.on(this.evMouseDown, this.onMouseDownImpl);\n                if (!this._rightMouseButton) {\n                    target.insetContainer.on('touchstart', this.onMouseDownImpl);\n                }\n                if (this._includeHover) {\n                    target.insetContainer.on('mouseover', this.onMouseOverImpl);\n                    target.insetContainer.on('mouseout', this.onMouseOutImpl);\n                }\n                this.isEnabled = true;\n            };\n            /**\n             * @override\n             */\n            this.stopEvent = () => {\n                if (!this.isEnabled) {\n                    return;\n                }\n                const { target } = this;\n                if (this.bound) {\n                    target.insetContainer.removeListener(this.evMouseUp, this.onMouseUpImpl);\n                    target.insetContainer.removeListener(this.evMouseUpOutside, this.onMouseUpOutsideImpl);\n                    if (!this._rightMouseButton) {\n                        target.insetContainer.removeListener('touchend', this.onMouseUpImpl);\n                        target.insetContainer.removeListener('touchendoutside', this.onMouseUpOutsideImpl);\n                    }\n                    this.bound = false;\n                }\n                target.insetContainer.removeListener(this.evMouseDown, this.onMouseDownImpl);\n                if (!this._rightMouseButton) {\n                    target.insetContainer.removeListener('touchstart', this.onMouseDownImpl);\n                }\n                if (this._includeHover) {\n                    target.insetContainer.removeListener('mouseover', this.onMouseOverImpl);\n                    target.insetContainer.removeListener('mouseout', this.onMouseOutImpl);\n                    target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n                    target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n                }\n                this.isEnabled = false;\n            };\n            this.onMouseDownImpl = (event) => {\n                const { target: obj, evMouseUp, onMouseUpImpl: _onMouseUp, evMouseUpOutside, onMouseUpOutsideImpl: _onMouseUpOutside, _rightMouseButton: right, } = this;\n                this.mouse.copyFrom(event.data.global);\n                this.id = event.data.identifier;\n                this.onPress.call(this.target, event, true);\n                if (!this.bound) {\n                    obj.insetContainer.on(evMouseUp, _onMouseUp);\n                    obj.insetContainer.on(evMouseUpOutside, _onMouseUpOutside);\n                    if (!right) {\n                        obj.insetContainer.on('touchend', _onMouseUp);\n                        obj.insetContainer.on('touchendoutside', _onMouseUpOutside);\n                    }\n                    this.bound = true;\n                }\n                if (this._doubleClick) {\n                    const now = performance.now();\n                    if (now - this.time < 210) {\n                        this.onClick.call(obj, event);\n                    }\n                    else {\n                        this.time = now;\n                    }\n                }\n                event.data.originalEvent.preventDefault();\n            };\n            this.onMouseUpCommonImpl = (event) => {\n                const { target: obj, evMouseUp, onMouseUpImpl: _onMouseUp, evMouseUpOutside, onMouseUpOutsideImpl: _onMouseUpOutside, } = this;\n                if (event.data.identifier !== this.id) {\n                    return;\n                }\n                this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n                if (this.bound) {\n                    obj.insetContainer.removeListener(evMouseUp, _onMouseUp);\n                    obj.insetContainer.removeListener(evMouseUpOutside, _onMouseUpOutside);\n                    if (!this._rightMouseButton) {\n                        obj.insetContainer.removeListener('touchend', _onMouseUp);\n                        obj.insetContainer.removeListener('touchendoutside', _onMouseUpOutside);\n                    }\n                    this.bound = false;\n                }\n                this.onPress.call(obj, event, false);\n            };\n            this.onMouseUpImpl = (event) => {\n                if (event.data.identifier !== this.id) {\n                    return;\n                }\n                this.onMouseUpCommonImpl(event);\n                // prevent clicks with scrolling/dragging objects\n                if (this.target.dragThreshold) {\n                    this.movementX = Math.abs(this.offset.x);\n                    this.movementY = Math.abs(this.offset.y);\n                    if (Math.max(this.movementX, this.movementY) > this.target.dragThreshold) {\n                        return;\n                    }\n                }\n                if (!this._doubleClick) {\n                    this.onClick.call(this.target, event);\n                }\n            };\n            this.onMouseUpOutsideImpl = (event) => {\n                if (event.data.identifier !== this.id) {\n                    return;\n                }\n                this.onMouseUpCommonImpl(event);\n            };\n            this.onMouseOverImpl = (event) => {\n                if (!this.ishover) {\n                    this.ishover = true;\n                    this.target.insetContainer.on('mousemove', this.onMouseMoveImpl);\n                    this.target.insetContainer.on('touchmove', this.onMouseMoveImpl);\n                    this.onHover.call(this.target, event, true);\n                }\n            };\n            this.onMouseOutImpl = (event) => {\n                if (this.ishover) {\n                    this.ishover = false;\n                    this.target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n                    this.target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n                    this.onHover.call(this.target, event, false);\n                }\n            };\n            this.onMouseMoveImpl = (event) => {\n                this.onMove.call(this.target, event);\n            };\n            this.bound = false;\n            this.id = 0;\n            this.ishover = false;\n            this.mouse = new PIXI.Point();\n            this.offset = new PIXI.Point();\n            this.movementX = 0;\n            this.movementY = 0;\n            this._includeHover = typeof includeHover === 'undefined' ? true : includeHover;\n            this.rightMouseButton = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n            this._doubleClick = typeof doubleClick === 'undefined' ? false : doubleClick;\n            target.interactive = true;\n            this.time = 0;\n            this.startEvent();\n            this.onHover = () => null;\n            this.onPress = () => null;\n            this.onClick = () => null;\n            this.onMove = () => null;\n        }\n        /**\n         * Whether right mice are used for clicks rather than left mice.\n         * @member boolean\n         */\n        get rightMouseButton() {\n            return this._rightMouseButton;\n        }\n        set rightMouseButton(val) {\n            this._rightMouseButton = val;\n            this.evMouseDown = this._rightMouseButton ? 'rightdown' : 'mousedown';\n            this.evMouseUp = this._rightMouseButton ? 'rightup' : 'mouseup';\n            this.evMouseUpOutside = this._rightMouseButton ? 'rightupoutside' : 'mouseupoutside';\n        }\n    }\n\n    /**\n     * `DragManager` handles drag & drop events. It registers listeners for `mousedown`,\n     * `touchstart` on the target and `mousemove`, `touchmove`, `mouseup`, `mouseupoutside`,\n     * `touchend`, `touchendoutside` on the stage.\n     *\n     * By default, `draggable` widgets will internally handle drag-n-drop and reassigning\n     * the callbacks on their `DragManager` will break their behaviour. You can prevent\n     * this by using `eventBroker.dnd` directly without setting `widget.draggable` to\n     * `true` (or using `widget.makeDraggable()`).\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.EventManager\n     */\n    class DragManager extends EventManager {\n        constructor(target) {\n            super(target);\n            this.onDragStartImpl = (e) => {\n                const { target } = this;\n                this.id = e.data.identifier;\n                this.onPress(e, true);\n                if (!this.isBound) {\n                    this.dragStart.copyFrom(e.data.global);\n                    target.stage.on('mousemove', this.onDragMoveImpl);\n                    target.stage.on('touchmove', this.onDragMoveImpl);\n                    target.stage.on('mouseup', this.onDragEndImpl);\n                    target.stage.on('mouseupoutside', this.onDragEndImpl);\n                    target.stage.on('touchend', this.onDragEndImpl);\n                    target.stage.on('touchendoutside', this.onDragEndImpl);\n                    target.stage.on('touchcancel', this.onDragEndImpl);\n                    this.isBound = true;\n                }\n                e.data.originalEvent.preventDefault();\n            };\n            this.onDragMoveImpl = (e) => {\n                if (e.data.identifier !== this.id) {\n                    return;\n                }\n                const { lastCursor, dragOffset, dragStart, target, } = this;\n                this.lastCursor.copyFrom(e.data.global);\n                this.dragOffset.set(lastCursor.x - dragStart.x, lastCursor.y - dragStart.y);\n                if (!this.isDragging) {\n                    this.movementX = Math.abs(dragOffset.x);\n                    this.movementY = Math.abs(dragOffset.y);\n                    if ((this.movementX === 0 && this.movementY === 0)\n                        || Math.max(this.movementX, this.movementY) < target.dragThreshold) {\n                        return; // threshold\n                    }\n                    if (target.dragRestrictAxis !== null) {\n                        this.cancel = false;\n                        if (target.dragRestrictAxis === 'x' && this.movementY > this.movementX) {\n                            this.cancel = true;\n                        }\n                        else if (target.dragRestrictAxis === 'y' && this.movementY <= this.movementX) {\n                            this.cancel = true;\n                        }\n                        if (this.cancel) {\n                            this.onDragEndImpl(e);\n                            return;\n                        }\n                    }\n                    this.onDragStart(e);\n                    this.isDragging = true;\n                }\n                this.onDragMove(e, dragOffset);\n            };\n            this.onDragEndImpl = (e) => {\n                if (e.data.identifier !== this.id) {\n                    return;\n                }\n                const { target } = this;\n                if (this.isBound) {\n                    target.stage.removeListener('mousemove', this.onDragMoveImpl);\n                    target.stage.removeListener('touchmove', this.onDragMoveImpl);\n                    target.stage.removeListener('mouseup', this.onDragEndImpl);\n                    target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n                    target.stage.removeListener('touchend', this.onDragEndImpl);\n                    target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n                    target.stage.removeListener('touchcancel', this.onDragEndImpl);\n                    this.isDragging = false;\n                    this.isBound = false;\n                    this.onDragEnd(e);\n                    this.onPress(e, false);\n                }\n            };\n            this.isBound = false;\n            this.isDragging = false;\n            this.id = 0;\n            this.dragStart = new PIXI.Point();\n            this.dragOffset = new PIXI.Point();\n            this.lastCursor = new PIXI.Point();\n            this.movementX = 0;\n            this.movementY = 0;\n            this.cancel = false;\n            this.target.interactive = true;\n            this.onPress = () => null;\n            this.onDragStart = () => null;\n            this.onDragMove = () => null;\n            this.onDragEnd = () => null;\n            this.startEvent();\n        }\n        startEvent() {\n            if (this.isEnabled) {\n                return;\n            }\n            const { target } = this;\n            target.insetContainer.on('mousedown', this.onDragStartImpl);\n            target.insetContainer.on('touchstart', this.onDragStartImpl);\n            this.isEnabled = true;\n        }\n        stopEvent() {\n            if (!this.isEnabled) {\n                return;\n            }\n            const { target } = this;\n            if (this.isBound) {\n                target.stage.removeListener('mousemove', this.onDragMoveImpl);\n                target.stage.removeListener('touchmove', this.onDragMoveImpl);\n                target.stage.removeListener('mouseup', this.onDragEndImpl);\n                target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n                target.stage.removeListener('touchend', this.onDragEndImpl);\n                target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n                this.isBound = false;\n            }\n            target.insetContainer.removeListener('mousedown', this.onDragStartImpl);\n            target.insetContainer.removeListener('touchstart', this.onDragStartImpl);\n            this.isEnabled = false;\n        }\n    }\n\n    /**\n     * The event brokers allows you to access event managers without manually assigning\n     * them to a widget. By default, the click (`PUXI.ClickManager`), dnd (`PUXI.DragManager`)\n     * are defined. You can add event managers for all (new) widgets by adding an entry to\n     * `EventBroker.MANAGER_MAP`.\n     *\n     * @memberof PUXI\n     * @class\n     */\n    class EventBroker {\n        constructor(target) {\n            this.target = target;\n            for (const mgr of Object.keys(EventBroker.MANAGER_MAP)) {\n                Object.defineProperty(this, mgr, {\n                    get() {\n                        if (!this[`_${mgr}`]) {\n                            this[`_${mgr}`] = new EventBroker.MANAGER_MAP[mgr](this.target);\n                        }\n                        return this[`_${mgr}`];\n                    },\n                });\n            }\n        }\n    }\n    EventBroker.MANAGER_MAP = {\n        click: ClickManager,\n        dnd: DragManager,\n    };\n\n    /**\n     * Handles the `wheel` and `scroll` DOM events on widgets. It also registers\n     * listeners for `mouseout` and `mouseover`.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.EventManager\n     */\n    class ScrollManager extends EventManager {\n        constructor(target, preventDefault = true) {\n            super(target);\n            this.onMouseScrollImpl = (e) => {\n                const { target, preventDefault, delta } = this;\n                if (preventDefault) {\n                    event.preventDefault();\n                }\n                if (typeof e.deltaX !== 'undefined') {\n                    delta.set(e.deltaX, e.deltaY);\n                }\n                else // Firefox\n                 {\n                    delta.set(e.axis === 1 ? e.detail * 60 : 0, e.axis === 2 ? e.detail * 60 : 0);\n                }\n                this.onMouseScroll.call(target, event, delta);\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            this.onHoverImpl = (e) => {\n                const { onMouseScrollImpl } = this;\n                if (!this.bound) {\n                    document.addEventListener('mousewheel', onMouseScrollImpl, false);\n                    document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n                    this.bound = true;\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            this.onMouseOutImpl = (e) => {\n                const { onMouseScrollImpl } = this;\n                if (this.bound) {\n                    document.removeEventListener('mousewheel', onMouseScrollImpl);\n                    document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n                    this.bound = false;\n                }\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            this.onMouseScroll = function onMouseScroll(event, delta) {\n                // Default onMouseScroll.\n            };\n            this.bound = false;\n            this.delta = new PIXI.Point();\n            this.preventDefault = preventDefault;\n            this.startEvent();\n        }\n        /**\n         * @override\n         */\n        startEvent() {\n            const { target, onHoverImpl, onMouseOutImpl } = this;\n            target.contentContainer.on('mouseover', onHoverImpl);\n            target.contentContainer.on('mouseout', onMouseOutImpl);\n        }\n        /**\n         * @override\n         */\n        stopEvent() {\n            const { target, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n            if (this.bound) {\n                document.removeEventListener('mousewheel', onMouseScrollImpl);\n                document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n                this.bound = false;\n            }\n            target.contentContainer.removeListener('mouseover', onHoverImpl);\n            target.contentContainer.removeListener('mouseout', onMouseOutImpl);\n        }\n    }\n\n    /**\n     * A widget is a user interface control that renders content inside its prescribed\n     * rectangle on the screen.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PIXI.utils.EventEmitter\n     * @implements PUXI.IMeasurable\n     */\n    class Widget extends PIXI.utils.EventEmitter {\n        constructor() {\n            super();\n            this.insetContainer = new PIXI.Container();\n            this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n            this.widgetChildren = [];\n            this.stage = null;\n            this.layoutMeasure = new Insets();\n            this.initialized = false;\n            this.dragInitialized = false;\n            this.dropInitialized = false;\n            this.dirty = true;\n            this._oldWidth = -1;\n            this._oldHeight = -1;\n            this.pixelPerfect = true;\n            this._paddingLeft = 0;\n            this._paddingTop = 0;\n            this._paddingRight = 0;\n            this._paddingBottom = 0;\n            this._elevation = 0;\n            this.tint = 0;\n            this.blendMode = PIXI.BLEND_MODES.NORMAL;\n            this.draggable = false;\n            this.droppable = false;\n        }\n        /**\n         * The measured width that is used by the parent's layout manager to place this\n         * widget.\n         * @member {number}\n         */\n        get measuredWidth() {\n            return this._measuredWidth;\n        }\n        /**\n         * The measured height that is used by the parent's layout manager to place this\n         * widget.\n         * @member {number}\n         */\n        get measuredHeight() {\n            return this._measuredHeight;\n        }\n        /**\n         * Alias for `Widget.measuredWidth`.\n         *\n         * @returns {number} the measured width\n         */\n        getMeasuredWidth() {\n            return this._measuredWidth;\n        }\n        /**\n         * Alias for `Widget.measuredHeight`.\n         *\n         * @returns {number} the measured height\n         */\n        getMeasuredHeight() {\n            return this._measuredHeight;\n        }\n        /**\n         * Override this method to measure the dimensions for your widget. By default, it\n         * will use the natural width/height of this widget's content (`contentContainer`)\n         * plus any padding.\n         *\n         * @param {number} width - width of region provided by parent\n         * @param {number} height - height of region provided by parent\n         * @param {PUXI.MeasureMode} widthMode - mode in which provided width is to be used\n         * @param {PUXI.MeasureMode} heightMode - mode in which provided height is to be used\n         */\n        onMeasure(width, height, widthMode, heightMode) {\n            const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n            const naturalHeight = this.contentContainer.height + this.paddingVertical;\n            switch (widthMode) {\n                case exports.MeasureMode.EXACTLY:\n                    this._measuredWidth = width;\n                    break;\n                case exports.MeasureMode.UNBOUNDED:\n                    this._measuredWidth = naturalWidth;\n                    break;\n                case exports.MeasureMode.AT_MOST:\n                    this._measuredWidth = Math.min(width, naturalWidth);\n                    break;\n            }\n            switch (heightMode) {\n                case exports.MeasureMode.EXACTLY:\n                    this._measuredHeight = height;\n                    break;\n                case exports.MeasureMode.UNBOUNDED:\n                    this._measuredHeight = naturalHeight;\n                    break;\n                case exports.MeasureMode.AT_MOST:\n                    this._measuredHeight = Math.min(height, naturalHeight);\n                    break;\n            }\n        }\n        /**\n         * This method calls `Widget.onMeasure` and should not be overriden. It does internal\n         * bookkeeping.\n         *\n         * @param {number} width\n         * @param {number} height\n         * @param {PUXI.MeasureMode} widthMode\n         * @param {PUXI.MeasureMode} heightMode\n         */\n        measure(width, height, widthMode, heightMode) {\n            this.onMeasure(width, height, widthMode, heightMode);\n        }\n        /**\n         * This method should set the frame in which rendering will occur and lay out\n         * child widgets in that frame.\n         *\n         * @param l\n         * @param t\n         * @param r\n         * @param b\n         * @param dirty\n         * @protected\n         */\n        layout(l, t = l, r = l, b = t, dirty = true) {\n            this.layoutMeasure.left = l;\n            this.layoutMeasure.top = t;\n            this.layoutMeasure.right = r;\n            this.layoutMeasure.bottom = b;\n            this._width = r - l;\n            this._height = b - t;\n            if (this.background) {\n                this.background.x = 0;\n                this.background.y = 0;\n                this.background.width = r - l;\n                this.background.height = b - t;\n            }\n            // Update parallel PIXI node too!\n            this.insetContainer.x = l;\n            this.insetContainer.y = t;\n            this.contentContainer.x = this._paddingLeft;\n            this.contentContainer.y = this._paddingTop;\n            // this.container.width = r - l;\n            // this.container.height = b - t;\n        }\n        /**\n         * Use this to specify how you want to layout this widget w.r.t its parent.\n         * The specific layout options class depends on which layout you are\n         * using in the parent widget.\n         *\n         * @param {PUXI.LayoutOptions} lopt\n         * @returns {Widget} this\n         */\n        setLayoutOptions(lopt) {\n            this.layoutOptions = lopt;\n            return this;\n        }\n        /**\n         * The event broker for this widget that holds all the event managers. This can\n         * be used to start/stop clicks, drags, scrolls and configure how those events\n         * are handled/interpreted.\n         * @member PUXI.EventBroker\n         */\n        get eventBroker() {\n            if (!this._eventBroker) {\n                this._eventBroker = new EventBroker(this);\n            }\n            return this._eventBroker;\n        }\n        /**\n         * Padding on left side.\n         * @member {number}\n         */\n        get paddingLeft() {\n            return this._paddingLeft;\n        }\n        set paddingLeft(val) {\n            this._paddingLeft = val;\n            this.dirty = true;\n        }\n        /**\n         * Padding on top side.\n         * @member {number}\n         */\n        get paddingTop() {\n            return this._paddingTop;\n        }\n        set paddingTop(val) {\n            this._paddingTop = val;\n            this.dirty = true;\n        }\n        /**\n         * Padding on right side.\n         * @member {number}\n         */\n        get paddingRight() {\n            return this._paddingRight;\n        }\n        set paddingRight(val) {\n            this._paddingRight = val;\n            this.dirty = true;\n        }\n        /**\n         * Padding on bottom side.\n         * @member {number}\n         */\n        get paddingBottom() {\n            return this._paddingBottom;\n        }\n        set paddingBottom(val) {\n            this._paddingBottom = val;\n            this.dirty = true;\n        }\n        /**\n         * Sum of left & right padding.\n         * @member {number}\n         * @readonly\n         */\n        get paddingHorizontal() {\n            return this._paddingLeft + this._paddingRight;\n        }\n        /**\n         * Sum of top & bottom padding.\n         * @member {number}\n         * @readonly\n         */\n        get paddingVertical() {\n            return this._paddingTop + this._paddingBottom;\n        }\n        /**\n         * Whether this widget is interactive in the PixiJS scene graph.\n         * @member {boolean}\n         */\n        get interactive() {\n            return this.insetContainer.interactive;\n        }\n        set interactive(val) {\n            this.insetContainer.interactive = true;\n            this.contentContainer.interactive = true;\n        }\n        /**\n         * Layout width of this widget.\n         * @member {number}\n         */\n        get width() {\n            return this._width;\n        }\n        /**\n         * Layout height of this widget.\n         * @member {number}\n         */\n        get height() {\n            return this._height;\n        }\n        /**\n         * Alpha of this widget & its contents.\n         * @member {number}\n         */\n        get alpha() {\n            return this.insetContainer.alpha;\n        }\n        set alpha(val) {\n            this.insetContainer.alpha = val;\n        }\n        /**\n         * Sets the padding values.\n         *\n         * To set all paddings to one value:\n         * ```\n         * widget.setPadding(8);\n         * ```\n         *\n         * To set horizontal & vertical padding separately:\n         * ```\n         * widget.setPadding(4, 12);\n         * ```\n         *\n         * @param {number}[l=0] - left padding\n         * @param {number}[t=l] - top padding (default is equal to left padding)\n         * @param {number}[r=l] - right padding (default is equal to right padding)\n         * @param {number}[b=t] - bottom padding (default is equal to top padding)\n         */\n        setPadding(l, t = l, r = l, b = t) {\n            this._paddingLeft = l;\n            this._paddingTop = t;\n            this._paddingRight = r;\n            this._paddingBottom = b;\n            this.dirty = true;\n            return this;\n        }\n        /**\n         * @returns {PIXI.Container} - the background display-object\n         */\n        getBackground() {\n            return this.background;\n        }\n        /**\n         * The background of a widget is a `PIXI.DisplayObject` that is rendered before\n         * all of its children.\n         *\n         * @param {PIXI.Container | number | string} bg - the background display-object or\n         *     a color that will be used to generate a `PIXI.Graphics` as the background.\n         */\n        setBackground(bg) {\n            if (this.background) {\n                this.insetContainer.removeChild(this.background);\n            }\n            if (typeof bg === 'string') {\n                bg = PIXI.utils.string2hex(bg);\n            }\n            if (typeof bg === 'number') {\n                bg = new PIXI.Graphics()\n                    .beginFill(bg)\n                    .drawRect(0, 0, 1, 1)\n                    .endFill();\n            }\n            this.background = bg;\n            if (bg) {\n                bg.width = this.width;\n                bg.height = this.height;\n                this.insetContainer.addChildAt(bg, 0);\n            }\n            return this;\n        }\n        /**\n         * @returns {number} the alpha on the background display-object.\n         */\n        getBackgroundAlpha() {\n            return this.background ? this.background.alpha : 1;\n        }\n        /**\n         * This can be used to set the alpha on the _background_ of this widget. This\n         * does not affect the widget's contents nor individual components of the\n         * background display-object.\n         *\n         * @param {number} val - background alpha\n         */\n        setBackgroundAlpha(val) {\n            if (!this.background) {\n                this.setBackground(0xffffff);\n            }\n            this.background.alpha = val;\n            return this;\n        }\n        /**\n         * @return {number} the elevation set on this widget\n         */\n        getElevation() {\n            return this._elevation;\n        }\n        /**\n         * This can be used add a drop-shadow that will appear to raise this widget by\n         * the given elevation against its parent.\n         *\n         * @param {number} val - elevation to use. 2px is good for most widgets.\n         */\n        setElevation(val) {\n            this._elevation = val;\n            if (val === 0 && this._dropShadow) {\n                const i = this.insetContainer.filters.indexOf(this._dropShadow);\n                if (i > 0) {\n                    this.insetContainer.filters.splice(i, 1);\n                }\n            }\n            else if (val > 0) {\n                if (!this._dropShadow) {\n                    if (!this.insetContainer.filters) {\n                        this.insetContainer.filters = [];\n                    }\n                    this._dropShadow = new filterDropShadow.DropShadowFilter({ distance: val });\n                    this.insetContainer.filters.push(this._dropShadow);\n                }\n                this._dropShadow.distance = val;\n            }\n            return this;\n        }\n        /**\n         * Adds the widgets as children of this one.\n         *\n         * @param {PUXI.Widget[]} widgets\n         * @returns {Widget} - this widget\n         */\n        addChild(...widgets) {\n            for (let i = 0; i < widgets.length; i++) {\n                const widget = widgets[i];\n                if (widget.parent) {\n                    widget.parent.removeChild(widget);\n                }\n                widget.parent = this;\n                this.contentContainer.addChild(widget.insetContainer);\n                this.widgetChildren.push(widget);\n            }\n            return this;\n        }\n        /**\n         * Orphans the widgets that are children of this one.\n         *\n         * @param {PUXI.Widget[]} widgets\n         * @returns {Widget} - this widget\n         */\n        removeChild(...widgets) {\n            for (let i = 0; i < widgets.length; i++) {\n                const widget = widgets[i];\n                const index = this.widgetChildren.indexOf(widget);\n                if (index !== -1) {\n                    widget.insetContainer.parent.removeChild(widget.insetContainer);\n                    this.widgetChildren.splice(index, 1);\n                    widget.parent = null;\n                }\n            }\n            return this;\n        }\n        /**\n         * Makes this widget `draggable`.\n         */\n        makeDraggable() {\n            this.draggable = true;\n            if (this.initialized) {\n                this.initDraggable();\n            }\n            return this;\n        }\n        /**\n         * Makes this widget not `draggable`.\n         */\n        clearDraggable() {\n            if (this.dragInitialized) {\n                this.dragInitialized = false;\n                this.eventBroker.dnd.stopEvent();\n            }\n        }\n        /**\n         * Widget initialization related to the stage. This method should always call\n         * `super.initialize()`.\n         *\n         * This method expects `stage` to be set before calling it. This is handled\n         * by the `Stage` itself.\n         *\n         * This will set `initialized` to true. If it was already set to true, it _should\n         * do nothing_.\n         *\n         * @protected\n         */\n        initialize() {\n            if (this.initialized) {\n                return;\n            }\n            if (this.draggable) {\n                this.initDraggable();\n            }\n            if (this.droppable) {\n                this.initDroppable();\n            }\n            this.initialized = true;\n        }\n        initDraggable() {\n            if (this.dragInitialized) {\n                return;\n            }\n            this.dragInitialized = true;\n            const realPosition = new PIXI.Point();\n            const dragPosition = new PIXI.Point();\n            const dnd = this.eventBroker.dnd;\n            const { insetContainer } = this;\n            dnd.onDragStart = (e) => {\n                const added = DragDropController.add(this, e);\n                if (!this.isDragging && added) {\n                    this.isDragging = true;\n                    insetContainer.interactive = false;\n                    realPosition.copyFrom(insetContainer.position);\n                    this.emit('draggablestart', e);\n                }\n            };\n            dnd.onDragMove = (e, offset) => {\n                if (this.isDragging) {\n                    dragPosition.set(realPosition.x + offset.x, realPosition.y + offset.y);\n                    insetContainer.x = dragPosition.x;\n                    insetContainer.y = dragPosition.y;\n                    this.emit('draggablemove', e);\n                }\n            };\n            dnd.onDragEnd = (e) => {\n                if (this.isDragging) {\n                    this.isDragging = false;\n                    DragDropController.getItem(this);\n                    // Return to container after 0ms if not picked up by a droppable\n                    setTimeout(() => {\n                        this.insetContainer.interactive = true;\n                        this.insetContainer.position.copyFrom(realPosition);\n                        this.emit('draggableend', e);\n                    }, 0);\n                }\n            };\n        }\n        /**\n         * Makes this widget `droppable`.\n         */\n        makeDroppable() {\n            this.droppable = true;\n            if (this.initialized) {\n                this.initDroppable();\n            }\n            return this;\n        }\n        /**\n         * Makes this widget not `droppable`.\n         */\n        clearDroppable() {\n            if (this.dropInitialized) {\n                this.dropInitialized = false;\n                this.contentContainer.removeListener('mouseup', this.onDrop);\n                this.contentContainer.removeListener('touchend', this.onDrop);\n            }\n        }\n        initDroppable() {\n            if (!this.dropInitialized) {\n                this.dropInitialized = true;\n                const container = this.contentContainer;\n                this.contentContainer.interactive = true;\n                this.onDrop = (event) => {\n                    const item = DragDropController.getEventItem(event, this.dropGroup);\n                    if (item && item.isDragging) {\n                        item.isDragging = false;\n                        item.insetContainer.interactive = true;\n                        const parent = this.droppableReparent !== null ? this.droppableReparent : self;\n                        parent.container.toLocal(item.container.position, item.container.parent, item);\n                        if (parent.container != item.container.parent) {\n                            parent.addChild(item);\n                        }\n                    }\n                };\n                container.on('mouseup', this.onDrop);\n                container.on('touchend', this.onDrop);\n            }\n        }\n    }\n\n    /**\n     * Alignments supported by layout managers in PuxiJS core.\n     *\n     * @memberof PUXI\n     * @enum\n     */\n    (function (ALIGN) {\n        ALIGN[ALIGN[\"LEFT\"] = 0] = \"LEFT\";\n        ALIGN[ALIGN[\"TOP\"] = 0] = \"TOP\";\n        ALIGN[ALIGN[\"MIDDLE\"] = 4081] = \"MIDDLE\";\n        ALIGN[ALIGN[\"CENTER\"] = 4081] = \"CENTER\";\n        ALIGN[ALIGN[\"RIGHT\"] = 1048561] = \"RIGHT\";\n        ALIGN[ALIGN[\"BOTTOM\"] = 1048561] = \"BOTTOM\";\n        ALIGN[ALIGN[\"NONE\"] = 4294967295] = \"NONE\";\n    })(exports.ALIGN || (exports.ALIGN = {}));\n\n    /**\n     * This are the base constraints that you can apply on a `PUXI.Widget` under any\n     * layout manager. It specifies the dimensions of a widget, while the position\n     * of the widget is left to the parent to decide. If a dimension (width or height)\n     * is set to a value between -1 and 1, then it is interpreted as a percentage\n     * of the parent's dimension.\n     *\n     * The following example will render a widget at 50% of the parent's width and 10px height:\n     *\n     * ```js\n     * const widget = new PUXI.Widget();\n     * const parent = new PUXI.Widget();\n     *\n     * widget.layoutOptions = new PUXI.LayoutOptions(\n     *      .5,\n     *      10\n     * );\n     * parent.addChild(widget);\n     * ```\n     *\n     * @memberof PUXI\n     * @class\n     */\n    class LayoutOptions {\n        /**\n         * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n         * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n         */\n        constructor(width = LayoutOptions.WRAP_CONTENT, height = LayoutOptions.WRAP_CONTENT) {\n            /**\n             * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n             * is interpreted as a percentage of the parent's width.\n             * @member {number}\n             * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n             */\n            this.width = width;\n            /**\n             * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n             * is interpreted as a percentage of the parent's height.\n             * @member {number}\n             * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n             */\n            this.height = height;\n            this.markers = {};\n        }\n        /**\n         * The left margin in pixels of the widget.\n         * @member {number}\n         * @default 0\n         */\n        get marginLeft() {\n            return this._marginLeft || 0;\n        }\n        set marginLeft(val) {\n            this._marginLeft = val;\n        }\n        /**\n         * This top margin in pixels of the widget.\n         * @member {number}\n         * @default 0\n         */\n        get marginTop() {\n            return this._marginTop || 0;\n        }\n        set marginTop(val) {\n            this._marginTop = val;\n        }\n        /**\n         * The right margin in pixels of the widget.\n         * @member {number}\n         * @default 0\n         */\n        get marginRight() {\n            return this._marginRight || 0;\n        }\n        set marginRight(val) {\n            this._marginRight = val;\n        }\n        /**\n         * The bottom margin in pixels of the widget.\n         * @member {number}\n         * @default 0\n         */\n        get marginBottom() {\n            return this._marginBottom || 0;\n        }\n        set marginBottom(val) {\n            this._marginBottom = val;\n        }\n        setMargin(left, top, right, bottom) {\n            this._marginLeft = left;\n            this._marginTop = top;\n            this._marginRight = right;\n            this._marginBottom = bottom;\n        }\n    }\n    LayoutOptions.FILL_PARENT = 0xfffffff1;\n    LayoutOptions.WRAP_CONTENT = 0xfffffff2;\n    LayoutOptions.MAX_DIMEN = 0xfffffff0;\n    LayoutOptions.DEFAULT = new LayoutOptions();\n\n    /**\n     * Anchored layout-options specify the left, top, right, and bottom offsets of a\n     * widget in pixels. If an offset is between -1px and 1px, then it is interpreted\n     * as a percentage of the parent's dimensions.\n     *\n     * The following example will render a widget at 80% of the parent's width and\n     * 60px height.\n     * ```js\n     * const widget: PUXI.Widget = new Widget();\n     * const anchorPane: PUXI.Widget = new Widget();\n     *\n     * widget.layoutOptions = new PUXI.AnchoredLayoutOptions(\n     *      .10,\n     *      .90,\n     *      20,\n     *      80\n     * );\n     *\n     * // Prevent child from requesting natural bounds.\n     * widget.layoutOptions.width = 0;\n     * widget.layoutOptions.height = 0;\n     * ```\n     *\n     * ### Intra-anchor region constraints\n     *\n     * If the offsets given provide a region larger than the widget's dimensions, then\n     * the widget will be aligned accordingly. However, if the width or height of the\n     * child is set to 0, then that child will be scaled to fit in the entire region\n     * in that dimension.\n     *\n     * @memberof PUXI\n     * @extends PUXI.LayoutOptions\n     * @class\n     */\n    class AnchorLayoutOptions extends LayoutOptions {\n        constructor(anchorLeft, anchorTop, anchorRight, anchorBottom, horizontalAlign = exports.ALIGN.NONE, verticalAlign = exports.ALIGN.NONE) {\n            super(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT);\n            this.anchorLeft = anchorLeft;\n            this.anchorTop = anchorTop;\n            this.anchorBottom = anchorBottom;\n            this.anchorRight = anchorRight;\n            this.horizontalAlign = horizontalAlign;\n            this.verticalAlign = verticalAlign;\n        }\n    }\n\n    /**\n     * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n     * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n     *\n     * If x or y is between -1 and 1, then that dimension will be interpreted as a\n     * percentage of the parent's width or height.\n     *\n     * @memberof PUXI\n     * @extends PUXI.LayoutOptions\n     * @class\n     */\n    class FastLayoutOptions extends LayoutOptions {\n        constructor(width, height, x = 0, y = 0, anchor) {\n            super(width, height);\n            /**\n             * X-coordinate of the widget in its parent's reference frame. If it is\n             * absolutely less than 1, then it will be interpreted as a percent of\n             * the parent's width.\n             * @member {number}\n             */\n            this.x = x;\n            /**\n             * Y-coordinate of the widget in its parent's reference frame. If it is\n             * absolutely less than 1, then it will be interpreted as a percent of\n             * the parent's height.\n             * @member {number}\n             */\n            this.y = y;\n            /**\n             * The anchor is a normalized point telling where the (x,y) position of the\n             * widget lies inside of it. By default, it is (0, 0), which means that the\n             * top-left corner of the widget will be at (x,y); however, setting it to\n             * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n             * reference frame.\n             * @member {PIXI.Point}\n             * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n             */\n            this.anchor = anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n        }\n    }\n    FastLayoutOptions.DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    FastLayoutOptions.CENTER_ANCHOR = new PIXI.Point(0.5, 0.5); // fragile, shouldn't be modified\n\n    /**\n     * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n     * default layout for most widget groups.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.ILayoutManager\n     * @example\n     * ```\n     * parent.useLayout(new PUXI.FastLayout())\n     * ```\n     */\n    class FastLayout {\n        onAttach(host) {\n            this.host = host;\n        }\n        onDetach() {\n            this.host = null;\n        }\n        onMeasure(maxWidth, maxHeight, widthMode, heightMode) {\n            // TODO: Passthrough optimization pass, if there is only one child with FILL_PARENT width or height\n            // then don't measure twice.\n            this._measuredWidth = maxWidth;\n            this._measuredHeight = maxHeight;\n            const children = this.host.widgetChildren;\n            // Measure children\n            for (let i = 0, j = children.length; i < j; i++) {\n                const widget = children[i];\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n                const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n                const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n                const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n                const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n                widget.measure(widthMeasureMode === exports.MeasureMode.EXACTLY ? loptWidth : maxWidth, heightMeasureMode === exports.MeasureMode.EXACTLY ? loptHeight : maxHeight, widthMeasureMode, heightMeasureMode);\n            }\n            this._measuredWidth = this.measureWidthReach(maxWidth, widthMode);\n            this._measuredHeight = this.measureHeightReach(maxHeight, heightMode);\n            this.measureChildFillers();\n        }\n        getChildMeasureMode(dimen, parentMeasureMode) {\n            if (parentMeasureMode === exports.MeasureMode.UNBOUNDED) {\n                return exports.MeasureMode.UNBOUNDED;\n            }\n            if (dimen === LayoutOptions.FILL_PARENT || dimen === LayoutOptions.WRAP_CONTENT) {\n                return exports.MeasureMode.AT_MOST;\n            }\n            return exports.MeasureMode.EXACTLY;\n        }\n        measureWidthReach(parentWidthLimit, widthMode) {\n            if (widthMode === exports.MeasureMode.EXACTLY) {\n                return parentWidthLimit;\n            }\n            const children = this.host.widgetChildren;\n            let measuredWidth = 0;\n            for (let i = 0, j = children.length; i < j; i++) {\n                const widget = children[i];\n                const childWidth = widget.getMeasuredWidth();\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n                const x = lopt.x ? lopt.x : 0;\n                const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n                // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n                // as (1 - anchor.x)% child's width.\n                const minr = (Math.abs(x) < 1 ? (1 - anchor.x) * childWidth / (1 - x) : x);\n                measuredWidth = Math.max(measuredWidth, minr);\n            }\n            if (widthMode === exports.MeasureMode.AT_MOST) {\n                measuredWidth = Math.min(parentWidthLimit, measuredWidth);\n            }\n            return measuredWidth;\n        }\n        measureHeightReach(parentHeightLimit, heightMode) {\n            if (heightMode === exports.MeasureMode.EXACTLY) {\n                return parentHeightLimit;\n            }\n            const children = this.host.widgetChildren;\n            let measuredHeight = 0;\n            for (let i = 0, j = children.length; i < j; i++) {\n                const widget = children[i];\n                const childHeight = widget.getMeasuredHeight();\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n                const y = lopt.y ? lopt.y : 0;\n                const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n                const minb = (Math.abs(y) < 1 ? (1 - anchor.y) * childHeight / (1 - y) : y);\n                measuredHeight = Math.max(measuredHeight, minb);\n            }\n            if (heightMode === exports.MeasureMode.AT_MOST) {\n                measuredHeight = Math.min(parentHeightLimit, measuredHeight);\n            }\n            return measuredHeight;\n        }\n        measureChildFillers() {\n            const children = this.host.widgetChildren;\n            for (let i = 0, j = children.length; i < j; i++) {\n                const widget = children[i];\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n                if (lopt.width === LayoutOptions.FILL_PARENT || lopt.height === LayoutOptions.FILL_PARENT) {\n                    const widthMode = lopt.width === LayoutOptions.FILL_PARENT ? exports.MeasureMode.EXACTLY : exports.MeasureMode.AT_MOST;\n                    const heightMode = lopt.height === LayoutOptions.FILL_PARENT ? exports.MeasureMode.EXACTLY : exports.MeasureMode.AT_MOST;\n                    widget.measure(this._measuredWidth, this._measuredHeight, widthMode, heightMode);\n                }\n            }\n        }\n        onLayout() {\n            const parent = this.host;\n            const { width, height, widgetChildren: children } = parent;\n            for (let i = 0, j = children.length; i < j; i++) {\n                const widget = children[i];\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n                let x = lopt.x ? lopt.x : 0;\n                let y = lopt.y ? lopt.y : 0;\n                if (Math.abs(x) < 1) {\n                    x *= width;\n                }\n                if (Math.abs(y) < 1) {\n                    y *= height;\n                }\n                const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n                const l = x - (anchor.x * widget.getMeasuredWidth());\n                const t = y - (anchor.y * widget.getMeasuredHeight());\n                widget.layout(l, t, l + widget.getMeasuredWidth(), t + widget.getMeasuredHeight());\n            }\n        }\n        getMeasuredWidth() {\n            return this._measuredWidth;\n        }\n        getMeasuredHeight() {\n            return this._measuredHeight;\n        }\n    }\n\n    /**\n     * A widget group is a layout owner that can position its children according\n     * to the layout given to it.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Widget\n     * @example\n     * ```\n     * const group = new PUXI.InteractiveGroup();\n     *\n     * group.useLayout(new PUXI.AnchorLayout());\n     *\n     * group.addChild(new PUXI.Button({ text: \"Hey\" })\n     *  .setLayoutOptions(\n     *      new PUXI.AnchorLayoutOptions(\n     *             100,\n     *             300,\n     *             .4,\n     *             500,\n     *             PUXI.ALIGN.CENTER\n     *      )\n     *  )\n     * )\n     * ```\n     */\n    class WidgetGroup extends Widget {\n        /**\n         * Will set the given layout-manager to be used for positioning child widgets.\n         *\n         * @param {PUXI.ILayoutManager} layoutMgr\n         */\n        useLayout(layoutMgr) {\n            if (this.layoutMgr) {\n                this.layoutMgr.onDetach();\n            }\n            this.layoutMgr = layoutMgr;\n            if (layoutMgr) {\n                this.layoutMgr.onAttach(this);\n            }\n        }\n        /**\n         * Sets the widget-recommended layout manager. By default (if not overriden by widget\n         * group class), this is a fast-layout.\n         */\n        useDefaultLayout() {\n            this.useLayout(new FastLayout());\n        }\n        measure(width, height, widthMode, heightMode) {\n            super.measure(width, height, widthMode, heightMode);\n            if (this.widgetChildren.length === 0) {\n                return;\n            }\n            if (!this.layoutMgr) {\n                this.useDefaultLayout();\n            }\n            this.layoutMgr.onMeasure(width, height, widthMode, heightMode);\n            this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n            this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n        }\n        layout(l, t, r, b, dirty = true) {\n            super.layout(l, t, r, b, dirty);\n            if (this.widgetChildren.length === 0) {\n                return;\n            }\n            if (!this.layoutMgr) {\n                this.useDefaultLayout();\n            }\n            this.layoutMgr.onLayout(); // layoutMgr is attached to this\n        }\n    }\n\n    /**\n     * An interactive container.\n     *\n     * @class\n     * @extends PUXI.WidgetGroup\n     * @memberof PUXI\n     */\n    class InteractiveGroup extends WidgetGroup {\n        constructor() {\n            super();\n            this.hitArea = new PIXI.Rectangle();\n            this.insetContainer.hitArea = this.hitArea;\n        }\n        update() {\n            // YO\n        }\n        layout(l, t, r, b, dirty) {\n            super.layout(l, t, r, b, dirty);\n            this.hitArea.width = this.width;\n            this.hitArea.height = this.height;\n        }\n    }\n\n    /**\n     * Represents a view that can gain or loose focus. It is primarily subclassed by\n     * input/form widgets.\n     *\n     * Generally, it is a good idea not use layouts on these types of widgets.\n     *\n     * @class\n     * @extends PUXI.Widget\n     * @memberof PUXI\n     */\n    class FocusableWidget extends InteractiveGroup {\n        /**\n         * @param {PUXI.IInputBaseOptions} options\n         * @param {PIXI.Container}[options.background]\n         * @param {number}[options.tabIndex]\n         * @param {any}[options.tabGroup]\n         */\n        constructor(options = {}) {\n            super();\n            this.bindEvents = () => {\n                this.stage.on('pointerdown', this.onDocumentPointerDownImpl);\n                document.addEventListener('keydown', this.onKeyDownImpl);\n            };\n            this.clearEvents = () => {\n                this.stage.off('pointerdown', this.onDocumentPointerDownImpl);\n                document.removeEventListener('keydown', this.onKeyDownImpl);\n            };\n            this.onKeyDownImpl = (e) => {\n                const focusCtl = this.stage.focusController;\n                if (e.which === 9 && focusCtl.useTab) {\n                    focusCtl.onTab();\n                    e.preventDefault();\n                }\n                else if (e.which === 38 && focusCtl.useBack) {\n                    focusCtl.onBack();\n                    e.preventDefault();\n                }\n                else if (e.which === 40 && focusCtl.useForward) {\n                    focusCtl.onForward();\n                    e.preventDefault();\n                }\n                this.emit('keydown');\n            };\n            this.onDocumentPointerDownImpl = () => {\n                if (!this._isMousePressed) {\n                    this.blur();\n                }\n            };\n            if (options.background) {\n                super.setBackground(options.background);\n            }\n            // Prevents double focusing/blurring.\n            this._isFocused = false;\n            // Used to lose focus when mouse-down outside widget.\n            this._isMousePressed = false;\n            this.interactive = true;\n            /**\n             * @member {number}\n             * @readonly\n             */\n            this.tabIndex = options.tabIndex;\n            /**\n             * The name of the tab group in which this widget's focus will move on\n             * pressing tab.\n             * @member {PUXI.TabGroup}\n             * @readonly\n             */\n            this.tabGroup = options.tabGroup;\n            this.insetContainer.on('pointerdown', () => {\n                this.focus();\n                this._isMousePressed = true;\n            });\n            this.insetContainer.on('pointerup', () => { this._isMousePressed = false; });\n            this.insetContainer.on('pointerupoutside', () => { this._isMousePressed = false; });\n        }\n        /**\n         * Brings this widget into focus.\n         */\n        focus() {\n            if (this.isFocused) {\n                return;\n            }\n            this.stage.focusController.notifyFocus(this);\n            this._isFocused = true;\n            this.bindEvents();\n            this.emit('focusChanged', true);\n            this.emit('focus');\n        }\n        /**\n         * Brings this widget out of focus.\n         */\n        blur() {\n            if (!this._isFocused) {\n                return;\n            }\n            this.stage.focusController.notifyBlur();\n            this._isFocused = false;\n            this.clearEvents();\n            this.emit('focusChanged', false);\n            this.emit('blur');\n        }\n        /**\n         * Whether this widget is in focus.\n         * @member {boolean}\n         * @readonly\n         */\n        get isFocused() {\n            return this._isFocused;\n        }\n        initialize() {\n            super.initialize();\n            this.stage.focusController.in(this, this.tabIndex, this.tabGroup);\n        }\n    }\n\n    /**\n     * A static text widget. It cannot retain children.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Widget\n     */\n    class TextWidget extends Widget {\n        /**\n         * @param {string} text - text content\n         * @param {PIXI.TextStyle} textStyle - styled used for text\n         */\n        constructor(text, textStyle) {\n            super();\n            this.textDisplay = new PIXI.Text(text, textStyle);\n            this.contentContainer.addChild(this.textDisplay);\n        }\n        update() {\n            if (this.tint !== null) {\n                this.textDisplay.tint = this.tint;\n            }\n            if (this.blendMode !== null) {\n                this.textDisplay.blendMode = this.blendMode;\n            }\n        }\n        get value() {\n            return this.textDisplay.text;\n        }\n        set value(val) {\n            this.textDisplay.text = val;\n        }\n        get text() {\n            return this.value;\n        }\n        set text(val) {\n            this.value = val;\n        }\n    }\n\n    /**\n     * Button that can be clicked.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.FocusableWidget\n     */\n    class Button extends FocusableWidget {\n        /**\n         * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n         * @param [options.text=null] {PIXI.UI.Text} optional text\n         * @param [options.tabIndex=0] {Number} input tab index\n         * @param [options.tabGroup=0] {Number|String} input tab group\n         * @param [options.width=options.background.width] {Number|String} width\n         * @param [options.height=options.background.height] {Number|String} height\n         */\n        constructor(options) {\n            super(options);\n            this.isHover = false;\n            if (typeof options.text === 'string') {\n                options.text = new TextWidget(options.text, new PIXI.TextStyle());\n            }\n            this.textWidget = options.text.setLayoutOptions(new FastLayoutOptions(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT, 0.5, 0.5, FastLayoutOptions.CENTER_ANCHOR));\n            if (this.textWidget) {\n                this.addChild(this.textWidget);\n            }\n            this.contentContainer.buttonMode = true;\n            this.setupClick();\n        }\n        setupClick() {\n            const clickEvent = this.eventBroker.click;\n            clickEvent.onHover = (e, over) => {\n                this.isHover = over;\n                this.emit('hover', over);\n            };\n            clickEvent.onPress = (e, isPressed) => {\n                if (isPressed) {\n                    this.focus();\n                    e.data.originalEvent.preventDefault();\n                }\n                this.emit('press', isPressed);\n            };\n            clickEvent.onClick = (e) => {\n                this.click();\n            };\n            this.click = () => {\n                this.emit('click');\n            };\n        }\n        update() {\n            // No update needed\n        }\n        initialize() {\n            super.initialize();\n            this.setupClick();\n            this.insetContainer.interactiveChildren = false;\n            // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n        }\n        /**\n         * Label for this button.\n         * @member {string}\n         */\n        get value() {\n            if (this.textWidget) {\n                return this.textWidget.text;\n            }\n            return '';\n        }\n        set value(val) {\n            if (this.textWidget) {\n                this.textWidget.text = val;\n            }\n        }\n        get text() {\n            return this.textWidget;\n        }\n        set text(val) {\n            this.value = val;\n        }\n    }\n    /*\n     * Features:\n     * Button, radio button (checkgroups)\n     *\n     * Methods:\n     * blur()\n     * focus()\n     *\n     * Properties:\n     * checked: get/set Button checked\n     * value: get/set Button value\n     *\n     * Events:\n     * \"hover\"          param: [bool]isHover (hover/leave)\n     * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n     * \"click\"\n     * \"blur\"\n     * \"focus\"\n     * \"focusChanged\"   param: [bool]isFocussed\n     *\n     */\n\n    /**\n     * @memberof PUXI\n     * @extends PUXI.IFocusableOptions\n     * @member {boolean} checked\n     * @member {PIXI.Container}[checkmark]\n     * @member {PUXI.CheckGroup}[checkGroup]\n     * @member {string}[value]\n     */\n    /**\n     * A checkbox is a button can be selected (checked). It has a on/off state that\n     * can be controlled by the user.\n     *\n     * When used in a checkbox group, the group will control whether the checkbox can\n     * be selected or not.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.FocusableWidget\n     */\n    class CheckBox extends FocusableWidget {\n        /**\n         * @param {PUXI.ICheckBoxOptions} options\n         * @param [options.checked=false] {bool} is checked\n         * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n         * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n         * @param {PUXI.CheckGroup}[options.checkGroup=null] CheckGroup name\n         * @param options.value {String} mostly used along with checkgroup\n         * @param [options.tabIndex=0] {Number} input tab index\n         * @param [options.tabGroup=0] {Number|String} input tab group\n         */\n        constructor(options) {\n            super(options);\n            this.change = (val) => {\n                if (this.checkmark) {\n                    this.checkmark.alpha = val ? 1 : 0;\n                }\n            };\n            this.click = () => {\n                this.emit('click');\n                if (this.checkGroup !== null && this.checked) {\n                    return;\n                }\n                this.checked = !this.checked;\n                this.emit('changed', this.checked);\n            };\n            this._checked = options.checked !== undefined ? options.checked : false;\n            this._value = options.value || '';\n            this.checkGroup = options.checkGroup || null;\n            this.checkmark = new InteractiveGroup();\n            this.checkmark.contentContainer.addChild(options.checkmark);\n            this.checkmark.setLayoutOptions(new FastLayoutOptions(LayoutOptions.WRAP_CONTENT, LayoutOptions.WRAP_CONTENT, 0.5, 0.5, FastLayoutOptions.CENTER_ANCHOR));\n            this.checkmark.alpha = this._checked ? 1 : 0;\n            this.addChild(this.checkmark);\n            this.contentContainer.buttonMode = true;\n        }\n        update() {\n            // No need for updating\n        }\n        get checked() {\n            return this._checked;\n        }\n        set checked(val) {\n            if (val !== this._checked) {\n                if (this.checkGroup !== null && val) {\n                    this.stage.checkBoxGroupController.notifyCheck(this);\n                }\n                this._checked = val;\n                this.change(val);\n            }\n        }\n        get value() {\n            return this._value;\n        }\n        set value(val) {\n            this._value = val;\n            if (this.checked) {\n                this.stage.checkBoxGroupController.notifyCheck(this);\n            }\n        }\n        get selectedValue() {\n            var _a;\n            return (_a = this.stage) === null || _a === void 0 ? void 0 : _a.checkBoxGroupController.getSelected(this.checkGroup).value;\n        }\n        initialize() {\n            super.initialize();\n            const clickMgr = this.eventBroker.click;\n            clickMgr.onHover = (_, over) => {\n                this.emit('hover', over);\n            };\n            clickMgr.onPress = (e, isPressed) => {\n                if (isPressed) {\n                    this.focus();\n                    e.data.originalEvent.preventDefault();\n                }\n                this.emit('press', isPressed);\n            };\n            clickMgr.onClick = () => {\n                this.click();\n            };\n            if (this.checkGroup !== null) {\n                this.stage.checkBoxGroupController.in(this, this.checkGroup);\n            }\n        }\n    }\n    /*\n     * Features:\n     * checkbox, radio button (checkgroups)\n     *\n     * Methods:\n     * blur()\n     * focus()\n     * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n     *\n     * Properties:\n     * checked: get/set checkbox checked\n     * value: get/set checkbox value\n     * selectedValue: get/set selected value for checkgroup\n     *\n     * Events:\n     * \"hover\"          param: [bool]isHover (hover/leave)\n     * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n     * \"click\"\n     * \"blur\"\n     * \"focus\"\n     * \"focusChanged\"   param: [bool]isFocussed\n     * \"change\"         param: [bool]isChecked\n     *\n     */\n\n    class EaseBase {\n        getPosition(p) {\n            return p;\n        }\n    }\n\n    function ExponentialEase(power, easeIn, easeOut) {\n        const pow = power;\n        const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n        this.getPosition = function (p) {\n            let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n            if (pow === 1) {\n                r *= r;\n            }\n            else if (pow === 2) {\n                r *= r * r;\n            }\n            else if (pow === 3) {\n                r *= r * r * r;\n            }\n            else if (pow === 4) {\n                r *= r * r * r * r;\n            }\n            return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n        };\n    }\n    ExponentialEase.prototype = Object.create(EaseBase.prototype);\n    ExponentialEase.prototype.constructor = ExponentialEase;\n\n    const Ease = {};\n    const HALF_PI = Math.PI * 0.5;\n    function create(fn) {\n        const e = Object.create(EaseBase.prototype);\n        e.getPosition = fn;\n        return e;\n    }\n    const Linear = new EaseBase();\n    // Liear\n    Ease.Linear = Linear;\n    // Exponetial Eases\n    function wrapEase(easeInFunction, easeOutFunction, easeInOutFunction) {\n        return {\n            easeIn: easeInFunction,\n            easeOut: easeOutFunction,\n            easeInOut: easeInOutFunction,\n        };\n    }\n    Ease.Power0 = {\n        easeNone: Linear,\n    };\n    Ease.Power1 = Ease.Quad = wrapEase(new ExponentialEase(1, 1, 0), new ExponentialEase(1, 0, 1), new ExponentialEase(1, 1, 1));\n    Ease.Power2 = Ease.Cubic = wrapEase(new ExponentialEase(2, 1, 0), new ExponentialEase(2, 0, 1), new ExponentialEase(2, 1, 1));\n    Ease.Power3 = Ease.Quart = wrapEase(new ExponentialEase(3, 1, 0), new ExponentialEase(3, 0, 1), new ExponentialEase(3, 1, 1));\n    Ease.Power4 = Ease.Quint = wrapEase(new ExponentialEase(4, 1, 0), new ExponentialEase(4, 0, 1), new ExponentialEase(4, 1, 1));\n    // Bounce\n    Ease.Bounce = {\n        BounceIn: create(function (p) {\n            if ((p = 1 - p) < 1 / 2.75) {\n                return 1 - (7.5625 * p * p);\n            }\n            else if (p < 2 / 2.75) {\n                return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n            }\n            else if (p < 2.5 / 2.75) {\n                return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n            }\n            return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n        }),\n        BounceOut: create(function (p) {\n            if (p < 1 / 2.75) {\n                return 7.5625 * p * p;\n            }\n            else if (p < 2 / 2.75) {\n                return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n            }\n            else if (p < 2.5 / 2.75) {\n                return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n            }\n            return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }),\n        BounceInOut: create(function (p) {\n            const invert = (p < 0.5);\n            if (invert) {\n                p = 1 - (p * 2);\n            }\n            else {\n                p = (p * 2) - 1;\n            }\n            if (p < 1 / 2.75) {\n                p = 7.5625 * p * p;\n            }\n            else if (p < 2 / 2.75) {\n                p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n            }\n            else if (p < 2.5 / 2.75) {\n                p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n            }\n            else {\n                p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n            }\n            return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n        }),\n    };\n    // Circ\n    Ease.Circ = {\n        CircIn: create(function (p) {\n            return -(Math.sqrt(1 - (p * p)) - 1);\n        }),\n        CircOut: create(function (p) {\n            return Math.sqrt(1 - (p = p - 1) * p);\n        }),\n        CircInOut: create(function (p) {\n            return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n        }),\n    };\n    // Expo\n    Ease.Expo = {\n        ExpoIn: create(function (p) {\n            return Math.pow(2, 10 * (p - 1)) - 0.001;\n        }),\n        ExpoOut: create(function (p) {\n            return 1 - Math.pow(2, -10 * p);\n        }),\n        ExpoInOut: create(function (p) {\n            return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n        }),\n    };\n    // Sine\n    Ease.Sine = {\n        SineIn: create(function (p) {\n            return -Math.cos(p * HALF_PI) + 1;\n        }),\n        SineOut: create(function (p) {\n            return Math.sin(p * HALF_PI);\n        }),\n        SineInOut: create(function (p) {\n            return -0.5 * (Math.cos(Math.PI * p) - 1);\n        }),\n    };\n\n    const Helpers = {\n        Lerp(start, stop, amt) {\n            if (amt > 1)\n                amt = 1;\n            else if (amt < 0)\n                amt = 0;\n            return start + (stop - start) * amt;\n        },\n        Round(number, decimals) {\n            const pow = Math.pow(10, decimals);\n            return Math.round(number * pow) / pow;\n        },\n        componentToHex(c) {\n            const hex = c.toString(16);\n            return hex.length == 1 ? `0${hex}` : hex;\n        },\n        rgbToHex(r, g, b) {\n            return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n        },\n        rgbToNumber(r, g, b) {\n            return r * 65536 + g * 256 + b;\n        },\n        numberToRgb(c) {\n            return {\n                r: Math.floor(c / (256 * 256)),\n                g: Math.floor(c / 256) % 256,\n                b: c % 256,\n            };\n        },\n        hexToRgb(hex) {\n            if (hex === null) {\n                hex = 0xffffff;\n            }\n            if (!isNaN(hex)) {\n                return this.numberToRgb(hex);\n            }\n            // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n            hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n                return r + r + g + g + b + b;\n            });\n            const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n            return result ? {\n                r: parseInt(result[1], 16),\n                g: parseInt(result[2], 16),\n                b: parseInt(result[3], 16),\n            } : null;\n        },\n    };\n\n    const _tweenItemCache = [];\n    const _callbackItemCache = [];\n    const _tweenObjects = {};\n    const _activeTweenObjects = {};\n    let _currentId = 1;\n    class TweenObject {\n        constructor(object) {\n            this.object = object;\n            this.tweens = {};\n            this.active = false;\n            this.onUpdate = null;\n        }\n    }\n    class CallbackItem {\n        constructor() {\n            this._ready = false;\n            this.obj = null;\n            this.parent = null;\n            this.key = '';\n            this.time = 0;\n            this.callback = null;\n            this.currentTime = 0;\n        }\n        remove() {\n            this._ready = true;\n            delete this.parent.tweens[this.key];\n            if (!Object.keys(this.parent.tweens).length) {\n                this.parent.active = false;\n                this.parent.onUpdate = null;\n                delete _activeTweenObjects[this.obj._tweenObjectId];\n            }\n        }\n        set(obj, callback, time) {\n            this.obj = obj.object;\n            if (!this.obj._currentCallbackID) {\n                this.obj._currentCallbackID = 1;\n            }\n            else {\n                this.obj._currentCallbackID++;\n            }\n            this.time = time;\n            this.parent = obj;\n            this.callback = callback;\n            this._ready = false;\n            this.key = `cb_${this.obj._currentCallbackID}`;\n            this.currentTime = 0;\n            if (!this.parent.active) {\n                this.parent.active = true;\n                _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n            }\n        }\n        update(delta) {\n            this.currentTime += delta;\n            if (this.currentTime >= this.time) {\n                this.remove();\n                this.callback.call(this.parent);\n            }\n        }\n    }\n    class TweenItem {\n        constructor() {\n            this._ready = false;\n            this.parent = null;\n            this.obj = null;\n            this.key = '';\n            this.from = 0;\n            this.to = 0;\n            this.time = 0;\n            this.ease = 0;\n            this.currentTime = 0;\n            this.t = 0;\n            this.isColor = false;\n        }\n        remove() {\n            this._ready = true;\n            delete this.parent.tweens[this.key];\n            if (!Object.keys(this.parent.tweens).length) {\n                this.parent.active = false;\n                delete _activeTweenObjects[this.obj._tweenObjectId];\n            }\n        }\n        set(obj, key, from, to, time, ease) {\n            this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n            this.parent = obj;\n            this.obj = obj.object;\n            this.key = key;\n            this.surfix = getSurfix(to);\n            if (this.isColor) {\n                this.to = Helpers.hexToRgb(to);\n                this.from = Helpers.hexToRgb(from);\n                this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n            }\n            else {\n                this.to = getToValue(to);\n                this.from = getFromValue(from, to, this.obj, key);\n            }\n            this.time = time;\n            this.currentTime = 0;\n            this.ease = ease;\n            this._ready = false;\n            if (!this.parent.active) {\n                this.parent.active = true;\n                _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n            }\n        }\n        update(delta) {\n            this.currentTime += delta;\n            this.t = Math.min(this.currentTime, this.time) / this.time;\n            if (this.ease) {\n                this.t = this.ease.getPosition(this.t);\n            }\n            if (this.isColor) {\n                this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n                this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n                this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n                this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n            }\n            else {\n                const val = Helpers.Lerp(this.from, this.to, this.t);\n                this.obj[this.key] = this.surfix ? val + this.surfix : val;\n            }\n            if (this.currentTime >= this.time) {\n                this.remove();\n            }\n        }\n    }\n    const widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\n    const heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n    function getFromValue(from, to, obj, key) {\n        // both number\n        if (!isNaN(from) && !isNaN(to)) {\n            return from;\n        }\n        // both percentage\n        if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1) {\n            return parseFloat(from.replace('%', ''));\n        }\n        // convert from to px\n        if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1) {\n            if (widthKeys.indexOf(key) !== -1) {\n                return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01);\n            }\n            else if (heightKeys.indexOf(key) !== -1) {\n                return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01);\n            }\n            return 0;\n        }\n        // convert from to percentage\n        if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1) {\n            if (widthKeys.indexOf(key) !== -1) {\n                return from / obj.parent._width * 100;\n            }\n            else if (heightKeys.indexOf(key) !== -1) {\n                return from / obj.parent._height * 100;\n            }\n            return 0;\n        }\n        return 0;\n    }\n    function getSurfix(to) {\n        if (isNaN(to) && to.indexOf('%') !== -1) {\n            return '%';\n        }\n    }\n    function getToValue(to) {\n        if (!isNaN(to)) {\n            return to;\n        }\n        if (isNaN(to) && to.indexOf('%') !== -1) {\n            return parseFloat(to.replace('%', ''));\n        }\n    }\n    function getObject(obj) {\n        if (!obj._tweenObjectId) {\n            obj._tweenObjectId = _currentId;\n            _currentId++;\n        }\n        let object = _tweenObjects[obj._tweenObjectId];\n        if (!object) {\n            object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n        }\n        return object;\n    }\n    function getTweenItem() {\n        for (let i = 0; i < _tweenItemCache.length; i++) {\n            if (_tweenItemCache[i]._ready) {\n                return _tweenItemCache[i];\n            }\n        }\n        const tween = new TweenItem();\n        _tweenItemCache.push(tween);\n        return tween;\n    }\n    function getCallbackItem() {\n        for (let i = 0; i < _callbackItemCache.length; i++) {\n            if (_callbackItemCache[i]._ready) {\n                return _callbackItemCache[i];\n            }\n        }\n        const cb = new CallbackItem();\n        _callbackItemCache.push(cb);\n        return cb;\n    }\n    const Tween = {\n        to(obj, time, params, ease) {\n            const object = getObject(obj);\n            let onUpdate = null;\n            for (const key in params) {\n                if (key === 'onComplete') {\n                    const cb = getCallbackItem();\n                    cb.set(object, params[key], time);\n                    object.tweens[cb.key] = cb;\n                    continue;\n                }\n                if (key === 'onUpdate') {\n                    onUpdate = params[key];\n                    continue;\n                }\n                if (time) {\n                    const match = params[key] === obj[key];\n                    if (typeof obj[key] === 'undefined')\n                        continue;\n                    if (match) {\n                        if (object.tweens[key])\n                            object.tweens[key].remove();\n                    }\n                    else {\n                        if (!object.tweens[key]) {\n                            object.tweens[key] = getTweenItem();\n                        }\n                        object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                    }\n                }\n            }\n            if (time) {\n                object.onUpdate = onUpdate;\n            }\n            else\n                this.set(obj, params);\n        },\n        from(obj, time, params, ease) {\n            const object = getObject(obj);\n            let onUpdate = null;\n            for (const key in params) {\n                if (key === 'onComplete') {\n                    const cb = getCallbackItem();\n                    cb.set(object, params[key], time);\n                    object.tweens[cb.key] = cb;\n                    continue;\n                }\n                if (key === 'onUpdate') {\n                    onUpdate = params[key];\n                    continue;\n                }\n                if (time) {\n                    const match = params[key] == obj[key];\n                    if (typeof obj[key] === 'undefined')\n                        continue;\n                    if (match) {\n                        if (object.tweens[key])\n                            object.tweens[key].remove();\n                    }\n                    else {\n                        if (!object.tweens[key]) {\n                            object.tweens[key] = getTweenItem();\n                        }\n                        object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                    }\n                }\n            }\n            if (time) {\n                object.onUpdate = onUpdate;\n            }\n            else\n                this.set(obj, params);\n        },\n        fromTo(obj, time, paramsFrom, paramsTo, ease) {\n            const object = getObject(obj);\n            let onUpdate = null;\n            for (const key in paramsTo) {\n                if (key === 'onComplete') {\n                    const cb = getCallbackItem();\n                    cb.set(object, paramsTo[key], time);\n                    object.tweens[cb.key] = cb;\n                    continue;\n                }\n                if (key === 'onUpdate') {\n                    onUpdate = paramsTo[key];\n                    continue;\n                }\n                if (time) {\n                    const match = paramsFrom[key] == paramsTo[key];\n                    if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined')\n                        continue;\n                    if (match) {\n                        if (object.tweens[key])\n                            object.tweens[key].remove();\n                        obj[key] = paramsTo[key];\n                    }\n                    else {\n                        if (!object.tweens[key]) {\n                            object.tweens[key] = getTweenItem();\n                        }\n                        object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                    }\n                }\n            }\n            if (time) {\n                object.onUpdate = onUpdate;\n            }\n            else\n                this.set(obj, paramsTo);\n        },\n        set(obj, params) {\n            const object = getObject(obj);\n            for (const key in params) {\n                if (typeof obj[key] === 'undefined')\n                    continue;\n                if (object.tweens[key])\n                    object.tweens[key].remove();\n                obj[key] = params[key];\n            }\n        },\n        _update(delta) {\n            for (const id in _activeTweenObjects) {\n                const object = _activeTweenObjects[id];\n                for (const key in object.tweens) {\n                    object.tweens[key].update(delta);\n                }\n                if (object.onUpdate) {\n                    object.onUpdate.call(object.object, delta);\n                }\n            }\n        },\n    };\n\n    /**\n     * These options are used to configure a `PUXI.Slider`.\n     *\n     * @memberof PUXI\n     * @interface ISliderOptions\n     * @property {PIXI.Container}[track]\n     * @property {PIXI.Container}[fill]\n     * @property {boolean}[vertical]\n     * @property {number}[value]\n     * @property {number}[minValue]\n     * @property {number}[maxValue]\n     * @property {number}[decimals]\n     * @property {Function}[onValueChange]\n     * @property {Function}[onValueChanging]\n     */\n    /**\n     * An UI Slider, the default width/height is 90%\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Widget\n     */\n    class Slider extends Widget {\n        /**\n         * @param options {Object} Slider settings\n         * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n         * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n         * @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n         * @param [options.vertical=false] {boolean} Direction of the slider\n         * @param [options.value=0] {number} value of the slider\n         * @param [options.minValue=0] {number} minimum value\n         * @param [options.maxValue=100] {number} max value\n         * @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n         * @param [options.onValueChange=null] {callback} Callback when the value has changed\n         * @param [options.onValueChanging=null] {callback} Callback while the value is changing\n         */\n        constructor(options) {\n            super();\n            this._amt = 0;\n            this._disabled = false;\n            // set options\n            this.track = options.track;\n            this.handle = options.handle;\n            this.fill = options.fill || null;\n            this._minValue = options.minValue || 0;\n            this._maxValue = options.maxValue || 100;\n            this.decimals = options.decimals || 0;\n            this.vertical = options.vertical || false;\n            this.onValueChange = options.onValueChange || null;\n            this.onValueChanging = options.onValueChanging || null;\n            this.value = options.value || 50;\n            this.handle.pivot = 0.5;\n            this.addChild(this.track);\n            if (this.fill) {\n                this.track.addChild(this.fill);\n            }\n            this.addChild(this.handle);\n            this.handle.contentContainer.buttonMode = true;\n            if (this.vertical) {\n                this.height = '100%';\n                this.width = this.track.width;\n                this.track.height = '100%';\n                this.handle.horizontalAlign = 'center';\n                if (this.fill) {\n                    this.fill.horizontalAlign = 'center';\n                }\n            }\n            else {\n                this.width = '100%';\n                this.height = this.track.height;\n                this.track.width = '100%';\n                this.handle.verticalAlign = 'middle';\n                if (this.fill) {\n                    this.fill.verticalAlign = 'middle';\n                }\n            }\n        }\n        update(soft = 0) {\n            let handleSize;\n            let val;\n            if (this.vertical) {\n                handleSize = this.handle._height || this.handle.contentContainer.height;\n                val = ((this._height - handleSize) * this._amt) + (handleSize * 0.5);\n                if (soft) {\n                    Tween.to(this.handle, 0.3, { top: val }, Ease.Power2.easeOut);\n                    if (this.fill)\n                        Tween.to(this.fill, 0.3, { height: val }, Ease.Power2.easeOut);\n                }\n                else {\n                    Tween.set(this.handle, { top: val });\n                    if (this.fill)\n                        Tween.set(this.fill, { height: val });\n                }\n            }\n            else {\n                handleSize = this.handle._width || this.handle.contentContainer.width;\n                val = ((this._width - handleSize) * this._amt) + (handleSize * 0.5);\n                if (soft) {\n                    Tween.to(this.handle, 0.3, { left: val }, Ease.Power2.easeOut);\n                    if (this.fill)\n                        Tween.to(this.fill, 0.3, { width: val }, Ease.Power2.easeOut);\n                }\n                else {\n                    Tween.set(this.handle, { left: val });\n                    if (this.fill)\n                        Tween.set(this.fill, { width: val });\n                }\n            }\n        }\n        initialize() {\n            super.initialize();\n            const localMousePosition = new PIXI.Point();\n            let startValue = 0;\n            let maxPosition;\n            const triggerValueChange = () => {\n                this.emit('change', this.value);\n                if (this._lastChange != this.value) {\n                    this._lastChange = this.value;\n                    if (typeof this.onValueChange === 'function') {\n                        this.onValueChange(this.value);\n                    }\n                }\n            };\n            const triggerValueChanging = () => {\n                this.emit('changing', this.value);\n                if (this._lastChanging != this.value) {\n                    this._lastChanging = this.value;\n                    if (typeof this.onValueChanging === 'function') {\n                        this.onValueChanging(this.value);\n                    }\n                }\n            };\n            const updatePositionToMouse = (mousePosition, soft) => {\n                this.track.contentContainer.toLocal(mousePosition, null, localMousePosition, true);\n                const newPos = this.vertical ? localMousePosition.y - this.handle._height * 0.5 : localMousePosition.x - this.handle._width * 0.5;\n                const maxPos = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n                this._amt = !maxPos ? 0 : Math.max(0, Math.min(1, newPos / maxPos));\n                this.update(soft);\n                triggerValueChanging();\n            };\n            // //Handle dragging\n            const handleDrag = new DragManager(this.handle);\n            handleDrag.onPress = (event, isPressed) => {\n                event.stopPropagation();\n            };\n            handleDrag.onDragStart = (event) => {\n                startValue = this._amt;\n                maxPosition = this.vertical ? this._height - this.handle._height : this._width - this.handle._width;\n            };\n            handleDrag.onDragMove = (event, offset) => {\n                this._amt = !maxPosition ? 0 : Math.max(0, Math.min(1, startValue + ((this.vertical ? offset.y : offset.x) / maxPosition)));\n                triggerValueChanging();\n                this.update();\n            };\n            handleDrag.onDragEnd = function () {\n                triggerValueChange();\n                this.update();\n            };\n            // Bar pressing/dragging\n            const trackDrag = new DragManager(this.track);\n            trackDrag.onPress = (event, isPressed) => {\n                if (isPressed) {\n                    updatePositionToMouse(event.data.global, true);\n                }\n                event.stopPropagation();\n            };\n            trackDrag.onDragMove = (event) => {\n                updatePositionToMouse(event.data.global, false);\n            };\n            trackDrag.onDragEnd = () => {\n                triggerValueChange();\n            };\n        }\n        get value() {\n            return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this._amt), this.decimals);\n        }\n        set value(val) {\n            this._amt = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n            if (typeof this.onValueChange === 'function') {\n                this.onValueChange(this.value);\n            }\n            if (typeof this.onValueChanging === 'function') {\n                this.onValueChanging(this.value);\n            }\n            this.update();\n        }\n        get minValue() {\n            return this._minValue;\n        }\n        set minValue(val) {\n            this._minValue = val;\n            this.update();\n        }\n        get maxValue() {\n            return this._maxValue;\n        }\n        set maxValue(val) {\n            this._maxValue = val;\n            this.update();\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(val) {\n            if (val !== this._disabled) {\n                this._disabled = val;\n                this.handle.contentContainer.buttonMode = !val;\n                this.handle.contentContainer.interactive = !val;\n                this.track.contentContainer.interactive = !val;\n            }\n        }\n    }\n\n    /**\n     * @memberof PUXI\n     * @interface IScrollBarOptions\n     * @property {PUXI.Sprite} track\n     * @property {PUXI.Sprite} handle\n     */\n    /**\n     * An UI scrollbar to control a ScrollingContainer\n     *\n     * @class\n     * @extends PUXI.Slider\n     * @memberof PUXI\n     * @param options {Object} ScrollBar settings\n     * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n     * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n     * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n     * @param [options.vertical=false] {boolean} Direction of the scrollbar\n     * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n     */\n    class ScrollBar extends Slider {\n        constructor(options) {\n            super({\n                track: options.track,\n                handle: options.handle,\n                fill: null,\n                vertical: options.vertical,\n            });\n            this.scrollingContainer = options.scrollingContainer;\n            this.autohide = options.autohide;\n            this._hidden = false;\n        }\n        initialize() {\n            super.initialize();\n            this.decimals = 3; // up decimals to trigger ValueChanging more often\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            this.onValueChanging = (val) => {\n                const sizeAmt = this.scrollingContainer._height / this.scrollingContainer.innerContainer.height || 0.001;\n                if (sizeAmt < 1) {\n                    this.scrollingContainer.forcePctPosition(this.vertical ? 'y' : 'x', this._amt);\n                }\n            };\n            this.scrollingContainer._scrollBars.push(this);\n        }\n        alignToContainer() {\n            let newPos;\n            let size;\n            const xY = this.vertical ? 'y' : 'x';\n            const widthHeight = this.vertical ? 'height' : 'width';\n            const topLeft = this.vertical ? 'top' : 'left';\n            const _posAmt = !this.scrollingContainer.innerContainer[widthHeight]\n                ? 0\n                : -(this.scrollingContainer.innerContainer[xY] / this.scrollingContainer.innerContainer[widthHeight]);\n            const sizeAmt = !this.scrollingContainer.innerContainer[widthHeight]\n                ? 1\n                : this.scrollingContainer[`_${widthHeight}`] / this.scrollingContainer.innerContainer[widthHeight];\n            // update amt\n            const diff = this.scrollingContainer.innerContainer[widthHeight] - this.scrollingContainer[`_${widthHeight}`];\n            this._amt = !this.scrollingContainer[`_${widthHeight}`] || !diff\n                ? 0\n                : -(this.scrollingContainer.innerContainer[xY] / diff);\n            if (sizeAmt >= 1) {\n                size = this[`_${widthHeight}`];\n                this.handle[topLeft] = size * 0.5;\n                this.toggleHidden(true);\n            }\n            else {\n                size = this[`_${widthHeight}`] * sizeAmt;\n                if (this._amt > 1) {\n                    size -= (this[`_${widthHeight}`] - size) * (this._amt - 1);\n                }\n                else if (this._amt < 0) {\n                    size -= (this[`_${widthHeight}`] - size) * -this._amt;\n                }\n                if (this._amt < 0) {\n                    newPos = size * 0.5;\n                }\n                else if (this._amt > 1) {\n                    newPos = this[`_${widthHeight}`] - (size * 0.5);\n                }\n                else {\n                    newPos = (_posAmt * this.scrollingContainer[`_${widthHeight}`]) + (size * 0.5);\n                }\n                this.handle[topLeft] = newPos;\n                this.toggleHidden(false);\n            }\n            this.handle[widthHeight] = size;\n        }\n        toggleHidden(hidden) {\n            if (this.autohide) {\n                if (hidden && !this._hidden) {\n                    Tween.to(this, 0.2, { alpha: 0 });\n                    this._hidden = true;\n                }\n                else if (!hidden && this._hidden) {\n                    Tween.to(this, 0.2, { alpha: 1 });\n                    this._hidden = false;\n                }\n            }\n        }\n    }\n\n    /**\n     * This ticker is an event-emitter that can be used for running periodic tasks\n     * in the rendering loop. It emits the `update` event every animation frame.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PIXI.utils.EventEmitter\n     */\n    class Ticker extends PIXI.utils.EventEmitter {\n        constructor(autoStart) {\n            super();\n            this._disabled = true;\n            this._now = 0;\n            this.DeltaTime = 0;\n            this.Time = performance.now();\n            this.Ms = 0;\n            if (autoStart) {\n                this.disabled = false;\n            }\n            Ticker.shared = this;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(val) {\n            if (!this._disabled) {\n                this._disabled = true;\n            }\n            else {\n                this._disabled = false;\n                Ticker.shared = this;\n                this.update(performance.now(), true);\n            }\n        }\n        /**\n         * Updates the text\n         *\n         * @private\n         */\n        update(time) {\n            Ticker.shared._now = time;\n            Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n            Ticker.shared.Time = Ticker.shared._now;\n            Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n            Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n            Tween._update(Ticker.shared.DeltaTime);\n            if (!Ticker.shared._disabled) {\n                requestAnimationFrame(Ticker.shared.update);\n            }\n        }\n        static on(event, fn, context) {\n            Ticker.shared.on(event, fn, context);\n        }\n        static once(event, fn, context) {\n            Ticker.shared.once(event, fn, context);\n        }\n        static removeListener(event, fn) {\n            Ticker.shared.removeListener(event, fn);\n        }\n    }\n    Ticker.shared = new Ticker(true);\n\n    /**\n     * `ScrollWidget` masks its contents to its layout bounds and translates\n     * its children when scrolling.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.InteractiveGroup\n     */\n    class ScrollWidget extends InteractiveGroup {\n        /**\n         * @param {PUXI.IScrollingContainerOptions} options\n         * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n         * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n         * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n         * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n         * @param [options.width=0] {Number|String} container width\n         * @param [options.height=0] {Number} container height\n         * @param [options.radius=0] {Number} corner radius of clipping mask\n         * @param [options.expandMask=0] {Number} mask expand (px)\n         * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n         * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n         */\n        constructor(options = {}) {\n            super();\n            this.forcePctPosition = (direction, pct) => {\n                const bounds = this.getInnerBounds();\n                const container = this.innerContainer.insetContainer;\n                if (this.scrollX && direction === 'x') {\n                    container.position[direction] = -((bounds.width - this.width) * pct);\n                }\n                if (this.scrollY && direction === 'y') {\n                    container.position[direction] = -((bounds.height - this.height) * pct);\n                }\n                this.scrollPosition[direction] = this.targetPosition[direction] = container.position[direction];\n            };\n            this.focusPosition = (pos) => {\n                const bounds = this.getInnerBounds();\n                const container = this.innerContainer.insetContainer;\n                let dif;\n                if (this.scrollX) {\n                    const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n                    if (x + container.x > this.width) {\n                        dif = x - this.width;\n                        container.x = -dif;\n                    }\n                    else if (x + container.x < 0) {\n                        dif = x + container.x;\n                        container.x -= dif;\n                    }\n                }\n                if (this.scrollY) {\n                    const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n                    if (y + container.y > this.height) {\n                        dif = y - this.height;\n                        container.y = -dif;\n                    }\n                    else if (y + container.y < 0) {\n                        dif = y + container.y;\n                        container.y -= dif;\n                    }\n                }\n                this.lastPosition.copyFrom(container.position);\n                this.targetPosition.copyFrom(container.position);\n                this.scrollPosition.copyFrom(container.position);\n                this.updateScrollBars();\n            };\n            /**\n             * @param {PIXI.Point}[velocity]\n             */\n            this.setScrollPosition = (velocity) => {\n                if (velocity) {\n                    this.scrollVelocity.copyFrom(velocity);\n                }\n                const container = this.innerContainer.insetContainer;\n                if (!this.animating) {\n                    this.animating = true;\n                    this.lastPosition.copyFrom(container.position);\n                    this.targetPosition.copyFrom(container.position);\n                    Ticker.on('update', this.updateScrollPosition, this);\n                }\n            };\n            /**\n             * @param {number} delta\n             * @protected\n             */\n            this.updateScrollPosition = (delta) => {\n                this.stop = true;\n                if (this.scrollX) {\n                    this.updateDirection('x', delta);\n                }\n                if (this.scrollY) {\n                    this.updateDirection('y', delta);\n                }\n                if (stop) {\n                    Ticker.removeListener('update', this.updateScrollPosition);\n                    this.animating = false;\n                }\n            };\n            /**\n             * @param {'x' | 'y'} direction\n             * @param {number} delta\n             * @protected\n             */\n            this.updateDirection = (direction, delta) => {\n                const bounds = this.getInnerBounds();\n                const { scrollPosition, scrollVelocity, targetPosition, lastPosition, } = this;\n                const container = this.innerContainer.insetContainer;\n                let min;\n                if (direction === 'y') {\n                    min = Math.round(Math.min(0, this.height - bounds.height));\n                }\n                else {\n                    min = Math.round(Math.min(0, this.width - bounds.width));\n                }\n                if (!this.scrolling && Math.round(scrollVelocity[direction]) !== 0) {\n                    targetPosition[direction] += scrollVelocity[direction];\n                    scrollVelocity[direction] = Helpers.Lerp(scrollVelocity[direction], 0, (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n                    if (targetPosition[direction] > 0) {\n                        targetPosition[direction] = 0;\n                    }\n                    else if (targetPosition[direction] < min) {\n                        targetPosition[direction] = min;\n                    }\n                }\n                if (!this.scrolling\n                    && Math.round(scrollVelocity[direction]) === 0\n                    && (container[direction] > 0\n                        || container[direction] < min)) {\n                    const target = this.scrollPosition[direction] > 0 ? 0 : min;\n                    scrollPosition[direction] = Helpers.Lerp(scrollPosition[direction], target, (40 - (30 * this.softness)) * delta);\n                    this.stop = false;\n                }\n                else if (this.scrolling || Math.round(scrollVelocity[direction]) !== 0) {\n                    if (this.scrolling) {\n                        scrollVelocity[direction] = this.scrollPosition[direction] - lastPosition[direction];\n                        lastPosition.copyFrom(scrollPosition);\n                    }\n                    if (targetPosition[direction] > 0) {\n                        scrollVelocity[direction] = 0;\n                        scrollPosition[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n                    }\n                    else if (targetPosition[direction] < min) {\n                        scrollVelocity[direction] = 0;\n                        scrollPosition[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n                    }\n                    else {\n                        scrollPosition[direction] = targetPosition[direction];\n                    }\n                    this.stop = false;\n                }\n                container.position[direction] = Math.round(scrollPosition[direction]);\n                this.updateScrollBars();\n            };\n            this.mask = new PIXI.Graphics();\n            this.innerContainer = new InteractiveGroup();\n            this.innerBounds = new PIXI.Rectangle();\n            super.addChild(this.innerContainer);\n            this.contentContainer.addChild(this.mask);\n            this.contentContainer.mask = this.mask;\n            this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n            this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n            this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n            this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n            this.radius = options.radius || 0;\n            this.expandMask = options.expandMask || 0;\n            this.overflowY = options.overflowY || 0;\n            this.overflowX = options.overflowX || 0;\n            this.scrollVelocity = new PIXI.Point();\n            /**\n             * Widget's position in a scroll.\n             * @member {PIXI.Point}\n             * @private\n             */\n            this.scrollPosition = new PIXI.Point();\n            /**\n             * Position that the cursor is at, i.e. our scroll \"target\".\n             * @member {PIXI.Point}\n             * @private\n             */\n            this.targetPosition = new PIXI.Point();\n            this.lastPosition = new PIXI.Point();\n            this.animating = false;\n            this.scrolling = false;\n            this._scrollBars = [];\n            this.boundCached = performance.now() - 1000;\n            this.initScrolling();\n        }\n        /**\n         * Updates the mask and scroll position before rendering.\n         *\n         * @override\n         */\n        update() {\n            super.update();\n            if (this.lastWidth !== this.width || this.lastHeight !== this.height) {\n                const of = this.expandMask;\n                this.mask.clear();\n                this.mask.lineStyle(0);\n                this.mask.beginFill(0xFFFFFF, 1);\n                if (this.radius === 0) {\n                    this.mask.drawRect(-of, -of, this.width + of, this.height + of);\n                }\n                else {\n                    this.mask.drawRoundedRect(-of, -of, this.width + of, this.height + of, this.radius);\n                }\n                this.mask.endFill();\n                this.lastWidth = this.width;\n                this.lastHeight = this.height;\n            }\n            this.setScrollPosition();\n        }\n        /**\n         * @param {PUXI.Widget[]} newChildren\n         * @returns {ScrollWidget} this widget\n         */\n        addChild(...newChildren) {\n            for (let i = 0; i < newChildren.length; i++) {\n                this.innerContainer.addChild(newChildren[i]);\n            }\n            this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n            return this;\n        }\n        updateScrollBars() {\n            for (let i = 0; i < this._scrollBars.length; i++) {\n                this._scrollBars[i].alignToContainer();\n            }\n        }\n        getInnerBounds(force) {\n            // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n            if (force || performance.now() - this.boundCached > 1000) {\n                this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n                this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n                this.innerBounds.height = this.innerBounds.y + this.innerContainer.height;\n                this.innerBounds.width = this.innerBounds.x + this.innerContainer.width;\n                this.boundCached = performance.now();\n            }\n            return this.innerBounds;\n        }\n        /**\n         * @override\n         */\n        initialize() {\n            super.initialize();\n            if (this.scrollX || this.scrollY) {\n                this.initScrolling();\n            }\n        }\n        initScrolling() {\n            const container = this.innerContainer.insetContainer;\n            const realPosition = new PIXI.Point();\n            const { scrollPosition, targetPosition, } = this;\n            // Drag scroll\n            if (this.dragScrolling) {\n                const drag = this.eventBroker.dnd;\n                drag.onDragStart = (e) => {\n                    if (!this.scrolling) {\n                        realPosition.copyFrom(container.position);\n                        scrollPosition.copyFrom(container.position);\n                        this.scrolling = true;\n                        this.setScrollPosition();\n                        this.emit('scrollstart', e);\n                    }\n                };\n                drag.onDragMove = (_, offset) => {\n                    if (this.scrollX) {\n                        targetPosition.x = realPosition.x + offset.x;\n                    }\n                    if (this.scrollY) {\n                        targetPosition.y = realPosition.y + offset.y;\n                    }\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                drag.onDragEnd = (e) => {\n                    if (this.scrolling) {\n                        this.scrolling = false;\n                        this.emit('scrollend', e);\n                    }\n                };\n            }\n            // Mouse scroll\n            const scrollSpeed = new PIXI.Point();\n            const scroll = new ScrollManager(this, true);\n            scroll.onMouseScroll = (e, delta) => {\n                scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n                this.setScrollPosition(scrollSpeed);\n            };\n            this.updateScrollBars();\n        }\n    }\n\n    /**\n     * An UI Container object\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Widget\n     * @param desc {Boolean} Sort the list descending\n     * @param tweenTime {Number} if above 0 the sort will be animated\n     * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n     */\n    class SortableList extends InteractiveGroup {\n        constructor(desc, tweenTime, tweenEase) {\n            super(0, 0);\n            this.desc = typeof desc !== 'undefined' ? desc : false;\n            this.tweenTime = tweenTime || 0;\n            this.tweenEase = tweenEase;\n            this.items = [];\n        }\n        addChild(UIObject, fnValue, fnThenBy) {\n            super.addChild(UIObject);\n            if (this.items.indexOf(UIObject) === -1) {\n                this.items.push(UIObject);\n            }\n            if (typeof fnValue === 'function') {\n                UIObject._sortListValue = fnValue;\n            }\n            if (typeof fnThenBy === 'function') {\n                UIObject._sortListThenByValue = fnThenBy;\n            }\n            if (!UIObject._sortListRnd) {\n                UIObject._sortListRnd = Math.random();\n            }\n            this.sort();\n        }\n        removeChild(UIObject) {\n            if (arguments.length > 1) {\n                for (let i = 0; i < arguments.length; i++) {\n                    this.removeChild(arguments[i]);\n                }\n            }\n            else {\n                super.removeChild(UIObject);\n                const index = this.items.indexOf(UIObject);\n                if (index !== -1) {\n                    this.items.splice(index, 1);\n                }\n                this.sort();\n            }\n        }\n        sort(instant = false) {\n            clearTimeout(this._sortTimeout);\n            if (instant) {\n                this._sort();\n                return;\n            }\n            this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n        }\n        _sort() {\n            const desc = this.desc;\n            let y = 0;\n            let alt = true;\n            this.items.sort(function (a, b) {\n                let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                    : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n                if (res === 0 && a._sortListThenByValue && b._sortListThenByValue) {\n                    res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                        : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n                }\n                if (res === 0) {\n                    res = a._sortListRnd > b._sortListRnd ? 1\n                        : a._sortListRnd < b._sortListRnd ? -1 : 0;\n                }\n                return res;\n            });\n            for (let i = 0; i < this.items.length; i++) {\n                const item = this.items[i];\n                alt = !alt;\n                if (this.tweenTime > 0) {\n                    Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n                }\n                else {\n                    item.x = 0;\n                    item.y = y;\n                }\n                y += item.height;\n                if (typeof item.altering === 'function') {\n                    item.altering(alt);\n                }\n            }\n            // force it to update parents when sort animation is done (prevent scrolling container bug)\n            if (this.tweenTime > 0) {\n                setTimeout(() => {\n                    this.updatesettings(false, true);\n                }, this.tweenTime * 1000);\n            }\n        }\n    }\n\n    /**\n     * A sliced sprite with dynamic width and height.\n     *\n     * @class\n     * @memberof PUXI\n     * @param Texture {PIXI.Texture} the texture for this SliceSprite\n     * @param BorderWidth {Number} Width of the sprite borders\n     * @param horizontalSlice {Boolean} Slice the sprite horizontically\n     * @param verticalSlice {Boolean} Slice the sprite vertically\n     * @param [tile=false] {Boolean} tile or streach\n     */\n    class SliceSprite extends Widget {\n        constructor(texture, borderWidth, horizontalSlice, verticalSlice, tile) {\n            super(texture.width, texture.height);\n            this.bw = borderWidth || 5;\n            this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n            this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n            this.t = texture.baseTexture;\n            this.f = texture.frame;\n            this.tile = tile;\n            if (this.hs) {\n                this.setting.minWidth = borderWidth * 2;\n            }\n            if (this.vs) {\n                this.setting.minHeight = borderWidth * 2;\n            }\n            /**\n         * Updates the sliced sprites position and size\n         *\n         * @private\n         */\n            this.update = function () {\n                if (!this.initialized)\n                    return;\n                if (vs && hs) {\n                    str.x = sbr.x = sr.x = this._width - bw;\n                    sbl.y = sbr.y = sb.y = this._height - bw;\n                    sf.width = st.width = sb.width = this._width - bw * 2;\n                    sf.height = sl.height = sr.height = this._height - bw * 2;\n                }\n                else if (hs) {\n                    sr.x = this._width - bw;\n                    sl.height = sr.height = sf.height = this._height;\n                    sf.width = this._width - bw * 2;\n                }\n                else { // vs\n                    sb.y = this._height - bw;\n                    st.width = sb.width = sf.width = this._width;\n                    sf.height = this._height - bw * 2;\n                }\n                if (this.tint !== null) {\n                    sf.tint = this.tint;\n                    if (vs && hs)\n                        stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                    if (hs)\n                        sl.tint = sr.tint = this.tint;\n                    if (vs)\n                        st.tint = sb.tint = this.tint;\n                }\n                if (this.blendMode !== null) {\n                    sf.blendMode = this.blendMode;\n                    if (vs && hs)\n                        stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                    if (hs)\n                        sl.blendMode = sr.blendMode = this.blendMode;\n                    if (vs)\n                        st.blendMode = sb.blendMode = this.blendMode;\n                }\n            };\n        }\n        initialize() {\n            super.initialize();\n            const { f, bw } = this;\n            // get frames\n            if (this.vs && this.hs) {\n                this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n                this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n                this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n                this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n                this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n                this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n                this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n                this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n                this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n            }\n            else if (this.hs) {\n                this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n                this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n                this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n            }\n            else { // vs\n                this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n                this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n                this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n            }\n            // TODO: swap frames if rotation\n            const { t, ff, fl, fr, ft, fb } = this;\n            // make sprites\n            this.sf = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n                : new PIXI.Sprite(new PIXI.Texture(t, ff));\n            this.contentContainer.addChildAt(this.sf, 0);\n            if (this.vs && this.hs) {\n                this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n                this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n                this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n                this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n                this.contentContainer.addChildAt(this.stl, 0);\n                this.contentContainer.addChildAt(this.str, 0);\n                this.contentContainer.addChildAt(this.sbl, 0);\n                this.contentContainer.addChildAt(this.sbr, 0);\n            }\n            if (hs) {\n                this.sl = this.tile\n                    ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                    : new PIXI.Sprite(new PIXI.Texture(t, fl));\n                this.sr = this.tile\n                    ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                    : new PIXI.Sprite(new PIXI.Texture(t, fr));\n                this.contentContainer.addChildAt(this.sl, 0);\n                this.contentContainer.addChildAt(this.sr, 0);\n            }\n            if (this.vs) {\n                this.st = this.tile\n                    ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                    : new PIXI.Sprite(new PIXI.Texture(t, ft));\n                this.sb = this.tile\n                    ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                    : new PIXI.Sprite(new PIXI.Texture(t, fb));\n                this.contentContainer.addChildAt(this.st, 0);\n                this.contentContainer.addChildAt(this.sb, 0);\n            }\n            // set constant position and sizes\n            if (this.vs && this.hs) {\n                this.st.x = bw;\n                this.sb.x = bw;\n                this.sl.y = bw;\n                this.sr.y = bw;\n                this.stl.width = bw;\n                this.str.width = bw;\n                this.sbl.width = bw;\n                this.sbr.width = bw;\n                this.stl.height = bw;\n                this.str.height = bw;\n                this.sbl.height = bw;\n                this.sbr.height = bw;\n            }\n            if (this.hs) {\n                this.sf.x = this.sl.width = this.sr.width = bw;\n            }\n            if (this.vs) {\n                this.sf.y = this.st.height = this.sb.height = bw;\n            }\n        }\n        update() {\n            // NO updates\n        }\n    }\n\n    /**\n     * An UI sprite object\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Widget\n     */\n    class Sprite extends Widget {\n        constructor(texture) {\n            super();\n            this.spriteDisplay = new PIXI.Sprite(texture);\n            this.contentContainer.addChild(this.spriteDisplay);\n        }\n        update() {\n            if (this.tint !== null) {\n                this.spriteDisplay.tint = this.tint;\n            }\n            if (this.blendMode !== null) {\n                this.spriteDisplay.blendMode = this.blendMode;\n            }\n        }\n        static fromImage(imageUrl) {\n            return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n        }\n    }\n\n    class Controller extends PIXI.utils.EventEmitter {\n        constructor(stage) {\n            super();\n            this.stage = stage;\n        }\n    }\n    /**\n     * A controller handles a stage-level state that can be held by wigets. For example,\n     * `PUXI.FocusController` handles which widget is focused.\n     *\n     * @memberof PUXI\n     * @class Controller\n     */\n    /**\n     * Enables the widget to enter the controller's state.\n     *\n     * @memberof PUXI.Controller#\n     * @method in\n     * @param {PUXI.Widget} widget\n     */\n    /**\n     * Disables the widget from the controller's state.\n     *\n     * @memberof PUXI.Controller#\n     * @method out\n     * @param {PUXI.Widget} widget\n     */\n\n    /**\n     * Check boxes use this controller to deselect other checkboxes in the group when\n     * they are selected.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Controller\n     */\n    class CheckBoxGroupController extends Controller {\n        constructor(stage) {\n            super(stage);\n            this.checkGroups = new Map();\n        }\n        /**\n         * @param {PUXI.CheckBox} widget\n         * @param {PUXI.CheckGroup} checkGroup\n         * @override\n         */\n        in(widget, checkGroup) {\n            if (!checkGroup) {\n                throw new Error('Default check groups don\\'t exist!');\n            }\n            const group = this.checkGroups.get(checkGroup) || this.initGroup(checkGroup);\n            group.checks.push(widget);\n            widget.checkGroup = checkGroup;\n        }\n        /**\n         * @override\n         */\n        out(widget) {\n            const group = this.checkGroups.get(widget.checkGroup);\n            const i = group.checks.indexOf(widget);\n            if (i > 0) {\n                group.checks.splice(i, 1);\n            }\n            widget.checkGroup = null;\n        }\n        /**\n         * Called when a checkbox is selected. Do not call from outside.\n         *\n         * @param {CheckBox} widget\n         */\n        notifyCheck(widget) {\n            const group = this.checkGroups.get(widget.checkGroup);\n            if (!group) {\n                return;\n            }\n            const { checks } = group;\n            for (let i = 0, j = checks.length; i < j; i++) {\n                if (checks[i] !== widget) {\n                    checks[i].checked = false;\n                }\n            }\n            group.selected = widget;\n        }\n        /**\n         * @param {PUXI.CheckGroup} group\n         * @returns {CheckBox} the selected checkbox in the group\n         */\n        getSelected(group) {\n            var _a;\n            return (_a = this.checkGroups.get(group)) === null || _a === void 0 ? void 0 : _a.selected;\n        }\n        /**\n         * Ensures that the check group exists in `this.checkGroups`.\n         *\n         * @param {PUXI.CheckGroup} id\n         * @protected\n         */\n        initGroup(id) {\n            const cgroup = {\n                checks: [],\n                selected: null,\n            };\n            this.checkGroups.set(id, cgroup);\n            return cgroup;\n        }\n    }\n\n    /**\n     * Pressing tab on a focused widget will make the next widget its tab group\n     * focused. If no tab group is specified for a focusable widget, then it\n     * has the `'default'` tab group.\n     *\n     * @memberof PUXI\n     * @typedef {string} TabGroup\n     */\n    /**\n     * @memberof PUXI\n     * @class\n     * @extends PUXI.Controller\n     */\n    class FocusController extends Controller {\n        constructor(stage) {\n            super(stage);\n            /**\n             * Map of tab-group names to the widgets in those groups.\n             * @member {Map<PUXI.TabGroup, PUXI.FocusableWidget[]>}\n             * @protected\n             */\n            this.tabGroups = new Map();\n            /**\n             * Whether to enable tab-based focus movement.\n             * @member {boolean}\n             */\n            this.useTab = true;\n            /**\n             * Whether to enable forward arrow key focus movement.\n             * @member {boolean}\n             */\n            this.useForward = true;\n            /**\n             * Whether to enable back arrow key focus movement.\n             * @member {boolean}\n             */\n            this.useBack = true;\n        }\n        /**\n         * Adds the (focusable) widget to the tab group so that pressing tab repeatedly\n         * will eventually bring it into focus.\n         *\n         * @param {PUXI.FocusableWidget} widget - the widget to add\n         * @param {number}[tabIndex=0] - unique index for the widget in tab group used for ordering\n         * @param {PUXI.TabGroup}[tabGroup='default'] - tab group name\n         */\n        in(widget, tabIndex = 0, tabGroup = 'default') {\n            let widgets = this.tabGroups.get(tabGroup);\n            if (!widgets) {\n                widgets = [];\n                this.tabGroups.set(tabGroup, widgets);\n            }\n            const i = widgets.indexOf(widget);\n            // Push widget into tab group list if not present already.\n            if (i === -1) {\n                widget.tabIndex = tabIndex !== undefined ? tabIndex : -1;\n                widget.tabGroup = tabGroup;\n                widgets.push(widget);\n                widgets.sort((a, b) => a.tabIndex - b.tabIndex);\n            }\n        }\n        /**\n         * @param {PUXI.FocusableWidget} widget\n         * @override\n         */\n        out(widget) {\n            const widgets = this.tabGroups.get(widget.tabGroup);\n            if (!widgets) {\n                return;\n            }\n            const i = widgets.indexOf(widget);\n            if (i !== -1) {\n                // Widgets should already be sorted & so deleting should not unsort it.\n                widgets.splice(i, 1);\n            }\n        }\n        /**\n         * Called when a widget comes into focus. Do not call this yourself.\n         *\n         * @param {FocusableWidget} widget\n         */\n        notifyFocus(widget) {\n            const lastItem = this.currentItem;\n            if (lastItem) {\n                lastItem.blur();\n                this.emit('blur', lastItem);\n            }\n            this.currentItem = widget;\n            this.emit('focus', widget);\n            this.emit('focusChanged', widget, lastItem);\n        }\n        /**\n         * Clears the currently focused item without blurring it. It is called\n         * when a widget goes out of focus.\n         */\n        notifyBlur() {\n            this.emit('blur', this.currentItem);\n            this.emit('focusChanged', null, this.currentItem);\n            this.currentItem = null;\n        }\n        /**\n         * Brings the widget into focus.\n         *\n         * @param {FocusableWidget} item\n         */\n        focus(item) {\n            const lastItem = this.currentItem;\n            if (lastItem) {\n                lastItem.blur();\n                this.emit('blur', lastItem);\n            }\n            item.focus();\n            this.emit('focus', item);\n            this.emit('focusChanged', item, lastItem);\n        }\n        /**\n         * Blurs the currently focused widget out of focus.\n         */\n        blur() {\n            if (this.currentItem) {\n                this.currentItem.blur();\n                this.emit('blur', this.currentItem);\n                this.emit('focusChanged', null, this.currentItem);\n                this.currentItem = null;\n            }\n        }\n        /**\n         * Called when tab is pressed on a focusable widget.\n         */\n        onTab() {\n            const { tabGroups, currentItem } = this;\n            if (currentItem) {\n                const tabGroup = tabGroups.get(currentItem.tabGroup);\n                let i = tabGroup.indexOf(currentItem) + 1;\n                if (i >= tabGroup.length) {\n                    i = 0;\n                }\n                this.focus(tabGroup[i]);\n            }\n        }\n        /**\n         * Focuses the next item without wrapping, i.e. it does not go to the first\n         * item if the current one is the last item. This is called when the user\n         * presses the forward arrow key.\n         */\n        onForward() {\n            if (!this.useForward) {\n                return;\n            }\n            const { currentItem, tabGroups } = this;\n            if (currentItem) {\n                const tabGroup = tabGroups.get(currentItem.tabGroup);\n                let i = tabGroup.indexOf(currentItem) + 1;\n                if (i >= tabGroup.length) {\n                    i = tabGroup.length - 1;\n                }\n                this.focus(tabGroup[i]);\n            }\n        }\n        /**\n         * Focuses the last item without wrapping, i.e. it does not go to the last\n         * item if the current item is the first one. This is called when the user\n         * presses the back arrow button.\n         */\n        onBack() {\n            const { currentItem, tabGroups } = this;\n            if (currentItem) {\n                const tabGroup = tabGroups.get(currentItem.tabGroup);\n                let i = tabGroup.indexOf(currentItem) - 1;\n                if (i < 0)\n                    i = 0;\n                this.focus(tabGroup[i]);\n            }\n        }\n    }\n\n    /**\n     * The stage is the root node in the PUXI scene graph. It does not provide a\n     * sophisticated layout model; however, it will accept constraints defined by\n     * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n     *\n     * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n     *\n     * @memberof PUXI\n     * @class\n     * @extends PIXI.Container\n     */\n    class Stage extends PIXI.Container {\n        /**\n         * @param {number} width - width of the stage\n         * @param {number} height - height of the stage\n         */\n        constructor(width, height) {\n            super();\n            this.__width = width;\n            this.__height = height;\n            this.minWidth = 0;\n            this.minHeight = 0;\n            this.widgetChildren = [];\n            this.interactive = true;\n            this.stage = this;\n            this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n            this.initialized = true;\n            this.resize(width, height);\n            this._checkBoxGroupCtl = new Stage.CHECK_BOX_GROUP_CONTROLLER(this);\n            this._focusCtl = new Stage.FOCUS_CONTROLLER(this);\n        }\n        measureAndLayout() {\n            if (this.background) {\n                this.background.width = this.width;\n                this.background.height = this.height;\n            }\n            for (let i = 0, j = this.widgetChildren.length; i < j; i++) {\n                const widget = this.widgetChildren[i];\n                const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT);\n                const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                    ? exports.MeasureMode.EXACTLY\n                    : exports.MeasureMode.AT_MOST;\n                const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                    ? exports.MeasureMode.EXACTLY\n                    : exports.MeasureMode.AT_MOST;\n                const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this.width : lopt.width;\n                const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this.height : lopt.height;\n                widget.measure(widthMeasureMode === exports.MeasureMode.EXACTLY ? loptWidth : this.width, heightMeasureMode === exports.MeasureMode.EXACTLY ? loptHeight : this.height, widthMeasureMode, heightMeasureMode);\n                let x = lopt.x ? lopt.x : 0;\n                let y = lopt.y ? lopt.y : 0;\n                if (Math.abs(x) < 1) {\n                    x *= this.width;\n                }\n                if (Math.abs(y) < 1) {\n                    y *= this.height;\n                }\n                const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n                const l = x - (anchor.x * widget.getMeasuredWidth());\n                const t = y - (anchor.y * widget.getMeasuredHeight());\n                widget.layout(l, t, l + widget.getMeasuredWidth(), t + widget.getMeasuredHeight(), true);\n            }\n        }\n        getBackground() {\n            return this.background;\n        }\n        setBackground(bg) {\n            if (this.background) {\n                super.removeChild(this.background);\n            }\n            this.background = bg;\n            if (bg) {\n                super.addChildAt(bg, 0);\n                this.background.width = this.width;\n                this.background.height = this.height;\n            }\n        }\n        update(widgets) {\n            for (let i = 0, j = widgets.length; i < j; i++) {\n                const widget = widgets[i];\n                widget.stage = this;\n                if (!widget.initialized) {\n                    widget.initialize();\n                }\n                this.update(widget.widgetChildren);\n                widget.update();\n            }\n        }\n        render(renderer) {\n            this.update(this.widgetChildren);\n            super.render(renderer);\n        }\n        addChild(UIObject) {\n            const argumentLenght = arguments.length;\n            if (argumentLenght > 1) {\n                for (let i = 0; i < argumentLenght; i++) {\n                    this.addChild(arguments[i]);\n                }\n            }\n            else {\n                if (UIObject.parent) {\n                    UIObject.parent.removeChild(UIObject);\n                }\n                UIObject.parent = this;\n                this.widgetChildren.push(UIObject);\n                super.addChild(UIObject.insetContainer);\n                // UIObject.updatesettings(true);\n            }\n            this.measureAndLayout();\n        }\n        removeChild(UIObject) {\n            const argumentLenght = arguments.length;\n            if (argumentLenght > 1) {\n                for (let i = 0; i < argumentLenght; i++) {\n                    this.removeChild(arguments[i]);\n                }\n            }\n            else {\n                super.removeChild(UIObject.insetContainer);\n                const index = this.widgetChildren.indexOf(UIObject);\n                if (index !== -1) {\n                    this.children.splice(index, 1);\n                    UIObject.parent = null;\n                }\n            }\n            this.measureAndLayout();\n        }\n        resize(width, height) {\n            if (!isNaN(height))\n                this.__height = height;\n            if (!isNaN(width))\n                this.__width = width;\n            if (this.minWidth || this.minHeight) {\n                let rx = 1;\n                let ry = 1;\n                if (width && width < this.minWidth) {\n                    rx = this.minWidth / width;\n                }\n                if (height && height < this.minHeight) {\n                    ry = this.minHeight / height;\n                }\n                if (rx > ry && rx > 1) {\n                    this.scale.set(1 / rx);\n                    this.__height *= rx;\n                    this.__width *= rx;\n                }\n                else if (ry > 1) {\n                    this.scale.set(1 / ry);\n                    this.__width *= ry;\n                    this.__height *= ry;\n                }\n                else if (this.scale.x !== 1) {\n                    this.scale.set(1);\n                }\n            }\n            if (this.hitArea) {\n                this.hitArea.width = this.__width;\n                this.hitArea.height = this.__height;\n            }\n            for (let i = 0; i < this.widgetChildren.length; i++) {\n                this.widgetChildren[i].updatesettings(true, false);\n            }\n            this.measureAndLayout();\n        }\n        get width() {\n            return this.__width;\n        }\n        set width(val) {\n            if (!isNaN(val)) {\n                this.__width = val;\n                this.resize();\n            }\n        }\n        get height() {\n            return this.__height;\n        }\n        set height(val) {\n            if (!isNaN(val)) {\n                this.__height = val;\n                this.resize();\n            }\n        }\n        /**\n         * The check box group controller for check boxes in this stage.\n         *\n         * @member {PUXI.CheckBoxGroupController}\n         */\n        get checkBoxGroupController() {\n            return this._checkBoxGroupCtl;\n        }\n        /**\n         * The focus controller for widgets in this stage. You can use this to bring a\n         * widget into focus.\n         *\n         * @member {PUXI.FocusController}\n         */\n        get focusController() {\n            return this._focusCtl;\n        }\n    }\n    /**\n     * Use this to override which class is used for the check box group controller. It\n     * should extend from `PUXI.CheckBoxGroupController`.\n     *\n     * @static\n     */\n    Stage.CHECK_BOX_GROUP_CONTROLLER = CheckBoxGroupController;\n    /**\n     * Use this to override which class is used for the focus controller. It should\n     * extend from `PUXI.FocusController`.\n     *\n     * @static\n     */\n    Stage.FOCUS_CONTROLLER = FocusController;\n\n    // Dummy <input> element created for mobile keyboards\n    let mockDOMInput;\n    function initMockDOMInput() {\n        // create temp input (for mobile keyboard)\n        if (typeof mockDOMInput === 'undefined') {\n            mockDOMInput = document.createElement('INPUT');\n            mockDOMInput.setAttribute('type', 'text');\n            mockDOMInput.setAttribute('id', '_pui_tempInput');\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n            document.body.appendChild(mockDOMInput);\n        }\n    }\n    /**\n     * An UI text object\n     *\n     * @class\n     * @extends PIXI.UI.InputBase\n     * @memberof PIXI.UI\n     */\n    class TextInput extends FocusableWidget {\n        /**\n         * @param {PUXI.ITextInputOptions} options\n         * @param {string} options.value Text content\n         * @param {boolean} [options.multiLine=false] Multiline input\n         * @param options.style {PIXI.TextStyle} Style used for the Text\n         * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n         * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n         * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n         * @param [options.width=150] {Number} width of input\n         * @param [options.height=20] {Number} height of input\n         * @param [options.padding=3] {Number} input padding\n         * @param [options.paddingTop=0] {Number} input padding\n         * @param [options.paddingBottom=0] {Number} input padding\n         * @param [options.paddingLeft=0] {Number} input padding\n         * @param [options.paddingRight=0] {Number} input padding\n         * @param [options.tabIndex=0] {Number} input tab index\n         * @param [options.tabGroup=0] {Number|String} input tab group\n         * @param [options.maxLength=0] {Number} 0 = unlimited\n         * @param [options.caretWidth=1] {Number} width of the caret\n         * @param [options.lineHeight=0] {Number} 0 = inherit from text\n         */\n        constructor(options) {\n            super(options);\n            this.onKeyDown = (e) => {\n                if (e.which === this.ctrlKey || e.which === this.cmdKey) {\n                    this.ctrlDown = true;\n                }\n                if (e.which === this.shiftKey) {\n                    this.shiftDown = true;\n                }\n                // FocusableWidget.onKeyDownImpl should've been called before this.\n                if (e.defaultPrevented) {\n                    return;\n                }\n                if (e.which === 13) { // enter\n                    this.insertTextAtCaret('\\n');\n                    e.preventDefault();\n                    return;\n                }\n                if (this.ctrlDown) {\n                    // Handle Ctrl+<?> commands\n                    if (e.which === 65) {\n                        // Ctrl+A (Select all)\n                        this.select();\n                        e.preventDefault();\n                        return;\n                    }\n                    else if (e.which === 90) {\n                        // Ctrl+Z (Undo)\n                        if (this.value != this._lastValue) {\n                            this.valueEvent = this._lastValue;\n                        }\n                        this.setCaretIndex(this._lastValue.length + 1);\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                if (e.which === 8) {\n                    // Handle backspace\n                    if (!this.deleteSelection()) {\n                        if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd)) {\n                            if (this.caret._atEnd) {\n                                this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                                this.setCaretIndex(this.caret._index);\n                            }\n                            else {\n                                this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                                this.setCaretIndex(this.caret._index - 1);\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                    return;\n                }\n                if (e.which === 46) {\n                    // Delete selection\n                    if (!this.deleteSelection()) {\n                        if (!this.caret._atEnd) {\n                            this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                            this.setCaretIndex(this.caret._index);\n                        }\n                    }\n                    e.preventDefault();\n                    return;\n                }\n                else if (e.which === 37 || e.which === 39) {\n                    this.rdd = e.which === 37;\n                    if (this.shiftDown) {\n                        if (this.hasSelection) {\n                            const caretAtStart = this.selectionStart === this.caret._index;\n                            if (caretAtStart) {\n                                if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward) {\n                                    this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                                }\n                                else {\n                                    const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n                                    this.selectRange(startindex, this.selectionEnd);\n                                    this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                                }\n                            }\n                            else {\n                                const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n                                this.selectRange(this.selectionStart, endIndex);\n                                this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                            }\n                        }\n                        else {\n                            const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                            const selectIndex = this.rdd ? _i - 1 : _i;\n                            this.selectRange(selectIndex, selectIndex);\n                            this.caret._index = selectIndex;\n                            this.caret._forward = !rdd;\n                        }\n                    }\n                    else {\n                        // Navigation\n                        // eslint-disable-next-line no-lonely-if\n                        if (this.hasSelection) {\n                            this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                        }\n                        else {\n                            this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                        }\n                    }\n                    e.preventDefault();\n                    return;\n                }\n                else if (this.multiLine && (e.which === 38 || e.which === 40)) {\n                    this.vrdd = e.which === 38;\n                    if (this.shiftDown) {\n                        if (this.hasSelection) {\n                            this.de.y = Math.max(0, Math.min(this.textHeightPX, this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                            this.updateClosestIndex(this.de, false);\n                            // console.log(si, ei);\n                            if (Math.abs(this.si - this.ei) <= 1) {\n                                // console.log(si, ei);\n                                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                            }\n                            else {\n                                this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                                this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                            }\n                        }\n                        else {\n                            this.si = this.caret._index;\n                            this.sie = false;\n                            this.de.copyFrom(this.caret);\n                            this.de.y = Math.max(0, Math.min(this.textHeightPX, this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                            this.updateClosestIndex(this.de, false);\n                            this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                            this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                            this.caret._down = !this.vrdd;\n                        }\n                    }\n                    else if (this.hasSelection) {\n                        this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n                    }\n                    else {\n                        this.ds.copyFrom(this.caret);\n                        this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                        this.ds.x += 1;\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    e.preventDefault();\n                    return;\n                }\n            };\n            this.keyUpEvent = (e) => {\n                if (e.which === this.ctrlKey || e.which === this.cmdKey)\n                    this.ctrlDown = false;\n                if (e.which === this.shiftKey)\n                    this.shiftDown = false;\n                this.emit('keyup', e);\n                if (e.defaultPrevented) {\n                    return;\n                }\n            };\n            this.copyEvent = (e) => {\n                this.emit('copy', e);\n                if (e.defaultPrevented) {\n                    return;\n                }\n                if (this.hasSelection) {\n                    const clipboardData = e.clipboardData || window.clipboardData;\n                    clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n                }\n                e.preventDefault();\n            };\n            this.cutEvent = (e) => {\n                this.emit('cut', e);\n                if (e.defaultPrevented) {\n                    return;\n                }\n                if (this.hasSelection) {\n                    this.copyEvent(e);\n                    this.deleteSelection();\n                }\n                e.preventDefault();\n            };\n            this.pasteEvent = (e) => {\n                this.emit('paste', e);\n                if (e.defaultPrevented) {\n                    return;\n                }\n                const clipboardData = e.clipboardData || window.clipboardData;\n                this.insertTextAtCaret(clipboardData.getData('Text'));\n                e.preventDefault();\n            };\n            this.inputEvent = (e) => {\n                const c = mockDOMInput.value;\n                if (c.length) {\n                    this.insertTextAtCaret(c);\n                    mockDOMInput.value = '';\n                }\n                e.preventDefault();\n            };\n            this.inputBlurEvent = (e) => {\n                this.blur();\n            };\n            this.focus = () => {\n                if (!this._isFocused) {\n                    super.focus();\n                    const l = `${this.contentContainer.worldTransform.tx}px`;\n                    const t = `${this.contentContainer.worldTransform.ty}px`;\n                    const h = `${this.contentContainer.height}px`;\n                    const w = `${this.contentContainer.width}px`;\n                    mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n                    mockDOMInput.value = '';\n                    mockDOMInput.focus();\n                    mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n                    this.innerContainer.cacheAsBitmap = false;\n                    mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n                    document.addEventListener('keydown', this.onKeyDown, false);\n                    document.addEventListener('keyup', this.keyUpEvent, false);\n                    document.addEventListener('paste', this.pasteEvent, false);\n                    document.addEventListener('copy', this.copyEvent, false);\n                    document.addEventListener('cut', this.cutEvent, false);\n                    mockDOMInput.addEventListener('input', this.inputEvent, false);\n                    setTimeout(() => {\n                        if (!this.caret.visible && !this.selection.visible && !this.multiLine) {\n                            this.setCaretIndex(this.chars.length);\n                        }\n                    }, 0);\n                }\n            };\n            this.blur = () => {\n                if (this._isFocused) {\n                    super.blur();\n                    this.ctrlDown = false;\n                    this.shiftDown = false;\n                    this.hideCaret();\n                    this.clearSelection();\n                    if (this.chars.length > 1) {\n                        this.innerContainer.cacheAsBitmap = true;\n                    }\n                    mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n                    document.removeEventListener('keydown', this.onKeyDown);\n                    document.removeEventListener('keyup', this.keyUpEvent);\n                    document.removeEventListener('paste', this.pasteEvent);\n                    document.removeEventListener('copy', this.copyEvent);\n                    document.removeEventListener('cut', this.cutEvent);\n                    mockDOMInput.removeEventListener('input', this.inputEvent);\n                    mockDOMInput.blur();\n                }\n                if (!this.multiLine) {\n                    this.resetScrollPosition();\n                }\n            };\n            this.setCaretIndex = (index) => {\n                this.caret._atEnd = index >= this.chars.length;\n                this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n                if (this.chars.length && index > 0) {\n                    let i = Math.max(0, Math.min(index, this.chars.length - 1));\n                    let c = this.chars[i];\n                    if (c && c.wrapped) {\n                        this.caret.x = c.x;\n                        this.caret.y = c.y;\n                    }\n                    else {\n                        i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                        c = this.chars[i];\n                        this.caret.x = this.chars[i].x + this.chars[i].width;\n                        this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n                    }\n                }\n                else {\n                    this.caret.x = 0;\n                    this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n                }\n                this.scrollToPosition(this.caret);\n                this.showCaret();\n            };\n            this.select = () => {\n                this.selectRange(0, this.chars.length - 1);\n            };\n            this.selectWord = (wordIndex) => {\n                let startIndex = this.chars.length;\n                let endIndex = 0;\n                for (let i = 0; i < this.chars.length; i++) {\n                    if (this.chars[i].wordIndex !== wordIndex) {\n                        continue;\n                    }\n                    if (i < startIndex) {\n                        startIndex = i;\n                    }\n                    if (i > endIndex) {\n                        endIndex = i;\n                    }\n                }\n                this.selectRange(startIndex, endIndex);\n            };\n            this.selectRange = (startIndex, endIndex) => {\n                if (startIndex > -1 && endIndex > -1) {\n                    const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n                    const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n                    if (start !== this.selectionStart || end !== this.selectionEnd) {\n                        this.hasSelection = true;\n                        this.selection.visible = true;\n                        this.selectionStart = start;\n                        this.selectionEnd = end;\n                        this.hideCaret();\n                        this.updateSelectionGraphics();\n                        this.updateSelectionColors();\n                    }\n                    this.focus();\n                }\n                else {\n                    this.clearSelection();\n                }\n            };\n            this.clearSelection = () => {\n                if (this.hasSelection) {\n                    // Remove color\n                    this.hasSelection = false;\n                    this.selection.visible = false;\n                    this.selectionStart = -1;\n                    this.selectionEnd = -1;\n                    this.updateSelectionColors();\n                }\n            };\n            this.updateSelectionGraphics = () => {\n                const c1 = this.chars[this.selectionStart];\n                if (c1 !== undefined) {\n                    let cx = c1.x;\n                    let cy = c1.y;\n                    let w = 0;\n                    const h = this.textHeight;\n                    let cl = c1.lineIndex;\n                    this.selection.clear();\n                    for (let i = this.selectionStart; i <= this.selectionEnd; i++) {\n                        const c = this.chars[i];\n                        if (c.lineIndex != cl) {\n                            this.drawSelectionRect(cx, cy, w, h);\n                            cx = c.x;\n                            cy = c.y;\n                            cl = c.lineIndex;\n                            w = 0;\n                        }\n                        w += c.width;\n                    }\n                    this.drawSelectionRect(cx, cy, w, h);\n                    this.innerContainer.addChildAt(this.selection, 0);\n                }\n            };\n            this.drawSelectionRect = (x, y, w, h) => {\n                this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n                this.selection.moveTo(x, y);\n                this.selection.lineTo(x + w, y);\n                this.selection.lineTo(x + w, y + h);\n                this.selection.lineTo(x, y + h);\n                this.selection.endFill();\n            };\n            initMockDOMInput();\n            this.options = options;\n            this._dirtyText = true;\n            this.maxLength = options.maxLength || 0;\n            this._value = this._lastValue = options.value || '';\n            if (this.maxLength) {\n                this._value = this._value.slice(0, this.maxLength);\n            }\n            this.chars = [];\n            this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n            this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n            this.selectedColor = options.selectedColor || '#ffffff';\n            this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n            this.tempText = new PIXI.Text('1', options.style);\n            this.textHeight = this.tempText.height;\n            this.lineHeight = options.lineHeight || this.textHeight || this._height;\n            this.tempText.destroy();\n            // set cursor\n            // this.container.cursor = \"text\";\n            // selection graphics\n            this.selection = new PIXI.Graphics();\n            this.selection.visible = false;\n            this.selection._startIndex = 0;\n            this.selection._endIndex = 0;\n            // caret graphics\n            this.caret = new PIXI.Graphics();\n            this.caret.visible = false;\n            this.caret._index = 0;\n            this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n            this.caret.moveTo(0, 0);\n            this.caret.lineTo(0, this.textHeight);\n            // var padding\n            const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n            const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n            const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n            const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n            // insert text container (scrolling container)\n            this.textContainer = new ScrollWidget({\n                scrollX: !this.multiLine,\n                scrollY: this.multiLine,\n                dragScrolling: this.multiLine,\n                expandMask: 2,\n                softness: 0.2,\n                overflowX: 40,\n                overflowY: 40,\n            }).setPadding(paddingLeft || 3, paddingTop || 3, paddingRight || 3, paddingBottom || 3).setLayoutOptions(new LayoutOptions(LayoutOptions.FILL_PARENT, LayoutOptions.FILL_PARENT));\n            this.addChild(this.textContainer);\n            if (this.multiLine) {\n                this._useNext = this._usePrev = false;\n                this.textContainer.dragRestrictAxis = 'y';\n                this.textContainer.dragThreshold = 5;\n                this.dragRestrictAxis = 'x';\n                this.dragThreshold = 5;\n            }\n            // selection Vars\n            this.sp = new PIXI.Point(); // startposition\n            this._sp = new PIXI.Point();\n            this.ds = new PIXI.Point(); // dragStart\n            this.de = new PIXI.Point(); // dragend\n            this.rdd = false; // Reverse drag direction\n            this.vrdd = false; // vertical Reverse drag direction\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.hasSelection = false;\n            this.t = performance.now(); // timestamp\n            this.cc = 0; // click counter\n            this.textLengthPX = 0;\n            this.textHeightPX = 0;\n            this.lineIndexMax = 0;\n            this.ctrlDown = false;\n            this.shiftDown = false;\n            this.shiftKey = 16;\n            this.ctrlKey = 17;\n            this.cmdKey = 91;\n            this.setupDrag();\n        }\n        setupDrag() {\n            const event = new DragManager(this);\n            event.onPress = (e, mouseDown) => {\n                if (mouseDown) {\n                    const timeSinceLast = performance.now() - this.t;\n                    this.t = performance.now();\n                    if (timeSinceLast < 250) {\n                        this.cc++;\n                        if (this.cc > 1) {\n                            this.select();\n                        }\n                        else {\n                            this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                            this.updateClosestIndex(this.ds, true);\n                            const c = this.chars[this.si];\n                            if (c) {\n                                if (c.wordIndex != -1) {\n                                    this.selectWord(c.wordIndex);\n                                }\n                                else {\n                                    this.selectRange(this.si, this.si);\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.cc = 0;\n                        this.sp.copyFrom(e.data.global);\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        if (this.chars.length) {\n                            this.updateClosestIndex(this.ds, true);\n                            this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                        }\n                    }\n                }\n                e.data.originalEvent.preventDefault();\n            };\n            event.onDragMove = (e, offset) => {\n                if (!this.chars.length || !this._isFocused) {\n                    return;\n                }\n                this.de.x = this.sp.x + offset.x;\n                this.de.y = this.sp.y + offset.y;\n                this.innerContainer.toLocal(this.de, undefined, this.de, true);\n                this.updateClosestIndex(this.de, false);\n                if (this.si < this.ei) {\n                    this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                    this.caret._index = this.eie ? this.ei : this.ei - 1;\n                }\n                else if (this.si > this.ei) {\n                    this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                    this.caret._index = this.ei;\n                }\n                else if (this.sie === this.eie) {\n                    this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                }\n                else {\n                    this.selectRange(this.si, this.ei);\n                    this.caret._index = this.ei;\n                }\n                this.caret._forward = this.si <= this.ei;\n                this.caret._down = offset.y > 0;\n                this.scrollToPosition(this.de);\n            };\n        }\n        get innerContainer() {\n            return this.textContainer.innerContainer.insetContainer;\n        }\n        update() {\n            if (this.width !== this._lastWidth) {\n                this._lastWidth = this._width;\n                if (this.multiLine) {\n                    this.updateText();\n                    if (this.caret.visible) {\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    if (this.hasSelection) {\n                        this.updateSelectionGraphics();\n                    }\n                }\n            }\n            // update text\n            if (this._dirtyText) {\n                this.updateText();\n                this._dirtyText = false;\n            }\n        }\n        updateText() {\n            this.textLengthPX = 0;\n            this.textHeightPX = 0;\n            this.lineIndexMax = 0;\n            let lineIndex = 0;\n            const length = this._value.length;\n            let x = 0;\n            let y = (this.lineHeight - this.textHeight) * 0.5;\n            let i = 0;\n            // destroy excess chars\n            if (this.chars.length > length) {\n                for (i = this.chars.length - 1; i >= length; i--) {\n                    this.innerContainer.removeChild(this.chars[i]);\n                    this.chars[i].destroy();\n                }\n                this.chars.splice(length, this.chars.length - length);\n            }\n            // update and add chars\n            let whitespace = false;\n            let newline = false;\n            let wordIndex = 0;\n            let lastWordIndex = -1;\n            let wrap = false;\n            for (i = 0; i < this._value.length; i++) {\n                if (whitespace || newline) {\n                    lastWordIndex = i;\n                    wordIndex++;\n                }\n                let c = this._value[i];\n                whitespace = c === ' ';\n                newline = c === '\\n';\n                if (newline) { // newline \"hack\". webgl render errors if \\n is passed to text\n                    c = '';\n                }\n                let charText = this.chars[i];\n                if (!charText) {\n                    charText = new PIXI.Text(c, this.options.style);\n                    this.innerContainer.addChild(charText);\n                    this.chars.push(charText);\n                }\n                else {\n                    charText.text = c;\n                }\n                charText.scale.x = newline ? 0 : 1;\n                charText.wrapped = wrap;\n                wrap = false;\n                if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight)) {\n                    lineIndex++;\n                    x = 0;\n                    y += this.lineHeight;\n                    if (lastWordIndex !== -1 && !newline) {\n                        i = lastWordIndex - 1;\n                        lastWordIndex = -1;\n                        wrap = true;\n                        continue;\n                    }\n                }\n                charText.lineIndex = lineIndex;\n                charText.x = x;\n                charText.y = y;\n                charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n                x += charText.width;\n                if (x > this.textLengthPX) {\n                    this.textLengthPX = x;\n                }\n                if (y > this.textHeightPX) {\n                    this.textHeightPX = y;\n                }\n            }\n            this.lineIndexMax = lineIndex;\n            // put caret on top\n            this.innerContainer.addChild(this.caret);\n            // recache\n            if (this.innerContainer.cacheAsBitmap) {\n                this.innerContainer.cacheAsBitmap = false;\n                this.innerContainer.cacheAsBitmap = true;\n            }\n            this.textContainer.update();\n        }\n        updateClosestIndex(point, start) {\n            let currentDistX = 99999;\n            let currentIndex = -1;\n            let atEnd = false;\n            let closestLineIndex = 0;\n            if (this.lineIndexMax > 0) {\n                closestLineIndex = Math.max(0, Math.min(this.lineIndexMax, Math.floor(point.y / this.lineHeight)));\n            }\n            for (let i = 0; i < this.chars.length; i++) {\n                const char = this.chars[i];\n                if (char.lineIndex !== closestLineIndex) {\n                    continue;\n                }\n                const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n                if (distX < currentDistX) {\n                    currentDistX = distX;\n                    currentIndex = i;\n                    atEnd = point.x > char.x + (char.width * 0.5);\n                }\n            }\n            if (start) {\n                this.si = currentIndex;\n                this.sie = atEnd;\n            }\n            else {\n                this.ei = currentIndex;\n                this.eie = atEnd;\n            }\n        }\n        deleteSelection() {\n            if (this.hasSelection) {\n                this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n                this.setCaretIndex(this.selectionStart);\n                return true;\n            }\n            return false;\n        }\n        updateSelectionColors() {\n            // Color charecters\n            for (let i = 0; i < this.chars.length; i++) {\n                if (i >= this.selectionStart && i <= this.selectionEnd) {\n                    this.chars[i].style.fill = this.selectedColor;\n                }\n                else {\n                    this.chars[i].style.fill = this.color;\n                }\n            }\n        }\n        scrollToPosition(pos) {\n            this._sp.x = pos.x;\n            this._sp.y = pos.y;\n            if (this.multiLine && this._sp.y >= this.lineHeight) {\n                this._sp.y += this.lineHeight;\n            }\n            this.textContainer.focusPosition(this._sp);\n        }\n        resetScrollPosition() {\n            this._sp.set(0, 0);\n            this.textContainer.focusPosition(this._sp);\n        }\n        hideCaret() {\n            this.caret.visible = false;\n            clearInterval(this.caretInterval);\n        }\n        showCaret() {\n            this.clearSelection();\n            clearInterval(this.caretInterval);\n            this.caret.alpha = 1;\n            this.caret.visible = true;\n            this.caretInterval = setInterval(() => {\n                this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n            }, 500);\n        }\n        insertTextAtCaret(c) {\n            if (!this.multiLine && c.indexOf('\\n') !== -1) {\n                c = c.replace(/\\n/g, '');\n            }\n            if (this.hasSelection) {\n                this.deleteSelection();\n            }\n            if (!this.maxLength || this.chars.length < this.maxLength) {\n                if (this.caret._atEnd) {\n                    this.valueEvent += c;\n                    this.setCaretIndex(this.chars.length);\n                }\n                else {\n                    const index = Math.min(this.chars.length - 1, this.caret._index);\n                    this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                    this.setCaretIndex(index + c.length);\n                }\n            }\n        }\n        get valueEvent() {\n            return this._value;\n        }\n        set valueEvent(val) {\n            if (this.maxLength) {\n                val = val.slice(0, this.maxLength);\n            }\n            if (this._value != val) {\n                this.value = val;\n                this.emit('change');\n            }\n        }\n        get value() {\n            return this._value;\n        }\n        set value(val) {\n            if (this.maxLength) {\n                val = val.slice(0, this.maxLength);\n            }\n            if (this._value != val) {\n                this._lastValue = this._value;\n                this._value = val;\n                this._dirtyText = true;\n                this.update();\n            }\n        }\n        get text() {\n            return this.value;\n        }\n        set text(value) {\n            this.value = value;\n        }\n    }\n    /*\n     * Features:\n     * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n     *\n     * Methods:\n     * blur()\n     * focus()\n     * select() - selects all text\n     * selectRange(startIndex, endIndex)\n     * clearSelection()\n     * setCaretIndex(index) moves caret to index\n     *\n     *\n     * Events:\n     * \"change\"\n     * \"blur\"\n     * \"blur\"\n     * \"focus\"\n     * \"focusChanged\" param: [bool]focus\n     * \"keyup\" param: Event\n     * \"keydown\" param: Event\n     * \"copy\" param: Event\n     * \"paste\" param: Event\n     * \"cut\" param: Event\n     * \"keyup\" param: Event\n     */\n\n    /**\n     * An UI sprite object\n     *\n     * @class\n     * @extends PIXI.UI.UIBase\n     * @memberof PIXI.UI\n     * @param Texture {PIXI.Texture} The texture for the sprite\n     * @param [Width=Texture.width] {number} Width of tilingsprite\n     * @param [Height=Texture.height] {number} Height of tiling sprite\n     */\n    class TilingSprite extends Widget {\n        constructor(t, width, height) {\n            const sprite = new PIXI.extras.TilingSprite(t);\n            super(width || sprite.width, height || sprite.height);\n            this.sprite = sprite;\n            this.contentContainer.addChild(this.sprite);\n        }\n        /**\n         * Updates the text\n         *\n         * @private\n         */\n        update() {\n            if (this.tint !== null) {\n                this.sprite.tint = this.tint;\n            }\n            if (this.blendMode !== null) {\n                this.sprite.blendMode = this.blendMode;\n            }\n            this.sprite.width = this._width;\n            this.sprite.height = this._height;\n        }\n        get tilePosition() {\n            return this.sprite.tilePosition;\n        }\n        set tilingPosition(val) {\n            this.sprite.tilePosition = val;\n        }\n        get tileScale() {\n            return this.sprite.tileScale;\n        }\n        set tileScale(val) {\n            this.sprite.tileScale = val;\n        }\n    }\n\n    /**\n     * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n     *\n     * @memberof PUXI\n     * @class\n     * @example\n     * ```\n     * parent.useLayout(new PUXI.AnchorLayout());\n     * ```\n     */\n    class AnchorLayout {\n        constructor() {\n            this.noPercents = false;\n        }\n        onAttach(host) {\n            this.host = host;\n        }\n        onDetach() {\n            this.host = null;\n        }\n        measureChild(child, maxParentWidth, maxParentHeight, widthMode, heightMode) {\n            const lopt = (child.layoutOptions || LayoutOptions.DEFAULT);\n            const anchorLeft = lopt.anchorLeft || 0;\n            const anchorTop = lopt.anchorTop || 0;\n            const anchorRight = lopt.anchorRight || 0;\n            const anchorBottom = lopt.anchorBottom || 0;\n            let maxWidgetWidth = 0;\n            let maxWidgetHeight = 0;\n            let widgetWidthMode;\n            let widgetHeightMode;\n            // Widget width measurement\n            if (this.noPercents || (Math.abs(anchorLeft) > 1 && Math.abs(anchorRight) > 1)) {\n                maxWidgetWidth = Math.ceil(anchorRight) - Math.floor(anchorLeft);\n                widgetWidthMode = exports.MeasureMode.AT_MOST;\n            }\n            else if (Math.abs(anchorLeft) < 1 && Math.abs(anchorRight) < 1) {\n                maxWidgetWidth = maxParentWidth * (anchorRight - anchorLeft);\n                widgetWidthMode = (widthMode === exports.MeasureMode.UNBOUNDED)\n                    ? exports.MeasureMode.UNBOUNDED\n                    : exports.MeasureMode.AT_MOST;\n            }\n            else if (Math.abs(anchorLeft) < 1) {\n                maxWidgetWidth = anchorRight;\n                widgetWidthMode = exports.MeasureMode.AT_MOST;\n            }\n            else {\n                maxWidgetWidth = (maxParentWidth * anchorRight) - anchorLeft;\n                widgetWidthMode = (widthMode === exports.MeasureMode.UNBOUNDED)\n                    ? exports.MeasureMode.UNBOUNDED\n                    : exports.MeasureMode.AT_MOST;\n            }\n            // Widget height measurement\n            if (this.noPercents || (Math.abs(anchorTop) > 1 && Math.abs(anchorBottom) > 1)) {\n                maxWidgetHeight = Math.ceil(anchorBottom) - Math.floor(anchorTop);\n                widgetHeightMode = exports.MeasureMode.AT_MOST;\n            }\n            else if (Math.abs(anchorTop) < 1 && Math.abs(anchorBottom) < 1) {\n                maxWidgetHeight = maxParentHeight * (anchorBottom - anchorTop);\n                widgetHeightMode = (heightMode === exports.MeasureMode.UNBOUNDED)\n                    ? exports.MeasureMode.UNBOUNDED\n                    : exports.MeasureMode.AT_MOST;\n            }\n            else if (Math.abs(anchorTop) < 1) {\n                maxWidgetHeight = anchorBottom;\n                widgetHeightMode = exports.MeasureMode.AT_MOST;\n            }\n            else {\n                maxWidgetHeight = (maxParentHeight * anchorBottom) - anchorTop;\n                widgetHeightMode = (heightMode === exports.MeasureMode.UNBOUNDED)\n                    ? exports.MeasureMode.UNBOUNDED\n                    : exports.MeasureMode.AT_MOST;\n            }\n            child.measure(maxWidgetWidth, maxWidgetHeight, widgetWidthMode, widgetHeightMode);\n        }\n        measureStretch(lowerAnchor, upperAnchor, childDimen) {\n            if (this.noPercents || (Math.abs(upperAnchor) > 1 && Math.abs(lowerAnchor) > 1)) {\n                return Math.max(lowerAnchor, upperAnchor);\n            }\n            else if (Math.abs(lowerAnchor) < 1 && Math.abs(upperAnchor) < 1) {\n                return childDimen / (upperAnchor - lowerAnchor);\n            }\n            else if (Math.abs(lowerAnchor) < 1) {\n                return upperAnchor;\n            }\n            return (childDimen + lowerAnchor) / upperAnchor;\n        }\n        measureChildren(maxParentWidth, maxParentHeight, widthMode, heightMode) {\n            const children = this.host.widgetChildren;\n            for (let i = 0, j = children.length; i < j; i++) {\n                this.measureChild(children[i], maxParentWidth, maxParentHeight, widthMode, heightMode);\n            }\n        }\n        onMeasure(maxWidth, maxHeight, widthMode, heightMode) {\n            if (widthMode === exports.MeasureMode.EXACTLY && heightMode === exports.MeasureMode.EXACTLY) {\n                this.measuredWidth = maxWidth;\n                this.measuredHeight = maxHeight;\n                this.measureChildren(this.measuredWidth, this.measuredHeight, exports.MeasureMode.EXACTLY, exports.MeasureMode.EXACTLY);\n            }\n            let maxX = 0;\n            let maxY = 0;\n            const children = this.host.widgetChildren;\n            this.measureChildren(maxWidth, maxHeight, widthMode, heightMode);\n            for (let i = 0, j = children.length; i < j; i++) {\n                const child = children[i];\n                const lopt = (child.layoutOptions || LayoutOptions.DEFAULT);\n                const anchorLeft = lopt.anchorLeft || 0;\n                const anchorTop = lopt.anchorTop || 0;\n                const anchorRight = lopt.anchorRight || 0;\n                const anchorBottom = lopt.anchorBottom || 0;\n                maxX = Math.max(maxX, this.measureStretch(anchorLeft, anchorRight, child.getMeasuredWidth()));\n                maxY = Math.max(maxY, this.measureStretch(anchorTop, anchorBottom, child.getMeasuredHeight()));\n            }\n            if (widthMode === exports.MeasureMode.EXACTLY) {\n                this.measuredWidth = maxWidth;\n            }\n            else if (widthMode === exports.MeasureMode.AT_MOST) {\n                this.measuredWidth = Math.min(maxX, maxWidth);\n            }\n            else {\n                this.measuredWidth = maxX;\n            }\n            if (heightMode === exports.MeasureMode.EXACTLY) {\n                this.measuredHeight = maxHeight;\n            }\n            else if (heightMode === exports.MeasureMode.AT_MOST) {\n                this.measuredHeight = Math.min(maxY, maxHeight);\n            }\n            else {\n                this.measuredHeight = maxY;\n            }\n            this.measureChildren(this.measuredWidth, this.measuredHeight, exports.MeasureMode.EXACTLY, exports.MeasureMode.EXACTLY);\n        }\n        getMeasuredWidth() {\n            return this.measuredWidth;\n        }\n        getMeasuredHeight() {\n            return this.measuredHeight;\n        }\n        onLayout() {\n            const parent = this.host;\n            const { widgetChildren } = parent;\n            for (let i = 0; i < widgetChildren.length; i++) {\n                const child = widgetChildren[i];\n                const layoutOptions = (child.layoutOptions || {});\n                let childWidth = child.measuredWidth;\n                let childHeight = child.measuredHeight;\n                let anchorLeft = layoutOptions.anchorLeft || 0;\n                let anchorTop = layoutOptions.anchorTop || 0;\n                let anchorRight = layoutOptions.anchorRight || 0;\n                let anchorBottom = layoutOptions.anchorBottom || 0;\n                if (anchorLeft > -1 && anchorLeft <= 1) {\n                    anchorLeft *= parent.width;\n                }\n                if (anchorTop > -1 && anchorTop <= 1) {\n                    anchorTop *= parent.height;\n                }\n                if (anchorRight > -1 && anchorRight <= 1) {\n                    anchorRight *= parent.width;\n                }\n                if (anchorBottom > -1 && anchorBottom <= 1) {\n                    anchorBottom *= parent.height;\n                }\n                let x = 0;\n                let y = 0;\n                if (childWidth !== 0) {\n                    switch (layoutOptions.horizontalAlign || exports.ALIGN.NONE) {\n                        case exports.ALIGN.LEFT:\n                            x = anchorLeft;\n                            break;\n                        case exports.ALIGN.MIDDLE:\n                            x = (anchorRight - anchorLeft - childWidth) / 2;\n                            break;\n                        case exports.ALIGN.RIGHT:\n                            x = anchorRight - childWidth;\n                            break;\n                    }\n                }\n                else {\n                    x = anchorLeft;\n                    childWidth = anchorRight - anchorLeft;\n                }\n                if (childHeight !== 0) {\n                    switch (layoutOptions.verticalAlign || exports.ALIGN.NONE) {\n                        case exports.ALIGN.TOP:\n                            y = anchorTop;\n                            break;\n                        case exports.ALIGN.MIDDLE:\n                            y = (anchorBottom - anchorTop - childHeight) / 2;\n                            break;\n                        case exports.ALIGN.RIGHT:\n                            y = anchorBottom - childWidth;\n                            break;\n                    }\n                }\n                else {\n                    y = anchorRight;\n                    childHeight = anchorBottom - anchorTop;\n                }\n                child.layout(x, y, x + childWidth, y + childHeight);\n            }\n        }\n    }\n\n    exports.AnchorLayout = AnchorLayout;\n    exports.AnchorLayoutOptions = AnchorLayoutOptions;\n    exports.Button = Button;\n    exports.CheckBox = CheckBox;\n    exports.ClickManager = ClickManager;\n    exports.Ease = Ease;\n    exports.EventBroker = EventBroker;\n    exports.EventManager = EventManager;\n    exports.FastLayout = FastLayout;\n    exports.FastLayoutOptions = FastLayoutOptions;\n    exports.Helpers = Helpers;\n    exports.Insets = Insets;\n    exports.InteractiveGroup = InteractiveGroup;\n    exports.LayoutOptions = LayoutOptions;\n    exports.ScrollBar = ScrollBar;\n    exports.ScrollManager = ScrollManager;\n    exports.ScrollWidget = ScrollWidget;\n    exports.SliceSprite = SliceSprite;\n    exports.Slider = Slider;\n    exports.SortableList = SortableList;\n    exports.Sprite = Sprite;\n    exports.Stage = Stage;\n    exports.TextInput = TextInput;\n    exports.TextWidget = TextWidget;\n    exports.Ticker = Ticker;\n    exports.TilingSprite = TilingSprite;\n    exports.Tween = Tween;\n    exports.Widget = Widget;\n    exports.WidgetGroup = WidgetGroup;\n    exports.create = create;\n    exports.wrapEase = wrapEase;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=puxi-core.js.map\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('pixi.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'pixi.js'], factory) :\n    (global = global || self, factory(global.PUXI = {}, global.PIXI));\n}(this, (function (exports, PIXI) { 'use strict';\n\n    /**\n     * Holds the information needed to perform a tweening operation. It is used internally\n     * by `PUXI.tween.TweenManager`.\n     *\n     * @memberof PUXI.tween\n     * @class\n     * @template T\n     */\n    class TweenContext extends PIXI.utils.EventEmitter {\n        constructor(key, startValue, endValue, erp, observedValue, startTime, endTime) {\n            super();\n            /**\n             * Unique id for this tweening operation\n             * @member {string}\n             */\n            this.key = key;\n            /**\n             * Start value of interpolation\n             * @member {T}\n             */\n            this.startValue = startValue;\n            /**\n             * End value of interpolation\n             * @member {T}\n             */\n            this.endValue = endValue;\n            /**\n             * Interpolation function\n             * @member {Erp}\n             */\n            this.erp = erp;\n            /**\n             * Object that is observed and the interpolated value to be stored in.\n             * @member {T}\n             */\n            this.observedValue = observedValue;\n            /**\n             * @member {DOMHighResTimeStamp}\n             * @readonly\n             */\n            this.startTime = startTime;\n            /**\n             * @member {DOMHighResTimeStamp\n             * @readonly}\n             */\n            this.endTime = endTime;\n        }\n        /**\n         * Updates the observed value.\n         *\n         * @param {DOMHighResTimeStamp} t - current time\n         */\n        update(t = performance.now()) {\n            t = (t - this.startTime) / (this.endTime - this.startTime);\n            this.erp(this.startValue, this.endValue, Math.min(Math.max(t, 0), 1), this.observedValue);\n            this.emit('update', this.observedValue, this.key);\n            if (t >= 1) {\n                this.emit('complete', this);\n                this.removeAllListeners();\n            }\n        }\n    }\n    /**\n     * Fired whenever the observed value is updated.\n     * @event update\n     * @param {T} observedValue\n     * @param {number} key\n     */\n    /**\n     * Fired when tween has finished. References to this tween should be removed.\n     * @event complete\n     * @param {TweenContext} cxt\n     */\n    /**\n     * Used for pooling.\n     * @member {Array<TweenContext>}\n     * @static\n     */\n    TweenContext.pool = [];\n\n    let nextKey = 0;\n    /**\n     * @memberof PUXI.tween\n     * @class\n     */\n    class TweenManager {\n        constructor(autoStart = true) {\n            this.tweenMap = new Map();\n            if (autoStart) {\n                this.start();\n            }\n        }\n        addTween(startValue, endValue, erp, startTime, endTime) {\n            const tweenCxt = (TweenContext.pool.pop() || new TweenContext());\n            tweenCxt.key = nextKey++;\n            tweenCxt.startValue = startValue;\n            tweenCxt.endValue = endValue;\n            tweenCxt.erp = erp;\n            tweenCxt.startTime = startTime;\n            tweenCxt.endTime = endTime;\n            this.tweenMap.set(tweenCxt.key, tweenCxt);\n            tweenCxt.on('complete', this.onTweenComplete);\n            return tweenCxt;\n        }\n        start() {\n            if (this.isRunning) {\n                return;\n            }\n            PIXI.Ticker.shared.add(this.onUpdate);\n            this.isRunning = true;\n        }\n        stop() {\n            if (!this.isRunning) {\n                return;\n            }\n            PIXI.Ticker.shared.remove(this.onUpdate);\n            this.isRunning = false;\n        }\n        onUpdate() {\n            for (const [, cxt] of this.tweenMap) {\n                cxt.update();\n            }\n        }\n        onTweenComplete(cxt) {\n            this.tweenMap.delete(cxt.key);\n            TweenContext.pool.push(cxt);\n        }\n    }\n\n    exports.TweenManager = TweenManager;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=puxi-tween.js.map\n"],"names":["exports","PIXI","filterDropShadow","_items","DragDropController","add","item","event","_dragDropEventId","data","identifier","indexOf","push","[object Object]","object","index","i","length","splice","group","id","dragGroup","Insets","this","reset","dirtyId","left","top","right","bottom","MeasureMode","ALIGN","EventManager","target","isEnabled","ClickManager","includeHover","rightMouseButton","doubleClick","super","startEvent","_includeHover","_rightMouseButton","_doubleClick","insetContainer","on","evMouseDown","onMouseDownImpl","onMouseOverImpl","onMouseOutImpl","stopEvent","bound","removeListener","evMouseUp","onMouseUpImpl","evMouseUpOutside","onMouseUpOutsideImpl","onMouseMoveImpl","obj","_onMouseUp","_onMouseUpOutside","mouse","copyFrom","global","onPress","call","now","performance","time","onClick","originalEvent","preventDefault","onMouseUpCommonImpl","offset","set","x","y","dragThreshold","movementX","Math","abs","movementY","max","ishover","onHover","onMove","Point","interactive","val","DragManager","onDragStartImpl","e","isBound","dragStart","stage","onDragMoveImpl","onDragEndImpl","lastCursor","dragOffset","isDragging","dragRestrictAxis","cancel","onDragStart","onDragMove","onDragEnd","EventBroker","mgr","Object","keys","MANAGER_MAP","defineProperty","click","dnd","ScrollManager","onMouseScrollImpl","delta","deltaX","deltaY","axis","detail","onMouseScroll","onHoverImpl","document","addEventListener","removeEventListener","contentContainer","Widget","utils","EventEmitter","Container","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_elevation","tint","blendMode","BLEND_MODES","NORMAL","draggable","droppable","measuredWidth","_measuredWidth","measuredHeight","_measuredHeight","width","height","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","l","t","r","b","_width","_height","background","lopt","layoutOptions","eventBroker","_eventBroker","paddingLeft","paddingTop","paddingRight","paddingBottom","alpha","bg","removeChild","string2hex","Graphics","beginFill","drawRect","endFill","addChildAt","setBackground","_dropShadow","filters","DropShadowFilter","distance","widgets","widget","parent","initDraggable","initDroppable","realPosition","dragPosition","added","position","emit","getItem","setTimeout","onDrop","container","getEventItem","dropGroup","droppableReparent","self","toLocal","LayoutOptions","WRAP_CONTENT","markers","marginLeft","_marginLeft","marginTop","_marginTop","marginRight","_marginRight","marginBottom","_marginBottom","FILL_PARENT","MAX_DIMEN","DEFAULT","FastLayoutOptions","anchor","DEFAULT_ANCHOR","clone","CENTER_ANCHOR","FastLayout","host","maxWidth","maxHeight","children","j","widthMeasureMode","getChildMeasureMode","heightMeasureMode","loptWidth","loptHeight","measure","measureWidthReach","measureHeightReach","measureChildFillers","dimen","parentMeasureMode","parentWidthLimit","childWidth","getMeasuredWidth","minr","parentHeightLimit","childHeight","getMeasuredHeight","minb","layout","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","onLayout","InteractiveGroup","hitArea","Rectangle","FocusableWidget","options","bindEvents","onDocumentPointerDownImpl","onKeyDownImpl","clearEvents","off","focusCtl","focusController","which","useTab","onTab","useBack","onBack","useForward","onForward","_isMousePressed","blur","_isFocused","tabIndex","tabGroup","focus","isFocused","notifyFocus","notifyBlur","initialize","in","TextWidget","text","textStyle","textDisplay","Text","value","EaseBase","p","ExponentialEase","power","easeIn","easeOut","pow","getPosition","prototype","create","constructor","Ease","HALF_PI","PI","fn","Linear","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","Helpers","Lerp","start","stop","amt","number","decimals","round","c","hex","toString","g","componentToHex","rgbToNumber","numberToRgb","floor","isNaN","replace","m","result","exec","parseInt","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","TweenObject","tweens","active","onUpdate","CallbackItem","_ready","key","callback","currentTime","_tweenObjectId","_currentCallbackID","remove","TweenItem","from","to","ease","isColor","surfix","getSurfix","hexToRgb","currentColor","parseFloat","getToValue","widthKeys","heightKeys","getFromValue","getObject","getTweenItem","tween","getCallbackItem","cb","Tween","params","match","paramsFrom","paramsTo","update","Slider","_amt","_disabled","track","handle","fill","_minValue","minValue","_maxValue","maxValue","vertical","onValueChange","onValueChanging","pivot","buttonMode","horizontalAlign","verticalAlign","soft","handleSize","localMousePosition","maxPosition","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","newPos","maxPos","handleDrag","isPressed","stopPropagation","trackDrag","Round","disabled","Ticker","autoStart","_now","DeltaTime","Time","Ms","shared","_update","requestAnimationFrame","context","once","ScrollWidget","forcePctPosition","direction","pct","bounds","getInnerBounds","innerContainer","scrollX","scrollY","scrollPosition","targetPosition","focusPosition","pos","dif","lastPosition","updateScrollBars","setScrollPosition","velocity","scrollVelocity","animating","updateScrollPosition","updateDirection","scrolling","softness","exp","mask","innerBounds","undefined","dragScrolling","radius","expandMask","overflowY","overflowX","_scrollBars","boundCached","initScrolling","lastWidth","lastHeight","of","clear","lineStyle","drawRoundedRect","newChildren","alignToContainer","force","getLocalBounds","drag","_","scrollSpeed","Sprite","texture","spriteDisplay","imageUrl","Texture","BaseTexture","Controller","Stage","__width","__height","minWidth","minHeight","resize","_checkBoxGroupCtl","CHECK_BOX_GROUP_CONTROLLER","_focusCtl","FOCUS_CONTROLLER","renderer","render","UIObject","argumentLenght","arguments","measureAndLayout","rx","ry","scale","updatesettings","checkBoxGroupController","mockDOMInput","checkGroups","Map","checkGroup","Error","get","initGroup","checks","checked","selected","_a","cgroup","tabGroups","sort","a","lastItem","currentItem","AnchorLayout","noPercents","child","maxParentWidth","maxParentHeight","anchorLeft","anchorTop","anchorRight","anchorBottom","widgetWidthMode","widgetHeightMode","maxWidgetWidth","maxWidgetHeight","ceil","lowerAnchor","upperAnchor","childDimen","measureChild","measureChildren","maxX","maxY","measureStretch","NONE","LEFT","MIDDLE","RIGHT","TOP","AnchorLayoutOptions","Button","isHover","TextStyle","textWidget","setLayoutOptions","setupClick","clickEvent","over","interactiveChildren","CheckBox","change","checkmark","_checked","_value","notifyCheck","selectedValue","getSelected","clickMgr","ScrollBar","scrollingContainer","autohide","_hidden","size","xY","widthHeight","topLeft","_posAmt","sizeAmt","diff","toggleHidden","hidden","SliceSprite","borderWidth","horizontalSlice","verticalSlice","tile","bw","vs","hs","baseTexture","f","frame","setting","str","sbr","sr","sbl","sb","sf","st","sl","stl","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","extras","TilingSprite","SortableList","desc","tweenTime","tweenEase","items","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","fromTo","altering","TextInput","onKeyDown","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","chars","_atEnd","slice","multiLine","vrdd","hasSelection","de","textHeightPX","lineHeight","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","_i","selectIndex","keyUpEvent","copyEvent","clipboardData","window","setData","cutEvent","pasteEvent","getData","inputEvent","inputBlurEvent","worldTransform","tx","ty","h","w","setAttribute","cacheAsBitmap","visible","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","lineIndex","textHeight","scrollToPosition","showCaret","selectWord","wordIndex","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","moveTo","lineTo","createElement","body","appendChild","_dirtyText","maxLength","color","style","selectedColor","tempText","destroy","_startIndex","_endIndex","caretWidth","padding","textContainer","setPadding","_useNext","_usePrev","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","mouseDown","timeSinceLast","_lastWidth","updateText","whitespace","newline","lastWordIndex","wrap","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","char","distX","clearInterval","caretInterval","setInterval","sprite","tilePosition","tilingPosition","tileScale","factory","require$$0","require$$1","TweenContext","endValue","erp","observedValue","startTime","endTime","removeAllListeners","pool","nextKey","TweenManager","tweenMap","tweenCxt","pop","onTweenComplete","isRunning","cxt","delete"],"mappings":"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"}